### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  id: XmlSerializer
  parent: NMF.Serialization
  children:
  - NMF.Serialization.XmlSerializer.#ctor
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer)
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings)
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  - NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  - NMF.Serialization.XmlSerializer.Deserialize(System.String)
  - NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  - NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  - NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  - NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializer.KnownTypes
  - NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  - NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Settings
  - NMF.Serialization.XmlSerializer.UnknownAttribute
  - NMF.Serialization.XmlSerializer.UnknownElement
  - NMF.Serialization.XmlSerializer.UnknownType
  - NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  langs:
  - csharp
  - vb
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
  type: Class
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmlSerializer
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 17
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Class to serialize objects in a Xml-format.
  example: []
  syntax:
    content: public class XmlSerializer
    content.vb: Public Class XmlSerializer
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Serialization.Xmi.XmiSerializer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Serialization.XmlSerializer.#ctor
  commentId: M:NMF.Serialization.XmlSerializer.#ctor
  id: '#ctor'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer()
  nameWithType: XmlSerializer.XmlSerializer()
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer()
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 33
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer with default settings and no preloaded types
  example: []
  syntax:
    content: public XmlSerializer()
    content.vb: Public Sub New()
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New()
  fullName.vb: NMF.Serialization.XmlSerializer.New()
  name.vb: New()
- uid: NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(IEnumerable<Type>)
  nameWithType: XmlSerializer.XmlSerializer(IEnumerable<Type>)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 40
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer with default settings
  remarks: Types will be loaded with default settings
  example: []
  syntax:
    content: public XmlSerializer(IEnumerable<Type> additionalTypes)
    parameters:
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to preload into the serializer
    content.vb: Public Sub New(additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(IEnumerable(Of Type))
  fullName.vb: NMF.Serialization.XmlSerializer.New(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(IEnumerable(Of Type))
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  id: '#ctor(NMF.Serialization.XmlSerializationSettings)'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializationSettings)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializationSettings)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializationSettings)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 46
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer with the specified settings
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializationSettings settings)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: Serializer-settings for the serializer. Can be null or Nothing in Visual Basic. In this case, the default settings will be used.
    content.vb: Public Sub New(settings As XmlSerializationSettings)
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(XmlSerializationSettings)
  fullName.vb: NMF.Serialization.XmlSerializer.New(NMF.Serialization.XmlSerializationSettings)
  name.vb: New(XmlSerializationSettings)
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializationSettings, IEnumerable<Type>)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializationSettings, IEnumerable<Type>)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 56
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer with the specified settings and the given preloaded types
  remarks: The types will be loaded with the specified settings
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializationSettings settings, IEnumerable<Type> additionalTypes)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: The settings to use for the serializer
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to load into the serializer
    content.vb: Public Sub New(settings As XmlSerializationSettings, additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(XmlSerializationSettings, IEnumerable(Of Type))
  fullName.vb: NMF.Serialization.XmlSerializer.New(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(XmlSerializationSettings, IEnumerable(Of Type))
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer)
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer)
  id: '#ctor(NMF.Serialization.XmlSerializer)'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializer)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializer)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializer)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 64
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer and copies settings and known types from the given serializer
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializer parent)
    parameters:
    - id: parent
      type: NMF.Serialization.XmlSerializer
      description: An XML serializer to copy settings and known type information from
    content.vb: Public Sub New(parent As XmlSerializer)
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(XmlSerializer)
  fullName.vb: NMF.Serialization.XmlSerializer.New(NMF.Serialization.XmlSerializer)
  name.vb: New(XmlSerializer)
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings)
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings)
  id: '#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings)'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializer, XmlSerializationSettings)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializer, XmlSerializationSettings)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializer, NMF.Serialization.XmlSerializationSettings)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 71
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer and copies settings and known types from the given serializer
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializer parent, XmlSerializationSettings settings)
    parameters:
    - id: parent
      type: NMF.Serialization.XmlSerializer
      description: An XML serializer to copy settings and known type information from
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: New settings
    content.vb: Public Sub New(parent As XmlSerializer, settings As XmlSerializationSettings)
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(XmlSerializer, XmlSerializationSettings)
  fullName.vb: NMF.Serialization.XmlSerializer.New(NMF.Serialization.XmlSerializer, NMF.Serialization.XmlSerializationSettings)
  name.vb: New(XmlSerializer, XmlSerializationSettings)
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(NMF.Serialization.XmlSerializer,NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializer, XmlSerializationSettings, IEnumerable<Type>)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializer, XmlSerializationSettings, IEnumerable<Type>)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializer, NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 81
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new XmlSerializer and copies settings and known types from the given serializer
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializer parent, XmlSerializationSettings settings, IEnumerable<Type> additionalTypes)
    parameters:
    - id: parent
      type: NMF.Serialization.XmlSerializer
      description: An XML serializer to copy settings and known type information from
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: New settings
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to load into the serializer
    content.vb: Public Sub New(parent As XmlSerializer, settings As XmlSerializationSettings, additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.New(XmlSerializer, XmlSerializationSettings, IEnumerable(Of Type))
  fullName.vb: NMF.Serialization.XmlSerializer.New(NMF.Serialization.XmlSerializer, NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(XmlSerializer, XmlSerializationSettings, IEnumerable(Of Type))
- uid: NMF.Serialization.XmlSerializer.Settings
  commentId: P:NMF.Serialization.XmlSerializer.Settings
  id: Settings
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Settings
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 115
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The settings to be used in the serializer
  example: []
  syntax:
    content: public XmlSerializationSettings Settings { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlSerializationSettings
    content.vb: Public ReadOnly Property Settings As XmlSerializationSettings
  overload: NMF.Serialization.XmlSerializer.Settings*
- uid: NMF.Serialization.XmlSerializer.KnownTypes
  commentId: P:NMF.Serialization.XmlSerializer.KnownTypes
  id: KnownTypes
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: KnownTypes
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 123
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The set of types that are known to the serializer
  example: []
  syntax:
    content: public ICollection<Type> KnownTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Type}
    content.vb: Public ReadOnly Property KnownTypes As ICollection(Of Type)
  overload: NMF.Serialization.XmlSerializer.KnownTypes*
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  id: RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: RegisterNamespace(ITypeSerializationInfo)
  nameWithType: XmlSerializer.RegisterNamespace(ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RegisterNamespace
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 179
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Registers the given type serialization info for a namespace lookup
  example: []
  syntax:
    content: protected void RegisterNamespace(ITypeSerializationInfo info)
    parameters:
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization info
    content.vb: Protected Sub RegisterNamespace(info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.RegisterNamespace*
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  id: GetTypeInfo(System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetTypeInfo(string, string)
  nameWithType: XmlSerializer.GetTypeInfo(string, string)
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo(string, string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 215
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the type serialization info corresponding to the provided pair of namespace and local name
  example: []
  syntax:
    content: public ITypeSerializationInfo GetTypeInfo(string ns, string localName)
    parameters:
    - id: ns
      type: System.String
      description: the namespace of the type
    - id: localName
      type: System.String
      description: the local name of the type
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization info
    content.vb: Public Function GetTypeInfo(ns As String, localName As String) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetTypeInfo*
  nameWithType.vb: XmlSerializer.GetTypeInfo(String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.GetTypeInfo(String, String)
  name.vb: GetTypeInfo(String, String)
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  commentId: M:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  id: CreateTypeSerializationInfoFor(System.Type)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateTypeSerializationInfoFor(Type)
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor(Type)
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateTypeSerializationInfoFor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 233
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates the type serialization information for the given type
  example: []
  syntax:
    content: protected virtual ITypeSerializationInfo CreateTypeSerializationInfoFor(Type type)
    parameters:
    - id: type
      type: System.Type
      description: the system type for which the serialization information should be created
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: a type serialization info
    content.vb: Protected Overridable Function CreateTypeSerializationInfoFor(type As Type) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor*
- uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  id: InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  nameWithType: XmlSerializer.InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeTypeSerializationInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 243
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the given type serialization information for the given type
  example: []
  syntax:
    content: protected virtual void InitializeTypeSerializationInfo(Type type, ITypeSerializationInfo serializationInfo)
    parameters:
    - id: type
      type: System.Type
      description: the system type
    - id: serializationInfo
      type: NMF.Serialization.ITypeSerializationInfo
      description: the serialization information object
    content.vb: Protected Overridable Sub InitializeTypeSerializationInfo(type As Type, serializationInfo As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo*
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  id: Serialize(System.Object,System.String,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, string, bool)
  nameWithType: XmlSerializer.Serialize(object, string, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, string, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 628
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object obj, string path, bool fragment = false)
    parameters:
    - id: obj
      type: System.Object
      description: The object to be serialized
    - id: path
      type: System.String
      description: The path for the resulting Xml-file
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(obj As Object, path As String, fragment As Boolean = False)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, String, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, String, Boolean)
  name.vb: Serialize(Object, String, Boolean)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  id: Serialize(System.Object,System.IO.Stream,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, Stream, bool)
  nameWithType: XmlSerializer.Serialize(object, Stream, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.Stream, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 642
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object source, Stream stream, bool fragment = false)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: stream
      type: System.IO.Stream
      description: The stream for the resulting Xml-code
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, stream As Stream, fragment As Boolean = False)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, Stream, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.Stream, Boolean)
  name.vb: Serialize(Object, Stream, Boolean)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  id: Serialize(System.Object,System.IO.TextWriter)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, TextWriter)
  nameWithType: XmlSerializer.Serialize(object, TextWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 654
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object source, TextWriter writer)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: writer
      type: System.IO.TextWriter
      description: The TextWriter to write the Xml-code on
    content.vb: Public Sub Serialize(source As Object, writer As TextWriter)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter)
  name.vb: Serialize(Object, TextWriter)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  id: Serialize(System.Object,System.Xml.XmlWriter)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, XmlWriter)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 664
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object source, XmlWriter writer)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: writer
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    content.vb: Public Sub Serialize(source As Object, writer As XmlWriter)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter)
  name.vb: Serialize(Object, XmlWriter)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  id: Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, TextWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, TextWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 675
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object source, TextWriter target, bool fragment)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: target
      type: System.IO.TextWriter
      description: The TextWriter to write the Xml-code on
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, target As TextWriter, fragment As Boolean)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter, Boolean)
  name.vb: Serialize(Object, TextWriter, Boolean)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  id: Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, XmlWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 689
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  example: []
  syntax:
    content: public void Serialize(object source, XmlWriter target, bool fragment)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: target
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, target As XmlWriter, fragment As Boolean)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, Boolean)
  name.vb: Serialize(Object, XmlWriter, Boolean)
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  id: Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, bool, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 711
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object
  remarks: If a converter is provided that is able to convert the object to string and convert the string back to this object, just the string-conversion is printed out
  example: []
  syntax:
    content: public virtual void Serialize(object obj, XmlWriter writer, IPropertySerializationInfo property, bool writeInstance, XmlIdentificationMode identificationMode, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
      description: The object to be serialized
    - id: writer
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The property for which the object is serialized
    - id: writeInstance
      type: System.Boolean
      description: A value that indicates whether the serializer should write the element definition
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
      description: A value indicating whether it is allowed to the serializer to use identifier
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Public Overridable Sub Serialize(obj As Object, writer As XmlWriter, [property] As IPropertySerializationInfo, writeInstance As Boolean, identificationMode As XmlIdentificationMode, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, Boolean, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  name.vb: Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  id: SelectRoot(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: SelectRoot(object, bool)
  nameWithType: XmlSerializer.SelectRoot(object, bool)
  fullName: NMF.Serialization.XmlSerializer.SelectRoot(object, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SelectRoot
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 739
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the serialization root element
  example: []
  syntax:
    content: protected virtual object SelectRoot(object graph, bool fragment)
    parameters:
    - id: graph
      type: System.Object
      description: The base element that should be serialized
    - id: fragment
      type: System.Boolean
      description: A value indicating whether only a fragment should be written
    return:
      type: System.Object
      description: The root element for serialization
    content.vb: Protected Overridable Function SelectRoot(graph As Object, fragment As Boolean) As Object
  overload: NMF.Serialization.XmlSerializer.SelectRoot*
  nameWithType.vb: XmlSerializer.SelectRoot(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.SelectRoot(Object, Boolean)
  name.vb: SelectRoot(Object, Boolean)
- uid: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  id: CreateSerializationContext(System.Object)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateSerializationContext(object)
  nameWithType: XmlSerializer.CreateSerializationContext(object)
  fullName: NMF.Serialization.XmlSerializer.CreateSerializationContext(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateSerializationContext
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 749
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a serialization context for the given root element
  example: []
  syntax:
    content: protected virtual XmlSerializationContext CreateSerializationContext(object root)
    parameters:
    - id: root
      type: System.Object
      description: The root element of the serialization
    return:
      type: NMF.Serialization.XmlSerializationContext
      description: A serialization context
    content.vb: Protected Overridable Function CreateSerializationContext(root As Object) As XmlSerializationContext
  overload: NMF.Serialization.XmlSerializer.CreateSerializationContext*
  nameWithType.vb: XmlSerializer.CreateSerializationContext(Object)
  fullName.vb: NMF.Serialization.XmlSerializer.CreateSerializationContext(Object)
  name.vb: CreateSerializationContext(Object)
- uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginRootElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 760
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the root element to the given writer
  example: []
  syntax:
    content: protected virtual void WriteBeginRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: root
      type: System.Object
      description: The root element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overridable Sub WriteBeginRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteBeginRootElement*
  nameWithType.vb: XmlSerializer.WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 771
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the beginning of an element
  example: []
  syntax:
    content: protected virtual void WriteBeginElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overridable Sub WriteBeginElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteBeginElement*
  nameWithType.vb: XmlSerializer.WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteConstructorProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 783
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the properties necessary for the constrctor call of this element
  example: []
  syntax:
    content: protected virtual void WriteConstructorProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub WriteConstructorProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteConstructorProperties*
  nameWithType.vb: XmlSerializer.WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteAttributeProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 799
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the attribute properties of the given object
  example: []
  syntax:
    content: protected virtual void WriteAttributeProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub WriteAttributeProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteAttributeProperties*
  nameWithType.vb: XmlSerializer.WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, object, object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteAttributeValue
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 821
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the attribute value to the given writer
  example: []
  syntax:
    content: protected virtual void WriteAttributeValue(XmlWriter writer, object obj, object value, IPropertySerializationInfo property, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: value
      type: System.Object
      description: The value of the attribute
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The property serialization information
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub WriteAttributeValue(writer As XmlWriter, obj As Object, value As Object, [property] As IPropertySerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteAttributeValue*
  nameWithType.vb: XmlSerializer.WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, Object, Object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  id: GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  nameWithType: XmlSerializer.GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue(object, NMF.Serialization.ITypeSerializationInfo, bool, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 880
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the serialization of the given attribute value
  example: []
  syntax:
    content: protected virtual string GetAttributeValue(object value, ITypeSerializationInfo info, bool isCollection, XmlSerializationContext context)
    parameters:
    - id: value
      type: System.Object
      description: The value of the attribute
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the type
    - id: isCollection
      type: System.Boolean
      description: True, if the value is added to a collection, otherwise false
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.String
      description: The serialized value of the attribute
    content.vb: Protected Overridable Function GetAttributeValue(value As Object, info As ITypeSerializationInfo, isCollection As Boolean, context As XmlSerializationContext) As String
  overload: NMF.Serialization.XmlSerializer.GetAttributeValue*
  nameWithType.vb: XmlSerializer.GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.GetAttributeValue(Object, NMF.Serialization.ITypeSerializationInfo, Boolean, NMF.Serialization.XmlSerializationContext)
  name.vb: GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteElementProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 903
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the element properties of the given object to the provided writer
  example: []
  syntax:
    content: protected virtual void WriteElementProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub WriteElementProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteElementProperties*
  nameWithType.vb: XmlSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteCollectionMembers
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 929
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the elements of the given collection to the provided writer
  example: []
  syntax:
    content: protected virtual void WriteCollectionMembers(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub WriteCollectionMembers(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteCollectionMembers*
  nameWithType.vb: XmlSerializer.WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 947
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Completes the current element for the provided object
  example: []
  syntax:
    content: protected virtual void WriteEndElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overridable Sub WriteEndElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteEndElement*
  nameWithType.vb: XmlSerializer.WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndRootElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 958
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Completes the root element
  example: []
  syntax:
    content: protected virtual void WriteEndRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: root
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overridable Sub WriteEndRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteEndRootElement*
  nameWithType.vb: XmlSerializer.WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteIdentifiedObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 972
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Writes the provided identified object
  example: []
  syntax:
    content: protected virtual bool WriteIdentifiedObject(XmlWriter writer, object obj, XmlIdentificationMode identificationMode, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
      description: The identification mode for the current object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Boolean
      description: true, if the object could be written as identified object, otherwise false
    content.vb: Protected Overridable Function WriteIdentifiedObject(writer As XmlWriter, obj As Object, identificationMode As XmlIdentificationMode, info As ITypeSerializationInfo, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.WriteIdentifiedObject*
  nameWithType.vb: XmlSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(string)
  nameWithType: XmlSerializer.Deserialize(string)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1010
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes an Xml-representation of an object back to the corresponding object
  example: []
  syntax:
    content: public object Deserialize(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the Xml file containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(path As String) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  nameWithType.vb: XmlSerializer.Deserialize(String)
  fullName.vb: NMF.Serialization.XmlSerializer.Deserialize(String)
  name.vb: Deserialize(String)
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1023
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes an Xml-representation of an object back to the corresponding object
  example: []
  syntax:
    content: public object Deserialize(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(stream As Stream) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  id: Deserialize(System.IO.TextReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(TextReader)
  nameWithType: XmlSerializer.Deserialize(TextReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1033
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes an Xml-representation of an object back to the corresponding object
  example: []
  syntax:
    content: public object Deserialize(TextReader reader)
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: A TextReader containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(reader As TextReader) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1044
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes an Xml-representation of an object back to the corresponding object
  remarks: The function will deserialize the object at the XmlReaders current position
  example: []
  syntax:
    content: public object Deserialize(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: A XmlReader containing the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(reader As XmlReader) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
- uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  id: CreateRoot(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateRoot(XmlReader)
  nameWithType: XmlSerializer.CreateRoot(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateRoot
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1077
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates the root element
  example: []
  syntax:
    content: protected object CreateRoot(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The xml reader
    return:
      type: System.Object
      description: The root element
    content.vb: Protected Function CreateRoot(reader As XmlReader) As Object
  overload: NMF.Serialization.XmlSerializer.CreateRoot*
- uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetElementTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1091
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the type information for the current property
  example: []
  syntax:
    content: protected virtual ITypeSerializationInfo GetElementTypeInfo(XmlReader reader, IPropertySerializationInfo property)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The xml reader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The current property
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization info that should be used in the remainder
    content.vb: Protected Overridable Function GetElementTypeInfo(reader As XmlReader, [property] As IPropertySerializationInfo) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetElementTypeInfo*
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  id: GetRootElementTypeInfo(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetRootElementTypeInfo(XmlReader)
  nameWithType: XmlSerializer.GetRootElementTypeInfo(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRootElementTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1101
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the type information for the root element
  example: []
  syntax:
    content: protected virtual ITypeSerializationInfo GetRootElementTypeInfo(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The xml reader
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization info for the root element
    content.vb: Protected Overridable Function GetRootElementTypeInfo(reader As XmlReader) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo*
- uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1122
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates the object for the current position
  example: []
  syntax:
    content: protected virtual object CreateObject(XmlReader reader, ITypeSerializationInfo tsi, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the xml reader
    - id: tsi
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization information
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: the serialization context
    return:
      type: System.Object
      description: the deserialized object
    content.vb: Protected Overridable Function CreateObject(reader As XmlReader, tsi As ITypeSerializationInfo, context As XmlSerializationContext) As Object
  overload: NMF.Serialization.XmlSerializer.CreateObject*
- uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  id: InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeProperty
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1148
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initialized the property from the reader
  example: []
  syntax:
    content: protected virtual bool InitializeProperty(XmlReader reader, IPropertySerializationInfo property, object obj, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the xml reader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: the property
    - id: obj
      type: System.Object
      description: the object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: the serialization context
    return:
      type: System.Boolean
      description: true, if the initialization was successful, otherwise false
    content.vb: Protected Overridable Function InitializeProperty(reader As XmlReader, [property] As IPropertySerializationInfo, obj As Object, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.InitializeProperty*
  nameWithType.vb: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  id: GoToPropertyContent(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GoToPropertyContent(XmlReader)
  nameWithType: XmlSerializer.GoToPropertyContent(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GoToPropertyContent
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1180
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Moves the reader to the content of the property
  example: []
  syntax:
    content: protected virtual bool GoToPropertyContent(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the Xml reader
    return:
      type: System.Boolean
      description: true, if the reader could be moved sucessfully, otherwise false
    content.vb: Protected Overridable Function GoToPropertyContent(reader As XmlReader) As Boolean
  overload: NMF.Serialization.XmlSerializer.GoToPropertyContent*
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  id: InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, object, string, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializePropertyFromText
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1195
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the given property from the provided text
  example: []
  syntax:
    content: protected virtual void InitializePropertyFromText(IPropertySerializationInfo property, object obj, string text, XmlSerializationContext context)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The property
    - id: obj
      type: System.Object
      description: The object
    - id: text
      type: System.String
      description: The input text
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub InitializePropertyFromText([property] As IPropertySerializationInfo, obj As Object, text As String, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializePropertyFromText*
  nameWithType.vb: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, Object, String, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  id: Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Initialize(XmlReader, object, XmlSerializationContext)
  nameWithType: XmlSerializer.Initialize(XmlReader, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Initialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1245
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the given object with the xml code at the current position of the XmlReader
  example: []
  syntax:
    content: public void Initialize(XmlReader reader, object obj, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The XmlReader with the Xml code
    - id: obj
      type: System.Object
      description: The object to initialize
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Public Sub Initialize(reader As XmlReader, obj As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.Initialize*
  nameWithType.vb: XmlSerializer.Initialize(XmlReader, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: Initialize(XmlReader, Object, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  id: OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  nameWithType: XmlSerializer.OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OverrideIdentifiedObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1306
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the already identified element should be overridden
  example: []
  syntax:
    content: protected virtual bool OverrideIdentifiedObject(object obj, XmlReader reader, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
      description: The object that would be overridden
    - id: reader
      type: System.Xml.XmlReader
      description: The current reader position
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Boolean
      description: true, if the element shall be overridden, otherwise false
    content.vb: Protected Overridable Function OverrideIdentifiedObject(obj As Object, reader As XmlReader, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject*
  nameWithType.vb: XmlSerializer.OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(Object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  name.vb: OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, ref object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeElementProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1318
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the element properties from the xml reader position
  example: []
  syntax:
    content: protected virtual void InitializeElementProperties(XmlReader reader, ref object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the xml reader
    - id: obj
      type: System.Object
      description: the element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization information
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: the serialization context
    content.vb: Protected Overridable Sub InitializeElementProperties(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializeElementProperties*
  nameWithType.vb: XmlSerializer.InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: IsPropertyElement(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.IsPropertyElement(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsPropertyElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1427
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the element at the current reader position refers to the given property
  example: []
  syntax:
    content: protected virtual bool IsPropertyElement(XmlReader reader, IPropertySerializationInfo property)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The reader position
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The property that should be tested
    return:
      type: System.Boolean
      description: true, if the element is about the property, otherwise false
    content.vb: Protected Overridable Function IsPropertyElement(reader As XmlReader, [property] As IPropertySerializationInfo) As Boolean
  overload: NMF.Serialization.XmlSerializer.IsPropertyElement*
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeAttributeProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1439
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the attribute properties from the current reader position
  example: []
  syntax:
    content: protected virtual void InitializeAttributeProperties(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the xml reader
    - id: obj
      type: System.Object
      description: the object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization information
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: the serialization context
    content.vb: Protected Overridable Sub InitializeAttributeProperties(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializeAttributeProperties*
  nameWithType.vb: XmlSerializer.InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  id: HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: HandleUnknownType(IPropertySerializationInfo, string, string)
  nameWithType: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, string, string)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, string, string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleUnknownType
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1482
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Handles the case that the type of the element is not known
  example: []
  syntax:
    content: protected virtual ITypeSerializationInfo HandleUnknownType(IPropertySerializationInfo property, string ns, string localName)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The property for which the type was requested
    - id: ns
      type: System.String
      description: The namespace at the current position
    - id: localName
      type: System.String
      description: The local name of the type
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information received for this type or null, if no type could be resolved
    content.vb: Protected Overridable Function HandleUnknownType([property] As IPropertySerializationInfo, ns As String, localName As String) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.HandleUnknownType*
  nameWithType.vb: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, String, String)
  name.vb: HandleUnknownType(IPropertySerializationInfo, String, String)
- uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleUnknownAttribute
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1500
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Handles an attribute that was not known to the serializer
  example: []
  syntax:
    content: protected virtual void HandleUnknownAttribute(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The current reader position
    - id: obj
      type: System.Object
      description: The object that is currently deserialized
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information of the object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub HandleUnknownAttribute(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.HandleUnknownAttribute*
  nameWithType.vb: XmlSerializer.HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleUnknownElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1513
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Handles an element that was not known to the serializer
  example: []
  syntax:
    content: protected virtual void HandleUnknownElement(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The current reader position
    - id: obj
      type: System.Object
      description: The object that is currently deserialized
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information of the object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overridable Sub HandleUnknownElement(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.HandleUnknownElement*
  nameWithType.vb: XmlSerializer.HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  id: OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: OnUnknownElement(UnknownElementEventArgs)
  nameWithType: XmlSerializer.OnUnknownElement(UnknownElementEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnUnknownElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1522
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Fires the UnknownElement event
  example: []
  syntax:
    content: protected virtual void OnUnknownElement(UnknownElementEventArgs e)
    parameters:
    - id: e
      type: NMF.Serialization.UnknownElementEventArgs
      description: the event data
    content.vb: Protected Overridable Sub OnUnknownElement(e As UnknownElementEventArgs)
  overload: NMF.Serialization.XmlSerializer.OnUnknownElement*
- uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  id: OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: OnUnknownAttribute(UnknownAttributeEventArgs)
  nameWithType: XmlSerializer.OnUnknownAttribute(UnknownAttributeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnUnknownAttribute
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1531
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Fires the UnknownAttribute event
  example: []
  syntax:
    content: protected virtual void OnUnknownAttribute(UnknownAttributeEventArgs e)
    parameters:
    - id: e
      type: NMF.Serialization.UnknownAttributeEventArgs
      description: the event data
    content.vb: Protected Overridable Sub OnUnknownAttribute(e As UnknownAttributeEventArgs)
  overload: NMF.Serialization.XmlSerializer.OnUnknownAttribute*
- uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  id: OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: OnUnknownType(UnknownTypeEventArgs)
  nameWithType: XmlSerializer.OnUnknownType(UnknownTypeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnUnknownType
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1540
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Handles the UnknownType event
  example: []
  syntax:
    content: protected virtual void OnUnknownType(UnknownTypeEventArgs e)
    parameters:
    - id: e
      type: NMF.Serialization.UnknownTypeEventArgs
      description: the event data
    content.vb: Protected Overridable Sub OnUnknownType(e As UnknownTypeEventArgs)
  overload: NMF.Serialization.XmlSerializer.OnUnknownType*
- uid: NMF.Serialization.XmlSerializer.UnknownElement
  commentId: E:NMF.Serialization.XmlSerializer.UnknownElement
  id: UnknownElement
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: UnknownElement
  nameWithType: XmlSerializer.UnknownElement
  fullName: NMF.Serialization.XmlSerializer.UnknownElement
  type: Event
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1548
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets raised when the serializer finds an element that is not known
  example: []
  syntax:
    content: public event EventHandler<UnknownElementEventArgs> UnknownElement
    return:
      type: System.EventHandler{NMF.Serialization.UnknownElementEventArgs}
    content.vb: Public Event UnknownElement As EventHandler(Of UnknownElementEventArgs)
- uid: NMF.Serialization.XmlSerializer.UnknownAttribute
  commentId: E:NMF.Serialization.XmlSerializer.UnknownAttribute
  id: UnknownAttribute
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: UnknownAttribute
  nameWithType: XmlSerializer.UnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.UnknownAttribute
  type: Event
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownAttribute
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1553
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Get raised when the serializer finds an attribute that is not known
  example: []
  syntax:
    content: public event EventHandler<UnknownAttributeEventArgs> UnknownAttribute
    return:
      type: System.EventHandler{NMF.Serialization.UnknownAttributeEventArgs}
    content.vb: Public Event UnknownAttribute As EventHandler(Of UnknownAttributeEventArgs)
- uid: NMF.Serialization.XmlSerializer.UnknownType
  commentId: E:NMF.Serialization.XmlSerializer.UnknownType
  id: UnknownType
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: UnknownType
  nameWithType: XmlSerializer.UnknownType
  fullName: NMF.Serialization.XmlSerializer.UnknownType
  type: Event
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownType
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1558
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets raised when the serializer finds a type that is not known
  example: []
  syntax:
    content: public event EventHandler<UnknownTypeEventArgs> UnknownType
    return:
      type: System.EventHandler{NMF.Serialization.UnknownTypeEventArgs}
    content.vb: Public Event UnknownType As EventHandler(Of UnknownTypeEventArgs)
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  id: GetSerializationInfoForInstance(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetSerializationInfoForInstance(object, bool)
  nameWithType: XmlSerializer.GetSerializationInfoForInstance(object, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(object, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetSerializationInfoForInstance
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1566
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the serialization information for the provided instance
  example: []
  syntax:
    content: public virtual ITypeSerializationInfo GetSerializationInfoForInstance(object instance, bool createIfNecessary)
    parameters:
    - id: instance
      type: System.Object
      description: The instance
    - id: createIfNecessary
      type: System.Boolean
      description: If true, the serialization information is added if missing
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information
    content.vb: Public Overridable Function GetSerializationInfoForInstance(instance As Object, createIfNecessary As Boolean) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance*
  nameWithType.vb: XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  name.vb: GetSerializationInfoForInstance(Object, Boolean)
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  id: GetSerializationInfo(System.Type,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetSerializationInfo(Type, bool)
  nameWithType: XmlSerializer.GetSerializationInfo(Type, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, bool)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetSerializationInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1578
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the serialization information for the given type
  example: []
  syntax:
    content: public ITypeSerializationInfo GetSerializationInfo(Type type, bool createIfNecessary)
    parameters:
    - id: type
      type: System.Type
      description: The type
    - id: createIfNecessary
      type: System.Boolean
      description: If true, the serialization information is added if missing
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information
    content.vb: Public Function GetSerializationInfo(type As Type, createIfNecessary As Boolean) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetSerializationInfo*
  nameWithType.vb: XmlSerializer.GetSerializationInfo(Type, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, Boolean)
  name.vb: GetSerializationInfo(Type, Boolean)
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  href: NMF.html
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.XmlSerializer.#ctor*
  commentId: Overload:NMF.Serialization.XmlSerializer.#ctor
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer__ctor
  name: XmlSerializer
  nameWithType: XmlSerializer.XmlSerializer
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer
  nameWithType.vb: XmlSerializer.New
  fullName.vb: NMF.Serialization.XmlSerializer.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  parent: NMF.Serialization
  href: NMF.Serialization.XmlSerializationSettings.html
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  parent: NMF.Serialization
  href: NMF.Serialization.XmlSerializer.html
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
- uid: NMF.Serialization.XmlSerializer.Settings*
  commentId: Overload:NMF.Serialization.XmlSerializer.Settings
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_Settings
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
- uid: NMF.Serialization.XmlSerializer.KnownTypes*
  commentId: Overload:NMF.Serialization.XmlSerializer.KnownTypes
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_KnownTypes
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
- uid: System.Collections.Generic.ICollection{System.Type}
  commentId: T:System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  nameWithType.vb: ICollection(Of Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type)
  name.vb: ICollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace*
  commentId: Overload:NMF.Serialization.XmlSerializer.RegisterNamespace
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_RegisterNamespace_NMF_Serialization_ITypeSerializationInfo_
  name: RegisterNamespace
  nameWithType: XmlSerializer.RegisterNamespace
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.ITypeSerializationInfo.html
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetTypeInfo
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetTypeInfo_System_String_System_String_
  name: GetTypeInfo
  nameWithType: XmlSerializer.GetTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_CreateTypeSerializationInfoFor_System_Type_
  name: CreateTypeSerializationInfoFor
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_InitializeTypeSerializationInfo_System_Type_NMF_Serialization_ITypeSerializationInfo_
  name: InitializeTypeSerializationInfo
  nameWithType: XmlSerializer.InitializeTypeSerializationInfo
  fullName: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo
- uid: NMF.Serialization.XmlSerializer.Serialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Serialize
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_Serialize_System_Object_System_String_System_Boolean_
  name: Serialize
  nameWithType: XmlSerializer.Serialize
  fullName: NMF.Serialization.XmlSerializer.Serialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textwriter
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlwriter
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.IPropertySerializationInfo.html
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  href: NMF.Serialization.XmlIdentificationMode.html
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  href: NMF.Serialization.XmlSerializationContext.html
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.XmlSerializer.SelectRoot*
  commentId: Overload:NMF.Serialization.XmlSerializer.SelectRoot
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_SelectRoot_System_Object_System_Boolean_
  name: SelectRoot
  nameWithType: XmlSerializer.SelectRoot
  fullName: NMF.Serialization.XmlSerializer.SelectRoot
- uid: NMF.Serialization.XmlSerializer.CreateSerializationContext*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateSerializationContext
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_CreateSerializationContext_System_Object_
  name: CreateSerializationContext
  nameWithType: XmlSerializer.CreateSerializationContext
  fullName: NMF.Serialization.XmlSerializer.CreateSerializationContext
- uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteBeginRootElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteBeginRootElement_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_
  name: WriteBeginRootElement
  nameWithType: XmlSerializer.WriteBeginRootElement
  fullName: NMF.Serialization.XmlSerializer.WriteBeginRootElement
- uid: NMF.Serialization.XmlSerializer.WriteBeginElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteBeginElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteBeginElement_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_
  name: WriteBeginElement
  nameWithType: XmlSerializer.WriteBeginElement
  fullName: NMF.Serialization.XmlSerializer.WriteBeginElement
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteConstructorProperties
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteConstructorProperties_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteConstructorProperties
  nameWithType: XmlSerializer.WriteConstructorProperties
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteAttributeProperties
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteAttributeProperties_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteAttributeProperties
  nameWithType: XmlSerializer.WriteAttributeProperties
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteAttributeValue
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteAttributeValue_System_Xml_XmlWriter_System_Object_System_Object_NMF_Serialization_IPropertySerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteAttributeValue
  nameWithType: XmlSerializer.WriteAttributeValue
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetAttributeValue
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetAttributeValue_System_Object_NMF_Serialization_ITypeSerializationInfo_System_Boolean_NMF_Serialization_XmlSerializationContext_
  name: GetAttributeValue
  nameWithType: XmlSerializer.GetAttributeValue
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue
- uid: NMF.Serialization.XmlSerializer.WriteElementProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteElementProperties
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteElementProperties_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteElementProperties
  nameWithType: XmlSerializer.WriteElementProperties
  fullName: NMF.Serialization.XmlSerializer.WriteElementProperties
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteCollectionMembers
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteCollectionMembers_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteCollectionMembers
  nameWithType: XmlSerializer.WriteCollectionMembers
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers
- uid: NMF.Serialization.XmlSerializer.WriteEndElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteEndElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteEndElement_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_
  name: WriteEndElement
  nameWithType: XmlSerializer.WriteEndElement
  fullName: NMF.Serialization.XmlSerializer.WriteEndElement
- uid: NMF.Serialization.XmlSerializer.WriteEndRootElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteEndRootElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteEndRootElement_System_Xml_XmlWriter_System_Object_NMF_Serialization_ITypeSerializationInfo_
  name: WriteEndRootElement
  nameWithType: XmlSerializer.WriteEndRootElement
  fullName: NMF.Serialization.XmlSerializer.WriteEndRootElement
- uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteIdentifiedObject
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_WriteIdentifiedObject_System_Xml_XmlWriter_System_Object_NMF_Serialization_XmlIdentificationMode_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: WriteIdentifiedObject
  nameWithType: XmlSerializer.WriteIdentifiedObject
  fullName: NMF.Serialization.XmlSerializer.WriteIdentifiedObject
- uid: NMF.Serialization.XmlSerializer.Deserialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Deserialize
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_Deserialize_System_String_
  name: Deserialize
  nameWithType: XmlSerializer.Deserialize
  fullName: NMF.Serialization.XmlSerializer.Deserialize
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.textreader
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.xmlreader
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NMF.Serialization.XmlSerializer.CreateRoot*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateRoot
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_CreateRoot_System_Xml_XmlReader_
  name: CreateRoot
  nameWithType: XmlSerializer.CreateRoot
  fullName: NMF.Serialization.XmlSerializer.CreateRoot
- uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetElementTypeInfo
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetElementTypeInfo_System_Xml_XmlReader_NMF_Serialization_IPropertySerializationInfo_
  name: GetElementTypeInfo
  nameWithType: XmlSerializer.GetElementTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetElementTypeInfo
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetRootElementTypeInfo_System_Xml_XmlReader_
  name: GetRootElementTypeInfo
  nameWithType: XmlSerializer.GetRootElementTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo
- uid: NMF.Serialization.XmlSerializer.CreateObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateObject
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_CreateObject_System_Xml_XmlReader_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: CreateObject
  nameWithType: XmlSerializer.CreateObject
  fullName: NMF.Serialization.XmlSerializer.CreateObject
- uid: NMF.Serialization.XmlSerializer.InitializeProperty*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeProperty
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_InitializeProperty_System_Xml_XmlReader_NMF_Serialization_IPropertySerializationInfo_System_Object_NMF_Serialization_XmlSerializationContext_
  name: InitializeProperty
  nameWithType: XmlSerializer.InitializeProperty
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty
- uid: NMF.Serialization.XmlSerializer.GoToPropertyContent*
  commentId: Overload:NMF.Serialization.XmlSerializer.GoToPropertyContent
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GoToPropertyContent_System_Xml_XmlReader_
  name: GoToPropertyContent
  nameWithType: XmlSerializer.GoToPropertyContent
  fullName: NMF.Serialization.XmlSerializer.GoToPropertyContent
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializePropertyFromText
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_InitializePropertyFromText_NMF_Serialization_IPropertySerializationInfo_System_Object_System_String_NMF_Serialization_XmlSerializationContext_
  name: InitializePropertyFromText
  nameWithType: XmlSerializer.InitializePropertyFromText
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText
- uid: NMF.Serialization.XmlSerializer.Initialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Initialize
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_Initialize_System_Xml_XmlReader_System_Object_NMF_Serialization_XmlSerializationContext_
  name: Initialize
  nameWithType: XmlSerializer.Initialize
  fullName: NMF.Serialization.XmlSerializer.Initialize
- uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.OverrideIdentifiedObject
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_OverrideIdentifiedObject_System_Object_System_Xml_XmlReader_NMF_Serialization_XmlSerializationContext_
  name: OverrideIdentifiedObject
  nameWithType: XmlSerializer.OverrideIdentifiedObject
  fullName: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject
- uid: NMF.Serialization.XmlSerializer.InitializeElementProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeElementProperties
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_InitializeElementProperties_System_Xml_XmlReader_System_Object__NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: InitializeElementProperties
  nameWithType: XmlSerializer.InitializeElementProperties
  fullName: NMF.Serialization.XmlSerializer.InitializeElementProperties
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.IsPropertyElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_IsPropertyElement_System_Xml_XmlReader_NMF_Serialization_IPropertySerializationInfo_
  name: IsPropertyElement
  nameWithType: XmlSerializer.IsPropertyElement
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeAttributeProperties
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_InitializeAttributeProperties_System_Xml_XmlReader_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: InitializeAttributeProperties
  nameWithType: XmlSerializer.InitializeAttributeProperties
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties
- uid: NMF.Serialization.XmlSerializer.HandleUnknownType*
  commentId: Overload:NMF.Serialization.XmlSerializer.HandleUnknownType
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_HandleUnknownType_NMF_Serialization_IPropertySerializationInfo_System_String_System_String_
  name: HandleUnknownType
  nameWithType: XmlSerializer.HandleUnknownType
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownType
- uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute*
  commentId: Overload:NMF.Serialization.XmlSerializer.HandleUnknownAttribute
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_HandleUnknownAttribute_System_Xml_XmlReader_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: HandleUnknownAttribute
  nameWithType: XmlSerializer.HandleUnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownAttribute
- uid: NMF.Serialization.XmlSerializer.HandleUnknownElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.HandleUnknownElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_HandleUnknownElement_System_Xml_XmlReader_System_Object_NMF_Serialization_ITypeSerializationInfo_NMF_Serialization_XmlSerializationContext_
  name: HandleUnknownElement
  nameWithType: XmlSerializer.HandleUnknownElement
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownElement
- uid: NMF.Serialization.XmlSerializer.OnUnknownElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.OnUnknownElement
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_OnUnknownElement_NMF_Serialization_UnknownElementEventArgs_
  name: OnUnknownElement
  nameWithType: XmlSerializer.OnUnknownElement
  fullName: NMF.Serialization.XmlSerializer.OnUnknownElement
- uid: NMF.Serialization.UnknownElementEventArgs
  commentId: T:NMF.Serialization.UnknownElementEventArgs
  parent: NMF.Serialization
  href: NMF.Serialization.UnknownElementEventArgs.html
  name: UnknownElementEventArgs
  nameWithType: UnknownElementEventArgs
  fullName: NMF.Serialization.UnknownElementEventArgs
- uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute*
  commentId: Overload:NMF.Serialization.XmlSerializer.OnUnknownAttribute
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_OnUnknownAttribute_NMF_Serialization_UnknownAttributeEventArgs_
  name: OnUnknownAttribute
  nameWithType: XmlSerializer.OnUnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.OnUnknownAttribute
- uid: NMF.Serialization.UnknownAttributeEventArgs
  commentId: T:NMF.Serialization.UnknownAttributeEventArgs
  parent: NMF.Serialization
  href: NMF.Serialization.UnknownAttributeEventArgs.html
  name: UnknownAttributeEventArgs
  nameWithType: UnknownAttributeEventArgs
  fullName: NMF.Serialization.UnknownAttributeEventArgs
- uid: NMF.Serialization.XmlSerializer.OnUnknownType*
  commentId: Overload:NMF.Serialization.XmlSerializer.OnUnknownType
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_OnUnknownType_NMF_Serialization_UnknownTypeEventArgs_
  name: OnUnknownType
  nameWithType: XmlSerializer.OnUnknownType
  fullName: NMF.Serialization.XmlSerializer.OnUnknownType
- uid: NMF.Serialization.UnknownTypeEventArgs
  commentId: T:NMF.Serialization.UnknownTypeEventArgs
  parent: NMF.Serialization
  href: NMF.Serialization.UnknownTypeEventArgs.html
  name: UnknownTypeEventArgs
  nameWithType: UnknownTypeEventArgs
  fullName: NMF.Serialization.UnknownTypeEventArgs
- uid: System.EventHandler{NMF.Serialization.UnknownElementEventArgs}
  commentId: T:System.EventHandler{NMF.Serialization.UnknownElementEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UnknownElementEventArgs>
  nameWithType: EventHandler<UnknownElementEventArgs>
  fullName: System.EventHandler<NMF.Serialization.UnknownElementEventArgs>
  nameWithType.vb: EventHandler(Of UnknownElementEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Serialization.UnknownElementEventArgs)
  name.vb: EventHandler(Of UnknownElementEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
    href: NMF.Serialization.UnknownElementEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
    href: NMF.Serialization.UnknownElementEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{NMF.Serialization.UnknownAttributeEventArgs}
  commentId: T:System.EventHandler{NMF.Serialization.UnknownAttributeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UnknownAttributeEventArgs>
  nameWithType: EventHandler<UnknownAttributeEventArgs>
  fullName: System.EventHandler<NMF.Serialization.UnknownAttributeEventArgs>
  nameWithType.vb: EventHandler(Of UnknownAttributeEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Serialization.UnknownAttributeEventArgs)
  name.vb: EventHandler(Of UnknownAttributeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
    href: NMF.Serialization.UnknownAttributeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
    href: NMF.Serialization.UnknownAttributeEventArgs.html
  - name: )
- uid: System.EventHandler{NMF.Serialization.UnknownTypeEventArgs}
  commentId: T:System.EventHandler{NMF.Serialization.UnknownTypeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UnknownTypeEventArgs>
  nameWithType: EventHandler<UnknownTypeEventArgs>
  fullName: System.EventHandler<NMF.Serialization.UnknownTypeEventArgs>
  nameWithType.vb: EventHandler(Of UnknownTypeEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Serialization.UnknownTypeEventArgs)
  name.vb: EventHandler(Of UnknownTypeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
    href: NMF.Serialization.UnknownTypeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
    href: NMF.Serialization.UnknownTypeEventArgs.html
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetSerializationInfoForInstance_System_Object_System_Boolean_
  name: GetSerializationInfoForInstance
  nameWithType: XmlSerializer.GetSerializationInfoForInstance
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetSerializationInfo
  href: NMF.Serialization.XmlSerializer.html#NMF_Serialization_XmlSerializer_GetSerializationInfo_System_Type_System_Boolean_
  name: GetSerializationInfo
  nameWithType: XmlSerializer.GetSerializationInfo
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo
