### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  id: XmlSerializer
  parent: NMF.Serialization
  children:
  - NMF.Serialization.XmlSerializer.#ctor
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  - NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo(System.Reflection.PropertyInfo)
  - NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  - NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader,System.Boolean)
  - NMF.Serialization.XmlSerializer.Deserialize(System.String)
  - NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.DeserializeInternal(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.DeserializeRootInternal(System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext@)
  - NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.EnqueueInitialization(System.Action)
  - NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  - NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  - NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.HandleException(System.Exception)
  - NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializer.KnownTypes
  - NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Settings
  - NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  langs:
  - csharp
  - vb
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
  type: Class
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmlSerializer
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 17
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nClass to serialize objects in a Xml-format.\n"
  example: []
  syntax:
    content: public class XmlSerializer
    content.vb: Public Class XmlSerializer
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Serialization.Xmi.XmiSerializer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.XmlSerializer.#ctor
  commentId: M:NMF.Serialization.XmlSerializer.#ctor
  id: '#ctor'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer()
  nameWithType: XmlSerializer.XmlSerializer()
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer()
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 33
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nCreates a new XmlSerializer with default settings and no preloaded types\n"
  example: []
  syntax:
    content: public XmlSerializer()
    content.vb: Public Sub New
  overload: NMF.Serialization.XmlSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(IEnumerable<Type>)
  nameWithType: XmlSerializer.XmlSerializer(IEnumerable<Type>)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 40
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nCreates a new XmlSerializer with default settings\n"
  remarks: Types will be loaded with default settings
  example: []
  syntax:
    content: public XmlSerializer(IEnumerable<Type> additionalTypes)
    parameters:
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to preload into the serializer
    content.vb: Public Sub New(additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.XmlSerializer(IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Serialization.XmlSerializer.XmlSerializer(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: XmlSerializer(IEnumerable(Of Type))
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  id: '#ctor(NMF.Serialization.XmlSerializationSettings)'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializationSettings)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializationSettings)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializationSettings)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 46
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nCreates a new XmlSerializer with the specified settings\n"
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializationSettings settings)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: Serializer-settings for the serializer. Can be null or Nothing in Visual Basic. In this case, the default settings will be used.
    content.vb: Public Sub New(settings As XmlSerializationSettings)
  overload: NMF.Serialization.XmlSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.XmlSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(XmlSerializationSettings, IEnumerable<Type>)
  nameWithType: XmlSerializer.XmlSerializer(XmlSerializationSettings, IEnumerable<Type>)
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 59
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nCreates a new XmlSerializer with the specified settings and the given preloaded types\n"
  remarks: The types will be loaded with the specified settings
  example: []
  syntax:
    content: public XmlSerializer(XmlSerializationSettings settings, IEnumerable<Type> additionalTypes)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: The settings to use for the serializer
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to load into the serializer
    content.vb: Public Sub New(settings As XmlSerializationSettings, additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.XmlSerializer.#ctor*
  nameWithType.vb: XmlSerializer.XmlSerializer(XmlSerializationSettings, IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Serialization.XmlSerializer.XmlSerializer(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: XmlSerializer(XmlSerializationSettings, IEnumerable(Of Type))
- uid: NMF.Serialization.XmlSerializer.Settings
  commentId: P:NMF.Serialization.XmlSerializer.Settings
  id: Settings
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Settings
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 76
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nThe settings to be used in the serializer\n"
  example: []
  syntax:
    content: public XmlSerializationSettings Settings { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlSerializationSettings
    content.vb: Public ReadOnly Property Settings As XmlSerializationSettings
  overload: NMF.Serialization.XmlSerializer.Settings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.XmlSerializer.KnownTypes
  commentId: P:NMF.Serialization.XmlSerializer.KnownTypes
  id: KnownTypes
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: KnownTypes
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 84
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nThe set of types that are known to the serializer\n"
  example: []
  syntax:
    content: public ICollection<Type> KnownTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Type}
    content.vb: Public ReadOnly Property KnownTypes As ICollection(Of Type)
  overload: NMF.Serialization.XmlSerializer.KnownTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.XmlSerializer.EnqueueInitialization(System.Action)
  commentId: M:NMF.Serialization.XmlSerializer.EnqueueInitialization(System.Action)
  id: EnqueueInitialization(System.Action)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: EnqueueInitialization(Action)
  nameWithType: XmlSerializer.EnqueueInitialization(Action)
  fullName: NMF.Serialization.XmlSerializer.EnqueueInitialization(System.Action)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnqueueInitialization
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 99
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected void EnqueueInitialization(Action action)
    parameters:
    - id: action
      type: System.Action
    content.vb: Protected Sub EnqueueInitialization(action As Action)
  overload: NMF.Serialization.XmlSerializer.EnqueueInitialization*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  id: RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: RegisterNamespace(ITypeSerializationInfo)
  nameWithType: XmlSerializer.RegisterNamespace(ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RegisterNamespace
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 146
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected void RegisterNamespace(ITypeSerializationInfo info)
    parameters:
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Sub RegisterNamespace(info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.RegisterNamespace*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  id: GetTypeInfo(System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetTypeInfo(String, String)
  nameWithType: XmlSerializer.GetTypeInfo(String, String)
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String, System.String)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 177
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected ITypeSerializationInfo GetTypeInfo(string ns, string localName)
    parameters:
    - id: ns
      type: System.String
    - id: localName
      type: System.String
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Function GetTypeInfo(ns As String, localName As String) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetTypeInfo*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  commentId: M:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  id: CreateTypeSerializationInfoFor(System.Type)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateTypeSerializationInfoFor(Type)
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor(Type)
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateTypeSerializationInfoFor
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 192
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual ITypeSerializationInfo CreateTypeSerializationInfoFor(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Function CreateTypeSerializationInfoFor(type As Type) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(NMF.Serialization.ITypeSerializationInfo)
  id: InitializeTypeSerializationInfo(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeTypeSerializationInfo(ITypeSerializationInfo)
  nameWithType: XmlSerializer.InitializeTypeSerializationInfo(ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeTypeSerializationInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 197
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void InitializeTypeSerializationInfo(ITypeSerializationInfo serializationInfo)
    parameters:
    - id: serializationInfo
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Sub InitializeTypeSerializationInfo(serializationInfo As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo(System.Reflection.PropertyInfo)
  commentId: M:NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo(System.Reflection.PropertyInfo)
  id: CreatePropertySerializationInfo(System.Reflection.PropertyInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreatePropertySerializationInfo(PropertyInfo)
  nameWithType: XmlSerializer.CreatePropertySerializationInfo(PropertyInfo)
  fullName: NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreatePropertySerializationInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 510
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual XmlPropertySerializationInfo CreatePropertySerializationInfo(PropertyInfo pd)
    parameters:
    - id: pd
      type: System.Reflection.PropertyInfo
    return:
      type: NMF.Serialization.XmlPropertySerializationInfo
    content.vb: Protected Overridable Function CreatePropertySerializationInfo(pd As PropertyInfo) As XmlPropertySerializationInfo
  overload: NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  id: Serialize(System.Object,System.String,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, String, Boolean)
  nameWithType: XmlSerializer.Serialize(Object, String, Boolean)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 522
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object obj, string path, bool fragment = false)
    parameters:
    - id: obj
      type: System.Object
      description: The object to be serialized
    - id: path
      type: System.String
      description: The path for the resulting Xml-file
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(obj As Object, path As String, fragment As Boolean = False)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  id: Serialize(System.Object,System.IO.Stream,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, Stream, Boolean)
  nameWithType: XmlSerializer.Serialize(Object, Stream, Boolean)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.IO.Stream, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 536
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object source, Stream stream, bool fragment = false)
    parameters:
    - id: source
      type: System.Object
      description: The object to be serialized
    - id: stream
      type: System.IO.Stream
      description: The stream for the resulting Xml-code
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, stream As Stream, fragment As Boolean = False)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  id: Serialize(System.Object,System.IO.TextWriter)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, TextWriter)
  nameWithType: XmlSerializer.Serialize(Object, TextWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 548
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object source, TextWriter writer)
    parameters:
    - id: source
      type: System.Object
    - id: writer
      type: System.IO.TextWriter
      description: The TextWriter to write the Xml-code on
    content.vb: Public Sub Serialize(source As Object, writer As TextWriter)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  id: Serialize(System.Object,System.Xml.XmlWriter)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, XmlWriter)
  nameWithType: XmlSerializer.Serialize(Object, XmlWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 558
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object source, XmlWriter writer)
    parameters:
    - id: source
      type: System.Object
    - id: writer
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    content.vb: Public Sub Serialize(source As Object, writer As XmlWriter)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  id: Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, TextWriter, Boolean)
  nameWithType: XmlSerializer.Serialize(Object, TextWriter, Boolean)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.IO.TextWriter, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 569
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object source, TextWriter target, bool fragment)
    parameters:
    - id: source
      type: System.Object
    - id: target
      type: System.IO.TextWriter
      description: The TextWriter to write the Xml-code on
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, target As TextWriter, fragment As Boolean)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  id: Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, XmlWriter, Boolean)
  nameWithType: XmlSerializer.Serialize(Object, XmlWriter, Boolean)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.Xml.XmlWriter, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 583
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  example: []
  syntax:
    content: public void Serialize(object source, XmlWriter target, bool fragment)
    parameters:
    - id: source
      type: System.Object
    - id: target
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    - id: fragment
      type: System.Boolean
      description: A value that indicates whether the serializer should write a document definition
    content.vb: Public Sub Serialize(source As Object, target As XmlWriter, fragment As Boolean)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  id: SelectRoot(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: SelectRoot(Object, Boolean)
  nameWithType: XmlSerializer.SelectRoot(Object, Boolean)
  fullName: NMF.Serialization.XmlSerializer.SelectRoot(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SelectRoot
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 601
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nGets the serialization root element\n"
  example: []
  syntax:
    content: protected virtual object SelectRoot(object graph, bool fragment)
    parameters:
    - id: graph
      type: System.Object
      description: The base element that should be serialized
    - id: fragment
      type: System.Boolean
      description: A value indicating whether only a fragment should be written
    return:
      type: System.Object
      description: The root element for serialization
    content.vb: Protected Overridable Function SelectRoot(graph As Object, fragment As Boolean) As Object
  overload: NMF.Serialization.XmlSerializer.SelectRoot*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  id: CreateSerializationContext(System.Object)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateSerializationContext(Object)
  nameWithType: XmlSerializer.CreateSerializationContext(Object)
  fullName: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateSerializationContext
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 606
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual XmlSerializationContext CreateSerializationContext(object root)
    parameters:
    - id: root
      type: System.Object
    return:
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Function CreateSerializationContext(root As Object) As XmlSerializationContext
  overload: NMF.Serialization.XmlSerializer.CreateSerializationContext*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  id: Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  nameWithType: XmlSerializer.Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Serialize(System.Object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, System.Boolean, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 620
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nSerializes the given object\n"
  remarks: If a converter is provided that is able to convert the object to string and convert the string back to this object, just the string-conversion is printed out
  example: []
  syntax:
    content: public virtual void Serialize(object obj, XmlWriter writer, IPropertySerializationInfo property, bool writeInstance, XmlIdentificationMode identificationMode, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
    - id: writer
      type: System.Xml.XmlWriter
      description: The XmlWriter to write the Xml-code on
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: writeInstance
      type: System.Boolean
      description: A value that indicates whether the serializer should write the element definition
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
      description: A value indicating whether it is allowed to the serializer to use identifier
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Public Overridable Sub Serialize(obj As Object, writer As XmlWriter, property As IPropertySerializationInfo, writeInstance As Boolean, identificationMode As XmlIdentificationMode, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.Serialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginRootElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 642
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteBeginRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: root
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Sub WriteBeginRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteBeginRootElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 647
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteBeginElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Sub WriteBeginElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteBeginElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteConstructorProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 652
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteConstructorProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub WriteConstructorProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteConstructorProperties*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteAttributeProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 661
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteAttributeProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub WriteAttributeProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteAttributeProperties*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, System.Object, System.Object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteAttributeValue
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 675
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteAttributeValue(XmlWriter writer, object obj, object value, IPropertySerializationInfo property, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: value
      type: System.Object
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub WriteAttributeValue(writer As XmlWriter, obj As Object, value As Object, property As IPropertySerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteAttributeValue*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  id: GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  nameWithType: XmlSerializer.GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object, NMF.Serialization.ITypeSerializationInfo, System.Boolean, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 723
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual string GetAttributeValue(object value, ITypeSerializationInfo info, bool isCollection, XmlSerializationContext context)
    parameters:
    - id: value
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: isCollection
      type: System.Boolean
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.String
    content.vb: Protected Overridable Function GetAttributeValue(value As Object, info As ITypeSerializationInfo, isCollection As Boolean, context As XmlSerializationContext) As String
  overload: NMF.Serialization.XmlSerializer.GetAttributeValue*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteElementProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 739
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteElementProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub WriteElementProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteElementProperties*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteCollectionMembers
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 758
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteCollectionMembers(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub WriteCollectionMembers(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.WriteCollectionMembers*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 770
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteEndElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Sub WriteEndElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteEndElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter, System.Object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndRootElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 775
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void WriteEndRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: root
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Sub WriteEndRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overload: NMF.Serialization.XmlSerializer.WriteEndRootElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, System.Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteIdentifiedObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 780
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool WriteIdentifiedObject(XmlWriter writer, object obj, XmlIdentificationMode identificationMode, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function WriteIdentifiedObject(writer As XmlWriter, obj As Object, identificationMode As XmlIdentificationMode, info As ITypeSerializationInfo, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.WriteIdentifiedObject*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.String)
  id: Deserialize(System.String)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(String)
  nameWithType: XmlSerializer.Deserialize(String)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.String)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 818
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nDeserializes an Xml-representation of an object back to the corresponding object\n"
  example: []
  syntax:
    content: public object Deserialize(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the Xml file containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(path As String) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 831
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nDeserializes an Xml-representation of an object back to the corresponding object\n"
  example: []
  syntax:
    content: public object Deserialize(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(stream As Stream) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  id: Deserialize(System.IO.TextReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(TextReader)
  nameWithType: XmlSerializer.Deserialize(TextReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 841
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nDeserializes an Xml-representation of an object back to the corresponding object\n"
  example: []
  syntax:
    content: public object Deserialize(TextReader reader)
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: A TextReader containg the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(reader As TextReader) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 852
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nDeserializes an Xml-representation of an object back to the corresponding object\n"
  remarks: The function will deserialize the object at the XmlReaders current position
  example: []
  syntax:
    content: public object Deserialize(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: A XmlReader containing the Xml code
    return:
      type: System.Object
      description: The corresponding object
    content.vb: Public Function Deserialize(reader As XmlReader) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.DeserializeInternal(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.DeserializeInternal(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: DeserializeInternal(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: DeserializeInternal(XmlReader, IPropertySerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.DeserializeInternal(XmlReader, IPropertySerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.DeserializeInternal(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeserializeInternal
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 860
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected object DeserializeInternal(XmlReader reader, IPropertySerializationInfo property, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Object
    content.vb: Protected Function DeserializeInternal(reader As XmlReader, property As IPropertySerializationInfo, context As XmlSerializationContext) As Object
  overload: NMF.Serialization.XmlSerializer.DeserializeInternal*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.DeserializeRootInternal(System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext@)
  commentId: M:NMF.Serialization.XmlSerializer.DeserializeRootInternal(System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext@)
  id: DeserializeRootInternal(System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext@)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: DeserializeRootInternal(XmlReader, out XmlSerializationContext)
  nameWithType: XmlSerializer.DeserializeRootInternal(XmlReader, out XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.DeserializeRootInternal(System.Xml.XmlReader, out NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeserializeRootInternal
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 871
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected object DeserializeRootInternal(XmlReader reader, out XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Object
    content.vb: Protected Function DeserializeRootInternal(reader As XmlReader, ByRef context As XmlSerializationContext) As Object
  overload: NMF.Serialization.XmlSerializer.DeserializeRootInternal*
  nameWithType.vb: XmlSerializer.DeserializeRootInternal(XmlReader, ByRef XmlSerializationContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: NMF.Serialization.XmlSerializer.DeserializeRootInternal(System.Xml.XmlReader, ByRef NMF.Serialization.XmlSerializationContext)
  name.vb: DeserializeRootInternal(XmlReader, ByRef XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  id: CreateRoot(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateRoot(XmlReader)
  nameWithType: XmlSerializer.CreateRoot(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateRoot
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 881
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected object CreateRoot(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    return:
      type: System.Object
    content.vb: Protected Function CreateRoot(reader As XmlReader) As Object
  overload: NMF.Serialization.XmlSerializer.CreateRoot*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetElementTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 890
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual ITypeSerializationInfo GetElementTypeInfo(XmlReader reader, IPropertySerializationInfo property)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Function GetElementTypeInfo(reader As XmlReader, property As IPropertySerializationInfo) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetElementTypeInfo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  id: GetRootElementTypeInfo(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetRootElementTypeInfo(XmlReader)
  nameWithType: XmlSerializer.GetRootElementTypeInfo(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRootElementTypeInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 895
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual ITypeSerializationInfo GetRootElementTypeInfo(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Protected Overridable Function GetRootElementTypeInfo(reader As XmlReader) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 909
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual object CreateObject(XmlReader reader, ITypeSerializationInfo tsi, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: tsi
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Object
    content.vb: Protected Overridable Function CreateObject(reader As XmlReader, tsi As ITypeSerializationInfo, context As XmlSerializationContext) As Object
  overload: NMF.Serialization.XmlSerializer.CreateObject*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  id: InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, System.Object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeProperty
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 927
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool InitializeProperty(XmlReader reader, IPropertySerializationInfo property, object obj, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: obj
      type: System.Object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function InitializeProperty(reader As XmlReader, property As IPropertySerializationInfo, obj As Object, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.InitializeProperty*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  id: GoToPropertyContent(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GoToPropertyContent(XmlReader)
  nameWithType: XmlSerializer.GoToPropertyContent(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GoToPropertyContent
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 954
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool GoToPropertyContent(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function GoToPropertyContent(reader As XmlReader) As Boolean
  overload: NMF.Serialization.XmlSerializer.GoToPropertyContent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  id: InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, System.Object, System.String, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializePropertyFromText
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 962
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void InitializePropertyFromText(IPropertySerializationInfo property, object obj, string text, XmlSerializationContext context)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: obj
      type: System.Object
    - id: text
      type: System.String
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub InitializePropertyFromText(property As IPropertySerializationInfo, obj As Object, text As String, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializePropertyFromText*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  id: EnqueueAddToPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: EnqueueAddToPropertyDelay(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  nameWithType: XmlSerializer.EnqueueAddToPropertyDelay(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay(NMF.Serialization.IPropertySerializationInfo, System.Object, System.String, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnqueueAddToPropertyDelay
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 991
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected void EnqueueAddToPropertyDelay(IPropertySerializationInfo property, object obj, string text, XmlSerializationContext context)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: obj
      type: System.Object
    - id: text
      type: System.String
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Sub EnqueueAddToPropertyDelay(property As IPropertySerializationInfo, obj As Object, text As String, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  id: EnqueueSetPropertyDelay(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: EnqueueSetPropertyDelay(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  nameWithType: XmlSerializer.EnqueueSetPropertyDelay(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay(NMF.Serialization.IPropertySerializationInfo, System.Object, System.String, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnqueueSetPropertyDelay
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 996
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected void EnqueueSetPropertyDelay(IPropertySerializationInfo property, object obj, string text, XmlSerializationContext context)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: obj
      type: System.Object
    - id: text
      type: System.String
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Sub EnqueueSetPropertyDelay(property As IPropertySerializationInfo, obj As Object, text As String, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  id: Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Initialize(XmlReader, Object, XmlSerializationContext)
  nameWithType: XmlSerializer.Initialize(XmlReader, Object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, System.Object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Initialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1007
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nInitializes the given object with the xml code at the current position of the XmlReader\n"
  example: []
  syntax:
    content: public void Initialize(XmlReader reader, object obj, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The XmlReader with the Xml code
    - id: obj
      type: System.Object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Public Sub Initialize(reader As XmlReader, obj As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  id: OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  nameWithType: XmlSerializer.OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OverrideIdentifiedObject
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1048
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool OverrideIdentifiedObject(object obj, XmlReader reader, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
    - id: reader
      type: System.Xml.XmlReader
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OverrideIdentifiedObject(obj As Object, reader As XmlReader, context As XmlSerializationContext) As Boolean
  overload: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeElementProperties(XmlReader, ref Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeElementProperties(XmlReader, ref Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, ref System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeElementProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1053
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void InitializeElementProperties(XmlReader reader, ref object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub InitializeElementProperties(reader As XmlReader, ByRef obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializeElementProperties*
  nameWithType.vb: XmlSerializer.InitializeElementProperties(XmlReader, ByRef Object, ITypeSerializationInfo, XmlSerializationContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, ByRef System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, ByRef Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: IsPropertyElement(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.IsPropertyElement(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsPropertyElement
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1123
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool IsPropertyElement(XmlReader reader, IPropertySerializationInfo p)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: p
      type: NMF.Serialization.IPropertySerializationInfo
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsPropertyElement(reader As XmlReader, p As IPropertySerializationInfo) As Boolean
  overload: NMF.Serialization.XmlSerializer.IsPropertyElement*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeAttributeProperties
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1128
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void InitializeAttributeProperties(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub InitializeAttributeProperties(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.InitializeAttributeProperties*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader, System.Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleUnknownAttribute
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1152
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual void HandleUnknownAttribute(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overridable Sub HandleUnknownAttribute(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overload: NMF.Serialization.XmlSerializer.HandleUnknownAttribute*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.HandleException(System.Exception)
  commentId: M:NMF.Serialization.XmlSerializer.HandleException(System.Exception)
  id: HandleException(System.Exception)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: HandleException(Exception)
  nameWithType: XmlSerializer.HandleException(Exception)
  fullName: NMF.Serialization.XmlSerializer.HandleException(System.Exception)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleException
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1156
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: protected virtual bool HandleException(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function HandleException(ex As Exception) As Boolean
  overload: NMF.Serialization.XmlSerializer.HandleException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  id: GetSerializationInfo(System.Type,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: GetSerializationInfo(Type, Boolean)
  nameWithType: XmlSerializer.GetSerializationInfo(Type, Boolean)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetSerializationInfo
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1162
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public ITypeSerializationInfo GetSerializationInfo(Type type, bool createIfNecessary)
    parameters:
    - id: type
      type: System.Type
    - id: createIfNecessary
      type: System.Boolean
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Public Function GetSerializationInfo(type As Type, createIfNecessary As Boolean) As ITypeSerializationInfo
  overload: NMF.Serialization.XmlSerializer.GetSerializationInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader,System.Boolean)
  id: Deserialize(System.IO.TextReader,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(TextReader, Boolean)
  nameWithType: XmlSerializer.Deserialize(TextReader, Boolean)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Serialization/XML/XmlSerializer.cs
    startLine: 1201
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public object Deserialize(TextReader input, bool fragment)
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: fragment
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Public Function Deserialize(input As TextReader, fragment As Boolean) As Object
  overload: NMF.Serialization.XmlSerializer.Deserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.XmlSerializer.#ctor*
  commentId: Overload:NMF.Serialization.XmlSerializer.#ctor
  name: XmlSerializer
  nameWithType: XmlSerializer.XmlSerializer
  fullName: NMF.Serialization.XmlSerializer.XmlSerializer
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  parent: NMF.Serialization
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
- uid: NMF.Serialization.XmlSerializer.Settings*
  commentId: Overload:NMF.Serialization.XmlSerializer.Settings
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
- uid: NMF.Serialization.XmlSerializer.KnownTypes*
  commentId: Overload:NMF.Serialization.XmlSerializer.KnownTypes
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
- uid: System.Collections.Generic.ICollection{System.Type}
  commentId: T:System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  nameWithType.vb: ICollection(Of Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type)
  name.vb: ICollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializer.EnqueueInitialization*
  commentId: Overload:NMF.Serialization.XmlSerializer.EnqueueInitialization
  name: EnqueueInitialization
  nameWithType: XmlSerializer.EnqueueInitialization
  fullName: NMF.Serialization.XmlSerializer.EnqueueInitialization
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace*
  commentId: Overload:NMF.Serialization.XmlSerializer.RegisterNamespace
  name: RegisterNamespace
  nameWithType: XmlSerializer.RegisterNamespace
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetTypeInfo
  name: GetTypeInfo
  nameWithType: XmlSerializer.GetTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor
  name: CreateTypeSerializationInfoFor
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo
  name: InitializeTypeSerializationInfo
  nameWithType: XmlSerializer.InitializeTypeSerializationInfo
  fullName: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo
- uid: NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo
  name: CreatePropertySerializationInfo
  nameWithType: XmlSerializer.CreatePropertySerializationInfo
  fullName: NMF.Serialization.XmlSerializer.CreatePropertySerializationInfo
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: NMF.Serialization.XmlPropertySerializationInfo
  commentId: T:NMF.Serialization.XmlPropertySerializationInfo
  parent: NMF.Serialization
  name: XmlPropertySerializationInfo
  nameWithType: XmlPropertySerializationInfo
  fullName: NMF.Serialization.XmlPropertySerializationInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: NMF.Serialization.XmlSerializer.Serialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Serialize
  name: Serialize
  nameWithType: XmlSerializer.Serialize
  fullName: NMF.Serialization.XmlSerializer.Serialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: NMF.Serialization.XmlSerializer.SelectRoot*
  commentId: Overload:NMF.Serialization.XmlSerializer.SelectRoot
  name: SelectRoot
  nameWithType: XmlSerializer.SelectRoot
  fullName: NMF.Serialization.XmlSerializer.SelectRoot
- uid: NMF.Serialization.XmlSerializer.CreateSerializationContext*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateSerializationContext
  name: CreateSerializationContext
  nameWithType: XmlSerializer.CreateSerializationContext
  fullName: NMF.Serialization.XmlSerializer.CreateSerializationContext
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteBeginRootElement
  name: WriteBeginRootElement
  nameWithType: XmlSerializer.WriteBeginRootElement
  fullName: NMF.Serialization.XmlSerializer.WriteBeginRootElement
- uid: NMF.Serialization.XmlSerializer.WriteBeginElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteBeginElement
  name: WriteBeginElement
  nameWithType: XmlSerializer.WriteBeginElement
  fullName: NMF.Serialization.XmlSerializer.WriteBeginElement
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteConstructorProperties
  name: WriteConstructorProperties
  nameWithType: XmlSerializer.WriteConstructorProperties
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteAttributeProperties
  name: WriteAttributeProperties
  nameWithType: XmlSerializer.WriteAttributeProperties
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteAttributeValue
  name: WriteAttributeValue
  nameWithType: XmlSerializer.WriteAttributeValue
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetAttributeValue
  name: GetAttributeValue
  nameWithType: XmlSerializer.GetAttributeValue
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue
- uid: NMF.Serialization.XmlSerializer.WriteElementProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteElementProperties
  name: WriteElementProperties
  nameWithType: XmlSerializer.WriteElementProperties
  fullName: NMF.Serialization.XmlSerializer.WriteElementProperties
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteCollectionMembers
  name: WriteCollectionMembers
  nameWithType: XmlSerializer.WriteCollectionMembers
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers
- uid: NMF.Serialization.XmlSerializer.WriteEndElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteEndElement
  name: WriteEndElement
  nameWithType: XmlSerializer.WriteEndElement
  fullName: NMF.Serialization.XmlSerializer.WriteEndElement
- uid: NMF.Serialization.XmlSerializer.WriteEndRootElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteEndRootElement
  name: WriteEndRootElement
  nameWithType: XmlSerializer.WriteEndRootElement
  fullName: NMF.Serialization.XmlSerializer.WriteEndRootElement
- uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.WriteIdentifiedObject
  name: WriteIdentifiedObject
  nameWithType: XmlSerializer.WriteIdentifiedObject
  fullName: NMF.Serialization.XmlSerializer.WriteIdentifiedObject
- uid: NMF.Serialization.XmlSerializer.Deserialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Deserialize
  name: Deserialize
  nameWithType: XmlSerializer.Deserialize
  fullName: NMF.Serialization.XmlSerializer.Deserialize
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NMF.Serialization.XmlSerializer.DeserializeInternal*
  commentId: Overload:NMF.Serialization.XmlSerializer.DeserializeInternal
  name: DeserializeInternal
  nameWithType: XmlSerializer.DeserializeInternal
  fullName: NMF.Serialization.XmlSerializer.DeserializeInternal
- uid: NMF.Serialization.XmlSerializer.DeserializeRootInternal*
  commentId: Overload:NMF.Serialization.XmlSerializer.DeserializeRootInternal
  name: DeserializeRootInternal
  nameWithType: XmlSerializer.DeserializeRootInternal
  fullName: NMF.Serialization.XmlSerializer.DeserializeRootInternal
- uid: NMF.Serialization.XmlSerializer.CreateRoot*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateRoot
  name: CreateRoot
  nameWithType: XmlSerializer.CreateRoot
  fullName: NMF.Serialization.XmlSerializer.CreateRoot
- uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetElementTypeInfo
  name: GetElementTypeInfo
  nameWithType: XmlSerializer.GetElementTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetElementTypeInfo
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo
  name: GetRootElementTypeInfo
  nameWithType: XmlSerializer.GetRootElementTypeInfo
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo
- uid: NMF.Serialization.XmlSerializer.CreateObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.CreateObject
  name: CreateObject
  nameWithType: XmlSerializer.CreateObject
  fullName: NMF.Serialization.XmlSerializer.CreateObject
- uid: NMF.Serialization.XmlSerializer.InitializeProperty*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeProperty
  name: InitializeProperty
  nameWithType: XmlSerializer.InitializeProperty
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty
- uid: NMF.Serialization.XmlSerializer.GoToPropertyContent*
  commentId: Overload:NMF.Serialization.XmlSerializer.GoToPropertyContent
  name: GoToPropertyContent
  nameWithType: XmlSerializer.GoToPropertyContent
  fullName: NMF.Serialization.XmlSerializer.GoToPropertyContent
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializePropertyFromText
  name: InitializePropertyFromText
  nameWithType: XmlSerializer.InitializePropertyFromText
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText
- uid: NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay*
  commentId: Overload:NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay
  name: EnqueueAddToPropertyDelay
  nameWithType: XmlSerializer.EnqueueAddToPropertyDelay
  fullName: NMF.Serialization.XmlSerializer.EnqueueAddToPropertyDelay
- uid: NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay*
  commentId: Overload:NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay
  name: EnqueueSetPropertyDelay
  nameWithType: XmlSerializer.EnqueueSetPropertyDelay
  fullName: NMF.Serialization.XmlSerializer.EnqueueSetPropertyDelay
- uid: NMF.Serialization.XmlSerializer.Initialize*
  commentId: Overload:NMF.Serialization.XmlSerializer.Initialize
  name: Initialize
  nameWithType: XmlSerializer.Initialize
  fullName: NMF.Serialization.XmlSerializer.Initialize
- uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject*
  commentId: Overload:NMF.Serialization.XmlSerializer.OverrideIdentifiedObject
  name: OverrideIdentifiedObject
  nameWithType: XmlSerializer.OverrideIdentifiedObject
  fullName: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject
- uid: NMF.Serialization.XmlSerializer.InitializeElementProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeElementProperties
  name: InitializeElementProperties
  nameWithType: XmlSerializer.InitializeElementProperties
  fullName: NMF.Serialization.XmlSerializer.InitializeElementProperties
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement*
  commentId: Overload:NMF.Serialization.XmlSerializer.IsPropertyElement
  name: IsPropertyElement
  nameWithType: XmlSerializer.IsPropertyElement
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties*
  commentId: Overload:NMF.Serialization.XmlSerializer.InitializeAttributeProperties
  name: InitializeAttributeProperties
  nameWithType: XmlSerializer.InitializeAttributeProperties
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties
- uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute*
  commentId: Overload:NMF.Serialization.XmlSerializer.HandleUnknownAttribute
  name: HandleUnknownAttribute
  nameWithType: XmlSerializer.HandleUnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownAttribute
- uid: NMF.Serialization.XmlSerializer.HandleException*
  commentId: Overload:NMF.Serialization.XmlSerializer.HandleException
  name: HandleException
  nameWithType: XmlSerializer.HandleException
  fullName: NMF.Serialization.XmlSerializer.HandleException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo*
  commentId: Overload:NMF.Serialization.XmlSerializer.GetSerializationInfo
  name: GetSerializationInfo
  nameWithType: XmlSerializer.GetSerializationInfo
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo
