### YamlMime:ManagedReference
items:
- uid: NMF.Models.Changes.ModelChangeRecorder
  commentId: T:NMF.Models.Changes.ModelChangeRecorder
  id: ModelChangeRecorder
  parent: NMF.Models.Changes
  children:
  - NMF.Models.Changes.ModelChangeRecorder.#ctor
  - NMF.Models.Changes.ModelChangeRecorder.#ctor(System.Boolean)
  - NMF.Models.Changes.ModelChangeRecorder.AttachedElement
  - NMF.Models.Changes.ModelChangeRecorder.GetModelChanges
  - NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync
  - NMF.Models.Changes.ModelChangeRecorder.IsRecording
  - NMF.Models.Changes.ModelChangeRecorder.Start(NMF.Models.IModelElement)
  - NMF.Models.Changes.ModelChangeRecorder.Stop
  langs:
  - csharp
  - vb
  name: ModelChangeRecorder
  nameWithType: ModelChangeRecorder
  fullName: NMF.Models.Changes.ModelChangeRecorder
  type: Class
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelChangeRecorder
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 18
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRepresents a recorder for changes to a model.\n"
  example: []
  syntax:
    content: public class ModelChangeRecorder
    content.vb: Public Class ModelChangeRecorder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Changes.ModelChangeRecorder.#ctor(System.Boolean)
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: ModelChangeRecorder(Boolean)
  nameWithType: ModelChangeRecorder.ModelChangeRecorder(Boolean)
  fullName: NMF.Models.Changes.ModelChangeRecorder.ModelChangeRecorder(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  syntax:
    content: public ModelChangeRecorder(bool isInvertible)
    parameters:
    - id: isInvertible
      type: System.Boolean
    content.vb: Public Sub New(isInvertible As Boolean)
  overload: NMF.Models.Changes.ModelChangeRecorder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.ModelChangeRecorder.#ctor
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.#ctor
  id: '#ctor'
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: ModelChangeRecorder()
  nameWithType: ModelChangeRecorder.ModelChangeRecorder()
  fullName: NMF.Models.Changes.ModelChangeRecorder.ModelChangeRecorder()
  type: Constructor
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 31
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  syntax:
    content: public ModelChangeRecorder()
    content.vb: Public Sub New
  overload: NMF.Models.Changes.ModelChangeRecorder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.ModelChangeRecorder.IsRecording
  commentId: P:NMF.Models.Changes.ModelChangeRecorder.IsRecording
  id: IsRecording
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: IsRecording
  nameWithType: ModelChangeRecorder.IsRecording
  fullName: NMF.Models.Changes.ModelChangeRecorder.IsRecording
  type: Property
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsRecording
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 36
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nChecks whether the recorder is attached to a model element.\n"
  example: []
  syntax:
    content: public bool IsRecording { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRecording As Boolean
  overload: NMF.Models.Changes.ModelChangeRecorder.IsRecording*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Changes.ModelChangeRecorder.AttachedElement
  commentId: P:NMF.Models.Changes.ModelChangeRecorder.AttachedElement
  id: AttachedElement
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: AttachedElement
  nameWithType: ModelChangeRecorder.AttachedElement
  fullName: NMF.Models.Changes.ModelChangeRecorder.AttachedElement
  type: Property
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttachedElement
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 41
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the attached model element or null, if the recorder is not attached.\n"
  example: []
  syntax:
    content: public IModelElement AttachedElement { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property AttachedElement As IModelElement
  overload: NMF.Models.Changes.ModelChangeRecorder.AttachedElement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Changes.ModelChangeRecorder.Start(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.Start(NMF.Models.IModelElement)
  id: Start(NMF.Models.IModelElement)
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: Start(IModelElement)
  nameWithType: ModelChangeRecorder.Start(IModelElement)
  fullName: NMF.Models.Changes.ModelChangeRecorder.Start(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Start
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 49
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nAttaches the recorder to the given model element. The recorder will track all\nchanges made to the given element and every element further down in the\ncontainment hierarchy.\n"
  example: []
  syntax:
    content: public void Start(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: ''
    content.vb: Public Sub Start(element As IModelElement)
  overload: NMF.Models.Changes.ModelChangeRecorder.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.ModelChangeRecorder.Stop
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.Stop
  id: Stop
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: ModelChangeRecorder.Stop()
  fullName: NMF.Models.Changes.ModelChangeRecorder.Stop()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Stop
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 65
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nDetaches the recorder, stopping the change tracking.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: NMF.Models.Changes.ModelChangeRecorder.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync
  id: GetModelChangesAsync
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: GetModelChangesAsync()
  nameWithType: ModelChangeRecorder.GetModelChangesAsync()
  fullName: NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelChangesAsync
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 137
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  syntax:
    content: public Task<ModelChangeSet> GetModelChangesAsync()
    return:
      type: System.Threading.Tasks.Task{NMF.Models.Changes.ModelChangeSet}
    content.vb: Public Function GetModelChangesAsync As Task(Of ModelChangeSet)
  overload: NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.ModelChangeRecorder.GetModelChanges
  commentId: M:NMF.Models.Changes.ModelChangeRecorder.GetModelChanges
  id: GetModelChanges
  parent: NMF.Models.Changes.ModelChangeRecorder
  langs:
  - csharp
  - vb
  name: GetModelChanges()
  nameWithType: ModelChangeRecorder.GetModelChanges()
  fullName: NMF.Models.Changes.ModelChangeRecorder.GetModelChanges()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/ModelChangeRecorder.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelChanges
    path: src/Models/Models/Changes/ModelChangeRecorder.cs
    startLine: 146
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nReturns previously recorded changes in a tree hierarchy.\n"
  example: []
  syntax:
    content: public ModelChangeSet GetModelChanges()
    return:
      type: NMF.Models.Changes.ModelChangeSet
      description: ''
    content.vb: Public Function GetModelChanges As ModelChangeSet
  overload: NMF.Models.Changes.ModelChangeRecorder.GetModelChanges*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Models.Changes
  commentId: N:NMF.Models.Changes
  name: NMF.Models.Changes
  nameWithType: NMF.Models.Changes
  fullName: NMF.Models.Changes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Changes.ModelChangeRecorder.#ctor*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.#ctor
  name: ModelChangeRecorder
  nameWithType: ModelChangeRecorder.ModelChangeRecorder
  fullName: NMF.Models.Changes.ModelChangeRecorder.ModelChangeRecorder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Models.Changes.ModelChangeRecorder.IsRecording*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.IsRecording
  name: IsRecording
  nameWithType: ModelChangeRecorder.IsRecording
  fullName: NMF.Models.Changes.ModelChangeRecorder.IsRecording
- uid: NMF.Models.Changes.ModelChangeRecorder.AttachedElement*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.AttachedElement
  name: AttachedElement
  nameWithType: ModelChangeRecorder.AttachedElement
  fullName: NMF.Models.Changes.ModelChangeRecorder.AttachedElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: NMF.Models.Changes.ModelChangeRecorder.Start*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.Start
  name: Start
  nameWithType: ModelChangeRecorder.Start
  fullName: NMF.Models.Changes.ModelChangeRecorder.Start
- uid: NMF.Models.Changes.ModelChangeRecorder.Stop*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.Stop
  name: Stop
  nameWithType: ModelChangeRecorder.Stop
  fullName: NMF.Models.Changes.ModelChangeRecorder.Stop
- uid: NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync
  name: GetModelChangesAsync
  nameWithType: ModelChangeRecorder.GetModelChangesAsync
  fullName: NMF.Models.Changes.ModelChangeRecorder.GetModelChangesAsync
- uid: System.Threading.Tasks.Task{NMF.Models.Changes.ModelChangeSet}
  commentId: T:System.Threading.Tasks.Task{NMF.Models.Changes.ModelChangeSet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ModelChangeSet>
  nameWithType: Task<ModelChangeSet>
  fullName: System.Threading.Tasks.Task<NMF.Models.Changes.ModelChangeSet>
  nameWithType.vb: Task(Of ModelChangeSet)
  fullName.vb: System.Threading.Tasks.Task(Of NMF.Models.Changes.ModelChangeSet)
  name.vb: Task(Of ModelChangeSet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Changes.ModelChangeSet
    name: ModelChangeSet
    nameWithType: ModelChangeSet
    fullName: NMF.Models.Changes.ModelChangeSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Changes.ModelChangeSet
    name: ModelChangeSet
    nameWithType: ModelChangeSet
    fullName: NMF.Models.Changes.ModelChangeSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: NMF.Models.Changes.ModelChangeRecorder.GetModelChanges*
  commentId: Overload:NMF.Models.Changes.ModelChangeRecorder.GetModelChanges
  name: GetModelChanges
  nameWithType: ModelChangeRecorder.GetModelChanges
  fullName: NMF.Models.Changes.ModelChangeRecorder.GetModelChanges
- uid: NMF.Models.Changes.ModelChangeSet
  commentId: T:NMF.Models.Changes.ModelChangeSet
  parent: NMF.Models.Changes
  name: ModelChangeSet
  nameWithType: ModelChangeSet
  fullName: NMF.Models.Changes.ModelChangeSet
