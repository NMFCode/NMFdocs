### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.Class
  commentId: T:NMF.Models.Meta.Class
  id: Class
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.Class.#ctor
  - NMF.Models.Meta.Class.AttributeConstraints
  - NMF.Models.Meta.Class.BaseTypes
  - NMF.Models.Meta.Class.Children
  - NMF.Models.Meta.Class.ClassInstance
  - NMF.Models.Meta.Class.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.Meta.Class.GetClass
  - NMF.Models.Meta.Class.GetCollectionForFeature(System.String)
  - NMF.Models.Meta.Class.GetCompositionName(System.Object)
  - NMF.Models.Meta.Class.GetExpressionForAttribute(System.String)
  - NMF.Models.Meta.Class.GetExpressionForReference(System.String)
  - NMF.Models.Meta.Class.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.Meta.Class.Identifier
  - NMF.Models.Meta.Class.IdentifierChanged
  - NMF.Models.Meta.Class.IdentifierChanging
  - NMF.Models.Meta.Class.IdentifierScope
  - NMF.Models.Meta.Class.IdentifierScopeChanged
  - NMF.Models.Meta.Class.IdentifierScopeChanging
  - NMF.Models.Meta.Class.InstanceOf
  - NMF.Models.Meta.Class.InstanceOfChanged
  - NMF.Models.Meta.Class.InstanceOfChanging
  - NMF.Models.Meta.Class.IsAbstract
  - NMF.Models.Meta.Class.IsAbstractChanged
  - NMF.Models.Meta.Class.IsAbstractChanging
  - NMF.Models.Meta.Class.OnIdentifierChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnIdentifierChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnIdentifierScopeChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnIdentifierScopeChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnInstanceOfChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnInstanceOfChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnIsAbstractChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.OnIsAbstractChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Class.ReferenceConstraints
  - NMF.Models.Meta.Class.ReferencedElements
  - NMF.Models.Meta.Class.SetFeature(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: Class
  fullName: NMF.Models.Meta.Class
  type: Class
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Class
    path: src/Models/Models/Meta/Class.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRepresents a group of instances with common properties like attributes or references\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://nmf.codeplex.com/nmeta/")]

      [XmlNamespacePrefix("nmeta")]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Class")]

      public class Class : ReferenceType, IClass, IReferenceType, IStructuredType, IType, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://nmf.codeplex.com/nmeta/")>

      <XmlNamespacePrefix("nmeta")>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Class")>

      Public Class Class

          Inherits ReferenceType

          Implements IClass, IReferenceType, IStructuredType, IType, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Models.Meta.MetaElement
  - NMF.Models.Meta.Type
  - NMF.Models.Meta.StructuredType
  - NMF.Models.Meta.ReferenceType
  implements:
  - NMF.Models.Meta.IClass
  - NMF.Models.Meta.IReferenceType
  - NMF.Models.Meta.IStructuredType
  - NMF.Models.Meta.IType
  - NMF.Models.Meta.IMetaElement
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.Meta.ReferenceType.Events
  - NMF.Models.Meta.ReferenceType.References
  - NMF.Models.Meta.StructuredType.Operations
  - NMF.Models.Meta.StructuredType.Attributes
  - NMF.Models.Meta.Type.Namespace
  - NMF.Models.Meta.Type.NamespaceChanging
  - NMF.Models.Meta.Type.NamespaceChanged
  - NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.Meta.MetaElement.Name
  - NMF.Models.Meta.MetaElement.Summary
  - NMF.Models.Meta.MetaElement.Remarks
  - NMF.Models.Meta.MetaElement.IsIdentified
  - NMF.Models.Meta.MetaElement.NameChanging
  - NMF.Models.Meta.MetaElement.NameChanged
  - NMF.Models.Meta.MetaElement.SummaryChanging
  - NMF.Models.Meta.MetaElement.SummaryChanged
  - NMF.Models.Meta.MetaElement.RemarksChanging
  - NMF.Models.Meta.MetaElement.RemarksChanged
  - NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.ToIdentifierString
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IReference)
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IAttribute)
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupReference(System.String)
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupOperation(System.String)
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupAttribute(System.String)
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  - NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass)
  - NMF.Models.Meta.IType.NMF.Models.Meta.TypeExtensions.Parse(System.String)
  - NMF.Models.Meta.IType.NMF.Models.Meta.TypeExtensions.Serialize(System.Object)
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nmeta
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//Class
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Meta.Class.#ctor
  commentId: M:NMF.Models.Meta.Class.#ctor
  id: '#ctor'
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: Class()
  nameWithType: Class.Class()
  fullName: NMF.Models.Meta.Class.Class()
  type: Constructor
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Meta/Class.cs
    startLine: 95
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public Class()
    content.vb: Public Sub New
  overload: NMF.Models.Meta.Class.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IsAbstract
  commentId: P:NMF.Models.Meta.Class.IsAbstract
  id: IsAbstract
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IsAbstract
  nameWithType: Class.IsAbstract
  fullName: NMF.Models.Meta.Class.IsAbstract
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsAbstract
    path: src/Models/Models/Meta/Class.cs
    startLine: 111
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe IsAbstract property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public bool IsAbstract { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <XmlAttribute(True)>

      Public Property IsAbstract As Boolean
  overload: NMF.Models.Meta.Class.IsAbstract*
  implements:
  - NMF.Models.Meta.IClass.IsAbstract
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IdentifierScope
  commentId: P:NMF.Models.Meta.Class.IdentifierScope
  id: IdentifierScope
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IdentifierScope
  nameWithType: Class.IdentifierScope
  fullName: NMF.Models.Meta.Class.IdentifierScope
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierScope
    path: src/Models/Models/Meta/Class.cs
    startLine: 139
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nSpecifies whether the identifier is valid only in the scope of its container or on a global scope.\n"
  remarks: This attribute is ignored when this class is not identified.
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IdentifierScope IdentifierScope { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IdentifierScope
    content.vb: >-
      <XmlAttribute(True)>

      Public Property IdentifierScope As IdentifierScope
  overload: NMF.Models.Meta.Class.IdentifierScope*
  implements:
  - NMF.Models.Meta.IClass.IdentifierScope
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.BaseTypes
  commentId: P:NMF.Models.Meta.Class.BaseTypes
  id: BaseTypes
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: BaseTypes
  nameWithType: Class.BaseTypes
  fullName: NMF.Models.Meta.Class.BaseTypes
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: BaseTypes
    path: src/Models/Models/Meta/Class.cs
    startLine: 167
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe BaseTypes property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public ICollectionExpression<IClass> BaseTypes { get; }
    parameters: []
    return:
      type: ICollectionExpression{NMF.Models.Meta.IClass}
    content.vb: >-
      <XmlAttribute(True)>

      Public ReadOnly Property BaseTypes As ICollectionExpression(Of IClass)
  overload: NMF.Models.Meta.Class.BaseTypes*
  implements:
  - NMF.Models.Meta.IClass.BaseTypes
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Meta.Class.InstanceOf
  commentId: P:NMF.Models.Meta.Class.InstanceOf
  id: InstanceOf
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: InstanceOf
  nameWithType: Class.InstanceOf
  fullName: NMF.Models.Meta.Class.InstanceOf
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InstanceOf
    path: src/Models/Models/Meta/Class.cs
    startLine: 182
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe InstanceOf property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IClass InstanceOf { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: >-
      <XmlAttribute(True)>

      Public Property InstanceOf As IClass
  overload: NMF.Models.Meta.Class.InstanceOf*
  implements:
  - NMF.Models.Meta.IClass.InstanceOf
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.Identifier
  commentId: P:NMF.Models.Meta.Class.Identifier
  id: Identifier
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: Class.Identifier
  fullName: NMF.Models.Meta.Class.Identifier
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Identifier
    path: src/Models/Models/Meta/Class.cs
    startLine: 216
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets or sets the attribute that will identify instances of this class\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IAttribute Identifier { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IAttribute
    content.vb: >-
      <XmlAttribute(True)>

      Public Property Identifier As IAttribute
  overload: NMF.Models.Meta.Class.Identifier*
  implements:
  - NMF.Models.Meta.IClass.Identifier
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.AttributeConstraints
  commentId: P:NMF.Models.Meta.Class.AttributeConstraints
  id: AttributeConstraints
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: AttributeConstraints
  nameWithType: Class.AttributeConstraints
  fullName: NMF.Models.Meta.Class.AttributeConstraints
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttributeConstraints
    path: src/Models/Models/Meta/Class.cs
    startLine: 251
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe AttributeConstraints property\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("DeclaringType")]

      public ICollectionExpression<IAttributeConstraint> AttributeConstraints { get; }
    parameters: []
    return:
      type: ICollectionExpression{NMF.Models.Meta.IAttributeConstraint}
    content.vb: >-
      <Browsable(False)>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("DeclaringType")>

      Public ReadOnly Property AttributeConstraints As ICollectionExpression(Of IAttributeConstraint)
  overload: NMF.Models.Meta.Class.AttributeConstraints*
  implements:
  - NMF.Models.Meta.IClass.AttributeConstraints
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeclaringType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Meta.Class.ReferenceConstraints
  commentId: P:NMF.Models.Meta.Class.ReferenceConstraints
  id: ReferenceConstraints
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: ReferenceConstraints
  nameWithType: Class.ReferenceConstraints
  fullName: NMF.Models.Meta.Class.ReferenceConstraints
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceConstraints
    path: src/Models/Models/Meta/Class.cs
    startLine: 268
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe ReferenceConstraints property\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlAttribute(false)]

      [Containment]

      [XmlOpposite("DeclaringType")]

      public ICollectionExpression<IReferenceConstraint> ReferenceConstraints { get; }
    parameters: []
    return:
      type: ICollectionExpression{NMF.Models.Meta.IReferenceConstraint}
    content.vb: >-
      <Browsable(False)>

      <XmlAttribute(False)>

      <Containment>

      <XmlOpposite("DeclaringType")>

      Public ReadOnly Property ReferenceConstraints As ICollectionExpression(Of IReferenceConstraint)
  overload: NMF.Models.Meta.Class.ReferenceConstraints*
  implements:
  - NMF.Models.Meta.IClass.ReferenceConstraints
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeclaringType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Meta.Class.Children
  commentId: P:NMF.Models.Meta.Class.Children
  id: Children
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: Class.Children
  fullName: NMF.Models.Meta.Class.Children
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Children
    path: src/Models/Models/Meta/Class.cs
    startLine: 285
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the child model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.Meta.ReferenceType.Children
  overload: NMF.Models.Meta.Class.Children*
  implements:
  - NMF.Models.IModelElement.Children
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Meta.Class.ReferencedElements
  commentId: P:NMF.Models.Meta.Class.ReferencedElements
  id: ReferencedElements
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: Class.ReferencedElements
  fullName: NMF.Models.Meta.Class.ReferencedElements
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Models/Models/Meta/Class.cs
    startLine: 296
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.Meta.ReferenceType.ReferencedElements
  overload: NMF.Models.Meta.Class.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Meta.Class.ClassInstance
  commentId: P:NMF.Models.Meta.Class.ClassInstance
  id: ClassInstance
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: Class.ClassInstance
  fullName: NMF.Models.Meta.Class.ClassInstance
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Models/Models/Meta/Class.cs
    startLine: 307
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.Meta.Class.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Models.Meta.Class.IsAbstractChanging
  commentId: E:NMF.Models.Meta.Class.IsAbstractChanging
  id: IsAbstractChanging
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IsAbstractChanging
  nameWithType: Class.IsAbstractChanging
  fullName: NMF.Models.Meta.Class.IsAbstractChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsAbstractChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 322
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IsAbstract property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsAbstractChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsAbstractChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IsAbstractChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IsAbstractChanged
  commentId: E:NMF.Models.Meta.Class.IsAbstractChanged
  id: IsAbstractChanged
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IsAbstractChanged
  nameWithType: Class.IsAbstractChanged
  fullName: NMF.Models.Meta.Class.IsAbstractChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsAbstractChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 327
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IsAbstract property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsAbstractChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsAbstractChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IsAbstractChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IdentifierScopeChanging
  commentId: E:NMF.Models.Meta.Class.IdentifierScopeChanging
  id: IdentifierScopeChanging
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IdentifierScopeChanging
  nameWithType: Class.IdentifierScopeChanging
  fullName: NMF.Models.Meta.Class.IdentifierScopeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierScopeChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 332
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IdentifierScope property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IdentifierScopeChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IdentifierScopeChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IdentifierScopeChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IdentifierScopeChanged
  commentId: E:NMF.Models.Meta.Class.IdentifierScopeChanged
  id: IdentifierScopeChanged
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IdentifierScopeChanged
  nameWithType: Class.IdentifierScopeChanged
  fullName: NMF.Models.Meta.Class.IdentifierScopeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierScopeChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 337
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IdentifierScope property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IdentifierScopeChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IdentifierScopeChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IdentifierScopeChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.InstanceOfChanging
  commentId: E:NMF.Models.Meta.Class.InstanceOfChanging
  id: InstanceOfChanging
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: InstanceOfChanging
  nameWithType: Class.InstanceOfChanging
  fullName: NMF.Models.Meta.Class.InstanceOfChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InstanceOfChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 342
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the InstanceOf property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> InstanceOfChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event InstanceOfChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.InstanceOfChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.InstanceOfChanged
  commentId: E:NMF.Models.Meta.Class.InstanceOfChanged
  id: InstanceOfChanged
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: InstanceOfChanged
  nameWithType: Class.InstanceOfChanged
  fullName: NMF.Models.Meta.Class.InstanceOfChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InstanceOfChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 347
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the InstanceOf property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> InstanceOfChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event InstanceOfChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.InstanceOfChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IdentifierChanging
  commentId: E:NMF.Models.Meta.Class.IdentifierChanging
  id: IdentifierChanging
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IdentifierChanging
  nameWithType: Class.IdentifierChanging
  fullName: NMF.Models.Meta.Class.IdentifierChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 352
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Identifier property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IdentifierChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IdentifierChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IdentifierChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.IdentifierChanged
  commentId: E:NMF.Models.Meta.Class.IdentifierChanged
  id: IdentifierChanged
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: IdentifierChanged
  nameWithType: Class.IdentifierChanged
  fullName: NMF.Models.Meta.Class.IdentifierChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 357
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Identifier property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IdentifierChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IdentifierChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IClass.IdentifierChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Class.OnIsAbstractChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIsAbstractChanging(ValueChangedEventArgs)
  id: OnIsAbstractChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIsAbstractChanging(ValueChangedEventArgs)
  nameWithType: Class.OnIsAbstractChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIsAbstractChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsAbstractChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 368
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsAbstractChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIsAbstractChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsAbstractChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIsAbstractChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnIsAbstractChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIsAbstractChanged(ValueChangedEventArgs)
  id: OnIsAbstractChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIsAbstractChanged(ValueChangedEventArgs)
  nameWithType: Class.OnIsAbstractChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIsAbstractChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsAbstractChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 381
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsAbstractChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIsAbstractChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsAbstractChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIsAbstractChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnIdentifierScopeChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIdentifierScopeChanging(ValueChangedEventArgs)
  id: OnIdentifierScopeChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIdentifierScopeChanging(ValueChangedEventArgs)
  nameWithType: Class.OnIdentifierScopeChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIdentifierScopeChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIdentifierScopeChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 399
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IdentifierScopeChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIdentifierScopeChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIdentifierScopeChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIdentifierScopeChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnIdentifierScopeChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIdentifierScopeChanged(ValueChangedEventArgs)
  id: OnIdentifierScopeChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIdentifierScopeChanged(ValueChangedEventArgs)
  nameWithType: Class.OnIdentifierScopeChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIdentifierScopeChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIdentifierScopeChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 412
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IdentifierScopeChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIdentifierScopeChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIdentifierScopeChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIdentifierScopeChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnInstanceOfChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnInstanceOfChanging(ValueChangedEventArgs)
  id: OnInstanceOfChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnInstanceOfChanging(ValueChangedEventArgs)
  nameWithType: Class.OnInstanceOfChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnInstanceOfChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnInstanceOfChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 455
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the InstanceOfChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnInstanceOfChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnInstanceOfChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnInstanceOfChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnInstanceOfChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnInstanceOfChanged(ValueChangedEventArgs)
  id: OnInstanceOfChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnInstanceOfChanged(ValueChangedEventArgs)
  nameWithType: Class.OnInstanceOfChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnInstanceOfChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnInstanceOfChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 468
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the InstanceOfChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnInstanceOfChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnInstanceOfChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnInstanceOfChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnIdentifierChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIdentifierChanging(ValueChangedEventArgs)
  id: OnIdentifierChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIdentifierChanging(ValueChangedEventArgs)
  nameWithType: Class.OnIdentifierChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIdentifierChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIdentifierChanging
    path: src/Models/Models/Meta/Class.cs
    startLine: 496
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IdentifierChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIdentifierChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIdentifierChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIdentifierChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.OnIdentifierChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Class.OnIdentifierChanged(ValueChangedEventArgs)
  id: OnIdentifierChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: OnIdentifierChanged(ValueChangedEventArgs)
  nameWithType: Class.OnIdentifierChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Class.OnIdentifierChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIdentifierChanged
    path: src/Models/Models/Meta/Class.cs
    startLine: 509
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IdentifierChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIdentifierChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIdentifierChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Class.OnIdentifierChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Class.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.Class.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: Class.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Meta.Class.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Models/Models/Meta/Class.cs
    startLine: 584
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nResolves the given URI to a child model element\n"
  example: []
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference name
    - id: index
      type: System.Int32
      description: The index of this reference
    return:
      type: NMF.Models.IModelElement
      description: The model element or null if it could not be found
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Models.Meta.Type.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Models.Meta.Class.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.Class.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetAttributeValue(String, Int32)
  nameWithType: Class.GetAttributeValue(String, Int32)
  fullName: NMF.Models.Meta.Class.GetAttributeValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Models/Meta/Class.cs
    startLine: 603
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Models.Meta.Class.GetAttributeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.Meta.Class.GetCollectionForFeature(System.String)
  id: GetCollectionForFeature(System.String)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetCollectionForFeature(String)
  nameWithType: Class.GetCollectionForFeature(String)
  fullName: NMF.Models.Meta.Class.GetCollectionForFeature(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCollectionForFeature
    path: src/Models/Models/Meta/Class.cs
    startLine: 621
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Model element collection for the given feature\n"
  example: []
  syntax:
    content: protected override IList GetCollectionForFeature(string feature)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    return:
      type: System.Collections.IList
      description: A non-generic list of elements
    content.vb: Protected Overrides Function GetCollectionForFeature(feature As String) As IList
  overridden: NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
  overload: NMF.Models.Meta.Class.GetCollectionForFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Meta.Class.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: Class.SetFeature(String, Object)
  fullName: NMF.Models.Meta.Class.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Models/Models/Meta/Class.cs
    startLine: 643
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Models.Meta.Type.SetFeature(System.String,System.Object)
  overload: NMF.Models.Meta.Class.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.Meta.Class.GetExpressionForAttribute(System.String)
  id: GetExpressionForAttribute(System.String)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetExpressionForAttribute(String)
  nameWithType: Class.GetExpressionForAttribute(String)
  fullName: NMF.Models.Meta.Class.GetExpressionForAttribute(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForAttribute
    path: src/Models/Models/Meta/Class.cs
    startLine: 673
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property expression for the given attribute\n"
  example: []
  syntax:
    content: protected override Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute in upper case
    return:
      type: NMF.Expressions.INotifyExpression{System.Object}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForAttribute(attribute As String) As Expressions.INotifyExpression(Of Object)
  overridden: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  overload: NMF.Models.Meta.Class.GetExpressionForAttribute*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.Meta.Class.GetExpressionForReference(System.String)
  id: GetExpressionForReference(System.String)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetExpressionForReference(String)
  nameWithType: Class.GetExpressionForReference(String)
  fullName: NMF.Models.Meta.Class.GetExpressionForReference(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForReference
    path: src/Models/Models/Meta/Class.cs
    startLine: 691
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property expression for the given reference\n"
  example: []
  syntax:
    content: protected override Expressions.INotifyExpression<IModelElement> GetExpressionForReference(string reference)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference in upper case
    return:
      type: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForReference(reference As String) As Expressions.INotifyExpression(Of IModelElement)
  overridden: NMF.Models.Meta.Type.GetExpressionForReference(System.String)
  overload: NMF.Models.Meta.Class.GetExpressionForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetCompositionName(System.Object)
  commentId: M:NMF.Models.Meta.Class.GetCompositionName(System.Object)
  id: GetCompositionName(System.Object)
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetCompositionName(Object)
  nameWithType: Class.GetCompositionName(Object)
  fullName: NMF.Models.Meta.Class.GetCompositionName(System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCompositionName
    path: src/Models/Models/Meta/Class.cs
    startLine: 709
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property name for the given container\n"
  example: []
  syntax:
    content: protected override string GetCompositionName(object container)
    parameters:
    - id: container
      type: System.Object
      description: The container object
    return:
      type: System.String
      description: The name of the respective container reference
    content.vb: Protected Overrides Function GetCompositionName(container As Object) As String
  overridden: NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
  overload: NMF.Models.Meta.Class.GetCompositionName*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Class.GetClass
  commentId: M:NMF.Models.Meta.Class.GetClass
  id: GetClass
  parent: NMF.Models.Meta.Class
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: Class.GetClass()
  fullName: NMF.Models.Meta.Class.GetClass()
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Class.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Models/Models/Meta/Class.cs
    startLine: 725
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Models.Meta.ReferenceType.GetClass
  overload: NMF.Models.Meta.Class.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Meta.MetaElement
  commentId: T:NMF.Models.Meta.MetaElement
  parent: NMF.Models.Meta
  name: MetaElement
  nameWithType: MetaElement
  fullName: NMF.Models.Meta.MetaElement
- uid: NMF.Models.Meta.Type
  commentId: T:NMF.Models.Meta.Type
  parent: NMF.Models.Meta
  name: Type
  nameWithType: Type
  fullName: NMF.Models.Meta.Type
- uid: NMF.Models.Meta.StructuredType
  commentId: T:NMF.Models.Meta.StructuredType
  parent: NMF.Models.Meta
  name: StructuredType
  nameWithType: StructuredType
  fullName: NMF.Models.Meta.StructuredType
- uid: NMF.Models.Meta.ReferenceType
  commentId: T:NMF.Models.Meta.ReferenceType
  parent: NMF.Models.Meta
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: NMF.Models.Meta.ReferenceType
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta.IReferenceType
  commentId: T:NMF.Models.Meta.IReferenceType
  parent: NMF.Models.Meta
  name: IReferenceType
  nameWithType: IReferenceType
  fullName: NMF.Models.Meta.IReferenceType
- uid: NMF.Models.Meta.IStructuredType
  commentId: T:NMF.Models.Meta.IStructuredType
  parent: NMF.Models.Meta
  name: IStructuredType
  nameWithType: IStructuredType
  fullName: NMF.Models.Meta.IStructuredType
- uid: NMF.Models.Meta.IType
  commentId: T:NMF.Models.Meta.IType
  parent: NMF.Models.Meta
  name: IType
  nameWithType: IType
  fullName: NMF.Models.Meta.IType
- uid: NMF.Models.Meta.IMetaElement
  commentId: T:NMF.Models.Meta.IMetaElement
  parent: NMF.Models.Meta
  name: IMetaElement
  nameWithType: IMetaElement
  fullName: NMF.Models.Meta.IMetaElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.Meta.ReferenceType.Events
  commentId: P:NMF.Models.Meta.ReferenceType.Events
  parent: NMF.Models.Meta.ReferenceType
  name: Events
  nameWithType: ReferenceType.Events
  fullName: NMF.Models.Meta.ReferenceType.Events
- uid: NMF.Models.Meta.ReferenceType.References
  commentId: P:NMF.Models.Meta.ReferenceType.References
  parent: NMF.Models.Meta.ReferenceType
  name: References
  nameWithType: ReferenceType.References
  fullName: NMF.Models.Meta.ReferenceType.References
- uid: NMF.Models.Meta.StructuredType.Operations
  commentId: P:NMF.Models.Meta.StructuredType.Operations
  parent: NMF.Models.Meta.StructuredType
  name: Operations
  nameWithType: StructuredType.Operations
  fullName: NMF.Models.Meta.StructuredType.Operations
- uid: NMF.Models.Meta.StructuredType.Attributes
  commentId: P:NMF.Models.Meta.StructuredType.Attributes
  parent: NMF.Models.Meta.StructuredType
  name: Attributes
  nameWithType: StructuredType.Attributes
  fullName: NMF.Models.Meta.StructuredType.Attributes
- uid: NMF.Models.Meta.Type.Namespace
  commentId: P:NMF.Models.Meta.Type.Namespace
  parent: NMF.Models.Meta.Type
  name: Namespace
  nameWithType: Type.Namespace
  fullName: NMF.Models.Meta.Type.Namespace
- uid: NMF.Models.Meta.Type.NamespaceChanging
  commentId: E:NMF.Models.Meta.Type.NamespaceChanging
  parent: NMF.Models.Meta.Type
  name: NamespaceChanging
  nameWithType: Type.NamespaceChanging
  fullName: NMF.Models.Meta.Type.NamespaceChanging
- uid: NMF.Models.Meta.Type.NamespaceChanged
  commentId: E:NMF.Models.Meta.Type.NamespaceChanged
  parent: NMF.Models.Meta.Type
  name: NamespaceChanged
  nameWithType: Type.NamespaceChanged
  fullName: NMF.Models.Meta.Type.NamespaceChanged
- uid: NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Type
  isExternal: true
  name: OnNamespaceChanging(ValueChangedEventArgs)
  nameWithType: Type.OnNamespaceChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
    name: OnNamespaceChanging
    nameWithType: Type.OnNamespaceChanging
    fullName: NMF.Models.Meta.Type.OnNamespaceChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.OnNamespaceChanging(ValueChangedEventArgs)
    name: OnNamespaceChanging
    nameWithType: Type.OnNamespaceChanging
    fullName: NMF.Models.Meta.Type.OnNamespaceChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.Meta.Type
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: Type.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: Type.OnParentChanging
    fullName: NMF.Models.Meta.Type.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: Type.OnParentChanging
    fullName: NMF.Models.Meta.Type.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Type
  isExternal: true
  name: OnNamespaceChanged(ValueChangedEventArgs)
  nameWithType: Type.OnNamespaceChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
    name: OnNamespaceChanged
    nameWithType: Type.OnNamespaceChanged
    fullName: NMF.Models.Meta.Type.OnNamespaceChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.OnNamespaceChanged(ValueChangedEventArgs)
    name: OnNamespaceChanged
    nameWithType: Type.OnNamespaceChanged
    fullName: NMF.Models.Meta.Type.OnNamespaceChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.Meta.Type
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: Type.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: Type.OnParentChanged
    fullName: NMF.Models.Meta.Type.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: Type.OnParentChanged
    fullName: NMF.Models.Meta.Type.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.Name
  commentId: P:NMF.Models.Meta.MetaElement.Name
  parent: NMF.Models.Meta.MetaElement
  name: Name
  nameWithType: MetaElement.Name
  fullName: NMF.Models.Meta.MetaElement.Name
- uid: NMF.Models.Meta.MetaElement.Summary
  commentId: P:NMF.Models.Meta.MetaElement.Summary
  parent: NMF.Models.Meta.MetaElement
  name: Summary
  nameWithType: MetaElement.Summary
  fullName: NMF.Models.Meta.MetaElement.Summary
- uid: NMF.Models.Meta.MetaElement.Remarks
  commentId: P:NMF.Models.Meta.MetaElement.Remarks
  parent: NMF.Models.Meta.MetaElement
  name: Remarks
  nameWithType: MetaElement.Remarks
  fullName: NMF.Models.Meta.MetaElement.Remarks
- uid: NMF.Models.Meta.MetaElement.IsIdentified
  commentId: P:NMF.Models.Meta.MetaElement.IsIdentified
  parent: NMF.Models.Meta.MetaElement
  name: IsIdentified
  nameWithType: MetaElement.IsIdentified
  fullName: NMF.Models.Meta.MetaElement.IsIdentified
- uid: NMF.Models.Meta.MetaElement.NameChanging
  commentId: E:NMF.Models.Meta.MetaElement.NameChanging
  parent: NMF.Models.Meta.MetaElement
  name: NameChanging
  nameWithType: MetaElement.NameChanging
  fullName: NMF.Models.Meta.MetaElement.NameChanging
- uid: NMF.Models.Meta.MetaElement.NameChanged
  commentId: E:NMF.Models.Meta.MetaElement.NameChanged
  parent: NMF.Models.Meta.MetaElement
  name: NameChanged
  nameWithType: MetaElement.NameChanged
  fullName: NMF.Models.Meta.MetaElement.NameChanged
- uid: NMF.Models.Meta.MetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanging
  parent: NMF.Models.Meta.MetaElement
  name: SummaryChanging
  nameWithType: MetaElement.SummaryChanging
  fullName: NMF.Models.Meta.MetaElement.SummaryChanging
- uid: NMF.Models.Meta.MetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanged
  parent: NMF.Models.Meta.MetaElement
  name: SummaryChanged
  nameWithType: MetaElement.SummaryChanged
  fullName: NMF.Models.Meta.MetaElement.SummaryChanged
- uid: NMF.Models.Meta.MetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanging
  parent: NMF.Models.Meta.MetaElement
  name: RemarksChanging
  nameWithType: MetaElement.RemarksChanging
  fullName: NMF.Models.Meta.MetaElement.RemarksChanging
- uid: NMF.Models.Meta.MetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanged
  parent: NMF.Models.Meta.MetaElement
  name: RemarksChanged
  nameWithType: MetaElement.RemarksChanged
  fullName: NMF.Models.Meta.MetaElement.RemarksChanged
- uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnNameChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: MetaElement.OnNameChanging
    fullName: NMF.Models.Meta.MetaElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: MetaElement.OnNameChanging
    fullName: NMF.Models.Meta.MetaElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnNameChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: MetaElement.OnNameChanged
    fullName: NMF.Models.Meta.MetaElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: MetaElement.OnNameChanged
    fullName: NMF.Models.Meta.MetaElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnSummaryChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
    name: OnSummaryChanging
    nameWithType: MetaElement.OnSummaryChanging
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
    name: OnSummaryChanging
    nameWithType: MetaElement.OnSummaryChanging
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnSummaryChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
    name: OnSummaryChanged
    nameWithType: MetaElement.OnSummaryChanged
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
    name: OnSummaryChanged
    nameWithType: MetaElement.OnSummaryChanged
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnRemarksChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
    name: OnRemarksChanging
    nameWithType: MetaElement.OnRemarksChanging
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
    name: OnRemarksChanging
    nameWithType: MetaElement.OnRemarksChanging
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnRemarksChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
    name: OnRemarksChanged
    nameWithType: MetaElement.OnRemarksChanged
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
    name: OnRemarksChanged
    nameWithType: MetaElement.OnRemarksChanged
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.ToIdentifierString
  commentId: M:NMF.Models.Meta.MetaElement.ToIdentifierString
  parent: NMF.Models.Meta.MetaElement
  name: ToIdentifierString()
  nameWithType: MetaElement.ToIdentifierString()
  fullName: NMF.Models.Meta.MetaElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: MetaElement.ToIdentifierString
    fullName: NMF.Models.Meta.MetaElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: MetaElement.ToIdentifierString
    fullName: NMF.Models.Meta.MetaElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValue(IAttribute)
  nameWithType: ModelElement.GetAttributeValue(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants()
  nameWithType: ModelExtensions.Descendants()
  fullName: NMF.Models.ModelExtensions.Descendants()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
  name: IsRefined(IReference)
  nameWithType: ClassExtensions.IsRefined(IReference)
  fullName: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IReference)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IReference)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
  name: IsRefined(IAttribute)
  nameWithType: ClassExtensions.IsRefined(IAttribute)
  fullName: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IAttribute)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IAttribute)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupReference(System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
  name: LookupReference(String)
  nameWithType: ClassExtensions.LookupReference(String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupReference(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupReference(System.String)
    name: LookupReference
    nameWithType: ClassExtensions.LookupReference
    fullName: NMF.Models.Meta.ClassExtensions.LookupReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupReference(System.String)
    name: LookupReference
    nameWithType: ClassExtensions.LookupReference
    fullName: NMF.Models.Meta.ClassExtensions.LookupReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupOperation(System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
  name: LookupOperation(String)
  nameWithType: ClassExtensions.LookupOperation(String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupOperation(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupOperation(System.String)
    name: LookupOperation
    nameWithType: ClassExtensions.LookupOperation
    fullName: NMF.Models.Meta.ClassExtensions.LookupOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupOperation(System.String)
    name: LookupOperation
    nameWithType: ClassExtensions.LookupOperation
    fullName: NMF.Models.Meta.ClassExtensions.LookupOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.LookupAttribute(System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
  name: LookupAttribute(String)
  nameWithType: ClassExtensions.LookupAttribute(String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupAttribute(System.String)
    name: LookupAttribute
    nameWithType: ClassExtensions.LookupAttribute
    fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupAttribute(System.String)
    name: LookupAttribute
    nameWithType: ClassExtensions.LookupAttribute
    fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  commentId: M:NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
  name: RetrieveIdentifier()
  nameWithType: ClassExtensions.RetrieveIdentifier()
  fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier()
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
    name: RetrieveIdentifier
    nameWithType: ClassExtensions.RetrieveIdentifier
    fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
    name: RetrieveIdentifier
    nameWithType: ClassExtensions.RetrieveIdentifier
    fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
  name: IsAssignableFrom(IClass)
  nameWithType: ClassExtensions.IsAssignableFrom(IClass)
  fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass)
    name: IsAssignableFrom
    nameWithType: ClassExtensions.IsAssignableFrom
    fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass)
    name: IsAssignableFrom
    nameWithType: ClassExtensions.IsAssignableFrom
    fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IType.NMF.Models.Meta.TypeExtensions.Parse(System.String)
  commentId: M:NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  parent: NMF.Models.Meta.TypeExtensions
  definition: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  name: Parse(String)
  nameWithType: TypeExtensions.Parse(String)
  fullName: NMF.Models.Meta.TypeExtensions.Parse(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.TypeExtensions.Parse(System.String)
    name: Parse
    nameWithType: TypeExtensions.Parse
    fullName: NMF.Models.Meta.TypeExtensions.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.TypeExtensions.Parse(System.String)
    name: Parse
    nameWithType: TypeExtensions.Parse
    fullName: NMF.Models.Meta.TypeExtensions.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IType.NMF.Models.Meta.TypeExtensions.Serialize(System.Object)
  commentId: M:NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  parent: NMF.Models.Meta.TypeExtensions
  definition: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  name: Serialize(Object)
  nameWithType: TypeExtensions.Serialize(Object)
  fullName: NMF.Models.Meta.TypeExtensions.Serialize(System.Object)
  spec.csharp:
  - uid: NMF.Models.Meta.TypeExtensions.Serialize(System.Object)
    name: Serialize
    nameWithType: TypeExtensions.Serialize
    fullName: NMF.Models.Meta.TypeExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.TypeExtensions.Serialize(System.Object)
    name: Serialize
    nameWithType: TypeExtensions.Serialize
    fullName: NMF.Models.Meta.TypeExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
  name: IsRefined(IClass, IReference)
  nameWithType: ClassExtensions.IsRefined(IClass, IReference)
  fullName: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass, NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IReference)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions
  commentId: T:NMF.Models.Meta.ClassExtensions
  parent: NMF.Models.Meta
  name: ClassExtensions
  nameWithType: ClassExtensions
  fullName: NMF.Models.Meta.ClassExtensions
- uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
  name: IsRefined(IClass, IAttribute)
  nameWithType: ClassExtensions.IsRefined(IClass, IAttribute)
  fullName: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass, NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsRefined(NMF.Models.Meta.IClass,NMF.Models.Meta.IAttribute)
    name: IsRefined
    nameWithType: ClassExtensions.IsRefined
    fullName: NMF.Models.Meta.ClassExtensions.IsRefined
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
  isExternal: true
  name: LookupReference(IClass, String)
  nameWithType: ClassExtensions.LookupReference(IClass, String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass, System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
    name: LookupReference
    nameWithType: ClassExtensions.LookupReference
    fullName: NMF.Models.Meta.ClassExtensions.LookupReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupReference(NMF.Models.Meta.IClass,System.String)
    name: LookupReference
    nameWithType: ClassExtensions.LookupReference
    fullName: NMF.Models.Meta.ClassExtensions.LookupReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
  isExternal: true
  name: LookupOperation(IClass, String)
  nameWithType: ClassExtensions.LookupOperation(IClass, String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass, System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
    name: LookupOperation
    nameWithType: ClassExtensions.LookupOperation
    fullName: NMF.Models.Meta.ClassExtensions.LookupOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupOperation(NMF.Models.Meta.IClass,System.String)
    name: LookupOperation
    nameWithType: ClassExtensions.LookupOperation
    fullName: NMF.Models.Meta.ClassExtensions.LookupOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
  commentId: M:NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
  isExternal: true
  name: LookupAttribute(IClass, String)
  nameWithType: ClassExtensions.LookupAttribute(IClass, String)
  fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass, System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
    name: LookupAttribute
    nameWithType: ClassExtensions.LookupAttribute
    fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.LookupAttribute(NMF.Models.Meta.IClass,System.String)
    name: LookupAttribute
    nameWithType: ClassExtensions.LookupAttribute
    fullName: NMF.Models.Meta.ClassExtensions.LookupAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
  commentId: M:NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
  name: RetrieveIdentifier(IClass)
  nameWithType: ClassExtensions.RetrieveIdentifier(IClass)
  fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
    name: RetrieveIdentifier
    nameWithType: ClassExtensions.RetrieveIdentifier
    fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier(NMF.Models.Meta.IClass)
    name: RetrieveIdentifier
    nameWithType: ClassExtensions.RetrieveIdentifier
    fullName: NMF.Models.Meta.ClassExtensions.RetrieveIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
  name: IsAssignableFrom(IClass, IClass)
  nameWithType: ClassExtensions.IsAssignableFrom(IClass, IClass)
  fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass, NMF.Models.Meta.IClass)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
    name: IsAssignableFrom
    nameWithType: ClassExtensions.IsAssignableFrom
    fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsAssignableFrom(NMF.Models.Meta.IClass,NMF.Models.Meta.IClass)
    name: IsAssignableFrom
    nameWithType: ClassExtensions.IsAssignableFrom
    fullName: NMF.Models.Meta.ClassExtensions.IsAssignableFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  commentId: M:NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  isExternal: true
  name: Parse(IType, String)
  nameWithType: TypeExtensions.Parse(IType, String)
  fullName: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType, System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
    name: Parse
    nameWithType: TypeExtensions.Parse
    fullName: NMF.Models.Meta.TypeExtensions.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IType
    name: IType
    nameWithType: IType
    fullName: NMF.Models.Meta.IType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
    name: Parse
    nameWithType: TypeExtensions.Parse
    fullName: NMF.Models.Meta.TypeExtensions.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IType
    name: IType
    nameWithType: IType
    fullName: NMF.Models.Meta.IType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.TypeExtensions
  commentId: T:NMF.Models.Meta.TypeExtensions
  parent: NMF.Models.Meta
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: NMF.Models.Meta.TypeExtensions
- uid: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  commentId: M:NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  isExternal: true
  name: Serialize(IType, Object)
  nameWithType: TypeExtensions.Serialize(IType, Object)
  fullName: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType, System.Object)
  spec.csharp:
  - uid: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
    name: Serialize
    nameWithType: TypeExtensions.Serialize
    fullName: NMF.Models.Meta.TypeExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IType
    name: IType
    nameWithType: IType
    fullName: NMF.Models.Meta.IType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
    name: Serialize
    nameWithType: TypeExtensions.Serialize
    fullName: NMF.Models.Meta.TypeExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IType
    name: IType
    nameWithType: IType
    fullName: NMF.Models.Meta.IType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.#ctor*
  commentId: Overload:NMF.Models.Meta.Class.#ctor
  name: Class
  nameWithType: Class.Class
  fullName: NMF.Models.Meta.Class.Class
- uid: NMF.Models.Meta.Class.IsAbstract*
  commentId: Overload:NMF.Models.Meta.Class.IsAbstract
  name: IsAbstract
  nameWithType: Class.IsAbstract
  fullName: NMF.Models.Meta.Class.IsAbstract
- uid: NMF.Models.Meta.IClass.IsAbstract
  commentId: P:NMF.Models.Meta.IClass.IsAbstract
  parent: NMF.Models.Meta.IClass
  name: IsAbstract
  nameWithType: IClass.IsAbstract
  fullName: NMF.Models.Meta.IClass.IsAbstract
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Models.Meta.Class.IdentifierScope*
  commentId: Overload:NMF.Models.Meta.Class.IdentifierScope
  name: IdentifierScope
  nameWithType: Class.IdentifierScope
  fullName: NMF.Models.Meta.Class.IdentifierScope
- uid: NMF.Models.Meta.IClass.IdentifierScope
  commentId: P:NMF.Models.Meta.IClass.IdentifierScope
  parent: NMF.Models.Meta.IClass
  name: IdentifierScope
  nameWithType: IClass.IdentifierScope
  fullName: NMF.Models.Meta.IClass.IdentifierScope
- uid: NMF.Models.Meta.IdentifierScope
  commentId: T:NMF.Models.Meta.IdentifierScope
  parent: NMF.Models.Meta
  name: IdentifierScope
  nameWithType: IdentifierScope
  fullName: NMF.Models.Meta.IdentifierScope
- uid: NMF.Models.Meta.Class.BaseTypes*
  commentId: Overload:NMF.Models.Meta.Class.BaseTypes
  name: BaseTypes
  nameWithType: Class.BaseTypes
  fullName: NMF.Models.Meta.Class.BaseTypes
- uid: NMF.Models.Meta.IClass.BaseTypes
  commentId: P:NMF.Models.Meta.IClass.BaseTypes
  parent: NMF.Models.Meta.IClass
  name: BaseTypes
  nameWithType: IClass.BaseTypes
  fullName: NMF.Models.Meta.IClass.BaseTypes
- uid: ICollectionExpression{NMF.Models.Meta.IClass}
  commentId: '!:ICollectionExpression{NMF.Models.Meta.IClass}'
  definition: ICollectionExpression`1
  name: ICollectionExpression<IClass>
  nameWithType: ICollectionExpression<IClass>
  fullName: ICollectionExpression<NMF.Models.Meta.IClass>
  nameWithType.vb: ICollectionExpression(Of IClass)
  fullName.vb: ICollectionExpression(Of NMF.Models.Meta.IClass)
  name.vb: ICollectionExpression(Of IClass)
  spec.csharp:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollectionExpression`1
  isExternal: true
  name: ICollectionExpression<>
  nameWithType: ICollectionExpression<>
  fullName: ICollectionExpression<>
  nameWithType.vb: ICollectionExpression(Of )
  fullName.vb: ICollectionExpression(Of )
  name.vb: ICollectionExpression(Of )
  spec.csharp:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.InstanceOf*
  commentId: Overload:NMF.Models.Meta.Class.InstanceOf
  name: InstanceOf
  nameWithType: Class.InstanceOf
  fullName: NMF.Models.Meta.Class.InstanceOf
- uid: NMF.Models.Meta.IClass.InstanceOf
  commentId: P:NMF.Models.Meta.IClass.InstanceOf
  parent: NMF.Models.Meta.IClass
  name: InstanceOf
  nameWithType: IClass.InstanceOf
  fullName: NMF.Models.Meta.IClass.InstanceOf
- uid: NMF.Models.Meta.Class.Identifier*
  commentId: Overload:NMF.Models.Meta.Class.Identifier
  name: Identifier
  nameWithType: Class.Identifier
  fullName: NMF.Models.Meta.Class.Identifier
- uid: NMF.Models.Meta.IClass.Identifier
  commentId: P:NMF.Models.Meta.IClass.Identifier
  parent: NMF.Models.Meta.IClass
  name: Identifier
  nameWithType: IClass.Identifier
  fullName: NMF.Models.Meta.IClass.Identifier
- uid: NMF.Models.Meta.IAttribute
  commentId: T:NMF.Models.Meta.IAttribute
  parent: NMF.Models.Meta
  name: IAttribute
  nameWithType: IAttribute
  fullName: NMF.Models.Meta.IAttribute
- uid: NMF.Models.Meta.Class.AttributeConstraints*
  commentId: Overload:NMF.Models.Meta.Class.AttributeConstraints
  name: AttributeConstraints
  nameWithType: Class.AttributeConstraints
  fullName: NMF.Models.Meta.Class.AttributeConstraints
- uid: NMF.Models.Meta.IClass.AttributeConstraints
  commentId: P:NMF.Models.Meta.IClass.AttributeConstraints
  parent: NMF.Models.Meta.IClass
  name: AttributeConstraints
  nameWithType: IClass.AttributeConstraints
  fullName: NMF.Models.Meta.IClass.AttributeConstraints
- uid: ICollectionExpression{NMF.Models.Meta.IAttributeConstraint}
  commentId: '!:ICollectionExpression{NMF.Models.Meta.IAttributeConstraint}'
  definition: ICollectionExpression`1
  name: ICollectionExpression<IAttributeConstraint>
  nameWithType: ICollectionExpression<IAttributeConstraint>
  fullName: ICollectionExpression<NMF.Models.Meta.IAttributeConstraint>
  nameWithType.vb: ICollectionExpression(Of IAttributeConstraint)
  fullName.vb: ICollectionExpression(Of NMF.Models.Meta.IAttributeConstraint)
  name.vb: ICollectionExpression(Of IAttributeConstraint)
  spec.csharp:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IAttributeConstraint
    name: IAttributeConstraint
    nameWithType: IAttributeConstraint
    fullName: NMF.Models.Meta.IAttributeConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IAttributeConstraint
    name: IAttributeConstraint
    nameWithType: IAttributeConstraint
    fullName: NMF.Models.Meta.IAttributeConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.ReferenceConstraints*
  commentId: Overload:NMF.Models.Meta.Class.ReferenceConstraints
  name: ReferenceConstraints
  nameWithType: Class.ReferenceConstraints
  fullName: NMF.Models.Meta.Class.ReferenceConstraints
- uid: NMF.Models.Meta.IClass.ReferenceConstraints
  commentId: P:NMF.Models.Meta.IClass.ReferenceConstraints
  parent: NMF.Models.Meta.IClass
  name: ReferenceConstraints
  nameWithType: IClass.ReferenceConstraints
  fullName: NMF.Models.Meta.IClass.ReferenceConstraints
- uid: ICollectionExpression{NMF.Models.Meta.IReferenceConstraint}
  commentId: '!:ICollectionExpression{NMF.Models.Meta.IReferenceConstraint}'
  definition: ICollectionExpression`1
  name: ICollectionExpression<IReferenceConstraint>
  nameWithType: ICollectionExpression<IReferenceConstraint>
  fullName: ICollectionExpression<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: ICollectionExpression(Of IReferenceConstraint)
  fullName.vb: ICollectionExpression(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: ICollectionExpression(Of IReferenceConstraint)
  spec.csharp:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: ICollectionExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ReferenceType.Children
  commentId: P:NMF.Models.Meta.ReferenceType.Children
  parent: NMF.Models.Meta.ReferenceType
  name: Children
  nameWithType: ReferenceType.Children
  fullName: NMF.Models.Meta.ReferenceType.Children
- uid: NMF.Models.Meta.Class.Children*
  commentId: Overload:NMF.Models.Meta.Class.Children
  name: Children
  nameWithType: Class.Children
  fullName: NMF.Models.Meta.Class.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: IEnumerableExpression{NMF.Models.IModelElement}
  commentId: '!:IEnumerableExpression{NMF.Models.IModelElement}'
  definition: IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExpression`1
  isExternal: true
  name: IEnumerableExpression<>
  nameWithType: IEnumerableExpression<>
  fullName: IEnumerableExpression<>
  nameWithType.vb: IEnumerableExpression(Of )
  fullName.vb: IEnumerableExpression(Of )
  name.vb: IEnumerableExpression(Of )
  spec.csharp:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ReferenceType.ReferencedElements
  commentId: P:NMF.Models.Meta.ReferenceType.ReferencedElements
  parent: NMF.Models.Meta.ReferenceType
  name: ReferencedElements
  nameWithType: ReferenceType.ReferencedElements
  fullName: NMF.Models.Meta.ReferenceType.ReferencedElements
- uid: NMF.Models.Meta.Class.ReferencedElements*
  commentId: Overload:NMF.Models.Meta.Class.ReferencedElements
  name: ReferencedElements
  nameWithType: Class.ReferencedElements
  fullName: NMF.Models.Meta.Class.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.Meta.Class.ClassInstance*
  commentId: Overload:NMF.Models.Meta.Class.ClassInstance
  name: ClassInstance
  nameWithType: Class.ClassInstance
  fullName: NMF.Models.Meta.Class.ClassInstance
- uid: NMF.Models.Meta.IClass.IsAbstractChanging
  commentId: E:NMF.Models.Meta.IClass.IsAbstractChanging
  parent: NMF.Models.Meta.IClass
  name: IsAbstractChanging
  nameWithType: IClass.IsAbstractChanging
  fullName: NMF.Models.Meta.IClass.IsAbstractChanging
- uid: System.EventHandler{ValueChangedEventArgs}
  commentId: T:System.EventHandler{ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IClass.IsAbstractChanged
  commentId: E:NMF.Models.Meta.IClass.IsAbstractChanged
  parent: NMF.Models.Meta.IClass
  name: IsAbstractChanged
  nameWithType: IClass.IsAbstractChanged
  fullName: NMF.Models.Meta.IClass.IsAbstractChanged
- uid: NMF.Models.Meta.IClass.IdentifierScopeChanging
  commentId: E:NMF.Models.Meta.IClass.IdentifierScopeChanging
  parent: NMF.Models.Meta.IClass
  name: IdentifierScopeChanging
  nameWithType: IClass.IdentifierScopeChanging
  fullName: NMF.Models.Meta.IClass.IdentifierScopeChanging
- uid: NMF.Models.Meta.IClass.IdentifierScopeChanged
  commentId: E:NMF.Models.Meta.IClass.IdentifierScopeChanged
  parent: NMF.Models.Meta.IClass
  name: IdentifierScopeChanged
  nameWithType: IClass.IdentifierScopeChanged
  fullName: NMF.Models.Meta.IClass.IdentifierScopeChanged
- uid: NMF.Models.Meta.IClass.InstanceOfChanging
  commentId: E:NMF.Models.Meta.IClass.InstanceOfChanging
  parent: NMF.Models.Meta.IClass
  name: InstanceOfChanging
  nameWithType: IClass.InstanceOfChanging
  fullName: NMF.Models.Meta.IClass.InstanceOfChanging
- uid: NMF.Models.Meta.IClass.InstanceOfChanged
  commentId: E:NMF.Models.Meta.IClass.InstanceOfChanged
  parent: NMF.Models.Meta.IClass
  name: InstanceOfChanged
  nameWithType: IClass.InstanceOfChanged
  fullName: NMF.Models.Meta.IClass.InstanceOfChanged
- uid: NMF.Models.Meta.IClass.IdentifierChanging
  commentId: E:NMF.Models.Meta.IClass.IdentifierChanging
  parent: NMF.Models.Meta.IClass
  name: IdentifierChanging
  nameWithType: IClass.IdentifierChanging
  fullName: NMF.Models.Meta.IClass.IdentifierChanging
- uid: NMF.Models.Meta.IClass.IdentifierChanged
  commentId: E:NMF.Models.Meta.IClass.IdentifierChanged
  parent: NMF.Models.Meta.IClass
  name: IdentifierChanged
  nameWithType: IClass.IdentifierChanged
  fullName: NMF.Models.Meta.IClass.IdentifierChanged
- uid: NMF.Models.Meta.Class.OnIsAbstractChanging*
  commentId: Overload:NMF.Models.Meta.Class.OnIsAbstractChanging
  name: OnIsAbstractChanging
  nameWithType: Class.OnIsAbstractChanging
  fullName: NMF.Models.Meta.Class.OnIsAbstractChanging
- uid: ValueChangedEventArgs
  isExternal: true
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: ValueChangedEventArgs
- uid: NMF.Models.Meta.Class.OnIsAbstractChanged*
  commentId: Overload:NMF.Models.Meta.Class.OnIsAbstractChanged
  name: OnIsAbstractChanged
  nameWithType: Class.OnIsAbstractChanged
  fullName: NMF.Models.Meta.Class.OnIsAbstractChanged
- uid: NMF.Models.Meta.Class.OnIdentifierScopeChanging*
  commentId: Overload:NMF.Models.Meta.Class.OnIdentifierScopeChanging
  name: OnIdentifierScopeChanging
  nameWithType: Class.OnIdentifierScopeChanging
  fullName: NMF.Models.Meta.Class.OnIdentifierScopeChanging
- uid: NMF.Models.Meta.Class.OnIdentifierScopeChanged*
  commentId: Overload:NMF.Models.Meta.Class.OnIdentifierScopeChanged
  name: OnIdentifierScopeChanged
  nameWithType: Class.OnIdentifierScopeChanged
  fullName: NMF.Models.Meta.Class.OnIdentifierScopeChanged
- uid: NMF.Models.Meta.Class.OnInstanceOfChanging*
  commentId: Overload:NMF.Models.Meta.Class.OnInstanceOfChanging
  name: OnInstanceOfChanging
  nameWithType: Class.OnInstanceOfChanging
  fullName: NMF.Models.Meta.Class.OnInstanceOfChanging
- uid: NMF.Models.Meta.Class.OnInstanceOfChanged*
  commentId: Overload:NMF.Models.Meta.Class.OnInstanceOfChanged
  name: OnInstanceOfChanged
  nameWithType: Class.OnInstanceOfChanged
  fullName: NMF.Models.Meta.Class.OnInstanceOfChanged
- uid: NMF.Models.Meta.Class.OnIdentifierChanging*
  commentId: Overload:NMF.Models.Meta.Class.OnIdentifierChanging
  name: OnIdentifierChanging
  nameWithType: Class.OnIdentifierChanging
  fullName: NMF.Models.Meta.Class.OnIdentifierChanging
- uid: NMF.Models.Meta.Class.OnIdentifierChanged*
  commentId: Overload:NMF.Models.Meta.Class.OnIdentifierChanged
  name: OnIdentifierChanged
  nameWithType: Class.OnIdentifierChanged
  fullName: NMF.Models.Meta.Class.OnIdentifierChanged
- uid: NMF.Models.Meta.Type.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.Type.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Meta.Type
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: Type.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Meta.Type.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: Type.GetModelElementForReference
    fullName: NMF.Models.Meta.Type.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: Type.GetModelElementForReference
    fullName: NMF.Models.Meta.Type.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetModelElementForReference*
  commentId: Overload:NMF.Models.Meta.Class.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: Class.GetModelElementForReference
  fullName: NMF.Models.Meta.Class.GetModelElementForReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: MetaElement.GetAttributeValue(String, Int32)
  fullName: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: MetaElement.GetAttributeValue
    fullName: NMF.Models.Meta.MetaElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: MetaElement.GetAttributeValue
    fullName: NMF.Models.Meta.MetaElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetAttributeValue*
  commentId: Overload:NMF.Models.Meta.Class.GetAttributeValue
  name: GetAttributeValue
  nameWithType: Class.GetAttributeValue
  fullName: NMF.Models.Meta.Class.GetAttributeValue
- uid: NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
  parent: NMF.Models.Meta.ReferenceType
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: ReferenceType.GetCollectionForFeature(String)
  fullName: NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ReferenceType.GetCollectionForFeature
    fullName: NMF.Models.Meta.ReferenceType.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ReferenceType.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ReferenceType.GetCollectionForFeature
    fullName: NMF.Models.Meta.ReferenceType.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetCollectionForFeature*
  commentId: Overload:NMF.Models.Meta.Class.GetCollectionForFeature
  name: GetCollectionForFeature
  nameWithType: Class.GetCollectionForFeature
  fullName: NMF.Models.Meta.Class.GetCollectionForFeature
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Models.Meta.Type.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Meta.Type.SetFeature(System.String,System.Object)
  parent: NMF.Models.Meta.Type
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: Type.SetFeature(String, Object)
  fullName: NMF.Models.Meta.Type.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: Type.SetFeature
    fullName: NMF.Models.Meta.Type.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: Type.SetFeature
    fullName: NMF.Models.Meta.Type.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.SetFeature*
  commentId: Overload:NMF.Models.Meta.Class.SetFeature
  name: SetFeature
  nameWithType: Class.SetFeature
  fullName: NMF.Models.Meta.Class.SetFeature
- uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: MetaElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: MetaElement.GetExpressionForAttribute
    fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: MetaElement.GetExpressionForAttribute
    fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetExpressionForAttribute*
  commentId: Overload:NMF.Models.Meta.Class.GetExpressionForAttribute
  name: GetExpressionForAttribute
  nameWithType: Class.GetExpressionForAttribute
  fullName: NMF.Models.Meta.Class.GetExpressionForAttribute
- uid: NMF.Expressions.INotifyExpression{System.Object}
  commentId: '!:NMF.Expressions.INotifyExpression{System.Object}'
  definition: NMF.Expressions.INotifyExpression`1
  name: Expressions.INotifyExpression<Object>
  nameWithType: Expressions.INotifyExpression<Object>
  fullName: NMF.Expressions.INotifyExpression<System.Object>
  nameWithType.vb: Expressions.INotifyExpression(Of Object)
  fullName.vb: NMF.Expressions.INotifyExpression(Of System.Object)
  name.vb: Expressions.INotifyExpression(Of Object)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotifyExpression`1
  isExternal: true
  name: Expressions.INotifyExpression<>
  nameWithType: Expressions.INotifyExpression<>
  fullName: NMF.Expressions.INotifyExpression<>
  nameWithType.vb: Expressions.INotifyExpression(Of )
  fullName.vb: NMF.Expressions.INotifyExpression(Of )
  name.vb: Expressions.INotifyExpression(Of )
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Type.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.Meta.Type.GetExpressionForReference(System.String)
  parent: NMF.Models.Meta.Type
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: Type.GetExpressionForReference(String)
  fullName: NMF.Models.Meta.Type.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.Type.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: Type.GetExpressionForReference
    fullName: NMF.Models.Meta.Type.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.Type.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: Type.GetExpressionForReference
    fullName: NMF.Models.Meta.Type.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetExpressionForReference*
  commentId: Overload:NMF.Models.Meta.Class.GetExpressionForReference
  name: GetExpressionForReference
  nameWithType: Class.GetExpressionForReference
  fullName: NMF.Models.Meta.Class.GetExpressionForReference
- uid: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  commentId: '!:NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}'
  definition: NMF.Expressions.INotifyExpression`1
  name: Expressions.INotifyExpression<IModelElement>
  nameWithType: Expressions.INotifyExpression<IModelElement>
  fullName: NMF.Expressions.INotifyExpression<NMF.Models.IModelElement>
  nameWithType.vb: Expressions.INotifyExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.INotifyExpression(Of NMF.Models.IModelElement)
  name.vb: Expressions.INotifyExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
  commentId: M:NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
  parent: NMF.Models.Meta.ReferenceType
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ReferenceType.GetCompositionName(Object)
  fullName: NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ReferenceType.GetCompositionName
    fullName: NMF.Models.Meta.ReferenceType.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ReferenceType.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ReferenceType.GetCompositionName
    fullName: NMF.Models.Meta.ReferenceType.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetCompositionName*
  commentId: Overload:NMF.Models.Meta.Class.GetCompositionName
  name: GetCompositionName
  nameWithType: Class.GetCompositionName
  fullName: NMF.Models.Meta.Class.GetCompositionName
- uid: NMF.Models.Meta.ReferenceType.GetClass
  commentId: M:NMF.Models.Meta.ReferenceType.GetClass
  parent: NMF.Models.Meta.ReferenceType
  name: GetClass()
  nameWithType: ReferenceType.GetClass()
  fullName: NMF.Models.Meta.ReferenceType.GetClass()
  spec.csharp:
  - uid: NMF.Models.Meta.ReferenceType.GetClass
    name: GetClass
    nameWithType: ReferenceType.GetClass
    fullName: NMF.Models.Meta.ReferenceType.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ReferenceType.GetClass
    name: GetClass
    nameWithType: ReferenceType.GetClass
    fullName: NMF.Models.Meta.ReferenceType.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Class.GetClass*
  commentId: Overload:NMF.Models.Meta.Class.GetClass
  name: GetClass
  nameWithType: Class.GetClass
  fullName: NMF.Models.Meta.Class.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
