### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.UnknownElementEventArgs
  commentId: T:NMF.Serialization.UnknownElementEventArgs
  id: UnknownElementEventArgs
  parent: NMF.Serialization
  children:
  - NMF.Serialization.UnknownElementEventArgs.#ctor(System.Object,System.String)
  - NMF.Serialization.UnknownElementEventArgs.Context
  - NMF.Serialization.UnknownElementEventArgs.PropertyXml
  langs:
  - csharp
  - vb
  name: UnknownElementEventArgs
  nameWithType: UnknownElementEventArgs
  fullName: NMF.Serialization.UnknownElementEventArgs
  type: Class
  source:
    remote:
      path: Models/Serialization/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownElementEventArgs
    path: src/Models/Serialization/UnknownElementEventArgs.cs
    startLine: 7
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: 'public class UnknownElementEventArgs : EventArgs'
    content.vb: Public Class UnknownElementEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Serialization.UnknownElementEventArgs.#ctor(System.Object,System.String)
  commentId: M:NMF.Serialization.UnknownElementEventArgs.#ctor(System.Object,System.String)
  id: '#ctor(System.Object,System.String)'
  parent: NMF.Serialization.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: UnknownElementEventArgs(object, string)
  nameWithType: UnknownElementEventArgs.UnknownElementEventArgs(object, string)
  fullName: NMF.Serialization.UnknownElementEventArgs.UnknownElementEventArgs(object, string)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/UnknownElementEventArgs.cs
    startLine: 9
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public UnknownElementEventArgs(object context, string propertyXml)
    parameters:
    - id: context
      type: System.Object
    - id: propertyXml
      type: System.String
    content.vb: Public Sub New(context As Object, propertyXml As String)
  overload: NMF.Serialization.UnknownElementEventArgs.#ctor*
  nameWithType.vb: UnknownElementEventArgs.New(Object, String)
  fullName.vb: NMF.Serialization.UnknownElementEventArgs.New(Object, String)
  name.vb: New(Object, String)
- uid: NMF.Serialization.UnknownElementEventArgs.Context
  commentId: P:NMF.Serialization.UnknownElementEventArgs.Context
  id: Context
  parent: NMF.Serialization.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: UnknownElementEventArgs.Context
  fullName: NMF.Serialization.UnknownElementEventArgs.Context
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Context
    path: src/Models/Serialization/UnknownElementEventArgs.cs
    startLine: 18
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public object Context { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Context As Object
  overload: NMF.Serialization.UnknownElementEventArgs.Context*
- uid: NMF.Serialization.UnknownElementEventArgs.PropertyXml
  commentId: P:NMF.Serialization.UnknownElementEventArgs.PropertyXml
  id: PropertyXml
  parent: NMF.Serialization.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: PropertyXml
  nameWithType: UnknownElementEventArgs.PropertyXml
  fullName: NMF.Serialization.UnknownElementEventArgs.PropertyXml
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyXml
    path: src/Models/Serialization/UnknownElementEventArgs.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string PropertyXml { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PropertyXml As String
  overload: NMF.Serialization.UnknownElementEventArgs.PropertyXml*
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.UnknownElementEventArgs.#ctor*
  commentId: Overload:NMF.Serialization.UnknownElementEventArgs.#ctor
  name: UnknownElementEventArgs
  nameWithType: UnknownElementEventArgs.UnknownElementEventArgs
  fullName: NMF.Serialization.UnknownElementEventArgs.UnknownElementEventArgs
  nameWithType.vb: UnknownElementEventArgs.New
  fullName.vb: NMF.Serialization.UnknownElementEventArgs.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Serialization.UnknownElementEventArgs.Context*
  commentId: Overload:NMF.Serialization.UnknownElementEventArgs.Context
  name: Context
  nameWithType: UnknownElementEventArgs.Context
  fullName: NMF.Serialization.UnknownElementEventArgs.Context
- uid: NMF.Serialization.UnknownElementEventArgs.PropertyXml*
  commentId: Overload:NMF.Serialization.UnknownElementEventArgs.PropertyXml
  name: PropertyXml
  nameWithType: UnknownElementEventArgs.PropertyXml
  fullName: NMF.Serialization.UnknownElementEventArgs.PropertyXml
