### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.IAttribute
  commentId: T:NMF.Models.Meta.IAttribute
  id: IAttribute
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.IAttribute.DeclaringType
  - NMF.Models.Meta.IAttribute.DeclaringTypeChanged
  - NMF.Models.Meta.IAttribute.DeclaringTypeChanging
  - NMF.Models.Meta.IAttribute.DefaultValue
  - NMF.Models.Meta.IAttribute.DefaultValueChanged
  - NMF.Models.Meta.IAttribute.DefaultValueChanging
  - NMF.Models.Meta.IAttribute.Refines
  - NMF.Models.Meta.IAttribute.RefinesChanged
  - NMF.Models.Meta.IAttribute.RefinesChanging
  langs:
  - csharp
  - vb
  name: IAttribute
  nameWithType: IAttribute
  fullName: NMF.Models.Meta.IAttribute
  type: Interface
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IAttribute
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe public interface for Attribute\n"
  example: []
  syntax:
    content: >-
      [DefaultImplementationType(typeof(Attribute))]

      [XmlDefaultImplementationType(typeof(Attribute))]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Attribute")]

      public interface IAttribute : ITypedElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <DefaultImplementationType(GetType(Attribute))>

      <XmlDefaultImplementationType(GetType(Attribute))>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Attribute")>

      Public Interface IAttribute
          Inherits IModelElement, ITypedElement
  inheritedMembers:
  - NMF.Models.Meta.ITypedElement.IsOrdered
  - NMF.Models.Meta.ITypedElement.IsUnique
  - NMF.Models.Meta.ITypedElement.LowerBound
  - NMF.Models.Meta.ITypedElement.UpperBound
  - NMF.Models.Meta.ITypedElement.Type
  - NMF.Models.Meta.ITypedElement.IsOrderedChanging
  - NMF.Models.Meta.ITypedElement.IsOrderedChanged
  - NMF.Models.Meta.ITypedElement.IsUniqueChanging
  - NMF.Models.Meta.ITypedElement.IsUniqueChanged
  - NMF.Models.Meta.ITypedElement.LowerBoundChanging
  - NMF.Models.Meta.ITypedElement.LowerBoundChanged
  - NMF.Models.Meta.ITypedElement.UpperBoundChanging
  - NMF.Models.Meta.ITypedElement.UpperBoundChanged
  - NMF.Models.Meta.ITypedElement.TypeChanging
  - NMF.Models.Meta.ITypedElement.TypeChanged
  - NMF.Models.Meta.IMetaElement.Name
  - NMF.Models.Meta.IMetaElement.Summary
  - NMF.Models.Meta.IMetaElement.Remarks
  - NMF.Models.Meta.IMetaElement.NameChanging
  - NMF.Models.Meta.IMetaElement.NameChanged
  - NMF.Models.Meta.IMetaElement.SummaryChanging
  - NMF.Models.Meta.IMetaElement.SummaryChanged
  - NMF.Models.Meta.IMetaElement.RemarksChanging
  - NMF.Models.Meta.IMetaElement.RemarksChanged
  - NMF.Models.IModelElement.Delete
  - NMF.Models.IModelElement.Deleted
  - NMF.Models.IModelElement.Deleting
  - NMF.Models.IModelElement.IsIdentified
  - NMF.Models.IModelElement.ToIdentifierString
  - NMF.Models.IModelElement.RelativeUri
  - NMF.Models.IModelElement.AbsoluteUri
  - NMF.Models.IModelElement.Resolve(System.Uri)
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.IModelElement.Model
  - NMF.Models.IModelElement.Parent
  - NMF.Models.IModelElement.ParentChanged
  - NMF.Models.IModelElement.Children
  - NMF.Models.IModelElement.ReferencedElements
  - NMF.Models.IModelElement.Extensions
  - NMF.Models.IModelElement.GetExtension``1
  - NMF.Models.IModelElement.GetClass
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.IModelElement.Freeze
  - NMF.Models.IModelElement.Lock
  - NMF.Models.IModelElement.Unlock
  - NMF.Models.IModelElement.TryUnlock
  - NMF.Models.IModelElement.IsFrozen
  - NMF.Models.IModelElement.IsLocked
  - NMF.Models.IModelElement.BubbledChange
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  attributes:
  - type: NMF.Utilities.DefaultImplementationTypeAttribute
    ctor: NMF.Utilities.DefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Models.Meta.Attribute
  - type: NMF.Serialization.XmlDefaultImplementationTypeAttribute
    ctor: NMF.Serialization.XmlDefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Models.Meta.Attribute
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//Attribute
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NMF.Models.Meta.IAttribute.DefaultValue
  commentId: P:NMF.Models.Meta.IAttribute.DefaultValue
  id: DefaultValue
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: IAttribute.DefaultValue
  fullName: NMF.Models.Meta.IAttribute.DefaultValue
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValue
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 46
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe default value for this attribute\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      string DefaultValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <XmlAttribute(True)>

      Property DefaultValue As String
  overload: NMF.Models.Meta.IAttribute.DefaultValue*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - get
  - set
- uid: NMF.Models.Meta.IAttribute.DeclaringType
  commentId: P:NMF.Models.Meta.IAttribute.DeclaringType
  id: DeclaringType
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: IAttribute.DeclaringType
  fullName: NMF.Models.Meta.IAttribute.DeclaringType
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringType
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 58
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe type that declared this attribute\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlAttribute(true)]

      [XmlOpposite("Attributes")]

      IStructuredType DeclaringType { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IStructuredType
    content.vb: >-
      <Browsable(False)>

      <XmlAttribute(True)>

      <XmlOpposite("Attributes")>

      Property DeclaringType As IStructuredType
  overload: NMF.Models.Meta.IAttribute.DeclaringType*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Attributes
  modifiers.csharp:
  - get
  - set
- uid: NMF.Models.Meta.IAttribute.Refines
  commentId: P:NMF.Models.Meta.IAttribute.Refines
  id: Refines
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: Refines
  nameWithType: IAttribute.Refines
  fullName: NMF.Models.Meta.IAttribute.Refines
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Refines
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 71
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets or sets the attribute that is implemented by the current attribute\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      IAttribute Refines { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IAttribute
    content.vb: >-
      <XmlAttribute(True)>

      Property Refines As IAttribute
  overload: NMF.Models.Meta.IAttribute.Refines*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - get
  - set
- uid: NMF.Models.Meta.IAttribute.DefaultValueChanging
  commentId: E:NMF.Models.Meta.IAttribute.DefaultValueChanging
  id: DefaultValueChanging
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DefaultValueChanging
  nameWithType: IAttribute.DefaultValueChanging
  fullName: NMF.Models.Meta.IAttribute.DefaultValueChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValueChanging
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 83
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the DefaultValue property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DefaultValueChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DefaultValueChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IAttribute.DefaultValueChanged
  commentId: E:NMF.Models.Meta.IAttribute.DefaultValueChanged
  id: DefaultValueChanged
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DefaultValueChanged
  nameWithType: IAttribute.DefaultValueChanged
  fullName: NMF.Models.Meta.IAttribute.DefaultValueChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultValueChanged
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 88
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the DefaultValue property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DefaultValueChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DefaultValueChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IAttribute.DeclaringTypeChanging
  commentId: E:NMF.Models.Meta.IAttribute.DeclaringTypeChanging
  id: DeclaringTypeChanging
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanging
  nameWithType: IAttribute.DeclaringTypeChanging
  fullName: NMF.Models.Meta.IAttribute.DeclaringTypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanging
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 93
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the DeclaringType property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DeclaringTypeChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DeclaringTypeChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IAttribute.DeclaringTypeChanged
  commentId: E:NMF.Models.Meta.IAttribute.DeclaringTypeChanged
  id: DeclaringTypeChanged
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanged
  nameWithType: IAttribute.DeclaringTypeChanged
  fullName: NMF.Models.Meta.IAttribute.DeclaringTypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanged
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 98
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the DeclaringType property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DeclaringTypeChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DeclaringTypeChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IAttribute.RefinesChanging
  commentId: E:NMF.Models.Meta.IAttribute.RefinesChanging
  id: RefinesChanging
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: RefinesChanging
  nameWithType: IAttribute.RefinesChanging
  fullName: NMF.Models.Meta.IAttribute.RefinesChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanging
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 103
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Refines property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> RefinesChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event RefinesChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IAttribute.RefinesChanged
  commentId: E:NMF.Models.Meta.IAttribute.RefinesChanged
  id: RefinesChanged
  parent: NMF.Models.Meta.IAttribute
  langs:
  - csharp
  - vb
  name: RefinesChanged
  nameWithType: IAttribute.RefinesChanged
  fullName: NMF.Models.Meta.IAttribute.RefinesChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanged
    path: src/Models/Models/Meta/IAttribute.cs
    startLine: 108
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Refines property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> RefinesChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event RefinesChanged As EventHandler(Of ValueChangedEventArgs)
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Models.Meta.ITypedElement.IsOrdered
  commentId: P:NMF.Models.Meta.ITypedElement.IsOrdered
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrdered
  nameWithType: ITypedElement.IsOrdered
  fullName: NMF.Models.Meta.ITypedElement.IsOrdered
- uid: NMF.Models.Meta.ITypedElement.IsUnique
  commentId: P:NMF.Models.Meta.ITypedElement.IsUnique
  parent: NMF.Models.Meta.ITypedElement
  name: IsUnique
  nameWithType: ITypedElement.IsUnique
  fullName: NMF.Models.Meta.ITypedElement.IsUnique
- uid: NMF.Models.Meta.ITypedElement.LowerBound
  commentId: P:NMF.Models.Meta.ITypedElement.LowerBound
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBound
  nameWithType: ITypedElement.LowerBound
  fullName: NMF.Models.Meta.ITypedElement.LowerBound
- uid: NMF.Models.Meta.ITypedElement.UpperBound
  commentId: P:NMF.Models.Meta.ITypedElement.UpperBound
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBound
  nameWithType: ITypedElement.UpperBound
  fullName: NMF.Models.Meta.ITypedElement.UpperBound
- uid: NMF.Models.Meta.ITypedElement.Type
  commentId: P:NMF.Models.Meta.ITypedElement.Type
  parent: NMF.Models.Meta.ITypedElement
  name: Type
  nameWithType: ITypedElement.Type
  fullName: NMF.Models.Meta.ITypedElement.Type
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanging
  nameWithType: ITypedElement.IsOrderedChanging
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanging
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanged
  nameWithType: ITypedElement.IsOrderedChanged
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanged
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanging
  nameWithType: ITypedElement.IsUniqueChanging
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanging
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanged
  nameWithType: ITypedElement.IsUniqueChanged
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanged
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanging
  nameWithType: ITypedElement.LowerBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanging
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanged
  nameWithType: ITypedElement.LowerBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanged
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanging
  nameWithType: ITypedElement.UpperBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanging
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanged
  nameWithType: ITypedElement.UpperBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanged
- uid: NMF.Models.Meta.ITypedElement.TypeChanging
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanging
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanging
  nameWithType: ITypedElement.TypeChanging
  fullName: NMF.Models.Meta.ITypedElement.TypeChanging
- uid: NMF.Models.Meta.ITypedElement.TypeChanged
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanged
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanged
  nameWithType: ITypedElement.TypeChanged
  fullName: NMF.Models.Meta.ITypedElement.TypeChanged
- uid: NMF.Models.Meta.IMetaElement.Name
  commentId: P:NMF.Models.Meta.IMetaElement.Name
  parent: NMF.Models.Meta.IMetaElement
  name: Name
  nameWithType: IMetaElement.Name
  fullName: NMF.Models.Meta.IMetaElement.Name
- uid: NMF.Models.Meta.IMetaElement.Summary
  commentId: P:NMF.Models.Meta.IMetaElement.Summary
  parent: NMF.Models.Meta.IMetaElement
  name: Summary
  nameWithType: IMetaElement.Summary
  fullName: NMF.Models.Meta.IMetaElement.Summary
- uid: NMF.Models.Meta.IMetaElement.Remarks
  commentId: P:NMF.Models.Meta.IMetaElement.Remarks
  parent: NMF.Models.Meta.IMetaElement
  name: Remarks
  nameWithType: IMetaElement.Remarks
  fullName: NMF.Models.Meta.IMetaElement.Remarks
- uid: NMF.Models.Meta.IMetaElement.NameChanging
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanging
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanging
  nameWithType: IMetaElement.NameChanging
  fullName: NMF.Models.Meta.IMetaElement.NameChanging
- uid: NMF.Models.Meta.IMetaElement.NameChanged
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanged
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanged
  nameWithType: IMetaElement.NameChanged
  fullName: NMF.Models.Meta.IMetaElement.NameChanged
- uid: NMF.Models.Meta.IMetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanging
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanging
  nameWithType: IMetaElement.SummaryChanging
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanging
- uid: NMF.Models.Meta.IMetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanged
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanged
  nameWithType: IMetaElement.SummaryChanged
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanged
- uid: NMF.Models.Meta.IMetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanging
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanging
  nameWithType: IMetaElement.RemarksChanging
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanging
- uid: NMF.Models.Meta.IMetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanged
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanged
  nameWithType: IMetaElement.RemarksChanged
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanged
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    nameWithType: IModelElement.Delete
    fullName: NMF.Models.IModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: IModelElement.ToIdentifierString
    fullName: NMF.Models.IModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: IModelElement.Resolve
    fullName: NMF.Models.IModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: IModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: IModelElement.GetContainerReference
    fullName: NMF.Models.IModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: IModelElement.GetExtension<T>
    fullName: NMF.Models.IModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: IModelElement.GetExtension(Of T)
    fullName: NMF.Models.IModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: IModelElement.GetAttributeValue
    fullName: NMF.Models.IModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: IModelElement.GetAttributeValues
    fullName: NMF.Models.IModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: IModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: IModelElement.CallOperation
    fullName: NMF.Models.IModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: IModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: IModelElement.GetReferencedElement
    fullName: NMF.Models.IModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: IModelElement.SetReferencedElement
    fullName: NMF.Models.IModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: IModelElement.GetReferencedElements
    fullName: NMF.Models.IModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: IModelElement.SetAttributeValue
    fullName: NMF.Models.IModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    nameWithType: IModelElement.Freeze
    fullName: NMF.Models.IModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    nameWithType: IModelElement.Lock
    fullName: NMF.Models.IModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    nameWithType: IModelElement.Unlock
    fullName: NMF.Models.IModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    nameWithType: IModelElement.TryUnlock
    fullName: NMF.Models.IModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants()
  nameWithType: ModelExtensions.Descendants()
  fullName: NMF.Models.ModelExtensions.Descendants()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors()
  nameWithType: ModelExtensions.Ancestors()
  fullName: NMF.Models.ModelExtensions.Ancestors()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree()
  nameWithType: ModelExtensions.AncestorTree()
  fullName: NMF.Models.ModelExtensions.AncestorTree()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ITypedElement
  commentId: T:NMF.Models.Meta.ITypedElement
  parent: NMF.Models.Meta
  name: ITypedElement
  nameWithType: ITypedElement
  fullName: NMF.Models.Meta.ITypedElement
- uid: NMF.Models.Meta.IMetaElement
  commentId: T:NMF.Models.Meta.IMetaElement
  parent: NMF.Models.Meta
  name: IMetaElement
  nameWithType: IMetaElement
  fullName: NMF.Models.Meta.IMetaElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Models.Meta.IAttribute.DefaultValue*
  commentId: Overload:NMF.Models.Meta.IAttribute.DefaultValue
  name: DefaultValue
  nameWithType: IAttribute.DefaultValue
  fullName: NMF.Models.Meta.IAttribute.DefaultValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Meta.IAttribute.DeclaringType*
  commentId: Overload:NMF.Models.Meta.IAttribute.DeclaringType
  name: DeclaringType
  nameWithType: IAttribute.DeclaringType
  fullName: NMF.Models.Meta.IAttribute.DeclaringType
- uid: NMF.Models.Meta.IStructuredType
  commentId: T:NMF.Models.Meta.IStructuredType
  parent: NMF.Models.Meta
  name: IStructuredType
  nameWithType: IStructuredType
  fullName: NMF.Models.Meta.IStructuredType
- uid: NMF.Models.Meta.IAttribute.Refines*
  commentId: Overload:NMF.Models.Meta.IAttribute.Refines
  name: Refines
  nameWithType: IAttribute.Refines
  fullName: NMF.Models.Meta.IAttribute.Refines
- uid: NMF.Models.Meta.IAttribute
  commentId: T:NMF.Models.Meta.IAttribute
  parent: NMF.Models.Meta
  name: IAttribute
  nameWithType: IAttribute
  fullName: NMF.Models.Meta.IAttribute
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
