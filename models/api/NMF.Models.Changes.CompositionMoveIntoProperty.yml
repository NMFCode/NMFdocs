### YamlMime:ManagedReference
items:
- uid: NMF.Models.Changes.CompositionMoveIntoProperty
  commentId: T:NMF.Models.Changes.CompositionMoveIntoProperty
  id: CompositionMoveIntoProperty
  parent: NMF.Models.Changes
  children:
  - NMF.Models.Changes.CompositionMoveIntoProperty.Apply
  - NMF.Models.Changes.CompositionMoveIntoProperty.Children
  - NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
  - NMF.Models.Changes.CompositionMoveIntoProperty.GetClass
  - NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference(System.String)
  - NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.Changes.CompositionMoveIntoProperty.Invert
  - NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
  - NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanged
  - NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanging
  - NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
  - NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanged
  - NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanging
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.CompositionMoveIntoProperty.Origin
  - NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanged
  - NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanging
  - NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
  - NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: CompositionMoveIntoProperty
  nameWithType: CompositionMoveIntoProperty
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty
  type: Class
  source:
    remote:
      path: Models/Models/Changes/InvertChanges.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CompositionMoveIntoProperty
    path: src/Models/Models/Changes/InvertChanges.cs
    startLine: 265
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nThe default implementation of the CompositionMoveIntoProperty class\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://nmf.codeplex.com/changes")]

      [XmlNamespacePrefix("changes")]

      [ModelRepresentationClass("http://nmf.codeplex.com/changes#//CompositionMoveIntoProperty")]

      public class CompositionMoveIntoProperty : CompositionChange, ICompositionMoveIntoProperty, ICompositionChange, IElementaryChange, IModelChange, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://nmf.codeplex.com/changes")>

      <XmlNamespacePrefix("changes")>

      <ModelRepresentationClass("http://nmf.codeplex.com/changes#//CompositionMoveIntoProperty")>

      Public Class CompositionMoveIntoProperty
          Inherits CompositionChange
          Implements ICompositionMoveIntoProperty, ICompositionChange, IElementaryChange, IModelChange, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Models.Changes.ModelChange
  - NMF.Models.Changes.ElementaryChange
  - NMF.Models.Changes.CompositionChange
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty
  - NMF.Models.Changes.ICompositionChange
  - NMF.Models.Changes.IElementaryChange
  - NMF.Models.Changes.IModelChange
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.Changes.ElementaryChange.AffectedElement
  - NMF.Models.Changes.ElementaryChange.Feature
  - NMF.Models.Changes.ElementaryChange.AffectedElementChanging
  - NMF.Models.Changes.ElementaryChange.AffectedElementChanged
  - NMF.Models.Changes.ElementaryChange.FeatureChanging
  - NMF.Models.Changes.ElementaryChange.FeatureChanged
  - NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.IsIdentified
  - NMF.Models.ModelElement.ToIdentifierString
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  - NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/changes
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: changes
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/changes#//CompositionMoveIntoProperty
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Apply
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.Apply
  id: Apply
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: Apply()
  nameWithType: CompositionMoveIntoProperty.Apply()
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Apply()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/ApplyChanges.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Apply
    path: src/Models/Models/Changes/ApplyChanges.cs
    startLine: 206
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nApplies the change\n"
  example: []
  syntax:
    content: public override void Apply()
    content.vb: Public Overrides Sub Apply
  overridden: NMF.Models.Changes.ModelChange.Apply
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.Apply*
  implements:
  - NMF.Models.Changes.IModelChange.Apply
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
  id: NewValue
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: NewValue
  nameWithType: CompositionMoveIntoProperty.NewValue
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NewValue
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 69
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nThe newValue property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("newValue")]

      [XmlAttribute(true)]

      public IModelElement NewValue { get; set; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: >-
      <XmlElementName("newValue")>

      <XmlAttribute(True)>

      Public Property NewValue As IModelElement
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.NewValue*
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.NewValue
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: newValue
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
  id: OldValue
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OldValue
  nameWithType: CompositionMoveIntoProperty.OldValue
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldValue
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 97
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nThe oldValue property\n"
  example: []
  syntax:
    content: >-
      [XmlElementName("oldValue")]

      [XmlAttribute(true)]

      public IModelElement OldValue { get; set; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: >-
      <XmlElementName("oldValue")>

      <XmlAttribute(True)>

      Public Property OldValue As IModelElement
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OldValue*
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.OldValue
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: oldValue
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Origin
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.Origin
  id: Origin
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: CompositionMoveIntoProperty.Origin
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Origin
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Origin
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 125
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nThe origin property\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlElementName("origin")]

      [XmlAttribute(false)]

      [Containment]

      public IElementaryChange Origin { get; set; }
    parameters: []
    return:
      type: NMF.Models.Changes.IElementaryChange
    content.vb: >-
      <Browsable(False)>

      <XmlElementName("origin")>

      <XmlAttribute(False)>

      <Containment>

      Public Property Origin As IElementaryChange
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.Origin*
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.Origin
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: origin
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Children
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.Children
  id: Children
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: CompositionMoveIntoProperty.Children
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Children
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Children
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 163
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the child model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.Children
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.Children*
  implements:
  - NMF.Models.IModelElement.Children
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
  id: ReferencedElements
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: CompositionMoveIntoProperty.ReferencedElements
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 174
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.Changes.ElementaryChange.ReferencedElements
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
  commentId: P:NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
  id: ClassInstance
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: CompositionMoveIntoProperty.ClassInstance
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
  type: Property
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 185
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanging
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanging
  id: NewValueChanging
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: NewValueChanging
  nameWithType: CompositionMoveIntoProperty.NewValueChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanging
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NewValueChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 200
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired before the NewValue property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NewValueChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NewValueChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanged
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanged
  id: NewValueChanged
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: NewValueChanged
  nameWithType: CompositionMoveIntoProperty.NewValueChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.NewValueChanged
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NewValueChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 205
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired when the NewValue property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NewValueChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NewValueChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanging
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanging
  id: OldValueChanging
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OldValueChanging
  nameWithType: CompositionMoveIntoProperty.OldValueChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanging
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldValueChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 210
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired before the OldValue property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OldValueChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event OldValueChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanged
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanged
  id: OldValueChanged
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OldValueChanged
  nameWithType: CompositionMoveIntoProperty.OldValueChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OldValueChanged
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldValueChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 215
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired when the OldValue property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OldValueChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event OldValueChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanging
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanging
  id: OriginChanging
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OriginChanging
  nameWithType: CompositionMoveIntoProperty.OriginChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanging
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OriginChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 220
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired before the Origin property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OriginChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event OriginChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanged
  commentId: E:NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanged
  id: OriginChanged
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OriginChanged
  nameWithType: CompositionMoveIntoProperty.OriginChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OriginChanged
  type: Event
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OriginChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 225
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets fired when the Origin property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OriginChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event OriginChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnNewValueChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnNewValueChanging(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnNewValueChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNewValueChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 236
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the NewValueChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnNewValueChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNewValueChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnNewValueChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnNewValueChanged(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnNewValueChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNewValueChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 249
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the NewValueChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnNewValueChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNewValueChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnOldValueChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnOldValueChanging(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnOldValueChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOldValueChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 267
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the OldValueChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnOldValueChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOldValueChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnOldValueChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnOldValueChanged(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnOldValueChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOldValueChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 280
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the OldValueChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnOldValueChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOldValueChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnOriginChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnOriginChanging(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnOriginChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOriginChanging
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 298
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the OriginChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnOriginChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOriginChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnOriginChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: OnOriginChanged(ValueChangedEventArgs)
  nameWithType: CompositionMoveIntoProperty.OnOriginChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOriginChanged
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 311
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nRaises the OriginChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnOriginChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOriginChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  id: GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRelativePathForNonIdentifiedChild
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 335
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the relative URI fragment for the given child model element\n"
  example: []
  syntax:
    content: protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The element that should be looked for
    return:
      type: System.String
      description: A fragment of the relative URI
    content.vb: Protected Overrides Function GetRelativePathForNonIdentifiedChild(element As IModelElement) As String
  overridden: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: CompositionMoveIntoProperty.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 350
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nResolves the given URI to a child model element\n"
  example: []
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference name
    - id: index
      type: System.Int32
      description: The index of this reference
    return:
      type: NMF.Models.IModelElement
      description: The model element or null if it could not be found
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: CompositionMoveIntoProperty.SetFeature(String, Object)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 372
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Models.Changes.ElementaryChange.SetFeature(System.String,System.Object)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference(System.String)
  id: GetExpressionForReference(System.String)
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: GetExpressionForReference(String)
  nameWithType: CompositionMoveIntoProperty.GetExpressionForReference(String)
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForReference
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 397
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the property expression for the given reference\n"
  example: []
  syntax:
    content: protected override INotifyExpression<IModelElement> GetExpressionForReference(string reference)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference in upper case
    return:
      type: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForReference(reference As String) As INotifyExpression(Of IModelElement)
  overridden: NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetClass
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.GetClass
  id: GetClass
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: CompositionMoveIntoProperty.GetClass()
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetClass()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/CompositionMoveIntoProperty.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Models/Models/Changes/CompositionMoveIntoProperty.cs
    startLine: 417
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Models.Changes.CompositionChange.GetClass
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Invert
  commentId: M:NMF.Models.Changes.CompositionMoveIntoProperty.Invert
  id: Invert
  parent: NMF.Models.Changes.CompositionMoveIntoProperty
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: CompositionMoveIntoProperty.Invert()
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Invert()
  type: Method
  source:
    remote:
      path: Models/Models/Changes/InvertChanges.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Invert
    path: src/Models/Models/Changes/InvertChanges.cs
    startLine: 268
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Changes
  summary: "\nCalculates changes that invert the current change\n"
  example: []
  syntax:
    content: public override IEnumerable<IModelChange> Invert()
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Models.Changes.IModelChange}
      description: A collection of model changes that invert the current change
    content.vb: Public Overrides Function Invert As IEnumerable(Of IModelChange)
  overridden: NMF.Models.Changes.ModelChange.Invert
  overload: NMF.Models.Changes.CompositionMoveIntoProperty.Invert*
  implements:
  - NMF.Models.Changes.IModelChange.Invert
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Models.Changes
  commentId: N:NMF.Models.Changes
  name: NMF.Models.Changes
  nameWithType: NMF.Models.Changes
  fullName: NMF.Models.Changes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Changes.ModelChange
  commentId: T:NMF.Models.Changes.ModelChange
  parent: NMF.Models.Changes
  name: ModelChange
  nameWithType: ModelChange
  fullName: NMF.Models.Changes.ModelChange
- uid: NMF.Models.Changes.ElementaryChange
  commentId: T:NMF.Models.Changes.ElementaryChange
  parent: NMF.Models.Changes
  name: ElementaryChange
  nameWithType: ElementaryChange
  fullName: NMF.Models.Changes.ElementaryChange
- uid: NMF.Models.Changes.CompositionChange
  commentId: T:NMF.Models.Changes.CompositionChange
  parent: NMF.Models.Changes
  name: CompositionChange
  nameWithType: CompositionChange
  fullName: NMF.Models.Changes.CompositionChange
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty
  commentId: T:NMF.Models.Changes.ICompositionMoveIntoProperty
  parent: NMF.Models.Changes
  name: ICompositionMoveIntoProperty
  nameWithType: ICompositionMoveIntoProperty
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty
- uid: NMF.Models.Changes.ICompositionChange
  commentId: T:NMF.Models.Changes.ICompositionChange
  parent: NMF.Models.Changes
  name: ICompositionChange
  nameWithType: ICompositionChange
  fullName: NMF.Models.Changes.ICompositionChange
- uid: NMF.Models.Changes.IElementaryChange
  commentId: T:NMF.Models.Changes.IElementaryChange
  parent: NMF.Models.Changes
  name: IElementaryChange
  nameWithType: IElementaryChange
  fullName: NMF.Models.Changes.IElementaryChange
- uid: NMF.Models.Changes.IModelChange
  commentId: T:NMF.Models.Changes.IModelChange
  parent: NMF.Models.Changes
  name: IModelChange
  nameWithType: IModelChange
  fullName: NMF.Models.Changes.IModelChange
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.Changes.ElementaryChange.AffectedElement
  commentId: P:NMF.Models.Changes.ElementaryChange.AffectedElement
  parent: NMF.Models.Changes.ElementaryChange
  name: AffectedElement
  nameWithType: ElementaryChange.AffectedElement
  fullName: NMF.Models.Changes.ElementaryChange.AffectedElement
- uid: NMF.Models.Changes.ElementaryChange.Feature
  commentId: P:NMF.Models.Changes.ElementaryChange.Feature
  parent: NMF.Models.Changes.ElementaryChange
  name: Feature
  nameWithType: ElementaryChange.Feature
  fullName: NMF.Models.Changes.ElementaryChange.Feature
- uid: NMF.Models.Changes.ElementaryChange.AffectedElementChanging
  commentId: E:NMF.Models.Changes.ElementaryChange.AffectedElementChanging
  parent: NMF.Models.Changes.ElementaryChange
  name: AffectedElementChanging
  nameWithType: ElementaryChange.AffectedElementChanging
  fullName: NMF.Models.Changes.ElementaryChange.AffectedElementChanging
- uid: NMF.Models.Changes.ElementaryChange.AffectedElementChanged
  commentId: E:NMF.Models.Changes.ElementaryChange.AffectedElementChanged
  parent: NMF.Models.Changes.ElementaryChange
  name: AffectedElementChanged
  nameWithType: ElementaryChange.AffectedElementChanged
  fullName: NMF.Models.Changes.ElementaryChange.AffectedElementChanged
- uid: NMF.Models.Changes.ElementaryChange.FeatureChanging
  commentId: E:NMF.Models.Changes.ElementaryChange.FeatureChanging
  parent: NMF.Models.Changes.ElementaryChange
  name: FeatureChanging
  nameWithType: ElementaryChange.FeatureChanging
  fullName: NMF.Models.Changes.ElementaryChange.FeatureChanging
- uid: NMF.Models.Changes.ElementaryChange.FeatureChanged
  commentId: E:NMF.Models.Changes.ElementaryChange.FeatureChanged
  parent: NMF.Models.Changes.ElementaryChange
  name: FeatureChanged
  nameWithType: ElementaryChange.FeatureChanged
  fullName: NMF.Models.Changes.ElementaryChange.FeatureChanged
- uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.ElementaryChange
  name: OnAffectedElementChanging(ValueChangedEventArgs)
  nameWithType: ElementaryChange.OnAffectedElementChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnAffectedElementChanging
    nameWithType: ElementaryChange.OnAffectedElementChanging
    fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnAffectedElementChanging
    nameWithType: ElementaryChange.OnAffectedElementChanging
    fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.ElementaryChange
  name: OnAffectedElementChanged(ValueChangedEventArgs)
  nameWithType: ElementaryChange.OnAffectedElementChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnAffectedElementChanged
    nameWithType: ElementaryChange.OnAffectedElementChanged
    fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnAffectedElementChanged
    nameWithType: ElementaryChange.OnAffectedElementChanged
    fullName: NMF.Models.Changes.ElementaryChange.OnAffectedElementChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.ElementaryChange
  name: OnFeatureChanging(ValueChangedEventArgs)
  nameWithType: ElementaryChange.OnFeatureChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnFeatureChanging
    nameWithType: ElementaryChange.OnFeatureChanging
    fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanging(NMF.Expressions.ValueChangedEventArgs)
    name: OnFeatureChanging
    nameWithType: ElementaryChange.OnFeatureChanging
    fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Changes.ElementaryChange
  name: OnFeatureChanged(ValueChangedEventArgs)
  nameWithType: ElementaryChange.OnFeatureChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnFeatureChanged
    nameWithType: ElementaryChange.OnFeatureChanged
    fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.OnFeatureChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnFeatureChanged
    nameWithType: ElementaryChange.OnFeatureChanged
    fullName: NMF.Models.Changes.ElementaryChange.OnFeatureChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.IsIdentified
  commentId: P:NMF.Models.ModelElement.IsIdentified
  parent: NMF.Models.ModelElement
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
- uid: NMF.Models.ModelElement.ToIdentifierString
  commentId: M:NMF.Models.ModelElement.ToIdentifierString
  parent: NMF.Models.ModelElement
  name: ToIdentifierString()
  nameWithType: ModelElement.ToIdentifierString()
  fullName: NMF.Models.ModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: ModelElement.GetCollectionForFeature(String)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: ModelElement.GetAttributeValue(String, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: ModelElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants()
  nameWithType: ModelExtensions.Descendants()
  fullName: NMF.Models.ModelExtensions.Descendants()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors()
  nameWithType: ModelExtensions.Ancestors()
  fullName: NMF.Models.ModelExtensions.Ancestors()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree()
  nameWithType: ModelExtensions.AncestorTree()
  fullName: NMF.Models.ModelExtensions.AncestorTree()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ModelChange.Apply
  commentId: M:NMF.Models.Changes.ModelChange.Apply
  parent: NMF.Models.Changes.ModelChange
  name: Apply()
  nameWithType: ModelChange.Apply()
  fullName: NMF.Models.Changes.ModelChange.Apply()
  spec.csharp:
  - uid: NMF.Models.Changes.ModelChange.Apply
    name: Apply
    nameWithType: ModelChange.Apply
    fullName: NMF.Models.Changes.ModelChange.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ModelChange.Apply
    name: Apply
    nameWithType: ModelChange.Apply
    fullName: NMF.Models.Changes.ModelChange.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Apply*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.Apply
  name: Apply
  nameWithType: CompositionMoveIntoProperty.Apply
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Apply
- uid: NMF.Models.Changes.IModelChange.Apply
  commentId: M:NMF.Models.Changes.IModelChange.Apply
  parent: NMF.Models.Changes.IModelChange
  name: Apply()
  nameWithType: IModelChange.Apply()
  fullName: NMF.Models.Changes.IModelChange.Apply()
  spec.csharp:
  - uid: NMF.Models.Changes.IModelChange.Apply
    name: Apply
    nameWithType: IModelChange.Apply
    fullName: NMF.Models.Changes.IModelChange.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.IModelChange.Apply
    name: Apply
    nameWithType: IModelChange.Apply
    fullName: NMF.Models.Changes.IModelChange.Apply
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.NewValue*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
  name: NewValue
  nameWithType: CompositionMoveIntoProperty.NewValue
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.NewValue
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValue
  commentId: P:NMF.Models.Changes.ICompositionMoveIntoProperty.NewValue
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: NewValue
  nameWithType: ICompositionMoveIntoProperty.NewValue
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValue
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OldValue*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
  name: OldValue
  nameWithType: CompositionMoveIntoProperty.OldValue
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OldValue
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValue
  commentId: P:NMF.Models.Changes.ICompositionMoveIntoProperty.OldValue
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: OldValue
  nameWithType: ICompositionMoveIntoProperty.OldValue
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValue
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Origin*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.Origin
  name: Origin
  nameWithType: CompositionMoveIntoProperty.Origin
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Origin
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.Origin
  commentId: P:NMF.Models.Changes.ICompositionMoveIntoProperty.Origin
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: Origin
  nameWithType: ICompositionMoveIntoProperty.Origin
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.Origin
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  parent: NMF.Models.ModelElement
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Children*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.Children
  name: Children
  nameWithType: CompositionMoveIntoProperty.Children
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Models.Changes.ElementaryChange.ReferencedElements
  commentId: P:NMF.Models.Changes.ElementaryChange.ReferencedElements
  parent: NMF.Models.Changes.ElementaryChange
  name: ReferencedElements
  nameWithType: ElementaryChange.ReferencedElements
  fullName: NMF.Models.Changes.ElementaryChange.ReferencedElements
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
  name: ReferencedElements
  nameWithType: CompositionMoveIntoProperty.ReferencedElements
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
  name: ClassInstance
  nameWithType: CompositionMoveIntoProperty.ClassInstance
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanging
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanging
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: NewValueChanging
  nameWithType: ICompositionMoveIntoProperty.NewValueChanging
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanging
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanged
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanged
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: NewValueChanged
  nameWithType: ICompositionMoveIntoProperty.NewValueChanged
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.NewValueChanged
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanging
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanging
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: OldValueChanging
  nameWithType: ICompositionMoveIntoProperty.OldValueChanging
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanging
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanged
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanged
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: OldValueChanged
  nameWithType: ICompositionMoveIntoProperty.OldValueChanged
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.OldValueChanged
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanging
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanging
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: OriginChanging
  nameWithType: ICompositionMoveIntoProperty.OriginChanging
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanging
- uid: NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanged
  commentId: E:NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanged
  parent: NMF.Models.Changes.ICompositionMoveIntoProperty
  name: OriginChanged
  nameWithType: ICompositionMoveIntoProperty.OriginChanged
  fullName: NMF.Models.Changes.ICompositionMoveIntoProperty.OriginChanged
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging
  name: OnNewValueChanging
  nameWithType: CompositionMoveIntoProperty.OnNewValueChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanging
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged
  name: OnNewValueChanged
  nameWithType: CompositionMoveIntoProperty.OnNewValueChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnNewValueChanged
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging
  name: OnOldValueChanging
  nameWithType: CompositionMoveIntoProperty.OnOldValueChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanging
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged
  name: OnOldValueChanged
  nameWithType: CompositionMoveIntoProperty.OnOldValueChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOldValueChanged
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging
  name: OnOriginChanging
  nameWithType: CompositionMoveIntoProperty.OnOriginChanging
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanging
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged
  name: OnOriginChanged
  nameWithType: CompositionMoveIntoProperty.OnOriginChanged
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.OnOriginChanged
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild
  name: GetRelativePathForNonIdentifiedChild
  nameWithType: CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetRelativePathForNonIdentifiedChild
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Changes.ElementaryChange
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: ElementaryChange.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ElementaryChange.GetModelElementForReference
    fullName: NMF.Models.Changes.ElementaryChange.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ElementaryChange.GetModelElementForReference
    fullName: NMF.Models.Changes.ElementaryChange.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: CompositionMoveIntoProperty.GetModelElementForReference
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetModelElementForReference
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Models.Changes.ElementaryChange.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Changes.ElementaryChange.SetFeature(System.String,System.Object)
  parent: NMF.Models.Changes.ElementaryChange
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: ElementaryChange.SetFeature(String, Object)
  fullName: NMF.Models.Changes.ElementaryChange.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ElementaryChange.SetFeature
    fullName: NMF.Models.Changes.ElementaryChange.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ElementaryChange.SetFeature
    fullName: NMF.Models.Changes.ElementaryChange.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature
  name: SetFeature
  nameWithType: CompositionMoveIntoProperty.SetFeature
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.SetFeature
- uid: NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
  parent: NMF.Models.Changes.ElementaryChange
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: ElementaryChange.GetExpressionForReference(String)
  fullName: NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ElementaryChange.GetExpressionForReference
    fullName: NMF.Models.Changes.ElementaryChange.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ElementaryChange.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ElementaryChange.GetExpressionForReference
    fullName: NMF.Models.Changes.ElementaryChange.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference
  name: GetExpressionForReference
  nameWithType: CompositionMoveIntoProperty.GetExpressionForReference
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetExpressionForReference
- uid: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<IModelElement>
  nameWithType: INotifyExpression<IModelElement>
  fullName: NMF.Expressions.INotifyExpression<NMF.Models.IModelElement>
  nameWithType.vb: INotifyExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.INotifyExpression(Of NMF.Models.IModelElement)
  name.vb: INotifyExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotifyExpression`1
  commentId: T:NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    nameWithType: INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionChange.GetClass
  commentId: M:NMF.Models.Changes.CompositionChange.GetClass
  parent: NMF.Models.Changes.CompositionChange
  name: GetClass()
  nameWithType: CompositionChange.GetClass()
  fullName: NMF.Models.Changes.CompositionChange.GetClass()
  spec.csharp:
  - uid: NMF.Models.Changes.CompositionChange.GetClass
    name: GetClass
    nameWithType: CompositionChange.GetClass
    fullName: NMF.Models.Changes.CompositionChange.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.CompositionChange.GetClass
    name: GetClass
    nameWithType: CompositionChange.GetClass
    fullName: NMF.Models.Changes.CompositionChange.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.GetClass*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.GetClass
  name: GetClass
  nameWithType: CompositionMoveIntoProperty.GetClass
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.ModelChange.Invert
  commentId: M:NMF.Models.Changes.ModelChange.Invert
  parent: NMF.Models.Changes.ModelChange
  name: Invert()
  nameWithType: ModelChange.Invert()
  fullName: NMF.Models.Changes.ModelChange.Invert()
  spec.csharp:
  - uid: NMF.Models.Changes.ModelChange.Invert
    name: Invert
    nameWithType: ModelChange.Invert
    fullName: NMF.Models.Changes.ModelChange.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.ModelChange.Invert
    name: Invert
    nameWithType: ModelChange.Invert
    fullName: NMF.Models.Changes.ModelChange.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Changes.CompositionMoveIntoProperty.Invert*
  commentId: Overload:NMF.Models.Changes.CompositionMoveIntoProperty.Invert
  name: Invert
  nameWithType: CompositionMoveIntoProperty.Invert
  fullName: NMF.Models.Changes.CompositionMoveIntoProperty.Invert
- uid: NMF.Models.Changes.IModelChange.Invert
  commentId: M:NMF.Models.Changes.IModelChange.Invert
  parent: NMF.Models.Changes.IModelChange
  name: Invert()
  nameWithType: IModelChange.Invert()
  fullName: NMF.Models.Changes.IModelChange.Invert()
  spec.csharp:
  - uid: NMF.Models.Changes.IModelChange.Invert
    name: Invert
    nameWithType: IModelChange.Invert
    fullName: NMF.Models.Changes.IModelChange.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Changes.IModelChange.Invert
    name: Invert
    nameWithType: IModelChange.Invert
    fullName: NMF.Models.Changes.IModelChange.Invert
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Models.Changes.IModelChange}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Models.Changes.IModelChange}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IModelChange>
  nameWithType: IEnumerable<IModelChange>
  fullName: System.Collections.Generic.IEnumerable<NMF.Models.Changes.IModelChange>
  nameWithType.vb: IEnumerable(Of IModelChange)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Models.Changes.IModelChange)
  name.vb: IEnumerable(Of IModelChange)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Changes.IModelChange
    name: IModelChange
    nameWithType: IModelChange
    fullName: NMF.Models.Changes.IModelChange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Changes.IModelChange
    name: IModelChange
    nameWithType: IModelChange
    fullName: NMF.Models.Changes.IModelChange
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
