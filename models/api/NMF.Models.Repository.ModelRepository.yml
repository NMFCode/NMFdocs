### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.ModelRepository
  commentId: T:NMF.Models.Repository.ModelRepository
  id: ModelRepository
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.ModelRepository.#ctor
  - NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository)
  - NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository,NMF.Models.Repository.IModelSerializer,NMF.Models.Repository.IModelLocator[])
  - NMF.Models.Repository.ModelRepository.BubbledChange
  - NMF.Models.Repository.ModelRepository.Locators
  - NMF.Models.Repository.ModelRepository.Models
  - NMF.Models.Repository.ModelRepository.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement(NMF.Models.Repository.UnresolvedModelElementEventArgs)
  - NMF.Models.Repository.ModelRepository.Parent
  - NMF.Models.Repository.ModelRepository.Resolve(System.String)
  - NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.Boolean)
  - NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.String,System.Boolean)
  - NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  - NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String)
  - NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String,System.Uri)
  - NMF.Models.Repository.ModelRepository.Serializer
  - NMF.Models.Repository.ModelRepository.UnresolvedModelElement
  langs:
  - csharp
  - vb
  name: ModelRepository
  nameWithType: ModelRepository
  fullName: NMF.Models.Repository.ModelRepository
  type: Class
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ModelRepository
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 13
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Represents a standard model repository
  example: []
  syntax:
    content: 'public class ModelRepository : IModelRepository'
    content.vb: Public Class ModelRepository Implements IModelRepository
  inheritance:
  - System.Object
  implements:
  - NMF.Models.Repository.IModelRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.Repository.ModelRepository.Parent
  commentId: P:NMF.Models.Repository.ModelRepository.Parent
  id: Parent
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ModelRepository.Parent
  fullName: NMF.Models.Repository.ModelRepository.Parent
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Parent
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 21
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets the parent model repository.
  example: []
  syntax:
    content: public IModelRepository Parent { get; }
    parameters: []
    return:
      type: NMF.Models.Repository.IModelRepository
    content.vb: Public Property Parent As IModelRepository
  overload: NMF.Models.Repository.ModelRepository.Parent*
- uid: NMF.Models.Repository.ModelRepository.Serializer
  commentId: P:NMF.Models.Repository.ModelRepository.Serializer
  id: Serializer
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: ModelRepository.Serializer
  fullName: NMF.Models.Repository.ModelRepository.Serializer
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Serializer
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets or sets the serializer that is used for the deserialization of the models
  example: []
  syntax:
    content: public IModelSerializer Serializer { get; set; }
    parameters: []
    return:
      type: NMF.Models.Repository.IModelSerializer
    content.vb: Public Property Serializer As IModelSerializer
  overload: NMF.Models.Repository.ModelRepository.Serializer*
- uid: NMF.Models.Repository.ModelRepository.Locators
  commentId: P:NMF.Models.Repository.ModelRepository.Locators
  id: Locators
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Locators
  nameWithType: ModelRepository.Locators
  fullName: NMF.Models.Repository.ModelRepository.Locators
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Locators
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 31
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets a collection of model locators
  example: []
  syntax:
    content: public ICollection<IModelLocator> Locators { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{NMF.Models.Repository.IModelLocator}
    content.vb: Public Property Locators As ICollection(Of IModelLocator)
  overload: NMF.Models.Repository.ModelRepository.Locators*
- uid: NMF.Models.Repository.ModelRepository.#ctor
  commentId: M:NMF.Models.Repository.ModelRepository.#ctor
  id: '#ctor'
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: ModelRepository()
  nameWithType: ModelRepository.ModelRepository()
  fullName: NMF.Models.Repository.ModelRepository.ModelRepository()
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 36
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Creates a new model repository with the meta repository as parent
  example: []
  syntax:
    content: public ModelRepository()
    content.vb: Public Sub New()
  overload: NMF.Models.Repository.ModelRepository.#ctor*
  nameWithType.vb: ModelRepository.New()
  fullName.vb: NMF.Models.Repository.ModelRepository.New()
  name.vb: New()
- uid: NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository)
  commentId: M:NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository)
  id: '#ctor(NMF.Models.Repository.IModelRepository)'
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: ModelRepository(IModelRepository)
  nameWithType: ModelRepository.ModelRepository(IModelRepository)
  fullName: NMF.Models.Repository.ModelRepository.ModelRepository(NMF.Models.Repository.IModelRepository)
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 43
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Creates a new model repository with a given parent
  remarks: If no parent repository is provided, the meta repository is used as parent repository
  example: []
  syntax:
    content: public ModelRepository(IModelRepository parent)
    parameters:
    - id: parent
      type: NMF.Models.Repository.IModelRepository
      description: The parent repository
    content.vb: Public Sub New(parent As IModelRepository)
  overload: NMF.Models.Repository.ModelRepository.#ctor*
  nameWithType.vb: ModelRepository.New(IModelRepository)
  fullName.vb: NMF.Models.Repository.ModelRepository.New(NMF.Models.Repository.IModelRepository)
  name.vb: New(IModelRepository)
- uid: NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository,NMF.Models.Repository.IModelSerializer,NMF.Models.Repository.IModelLocator[])
  commentId: M:NMF.Models.Repository.ModelRepository.#ctor(NMF.Models.Repository.IModelRepository,NMF.Models.Repository.IModelSerializer,NMF.Models.Repository.IModelLocator[])
  id: '#ctor(NMF.Models.Repository.IModelRepository,NMF.Models.Repository.IModelSerializer,NMF.Models.Repository.IModelLocator[])'
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: ModelRepository(IModelRepository, IModelSerializer, params IModelLocator[])
  nameWithType: ModelRepository.ModelRepository(IModelRepository, IModelSerializer, params IModelLocator[])
  fullName: NMF.Models.Repository.ModelRepository.ModelRepository(NMF.Models.Repository.IModelRepository, NMF.Models.Repository.IModelSerializer, params NMF.Models.Repository.IModelLocator[])
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 52
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Creates a new model repository with a given parent
  remarks: If no parent repository is provided, the meta repository is used as parent repository
  example: []
  syntax:
    content: public ModelRepository(IModelRepository parent, IModelSerializer serializer, params IModelLocator[] locators)
    parameters:
    - id: parent
      type: NMF.Models.Repository.IModelRepository
      description: The parent repository
    - id: serializer
      type: NMF.Models.Repository.IModelSerializer
      description: A serializer object or null to use the default
    - id: locators
      type: NMF.Models.Repository.IModelLocator[]
      description: A set of model locators
    content.vb: Public Sub New(parent As IModelRepository, serializer As IModelSerializer, ParamArray locators As IModelLocator())
  overload: NMF.Models.Repository.ModelRepository.#ctor*
  nameWithType.vb: ModelRepository.New(IModelRepository, IModelSerializer, ParamArray IModelLocator())
  fullName.vb: NMF.Models.Repository.ModelRepository.New(NMF.Models.Repository.IModelRepository, NMF.Models.Repository.IModelSerializer, ParamArray NMF.Models.Repository.IModelLocator())
  name.vb: New(IModelRepository, IModelSerializer, ParamArray IModelLocator())
- uid: NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.Boolean)
  commentId: M:NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.Boolean)
  id: Resolve(System.Uri,System.Boolean)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Resolve(Uri, bool)
  nameWithType: ModelRepository.Resolve(Uri, bool)
  fullName: NMF.Models.Repository.ModelRepository.Resolve(System.Uri, bool)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Resolve
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 73
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Resolves the given Uri and returns the model element
  example: []
  syntax:
    content: public IModelElement Resolve(Uri uri, bool loadOnDemand = true)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri where to look for the model element
    - id: loadOnDemand
      type: System.Boolean
      description: >-
        A boolean flag indicating whether the uri should be attempted
            to load, if the model is not already registered with the repository
    return:
      type: NMF.Models.IModelElement
      description: A model element at the given Uri or null if none can be found
    content.vb: Public Function Resolve(uri As Uri, loadOnDemand As Boolean = True) As IModelElement
  overload: NMF.Models.Repository.ModelRepository.Resolve*
  implements:
  - NMF.Models.Repository.IModelRepository.Resolve(System.Uri,System.Boolean)
  nameWithType.vb: ModelRepository.Resolve(Uri, Boolean)
  fullName.vb: NMF.Models.Repository.ModelRepository.Resolve(System.Uri, Boolean)
  name.vb: Resolve(Uri, Boolean)
- uid: NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.String,System.Boolean)
  commentId: M:NMF.Models.Repository.ModelRepository.Resolve(System.Uri,System.String,System.Boolean)
  id: Resolve(System.Uri,System.String,System.Boolean)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Resolve(Uri, string, bool)
  nameWithType: ModelRepository.Resolve(Uri, string, bool)
  fullName: NMF.Models.Repository.ModelRepository.Resolve(System.Uri, string, bool)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Resolve
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 86
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Resolves the given Uri and returns the model element
  example: []
  syntax:
    content: public IModelElement Resolve(Uri uri, string hintPath, bool loadOnDemand = true)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri where to look for the model element
    - id: hintPath
      type: System.String
      description: The path where the model can be found
    - id: loadOnDemand
      type: System.Boolean
      description: >-
        A boolean flag indicating whether the uri should be attempted
            to load, if the model is not already registered with the repository
    return:
      type: NMF.Models.IModelElement
      description: A model element at the given Uri or null if none can be found
    content.vb: Public Function Resolve(uri As Uri, hintPath As String, loadOnDemand As Boolean = True) As IModelElement
  overload: NMF.Models.Repository.ModelRepository.Resolve*
  nameWithType.vb: ModelRepository.Resolve(Uri, String, Boolean)
  fullName.vb: NMF.Models.Repository.ModelRepository.Resolve(System.Uri, String, Boolean)
  name.vb: Resolve(Uri, String, Boolean)
- uid: NMF.Models.Repository.ModelRepository.Resolve(System.String)
  commentId: M:NMF.Models.Repository.ModelRepository.Resolve(System.String)
  id: Resolve(System.String)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Resolve(string)
  nameWithType: ModelRepository.Resolve(string)
  fullName: NMF.Models.Repository.ModelRepository.Resolve(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Resolve
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 168
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Resolves the given file path for a model element
  example: []
  syntax:
    content: public Model Resolve(string path)
    parameters:
    - id: path
      type: System.String
      description: The file path where to look for models
    return:
      type: NMF.Models.Model
      description: The model at this file path or null if the file cannot be found
    content.vb: Public Function Resolve(path As String) As Model
  overload: NMF.Models.Repository.ModelRepository.Resolve*
  nameWithType.vb: ModelRepository.Resolve(String)
  fullName.vb: NMF.Models.Repository.ModelRepository.Resolve(String)
  name.vb: Resolve(String)
- uid: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String)
  commentId: M:NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String)
  id: Save(NMF.Models.IModelElement,System.String)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Save(IModelElement, string)
  nameWithType: ModelRepository.Save(IModelElement, string)
  fullName: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement, string)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Save
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 204
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Saves the given model element to the specified stream
  example: []
  syntax:
    content: public void Save(IModelElement element, string path)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The model element
    - id: path
      type: System.String
      description: The path where to save the model element
    content.vb: Public Sub Save(element As IModelElement, path As String)
  overload: NMF.Models.Repository.ModelRepository.Save*
  nameWithType.vb: ModelRepository.Save(IModelElement, String)
  fullName.vb: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement, String)
  name.vb: Save(IModelElement, String)
- uid: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String,System.Uri)
  commentId: M:NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.String,System.Uri)
  id: Save(NMF.Models.IModelElement,System.String,System.Uri)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Save(IModelElement, string, Uri)
  nameWithType: ModelRepository.Save(IModelElement, string, Uri)
  fullName: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement, string, System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Save
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 226
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Saves the given model element to the specified stream
  example: []
  syntax:
    content: public void Save(IModelElement element, string path, Uri uri)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The model element
    - id: path
      type: System.String
      description: The path where to save the model element
    - id: uri
      type: System.Uri
      description: The uri under which the model element can be retrieved
    content.vb: Public Sub Save(element As IModelElement, path As String, uri As Uri)
  overload: NMF.Models.Repository.ModelRepository.Save*
  nameWithType.vb: ModelRepository.Save(IModelElement, String, Uri)
  fullName.vb: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement, String, System.Uri)
  name.vb: Save(IModelElement, String, Uri)
- uid: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  commentId: M:NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  id: Save(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Save(IModelElement, Stream, Uri)
  nameWithType: ModelRepository.Save(IModelElement, Stream, Uri)
  fullName: NMF.Models.Repository.ModelRepository.Save(NMF.Models.IModelElement, System.IO.Stream, System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Save
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 248
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Saves the given model element to the specified stream
  example: []
  syntax:
    content: public void Save(IModelElement element, Stream stream, Uri uri)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
      description: The model element
    - id: stream
      type: System.IO.Stream
      description: The stream to save the model element to
    - id: uri
      type: System.Uri
      description: The uri under which the model element shall be retrievable
    content.vb: Public Sub Save(element As IModelElement, stream As Stream, uri As Uri)
  overload: NMF.Models.Repository.ModelRepository.Save*
- uid: NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement(NMF.Models.Repository.UnresolvedModelElementEventArgs)
  commentId: M:NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement(NMF.Models.Repository.UnresolvedModelElementEventArgs)
  id: OnUnresolvedModelElement(NMF.Models.Repository.UnresolvedModelElementEventArgs)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: OnUnresolvedModelElement(UnresolvedModelElementEventArgs)
  nameWithType: ModelRepository.OnUnresolvedModelElement(UnresolvedModelElementEventArgs)
  fullName: NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement(NMF.Models.Repository.UnresolvedModelElementEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnUnresolvedModelElement
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 268
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets called when a Uri cannot be resolved
  example: []
  syntax:
    content: protected virtual void OnUnresolvedModelElement(UnresolvedModelElementEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.Repository.UnresolvedModelElementEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnUnresolvedModelElement(e As UnresolvedModelElementEventArgs)
  overload: NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement*
- uid: NMF.Models.Repository.ModelRepository.UnresolvedModelElement
  commentId: E:NMF.Models.Repository.ModelRepository.UnresolvedModelElement
  id: UnresolvedModelElement
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: UnresolvedModelElement
  nameWithType: ModelRepository.UnresolvedModelElement
  fullName: NMF.Models.Repository.ModelRepository.UnresolvedModelElement
  type: Event
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: UnresolvedModelElement
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 276
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets fired when a Uri cannot be resolved
  example: []
  syntax:
    content: public event EventHandler<UnresolvedModelElementEventArgs> UnresolvedModelElement
    return:
      type: System.EventHandler{NMF.Models.Repository.UnresolvedModelElementEventArgs}
    content.vb: Public Event UnresolvedModelElement As EventHandler(Of UnresolvedModelElementEventArgs)
- uid: NMF.Models.Repository.ModelRepository.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.Repository.ModelRepository.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  id: OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelRepository.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.Repository.ModelRepository.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnBubbledChange
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 278
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: protected virtual void OnBubbledChange(BubbledChangeEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.BubbledChangeEventArgs
    content.vb: Protected Overridable Sub OnBubbledChange(e As BubbledChangeEventArgs)
  overload: NMF.Models.Repository.ModelRepository.OnBubbledChange*
- uid: NMF.Models.Repository.ModelRepository.BubbledChange
  commentId: E:NMF.Models.Repository.ModelRepository.BubbledChange
  id: BubbledChange
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: BubbledChange
  nameWithType: ModelRepository.BubbledChange
  fullName: NMF.Models.Repository.ModelRepository.BubbledChange
  type: Event
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: BubbledChange
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 283
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public event EventHandler<BubbledChangeEventArgs> BubbledChange
    return:
      type: System.EventHandler{NMF.Models.BubbledChangeEventArgs}
    content.vb: Public Event BubbledChange As EventHandler(Of BubbledChangeEventArgs)
  implements:
  - NMF.Models.Repository.IModelRepository.BubbledChange
- uid: NMF.Models.Repository.ModelRepository.Models
  commentId: P:NMF.Models.Repository.ModelRepository.Models
  id: Models
  parent: NMF.Models.Repository.ModelRepository
  langs:
  - csharp
  - vb
  name: Models
  nameWithType: ModelRepository.Models
  fullName: NMF.Models.Repository.ModelRepository.Models
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelRepository.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Models
    path: src/Models/Models/Repository/ModelRepository.cs
    startLine: 308
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets a dictionary of the models loaded to this repository
  example: []
  syntax:
    content: public ModelCollection Models { get; }
    parameters: []
    return:
      type: NMF.Models.Repository.ModelCollection
    content.vb: Public ReadOnly Property Models As ModelCollection
  overload: NMF.Models.Repository.ModelRepository.Models*
  implements:
  - NMF.Models.Repository.IModelRepository.Models
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  href: NMF.html
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Models.Repository.IModelRepository
  commentId: T:NMF.Models.Repository.IModelRepository
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.IModelRepository.html
  name: IModelRepository
  nameWithType: IModelRepository
  fullName: NMF.Models.Repository.IModelRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Repository.ModelRepository.Parent*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Parent
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Parent
  name: Parent
  nameWithType: ModelRepository.Parent
  fullName: NMF.Models.Repository.ModelRepository.Parent
- uid: NMF.Models.Repository.ModelRepository.Serializer*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Serializer
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Serializer
  name: Serializer
  nameWithType: ModelRepository.Serializer
  fullName: NMF.Models.Repository.ModelRepository.Serializer
- uid: NMF.Models.Repository.IModelSerializer
  commentId: T:NMF.Models.Repository.IModelSerializer
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.IModelSerializer.html
  name: IModelSerializer
  nameWithType: IModelSerializer
  fullName: NMF.Models.Repository.IModelSerializer
- uid: NMF.Models.Repository.ModelRepository.Locators*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Locators
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Locators
  name: Locators
  nameWithType: ModelRepository.Locators
  fullName: NMF.Models.Repository.ModelRepository.Locators
- uid: System.Collections.Generic.ICollection{NMF.Models.Repository.IModelLocator}
  commentId: T:System.Collections.Generic.ICollection{NMF.Models.Repository.IModelLocator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IModelLocator>
  nameWithType: ICollection<IModelLocator>
  fullName: System.Collections.Generic.ICollection<NMF.Models.Repository.IModelLocator>
  nameWithType.vb: ICollection(Of IModelLocator)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Models.Repository.IModelLocator)
  name.vb: ICollection(Of IModelLocator)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: NMF.Models.Repository.IModelLocator
    name: IModelLocator
    href: NMF.Models.Repository.IModelLocator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Repository.IModelLocator
    name: IModelLocator
    href: NMF.Models.Repository.IModelLocator.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Models.Repository.ModelRepository.#ctor*
  commentId: Overload:NMF.Models.Repository.ModelRepository.#ctor
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository__ctor
  name: ModelRepository
  nameWithType: ModelRepository.ModelRepository
  fullName: NMF.Models.Repository.ModelRepository.ModelRepository
  nameWithType.vb: ModelRepository.New
  fullName.vb: NMF.Models.Repository.ModelRepository.New
  name.vb: New
- uid: NMF.Models.Repository.IModelLocator[]
  isExternal: true
  href: NMF.Models.Repository.IModelLocator.html
  name: IModelLocator[]
  nameWithType: IModelLocator[]
  fullName: NMF.Models.Repository.IModelLocator[]
  nameWithType.vb: IModelLocator()
  fullName.vb: NMF.Models.Repository.IModelLocator()
  name.vb: IModelLocator()
  spec.csharp:
  - uid: NMF.Models.Repository.IModelLocator
    name: IModelLocator
    href: NMF.Models.Repository.IModelLocator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: NMF.Models.Repository.IModelLocator
    name: IModelLocator
    href: NMF.Models.Repository.IModelLocator.html
  - name: (
  - name: )
- uid: NMF.Models.Repository.ModelRepository.Resolve*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Resolve
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Resolve_System_Uri_System_Boolean_
  name: Resolve
  nameWithType: ModelRepository.Resolve
  fullName: NMF.Models.Repository.ModelRepository.Resolve
- uid: NMF.Models.Repository.IModelRepository.Resolve(System.Uri,System.Boolean)
  commentId: M:NMF.Models.Repository.IModelRepository.Resolve(System.Uri,System.Boolean)
  parent: NMF.Models.Repository.IModelRepository
  isExternal: true
  href: NMF.Models.Repository.IModelRepository.html#NMF_Models_Repository_IModelRepository_Resolve_System_Uri_System_Boolean_
  name: Resolve(Uri, bool)
  nameWithType: IModelRepository.Resolve(Uri, bool)
  fullName: NMF.Models.Repository.IModelRepository.Resolve(System.Uri, bool)
  nameWithType.vb: IModelRepository.Resolve(Uri, Boolean)
  fullName.vb: NMF.Models.Repository.IModelRepository.Resolve(System.Uri, Boolean)
  name.vb: Resolve(Uri, Boolean)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelRepository.Resolve(System.Uri,System.Boolean)
    name: Resolve
    href: NMF.Models.Repository.IModelRepository.html#NMF_Models_Repository_IModelRepository_Resolve_System_Uri_System_Boolean_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelRepository.Resolve(System.Uri,System.Boolean)
    name: Resolve
    href: NMF.Models.Repository.IModelRepository.html#NMF_Models_Repository_IModelRepository_Resolve_System_Uri_System_Boolean_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  href: NMF.Models.IModelElement.html
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  parent: NMF.Models
  href: NMF.Models.Model.html
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
- uid: NMF.Models.Repository.ModelRepository.Save*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Save
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Save_NMF_Models_IModelElement_System_String_
  name: Save
  nameWithType: ModelRepository.Save
  fullName: NMF.Models.Repository.ModelRepository.Save
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement*
  commentId: Overload:NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_OnUnresolvedModelElement_NMF_Models_Repository_UnresolvedModelElementEventArgs_
  name: OnUnresolvedModelElement
  nameWithType: ModelRepository.OnUnresolvedModelElement
  fullName: NMF.Models.Repository.ModelRepository.OnUnresolvedModelElement
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs
  commentId: T:NMF.Models.Repository.UnresolvedModelElementEventArgs
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html
  name: UnresolvedModelElementEventArgs
  nameWithType: UnresolvedModelElementEventArgs
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs
- uid: System.EventHandler{NMF.Models.Repository.UnresolvedModelElementEventArgs}
  commentId: T:System.EventHandler{NMF.Models.Repository.UnresolvedModelElementEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UnresolvedModelElementEventArgs>
  nameWithType: EventHandler<UnresolvedModelElementEventArgs>
  fullName: System.EventHandler<NMF.Models.Repository.UnresolvedModelElementEventArgs>
  nameWithType.vb: EventHandler(Of UnresolvedModelElementEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Models.Repository.UnresolvedModelElementEventArgs)
  name.vb: EventHandler(Of UnresolvedModelElementEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Models.Repository.UnresolvedModelElementEventArgs
    name: UnresolvedModelElementEventArgs
    href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Repository.UnresolvedModelElementEventArgs
    name: UnresolvedModelElementEventArgs
    href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NMF.Models.Repository.ModelRepository.OnBubbledChange*
  commentId: Overload:NMF.Models.Repository.ModelRepository.OnBubbledChange
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_OnBubbledChange_NMF_Models_BubbledChangeEventArgs_
  name: OnBubbledChange
  nameWithType: ModelRepository.OnBubbledChange
  fullName: NMF.Models.Repository.ModelRepository.OnBubbledChange
- uid: NMF.Models.BubbledChangeEventArgs
  commentId: T:NMF.Models.BubbledChangeEventArgs
  parent: NMF.Models
  href: NMF.Models.BubbledChangeEventArgs.html
  name: BubbledChangeEventArgs
  nameWithType: BubbledChangeEventArgs
  fullName: NMF.Models.BubbledChangeEventArgs
- uid: NMF.Models.Repository.IModelRepository.BubbledChange
  commentId: E:NMF.Models.Repository.IModelRepository.BubbledChange
  parent: NMF.Models.Repository.IModelRepository
  href: NMF.Models.Repository.IModelRepository.html#NMF_Models_Repository_IModelRepository_BubbledChange
  name: BubbledChange
  nameWithType: IModelRepository.BubbledChange
  fullName: NMF.Models.Repository.IModelRepository.BubbledChange
- uid: System.EventHandler{NMF.Models.BubbledChangeEventArgs}
  commentId: T:System.EventHandler{NMF.Models.BubbledChangeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<BubbledChangeEventArgs>
  nameWithType: EventHandler<BubbledChangeEventArgs>
  fullName: System.EventHandler<NMF.Models.BubbledChangeEventArgs>
  nameWithType.vb: EventHandler(Of BubbledChangeEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Models.BubbledChangeEventArgs)
  name.vb: EventHandler(Of BubbledChangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    href: NMF.Models.BubbledChangeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    href: NMF.Models.BubbledChangeEventArgs.html
  - name: )
- uid: NMF.Models.Repository.ModelRepository.Models*
  commentId: Overload:NMF.Models.Repository.ModelRepository.Models
  href: NMF.Models.Repository.ModelRepository.html#NMF_Models_Repository_ModelRepository_Models
  name: Models
  nameWithType: ModelRepository.Models
  fullName: NMF.Models.Repository.ModelRepository.Models
- uid: NMF.Models.Repository.IModelRepository.Models
  commentId: P:NMF.Models.Repository.IModelRepository.Models
  parent: NMF.Models.Repository.IModelRepository
  href: NMF.Models.Repository.IModelRepository.html#NMF_Models_Repository_IModelRepository_Models
  name: Models
  nameWithType: IModelRepository.Models
  fullName: NMF.Models.Repository.IModelRepository.Models
- uid: NMF.Models.Repository.ModelCollection
  commentId: T:NMF.Models.Repository.ModelCollection
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.ModelCollection.html
  name: ModelCollection
  nameWithType: ModelCollection
  fullName: NMF.Models.Repository.ModelCollection
