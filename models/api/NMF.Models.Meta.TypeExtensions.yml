### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.TypeExtensions
  commentId: T:NMF.Models.Meta.TypeExtensions
  id: TypeExtensions
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  - NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  langs:
  - csharp
  - vb
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: NMF.Models.Meta.TypeExtensions
  type: Class
  source:
    remote:
      path: Models/Models/Meta/TypeExtensions.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TypeExtensions
    path: src/Models/Models/Meta/TypeExtensions.cs
    startLine: 9
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public static class TypeExtensions
    content.vb: Public Module TypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  commentId: M:NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType,System.String)
  id: Parse(NMF.Models.Meta.IType,System.String)
  isExtensionMethod: true
  parent: NMF.Models.Meta.TypeExtensions
  langs:
  - csharp
  - vb
  name: Parse(IType, String)
  nameWithType: TypeExtensions.Parse(IType, String)
  fullName: NMF.Models.Meta.TypeExtensions.Parse(NMF.Models.Meta.IType, System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/TypeExtensions.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Parse
    path: src/Models/Models/Meta/TypeExtensions.cs
    startLine: 11
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public static object Parse(this IType type, string input)
    parameters:
    - id: type
      type: NMF.Models.Meta.IType
    - id: input
      type: System.String
    return:
      type: System.Object
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Parse(type As IType, input As String) As Object
  overload: NMF.Models.Meta.TypeExtensions.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  commentId: M:NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType,System.Object)
  id: Serialize(NMF.Models.Meta.IType,System.Object)
  isExtensionMethod: true
  parent: NMF.Models.Meta.TypeExtensions
  langs:
  - csharp
  - vb
  name: Serialize(IType, Object)
  nameWithType: TypeExtensions.Serialize(IType, Object)
  fullName: NMF.Models.Meta.TypeExtensions.Serialize(NMF.Models.Meta.IType, System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/TypeExtensions.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Models/Meta/TypeExtensions.cs
    startLine: 29
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public static string Serialize(this IType type, object value)
    parameters:
    - id: type
      type: NMF.Models.Meta.IType
    - id: value
      type: System.Object
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Serialize(type As IType, value As Object) As String
  overload: NMF.Models.Meta.TypeExtensions.Serialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Meta.TypeExtensions.Parse*
  commentId: Overload:NMF.Models.Meta.TypeExtensions.Parse
  name: Parse
  nameWithType: TypeExtensions.Parse
  fullName: NMF.Models.Meta.TypeExtensions.Parse
- uid: NMF.Models.Meta.IType
  commentId: T:NMF.Models.Meta.IType
  parent: NMF.Models.Meta
  name: IType
  nameWithType: IType
  fullName: NMF.Models.Meta.IType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Models.Meta.TypeExtensions.Serialize*
  commentId: Overload:NMF.Models.Meta.TypeExtensions.Serialize
  name: Serialize
  nameWithType: TypeExtensions.Serialize
  fullName: NMF.Models.Meta.TypeExtensions.Serialize
