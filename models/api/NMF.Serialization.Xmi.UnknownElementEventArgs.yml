### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs
  commentId: T:NMF.Serialization.Xmi.UnknownElementEventArgs
  id: UnknownElementEventArgs
  parent: NMF.Serialization.Xmi
  children:
  - NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor(System.Object,System.String)
  - NMF.Serialization.Xmi.UnknownElementEventArgs.Context
  - NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
  langs:
  - csharp
  - vb
  name: UnknownElementEventArgs
  nameWithType: UnknownElementEventArgs
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs
  type: Class
  source:
    remote:
      path: Models/Serialization/XMI/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownElementEventArgs
    path: src/Models/Serialization/XMI/UnknownElementEventArgs.cs
    startLine: 7
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: 'public class UnknownElementEventArgs : EventArgs'
    content.vb: >-
      Public Class UnknownElementEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor(System.Object,System.String)
  commentId: M:NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor(System.Object,System.String)
  id: '#ctor(System.Object,System.String)'
  parent: NMF.Serialization.Xmi.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: UnknownElementEventArgs(Object, String)
  nameWithType: UnknownElementEventArgs.UnknownElementEventArgs(Object, String)
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.UnknownElementEventArgs(System.Object, System.String)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/UnknownElementEventArgs.cs
    startLine: 9
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public UnknownElementEventArgs(object context, string propertyXml)
    parameters:
    - id: context
      type: System.Object
    - id: propertyXml
      type: System.String
    content.vb: Public Sub New(context As Object, propertyXml As String)
  overload: NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.Context
  commentId: P:NMF.Serialization.Xmi.UnknownElementEventArgs.Context
  id: Context
  parent: NMF.Serialization.Xmi.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: UnknownElementEventArgs.Context
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.Context
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Context
    path: src/Models/Serialization/XMI/UnknownElementEventArgs.cs
    startLine: 18
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public object Context { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Context As Object
  overload: NMF.Serialization.Xmi.UnknownElementEventArgs.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
  commentId: P:NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
  id: PropertyXml
  parent: NMF.Serialization.Xmi.UnknownElementEventArgs
  langs:
  - csharp
  - vb
  name: PropertyXml
  nameWithType: UnknownElementEventArgs.PropertyXml
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/UnknownElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyXml
    path: src/Models/Serialization/XMI/UnknownElementEventArgs.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public string PropertyXml { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PropertyXml As String
  overload: NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor*
  commentId: Overload:NMF.Serialization.Xmi.UnknownElementEventArgs.#ctor
  name: UnknownElementEventArgs
  nameWithType: UnknownElementEventArgs.UnknownElementEventArgs
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.UnknownElementEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.Context*
  commentId: Overload:NMF.Serialization.Xmi.UnknownElementEventArgs.Context
  name: Context
  nameWithType: UnknownElementEventArgs.Context
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.Context
- uid: NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml*
  commentId: Overload:NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
  name: PropertyXml
  nameWithType: UnknownElementEventArgs.PropertyXml
  fullName: NMF.Serialization.Xmi.UnknownElementEventArgs.PropertyXml
