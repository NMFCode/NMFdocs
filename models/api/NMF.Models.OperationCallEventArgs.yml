### YamlMime:ManagedReference
items:
- uid: NMF.Models.OperationCallEventArgs
  commentId: T:NMF.Models.OperationCallEventArgs
  id: OperationCallEventArgs
  parent: NMF.Models
  children:
  - NMF.Models.OperationCallEventArgs.#ctor(NMF.Models.IModelElement,NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.OperationCallEventArgs.Arguments
  - NMF.Models.OperationCallEventArgs.Operation
  - NMF.Models.OperationCallEventArgs.Result
  - NMF.Models.OperationCallEventArgs.Target
  langs:
  - csharp
  - vb
  name: OperationCallEventArgs
  nameWithType: OperationCallEventArgs
  fullName: NMF.Models.OperationCallEventArgs
  type: Class
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OperationCallEventArgs
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 7
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: 'public class OperationCallEventArgs : EventArgs'
    content.vb: >-
      Public Class OperationCallEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.OperationCallEventArgs.#ctor(NMF.Models.IModelElement,NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.OperationCallEventArgs.#ctor(NMF.Models.IModelElement,NMF.Models.Meta.IOperation,System.Object[])
  id: '#ctor(NMF.Models.IModelElement,NMF.Models.Meta.IOperation,System.Object[])'
  parent: NMF.Models.OperationCallEventArgs
  langs:
  - csharp
  - vb
  name: OperationCallEventArgs(IModelElement, IOperation, Object[])
  nameWithType: OperationCallEventArgs.OperationCallEventArgs(IModelElement, IOperation, Object[])
  fullName: NMF.Models.OperationCallEventArgs.OperationCallEventArgs(NMF.Models.IModelElement, NMF.Models.Meta.IOperation, System.Object[])
  type: Constructor
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 14
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public OperationCallEventArgs(IModelElement target, IOperation operation, params object[] arguments)
    parameters:
    - id: target
      type: NMF.Models.IModelElement
    - id: operation
      type: NMF.Models.Meta.IOperation
    - id: arguments
      type: System.Object[]
    content.vb: Public Sub New(target As IModelElement, operation As IOperation, ParamArray arguments As Object())
  overload: NMF.Models.OperationCallEventArgs.#ctor*
  nameWithType.vb: OperationCallEventArgs.OperationCallEventArgs(IModelElement, IOperation, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Models.OperationCallEventArgs.OperationCallEventArgs(NMF.Models.IModelElement, NMF.Models.Meta.IOperation, System.Object())
  name.vb: OperationCallEventArgs(IModelElement, IOperation, Object())
- uid: NMF.Models.OperationCallEventArgs.Operation
  commentId: P:NMF.Models.OperationCallEventArgs.Operation
  id: Operation
  parent: NMF.Models.OperationCallEventArgs
  langs:
  - csharp
  - vb
  name: Operation
  nameWithType: OperationCallEventArgs.Operation
  fullName: NMF.Models.OperationCallEventArgs.Operation
  type: Property
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Operation
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 21
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public IOperation Operation { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IOperation
    content.vb: Public ReadOnly Property Operation As IOperation
  overload: NMF.Models.OperationCallEventArgs.Operation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.OperationCallEventArgs.Arguments
  commentId: P:NMF.Models.OperationCallEventArgs.Arguments
  id: Arguments
  parent: NMF.Models.OperationCallEventArgs
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: OperationCallEventArgs.Arguments
  fullName: NMF.Models.OperationCallEventArgs.Arguments
  type: Property
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Arguments
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 29
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public object[] Arguments { get; }
    parameters: []
    return:
      type: System.Object[]
    content.vb: Public ReadOnly Property Arguments As Object()
  overload: NMF.Models.OperationCallEventArgs.Arguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.OperationCallEventArgs.Target
  commentId: P:NMF.Models.OperationCallEventArgs.Target
  id: Target
  parent: NMF.Models.OperationCallEventArgs
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: OperationCallEventArgs.Target
  fullName: NMF.Models.OperationCallEventArgs.Target
  type: Property
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Target
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public IModelElement Target { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property Target As IModelElement
  overload: NMF.Models.OperationCallEventArgs.Target*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.OperationCallEventArgs.Result
  commentId: P:NMF.Models.OperationCallEventArgs.Result
  id: Result
  parent: NMF.Models.OperationCallEventArgs
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: OperationCallEventArgs.Result
  fullName: NMF.Models.OperationCallEventArgs.Result
  type: Property
  source:
    remote:
      path: Models/Models/OperationCallEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Result
    path: src/Models/Models/OperationCallEventArgs.cs
    startLine: 45
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public object Result { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Result As Object
  overload: NMF.Models.OperationCallEventArgs.Result*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.OperationCallEventArgs.#ctor*
  commentId: Overload:NMF.Models.OperationCallEventArgs.#ctor
  name: OperationCallEventArgs
  nameWithType: OperationCallEventArgs.OperationCallEventArgs
  fullName: NMF.Models.OperationCallEventArgs.OperationCallEventArgs
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models.Meta.IOperation
  commentId: T:NMF.Models.Meta.IOperation
  parent: NMF.Models.Meta
  name: IOperation
  nameWithType: IOperation
  fullName: NMF.Models.Meta.IOperation
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: NMF.Models.OperationCallEventArgs.Operation*
  commentId: Overload:NMF.Models.OperationCallEventArgs.Operation
  name: Operation
  nameWithType: OperationCallEventArgs.Operation
  fullName: NMF.Models.OperationCallEventArgs.Operation
- uid: NMF.Models.OperationCallEventArgs.Arguments*
  commentId: Overload:NMF.Models.OperationCallEventArgs.Arguments
  name: Arguments
  nameWithType: OperationCallEventArgs.Arguments
  fullName: NMF.Models.OperationCallEventArgs.Arguments
- uid: NMF.Models.OperationCallEventArgs.Target*
  commentId: Overload:NMF.Models.OperationCallEventArgs.Target
  name: Target
  nameWithType: OperationCallEventArgs.Target
  fullName: NMF.Models.OperationCallEventArgs.Target
- uid: NMF.Models.OperationCallEventArgs.Result*
  commentId: Overload:NMF.Models.OperationCallEventArgs.Result
  name: Result
  nameWithType: OperationCallEventArgs.Result
  fullName: NMF.Models.OperationCallEventArgs.Result
