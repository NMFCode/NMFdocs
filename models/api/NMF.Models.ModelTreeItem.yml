### YamlMime:ManagedReference
items:
- uid: NMF.Models.ModelTreeItem
  commentId: T:NMF.Models.ModelTreeItem
  id: ModelTreeItem
  parent: NMF.Models
  children:
  - NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelTreeItem.Child
  - NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  - NMF.Models.ModelTreeItem.Equals(System.Object)
  - NMF.Models.ModelTreeItem.GetHashCode
  - NMF.Models.ModelTreeItem.Parent
  langs:
  - csharp
  - vb
  name: ModelTreeItem
  nameWithType: ModelTreeItem
  fullName: NMF.Models.ModelTreeItem
  type: Struct
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelTreeItem
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 6
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: 'public struct ModelTreeItem : IEquatable<ModelTreeItem>'
    content.vb: >-
      Public Structure ModelTreeItem
          Implements IEquatable(Of ModelTreeItem)
  implements:
  - System.IEquatable{NMF.Models.ModelTreeItem}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: NMF.Models.ModelTreeItem.Parent
  commentId: P:NMF.Models.ModelTreeItem.Parent
  id: Parent
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ModelTreeItem.Parent
  fullName: NMF.Models.ModelTreeItem.Parent
  type: Property
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Parent
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 8
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public IModelElement Parent { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property Parent As IModelElement
  overload: NMF.Models.ModelTreeItem.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.ModelTreeItem.Child
  commentId: P:NMF.Models.ModelTreeItem.Child
  id: Child
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: ModelTreeItem.Child
  fullName: NMF.Models.ModelTreeItem.Child
  type: Property
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Child
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 9
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public IModelElement Child { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property Child As IModelElement
  overload: NMF.Models.ModelTreeItem.Child*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: '#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)'
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: ModelTreeItem(IModelElement, IModelElement)
  nameWithType: ModelTreeItem.ModelTreeItem(IModelElement, IModelElement)
  fullName: NMF.Models.ModelTreeItem.ModelTreeItem(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Constructor
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 11
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public ModelTreeItem(IModelElement parent, IModelElement child)
    parameters:
    - id: parent
      type: NMF.Models.IModelElement
    - id: child
      type: NMF.Models.IModelElement
    content.vb: Public Sub New(parent As IModelElement, child As IModelElement)
  overload: NMF.Models.ModelTreeItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.ModelTreeItem.Equals(System.Object)
  commentId: M:NMF.Models.ModelTreeItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ModelTreeItem.Equals(Object)
  fullName: NMF.Models.ModelTreeItem.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 17
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NMF.Models.ModelTreeItem.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.ModelTreeItem.GetHashCode
  commentId: M:NMF.Models.ModelTreeItem.GetHashCode
  id: GetHashCode
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ModelTreeItem.GetHashCode()
  fullName: NMF.Models.ModelTreeItem.GetHashCode()
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetHashCode
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: NMF.Models.ModelTreeItem.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  commentId: M:NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  id: Equals(NMF.Models.ModelTreeItem)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Equals(ModelTreeItem)
  nameWithType: ModelTreeItem.Equals(ModelTreeItem)
  fullName: NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 34
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public bool Equals(ModelTreeItem other)
    parameters:
    - id: other
      type: NMF.Models.ModelTreeItem
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ModelTreeItem) As Boolean
  overload: NMF.Models.ModelTreeItem.Equals*
  implements:
  - System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.IEquatable{NMF.Models.ModelTreeItem}
  commentId: T:System.IEquatable{NMF.Models.ModelTreeItem}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ModelTreeItem>
  nameWithType: IEquatable<ModelTreeItem>
  fullName: System.IEquatable<NMF.Models.ModelTreeItem>
  nameWithType.vb: IEquatable(Of ModelTreeItem)
  fullName.vb: System.IEquatable(Of NMF.Models.ModelTreeItem)
  name.vb: IEquatable(Of ModelTreeItem)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    nameWithType: ModelTreeItem
    fullName: NMF.Models.ModelTreeItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    nameWithType: ModelTreeItem
    fullName: NMF.Models.ModelTreeItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelTreeItem.Parent*
  commentId: Overload:NMF.Models.ModelTreeItem.Parent
  name: Parent
  nameWithType: ModelTreeItem.Parent
  fullName: NMF.Models.ModelTreeItem.Parent
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models.ModelTreeItem.Child*
  commentId: Overload:NMF.Models.ModelTreeItem.Child
  name: Child
  nameWithType: ModelTreeItem.Child
  fullName: NMF.Models.ModelTreeItem.Child
- uid: NMF.Models.ModelTreeItem.#ctor*
  commentId: Overload:NMF.Models.ModelTreeItem.#ctor
  name: ModelTreeItem
  nameWithType: ModelTreeItem.ModelTreeItem
  fullName: NMF.Models.ModelTreeItem.ModelTreeItem
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelTreeItem.Equals*
  commentId: Overload:NMF.Models.ModelTreeItem.Equals
  name: Equals
  nameWithType: ModelTreeItem.Equals
  fullName: NMF.Models.ModelTreeItem.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelTreeItem.GetHashCode*
  commentId: Overload:NMF.Models.ModelTreeItem.GetHashCode
  name: GetHashCode
  nameWithType: ModelTreeItem.GetHashCode
  fullName: NMF.Models.ModelTreeItem.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
  commentId: M:System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
  parent: System.IEquatable{NMF.Models.ModelTreeItem}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ModelTreeItem)
  nameWithType: IEquatable<ModelTreeItem>.Equals(ModelTreeItem)
  fullName: System.IEquatable<NMF.Models.ModelTreeItem>.Equals(NMF.Models.ModelTreeItem)
  nameWithType.vb: IEquatable(Of ModelTreeItem).Equals(ModelTreeItem)
  fullName.vb: System.IEquatable(Of NMF.Models.ModelTreeItem).Equals(NMF.Models.ModelTreeItem)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ModelTreeItem>.Equals
    fullName: System.IEquatable<NMF.Models.ModelTreeItem>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    nameWithType: ModelTreeItem
    fullName: NMF.Models.ModelTreeItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ModelTreeItem).Equals
    fullName: System.IEquatable(Of NMF.Models.ModelTreeItem).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    nameWithType: ModelTreeItem
    fullName: NMF.Models.ModelTreeItem
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelTreeItem
  commentId: T:NMF.Models.ModelTreeItem
  parent: NMF.Models
  name: ModelTreeItem
  nameWithType: ModelTreeItem
  fullName: NMF.Models.ModelTreeItem
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
