### YamlMime:ManagedReference
items:
- uid: NMF.Models.ModelTreeItem
  commentId: T:NMF.Models.ModelTreeItem
  id: ModelTreeItem
  parent: NMF.Models
  children:
  - NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelTreeItem.Child
  - NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  - NMF.Models.ModelTreeItem.Equals(System.Object)
  - NMF.Models.ModelTreeItem.GetHashCode
  - NMF.Models.ModelTreeItem.Parent
  - NMF.Models.ModelTreeItem.op_Equality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  - NMF.Models.ModelTreeItem.op_Inequality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  langs:
  - csharp
  - vb
  name: ModelTreeItem
  nameWithType: ModelTreeItem
  fullName: NMF.Models.ModelTreeItem
  type: Struct
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelTreeItem
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 9
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Denotes a pair of a model element and its parent
  example: []
  syntax:
    content: 'public readonly struct ModelTreeItem : IEquatable<ModelTreeItem>'
    content.vb: Public Structure ModelTreeItem Implements IEquatable(Of ModelTreeItem)
  implements:
  - System.IEquatable{NMF.Models.ModelTreeItem}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: NMF.Models.ModelTreeItem.Parent
  commentId: P:NMF.Models.ModelTreeItem.Parent
  id: Parent
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ModelTreeItem.Parent
  fullName: NMF.Models.ModelTreeItem.Parent
  type: Property
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Parent
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 14
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the parent model element
  example: []
  syntax:
    content: public IModelElement Parent { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property Parent As IModelElement
  overload: NMF.Models.ModelTreeItem.Parent*
- uid: NMF.Models.ModelTreeItem.Child
  commentId: P:NMF.Models.ModelTreeItem.Child
  id: Child
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: ModelTreeItem.Child
  fullName: NMF.Models.ModelTreeItem.Child
  type: Property
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Child
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 19
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the child model element
  example: []
  syntax:
    content: public IModelElement Child { get; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public ReadOnly Property Child As IModelElement
  overload: NMF.Models.ModelTreeItem.Child*
- uid: NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelTreeItem.#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: '#ctor(NMF.Models.IModelElement,NMF.Models.IModelElement)'
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: ModelTreeItem(IModelElement, IModelElement)
  nameWithType: ModelTreeItem.ModelTreeItem(IModelElement, IModelElement)
  fullName: NMF.Models.ModelTreeItem.ModelTreeItem(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Constructor
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Creates a new pair
  example: []
  syntax:
    content: public ModelTreeItem(IModelElement parent, IModelElement child)
    parameters:
    - id: parent
      type: NMF.Models.IModelElement
      description: the parent model element
    - id: child
      type: NMF.Models.IModelElement
      description: the child model element
    content.vb: Public Sub New(parent As IModelElement, child As IModelElement)
  overload: NMF.Models.ModelTreeItem.#ctor*
  nameWithType.vb: ModelTreeItem.New(IModelElement, IModelElement)
  fullName.vb: NMF.Models.ModelTreeItem.New(NMF.Models.IModelElement, NMF.Models.IModelElement)
  name.vb: New(IModelElement, IModelElement)
- uid: NMF.Models.ModelTreeItem.Equals(System.Object)
  commentId: M:NMF.Models.ModelTreeItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ModelTreeItem.Equals(object)
  fullName: NMF.Models.ModelTreeItem.Equals(object)
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 33
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NMF.Models.ModelTreeItem.Equals*
  nameWithType.vb: ModelTreeItem.Equals(Object)
  fullName.vb: NMF.Models.ModelTreeItem.Equals(Object)
  name.vb: Equals(Object)
- uid: NMF.Models.ModelTreeItem.GetHashCode
  commentId: M:NMF.Models.ModelTreeItem.GetHashCode
  id: GetHashCode
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ModelTreeItem.GetHashCode()
  fullName: NMF.Models.ModelTreeItem.GetHashCode()
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetHashCode
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 43
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NMF.Models.ModelTreeItem.GetHashCode*
- uid: NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  commentId: M:NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  id: Equals(NMF.Models.ModelTreeItem)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: Equals(ModelTreeItem)
  nameWithType: ModelTreeItem.Equals(ModelTreeItem)
  fullName: NMF.Models.ModelTreeItem.Equals(NMF.Models.ModelTreeItem)
  type: Method
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 52
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  example: []
  syntax:
    content: public bool Equals(ModelTreeItem other)
    parameters:
    - id: other
      type: NMF.Models.ModelTreeItem
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ModelTreeItem) As Boolean
  overload: NMF.Models.ModelTreeItem.Equals*
  implements:
  - System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
- uid: NMF.Models.ModelTreeItem.op_Equality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  commentId: M:NMF.Models.ModelTreeItem.op_Equality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  id: op_Equality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: operator ==(ModelTreeItem, ModelTreeItem)
  nameWithType: ModelTreeItem.operator ==(ModelTreeItem, ModelTreeItem)
  fullName: NMF.Models.ModelTreeItem.operator ==(NMF.Models.ModelTreeItem, NMF.Models.ModelTreeItem)
  type: Operator
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: op_Equality
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 58
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  example: []
  syntax:
    content: public static bool operator ==(ModelTreeItem left, ModelTreeItem right)
    parameters:
    - id: left
      type: NMF.Models.ModelTreeItem
    - id: right
      type: NMF.Models.ModelTreeItem
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As ModelTreeItem, right As ModelTreeItem) As Boolean
  overload: NMF.Models.ModelTreeItem.op_Equality*
  nameWithType.vb: ModelTreeItem.=(ModelTreeItem, ModelTreeItem)
  fullName.vb: NMF.Models.ModelTreeItem.=(NMF.Models.ModelTreeItem, NMF.Models.ModelTreeItem)
  name.vb: =(ModelTreeItem, ModelTreeItem)
- uid: NMF.Models.ModelTreeItem.op_Inequality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  commentId: M:NMF.Models.ModelTreeItem.op_Inequality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  id: op_Inequality(NMF.Models.ModelTreeItem,NMF.Models.ModelTreeItem)
  parent: NMF.Models.ModelTreeItem
  langs:
  - csharp
  - vb
  name: operator !=(ModelTreeItem, ModelTreeItem)
  nameWithType: ModelTreeItem.operator !=(ModelTreeItem, ModelTreeItem)
  fullName: NMF.Models.ModelTreeItem.operator !=(NMF.Models.ModelTreeItem, NMF.Models.ModelTreeItem)
  type: Operator
  source:
    remote:
      path: Models/Models/ModelTreeItem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: op_Inequality
    path: src/Models/Models/ModelTreeItem.cs
    startLine: 64
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  example: []
  syntax:
    content: public static bool operator !=(ModelTreeItem left, ModelTreeItem right)
    parameters:
    - id: left
      type: NMF.Models.ModelTreeItem
    - id: right
      type: NMF.Models.ModelTreeItem
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As ModelTreeItem, right As ModelTreeItem) As Boolean
  overload: NMF.Models.ModelTreeItem.op_Inequality*
  nameWithType.vb: ModelTreeItem.<>(ModelTreeItem, ModelTreeItem)
  fullName.vb: NMF.Models.ModelTreeItem.<>(NMF.Models.ModelTreeItem, NMF.Models.ModelTreeItem)
  name.vb: <>(ModelTreeItem, ModelTreeItem)
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
- uid: System.IEquatable{NMF.Models.ModelTreeItem}
  commentId: T:System.IEquatable{NMF.Models.ModelTreeItem}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ModelTreeItem>
  nameWithType: IEquatable<ModelTreeItem>
  fullName: System.IEquatable<NMF.Models.ModelTreeItem>
  nameWithType.vb: IEquatable(Of ModelTreeItem)
  fullName.vb: System.IEquatable(Of NMF.Models.ModelTreeItem)
  name.vb: IEquatable(Of ModelTreeItem)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    href: NMF.Models.ModelTreeItem.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    href: NMF.Models.ModelTreeItem.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Models.ModelTreeItem.Parent*
  commentId: Overload:NMF.Models.ModelTreeItem.Parent
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_Parent
  name: Parent
  nameWithType: ModelTreeItem.Parent
  fullName: NMF.Models.ModelTreeItem.Parent
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  href: NMF.Models.IModelElement.html
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models.ModelTreeItem.Child*
  commentId: Overload:NMF.Models.ModelTreeItem.Child
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_Child
  name: Child
  nameWithType: ModelTreeItem.Child
  fullName: NMF.Models.ModelTreeItem.Child
- uid: NMF.Models.ModelTreeItem.#ctor*
  commentId: Overload:NMF.Models.ModelTreeItem.#ctor
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem__ctor_NMF_Models_IModelElement_NMF_Models_IModelElement_
  name: ModelTreeItem
  nameWithType: ModelTreeItem.ModelTreeItem
  fullName: NMF.Models.ModelTreeItem.ModelTreeItem
  nameWithType.vb: ModelTreeItem.New
  fullName.vb: NMF.Models.ModelTreeItem.New
  name.vb: New
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Models.ModelTreeItem.Equals*
  commentId: Overload:NMF.Models.ModelTreeItem.Equals
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_Equals_System_Object_
  name: Equals
  nameWithType: ModelTreeItem.Equals
  fullName: NMF.Models.ModelTreeItem.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NMF.Models.ModelTreeItem.GetHashCode*
  commentId: Overload:NMF.Models.ModelTreeItem.GetHashCode
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_GetHashCode
  name: GetHashCode
  nameWithType: ModelTreeItem.GetHashCode
  fullName: NMF.Models.ModelTreeItem.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
  commentId: M:System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
  parent: System.IEquatable{NMF.Models.ModelTreeItem}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ModelTreeItem)
  nameWithType: IEquatable<ModelTreeItem>.Equals(ModelTreeItem)
  fullName: System.IEquatable<NMF.Models.ModelTreeItem>.Equals(NMF.Models.ModelTreeItem)
  nameWithType.vb: IEquatable(Of ModelTreeItem).Equals(ModelTreeItem)
  fullName.vb: System.IEquatable(Of NMF.Models.ModelTreeItem).Equals(NMF.Models.ModelTreeItem)
  spec.csharp:
  - uid: System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    href: NMF.Models.ModelTreeItem.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NMF.Models.ModelTreeItem}.Equals(NMF.Models.ModelTreeItem)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Models.ModelTreeItem
    name: ModelTreeItem
    href: NMF.Models.ModelTreeItem.html
  - name: )
- uid: NMF.Models.ModelTreeItem
  commentId: T:NMF.Models.ModelTreeItem
  parent: NMF.Models
  href: NMF.Models.ModelTreeItem.html
  name: ModelTreeItem
  nameWithType: ModelTreeItem
  fullName: NMF.Models.ModelTreeItem
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NMF.Models.ModelTreeItem.op_Equality*
  commentId: Overload:NMF.Models.ModelTreeItem.op_Equality
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_op_Equality_NMF_Models_ModelTreeItem_NMF_Models_ModelTreeItem_
  name: operator ==
  nameWithType: ModelTreeItem.operator ==
  fullName: NMF.Models.ModelTreeItem.operator ==
  nameWithType.vb: ModelTreeItem.=
  fullName.vb: NMF.Models.ModelTreeItem.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NMF.Models.ModelTreeItem.op_Equality*
    name: ==
    href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_op_Equality_NMF_Models_ModelTreeItem_NMF_Models_ModelTreeItem_
- uid: NMF.Models.ModelTreeItem.op_Inequality*
  commentId: Overload:NMF.Models.ModelTreeItem.op_Inequality
  href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_op_Inequality_NMF_Models_ModelTreeItem_NMF_Models_ModelTreeItem_
  name: operator !=
  nameWithType: ModelTreeItem.operator !=
  fullName: NMF.Models.ModelTreeItem.operator !=
  nameWithType.vb: ModelTreeItem.<>
  fullName.vb: NMF.Models.ModelTreeItem.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NMF.Models.ModelTreeItem.op_Inequality*
    name: '!='
    href: NMF.Models.ModelTreeItem.html#NMF_Models_ModelTreeItem_op_Inequality_NMF_Models_ModelTreeItem_NMF_Models_ModelTreeItem_
