### YamlMime:ManagedReference
items:
- uid: NMF.Models.ModelTransaction
  commentId: T:NMF.Models.ModelTransaction
  id: ModelTransaction
  parent: NMF.Models
  children:
  - NMF.Models.ModelTransaction.#ctor(NMF.Models.IModelElement)
  - NMF.Models.ModelTransaction.Commit
  - NMF.Models.ModelTransaction.Dispose
  - NMF.Models.ModelTransaction.Rollback
  langs:
  - csharp
  - vb
  name: ModelTransaction
  nameWithType: ModelTransaction
  fullName: NMF.Models.ModelTransaction
  type: Class
  source:
    remote:
      path: Models/Models/ModelTransaction.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelTransaction
    path: src/Models/Models/ModelTransaction.cs
    startLine: 8
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: 'public class ModelTransaction : IDisposable'
    content.vb: Public Class ModelTransaction Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.ModelTransaction.#ctor(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelTransaction.#ctor(NMF.Models.IModelElement)
  id: '#ctor(NMF.Models.IModelElement)'
  parent: NMF.Models.ModelTransaction
  langs:
  - csharp
  - vb
  name: ModelTransaction(IModelElement)
  nameWithType: ModelTransaction.ModelTransaction(IModelElement)
  fullName: NMF.Models.ModelTransaction.ModelTransaction(NMF.Models.IModelElement)
  type: Constructor
  source:
    remote:
      path: Models/Models/ModelTransaction.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/ModelTransaction.cs
    startLine: 15
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public ModelTransaction(IModelElement rootElement)
    parameters:
    - id: rootElement
      type: NMF.Models.IModelElement
    content.vb: Public Sub New(rootElement As IModelElement)
  overload: NMF.Models.ModelTransaction.#ctor*
  nameWithType.vb: ModelTransaction.New(IModelElement)
  fullName.vb: NMF.Models.ModelTransaction.New(NMF.Models.IModelElement)
  name.vb: New(IModelElement)
- uid: NMF.Models.ModelTransaction.Commit
  commentId: M:NMF.Models.ModelTransaction.Commit
  id: Commit
  parent: NMF.Models.ModelTransaction
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: ModelTransaction.Commit()
  fullName: NMF.Models.ModelTransaction.Commit()
  type: Method
  source:
    remote:
      path: Models/Models/ModelTransaction.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Commit
    path: src/Models/Models/ModelTransaction.cs
    startLine: 22
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public void Commit()
    content.vb: Public Sub Commit()
  overload: NMF.Models.ModelTransaction.Commit*
- uid: NMF.Models.ModelTransaction.Rollback
  commentId: M:NMF.Models.ModelTransaction.Rollback
  id: Rollback
  parent: NMF.Models.ModelTransaction
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: ModelTransaction.Rollback()
  fullName: NMF.Models.ModelTransaction.Rollback()
  type: Method
  source:
    remote:
      path: Models/Models/ModelTransaction.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Rollback
    path: src/Models/Models/ModelTransaction.cs
    startLine: 27
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public void Rollback()
    content.vb: Public Sub Rollback()
  overload: NMF.Models.ModelTransaction.Rollback*
- uid: NMF.Models.ModelTransaction.Dispose
  commentId: M:NMF.Models.ModelTransaction.Dispose
  id: Dispose
  parent: NMF.Models.ModelTransaction
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ModelTransaction.Dispose()
  fullName: NMF.Models.ModelTransaction.Dispose()
  type: Method
  source:
    remote:
      path: Models/Models/ModelTransaction.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Dispose
    path: src/Models/Models/ModelTransaction.cs
    startLine: 38
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: NMF.Models.ModelTransaction.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.ModelTransaction.#ctor*
  commentId: Overload:NMF.Models.ModelTransaction.#ctor
  name: ModelTransaction
  nameWithType: ModelTransaction.ModelTransaction
  fullName: NMF.Models.ModelTransaction.ModelTransaction
  nameWithType.vb: ModelTransaction.New
  fullName.vb: NMF.Models.ModelTransaction.New
  name.vb: New
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models.ModelTransaction.Commit*
  commentId: Overload:NMF.Models.ModelTransaction.Commit
  name: Commit
  nameWithType: ModelTransaction.Commit
  fullName: NMF.Models.ModelTransaction.Commit
- uid: NMF.Models.ModelTransaction.Rollback*
  commentId: Overload:NMF.Models.ModelTransaction.Rollback
  name: Rollback
  nameWithType: ModelTransaction.Rollback
  fullName: NMF.Models.ModelTransaction.Rollback
- uid: NMF.Models.ModelTransaction.Dispose*
  commentId: Overload:NMF.Models.ModelTransaction.Dispose
  name: Dispose
  nameWithType: ModelTransaction.Dispose
  fullName: NMF.Models.ModelTransaction.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
