### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  commentId: T:NMF.Serialization.Xmi.XmiArtificialIdAttribute
  id: XmiArtificialIdAttribute
  parent: NMF.Serialization.Xmi
  children:
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString(System.String)
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString(System.Object)
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
  - NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: XmiArtificialIdAttribute
  nameWithType: XmiArtificialIdAttribute
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  type: Class
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmiArtificialIdAttribute
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 9
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes an artificially introduced XMI Id attribute\n"
  example: []
  syntax:
    content: 'public class XmiArtificialIdAttribute : IPropertySerializationInfo'
    content.vb: Public Class XmiArtificialIdAttribute Implements IPropertySerializationInfo
  inheritance:
  - System.Object
  implements:
  - NMF.Serialization.IPropertySerializationInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor
  id: '#ctor'
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: XmiArtificialIdAttribute()
  nameWithType: XmiArtificialIdAttribute.XmiArtificialIdAttribute()
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.XmiArtificialIdAttribute()
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 14
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: protected XmiArtificialIdAttribute()
    content.vb: Protected Sub New()
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor*
  nameWithType.vb: XmiArtificialIdAttribute.New()
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.New()
  name.vb: New()
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
  id: Instance
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: XmiArtificialIdAttribute.Instance
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Instance
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes the default instance\n"
  example: []
  syntax:
    content: public static XmiArtificialIdAttribute Instance { get; }
    parameters: []
    return:
      type: NMF.Serialization.Xmi.XmiArtificialIdAttribute
    content.vb: Public Shared ReadOnly Property Instance As XmiArtificialIdAttribute
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance*
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
  id: ShallCreateInstance
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: ShallCreateInstance
  nameWithType: XmiArtificialIdAttribute.ShallCreateInstance
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ShallCreateInstance
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 23
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDetermines whether the instance should be created explicitly\n"
  example: []
  syntax:
    content: public bool ShallCreateInstance { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ShallCreateInstance As Boolean
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
  id: ElementName
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: XmiArtificialIdAttribute.ElementName
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementName
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 29
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nThe element name that should be serialized\n"
  example: []
  syntax:
    content: public string ElementName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ElementName As String
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.ElementName
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
  id: Namespace
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: XmiArtificialIdAttribute.Namespace
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 35
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nThe namespace to which the element should be serialized or null\n"
  example: []
  syntax:
    content: public string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property [Namespace] As String
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.Namespace
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
  id: NamespacePrefix
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: NamespacePrefix
  nameWithType: XmiArtificialIdAttribute.NamespacePrefix
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NamespacePrefix
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 41
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nThe namespace prefix that should be used for serialization or null\n"
  example: []
  syntax:
    content: public string NamespacePrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NamespacePrefix As String
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue(System.Object,System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue(System.Object,System.Object)
  id: ShouldSerializeValue(System.Object,System.Object)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: ShouldSerializeValue(object, object)
  nameWithType: XmiArtificialIdAttribute.ShouldSerializeValue(object, object)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue(object, object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ShouldSerializeValue
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 50
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDetermines whether the provided value should be serialized\n"
  example: []
  syntax:
    content: public virtual bool ShouldSerializeValue(object obj, object value)
    parameters:
    - id: obj
      type: System.Object
      description: The context object
    - id: value
      type: System.Object
      description: The value in question
    return:
      type: System.Boolean
      description: True, if the value should be serialized, otherwise False
    content.vb: Public Overridable Function ShouldSerializeValue(obj As Object, value As Object) As Boolean
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  nameWithType.vb: XmiArtificialIdAttribute.ShouldSerializeValue(Object, Object)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue(Object, Object)
  name.vb: ShouldSerializeValue(Object, Object)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
  id: IsReadOnly
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: XmiArtificialIdAttribute.IsReadOnly
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsReadOnly
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 56
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nTrue, if the property is read-only, otherwise False\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.IsReadOnly
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  id: GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: GetValue(object, XmlSerializationContext)
  nameWithType: XmiArtificialIdAttribute.GetValue(object, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue(object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetValue
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 62
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the value of this property for the given input object\n"
  example: []
  syntax:
    content: public object GetValue(object input, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Object
      description: ''
    content.vb: Public Function GetValue(input As Object, context As XmlSerializationContext) As Object
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiArtificialIdAttribute.GetValue(Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue(Object, NMF.Serialization.XmlSerializationContext)
  name.vb: GetValue(Object, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  id: SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: SetValue(object, object, XmlSerializationContext)
  nameWithType: XmiArtificialIdAttribute.SetValue(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue(object, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetValue
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 75
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nSets the value for the property\n"
  example: []
  syntax:
    content: public void SetValue(object input, object value, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: value
      type: System.Object
      description: The value of the property
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The deserialization context
    content.vb: Public Sub SetValue(input As Object, value As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiArtificialIdAttribute.SetValue(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: SetValue(Object, Object, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
  id: IsIdentifier
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: IsIdentifier
  nameWithType: XmiArtificialIdAttribute.IsIdentifier
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsIdentifier
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 88
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nTrue, if the property is an identifier, otherwise False\n"
  example: []
  syntax:
    content: public bool IsIdentifier { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIdentifier As Boolean
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.IsIdentifier
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
  id: IdentificationMode
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: IdentificationMode
  nameWithType: XmiArtificialIdAttribute.IdentificationMode
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentificationMode
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 97
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the identification mode of the property\n"
  example: []
  syntax:
    content: public XmlIdentificationMode IdentificationMode { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlIdentificationMode
    content.vb: Public ReadOnly Property IdentificationMode As XmlIdentificationMode
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.IdentificationMode
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
  id: IsStringConvertible
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: IsStringConvertible
  nameWithType: XmiArtificialIdAttribute.IsStringConvertible
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsStringConvertible
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 103
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nTrue, if the value of this property allows roundtrip-serialization to string\n"
  example: []
  syntax:
    content: public bool IsStringConvertible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStringConvertible As Boolean
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: ConvertFromString(string)
  nameWithType: XmiArtificialIdAttribute.ConvertFromString(string)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString(string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertFromString
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 109
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDeserializes the provided text\n"
  example: []
  syntax:
    content: public object ConvertFromString(string text)
    parameters:
    - id: text
      type: System.String
      description: the text
    return:
      type: System.Object
      description: The deserialized value
    content.vb: Public Function ConvertFromString(text As String) As Object
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  nameWithType.vb: XmiArtificialIdAttribute.ConvertFromString(String)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString(String)
  name.vb: ConvertFromString(String)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: ConvertToString(object)
  nameWithType: XmiArtificialIdAttribute.ConvertToString(object)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertToString
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 115
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nConverts the provided object to a string\n"
  example: []
  syntax:
    content: public string ConvertToString(object input)
    parameters:
    - id: input
      type: System.Object
      description: The object to convert
    return:
      type: System.String
      description: A string representation
    content.vb: Public Function ConvertToString(input As Object) As String
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  nameWithType.vb: XmiArtificialIdAttribute.ConvertToString(Object)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString(Object)
  name.vb: ConvertToString(Object)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  id: AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: AddToCollection(object, object, XmlSerializationContext)
  nameWithType: XmiArtificialIdAttribute.AddToCollection(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection(object, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AddToCollection
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 121
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nAdds the given object to the collection\n"
  example: []
  syntax:
    content: public void AddToCollection(object input, object item, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: item
      type: System.Object
      description: The item that should be added
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The deserialization context
    content.vb: Public Sub AddToCollection(input As Object, item As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiArtificialIdAttribute.AddToCollection(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: AddToCollection(Object, Object, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
  id: Opposite
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: XmiArtificialIdAttribute.Opposite
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Opposite
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 132
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the opposite property or null\n"
  example: []
  syntax:
    content: public IPropertySerializationInfo Opposite { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Public ReadOnly Property Opposite As IPropertySerializationInfo
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.Opposite
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
  commentId: P:NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
  id: PropertyMinType
  parent: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  langs:
  - csharp
  - vb
  name: PropertyMinType
  nameWithType: XmiArtificialIdAttribute.PropertyMinType
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiArtificialIdAttribute.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyMinType
    path: src/Models/Serialization/XMI/XmiArtificialIdAttribute.cs
    startLine: 141
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the minimum type system type of the property\n"
  example: []
  syntax:
    content: public Type PropertyMinType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property PropertyMinType As Type
  overload: NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType*
  implements:
  - NMF.Serialization.IPropertySerializationInfo.PropertyMinType
references:
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.#ctor
  name: XmiArtificialIdAttribute
  nameWithType: XmiArtificialIdAttribute.XmiArtificialIdAttribute
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.XmiArtificialIdAttribute
  nameWithType.vb: XmiArtificialIdAttribute.New
  fullName.vb: NMF.Serialization.Xmi.XmiArtificialIdAttribute.New
  name.vb: New
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
  name: Instance
  nameWithType: XmiArtificialIdAttribute.Instance
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Instance
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute
  commentId: T:NMF.Serialization.Xmi.XmiArtificialIdAttribute
  parent: NMF.Serialization.Xmi
  name: XmiArtificialIdAttribute
  nameWithType: XmiArtificialIdAttribute
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
  name: ShallCreateInstance
  nameWithType: XmiArtificialIdAttribute.ShallCreateInstance
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShallCreateInstance
- uid: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  commentId: P:NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  parent: NMF.Serialization.IPropertySerializationInfo
  name: ShallCreateInstance
  nameWithType: IPropertySerializationInfo.ShallCreateInstance
  fullName: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
  name: ElementName
  nameWithType: XmiArtificialIdAttribute.ElementName
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ElementName
- uid: NMF.Serialization.IPropertySerializationInfo.ElementName
  commentId: P:NMF.Serialization.IPropertySerializationInfo.ElementName
  parent: NMF.Serialization.IPropertySerializationInfo
  name: ElementName
  nameWithType: IPropertySerializationInfo.ElementName
  fullName: NMF.Serialization.IPropertySerializationInfo.ElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
  name: Namespace
  nameWithType: XmiArtificialIdAttribute.Namespace
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Namespace
- uid: NMF.Serialization.IPropertySerializationInfo.Namespace
  commentId: P:NMF.Serialization.IPropertySerializationInfo.Namespace
  parent: NMF.Serialization.IPropertySerializationInfo
  name: Namespace
  nameWithType: IPropertySerializationInfo.Namespace
  fullName: NMF.Serialization.IPropertySerializationInfo.Namespace
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
  name: NamespacePrefix
  nameWithType: XmiArtificialIdAttribute.NamespacePrefix
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.NamespacePrefix
- uid: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  commentId: P:NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  parent: NMF.Serialization.IPropertySerializationInfo
  name: NamespacePrefix
  nameWithType: IPropertySerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue
  name: ShouldSerializeValue
  nameWithType: XmiArtificialIdAttribute.ShouldSerializeValue
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ShouldSerializeValue
- uid: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: ShouldSerializeValue(object, object)
  nameWithType: IPropertySerializationInfo.ShouldSerializeValue(object, object)
  fullName: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(object, object)
  nameWithType.vb: IPropertySerializationInfo.ShouldSerializeValue(Object, Object)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(Object, Object)
  name.vb: ShouldSerializeValue(Object, Object)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
    name: ShouldSerializeValue
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
    name: ShouldSerializeValue
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
  name: IsReadOnly
  nameWithType: XmiArtificialIdAttribute.IsReadOnly
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsReadOnly
- uid: NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  parent: NMF.Serialization.IPropertySerializationInfo
  name: IsReadOnly
  nameWithType: IPropertySerializationInfo.IsReadOnly
  fullName: NMF.Serialization.IPropertySerializationInfo.IsReadOnly
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue
  name: GetValue
  nameWithType: XmiArtificialIdAttribute.GetValue
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.GetValue
- uid: NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: GetValue(object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.GetValue(object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.GetValue(object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: IPropertySerializationInfo.GetValue(Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.GetValue(Object, NMF.Serialization.XmlSerializationContext)
  name.vb: GetValue(Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
    name: GetValue
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
    name: GetValue
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue
  name: SetValue
  nameWithType: XmiArtificialIdAttribute.SetValue
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.SetValue
- uid: NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: SetValue(object, object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.SetValue(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.SetValue(object, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: IPropertySerializationInfo.SetValue(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.SetValue(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: SetValue(Object, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
    name: SetValue
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
    name: SetValue
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
  name: IsIdentifier
  nameWithType: XmiArtificialIdAttribute.IsIdentifier
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsIdentifier
- uid: NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  parent: NMF.Serialization.IPropertySerializationInfo
  name: IsIdentifier
  nameWithType: IPropertySerializationInfo.IsIdentifier
  fullName: NMF.Serialization.IPropertySerializationInfo.IsIdentifier
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
  name: IdentificationMode
  nameWithType: XmiArtificialIdAttribute.IdentificationMode
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IdentificationMode
- uid: NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  parent: NMF.Serialization.IPropertySerializationInfo
  name: IdentificationMode
  nameWithType: IPropertySerializationInfo.IdentificationMode
  fullName: NMF.Serialization.IPropertySerializationInfo.IdentificationMode
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
  name: IsStringConvertible
  nameWithType: XmiArtificialIdAttribute.IsStringConvertible
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.IsStringConvertible
- uid: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  parent: NMF.Serialization.IPropertySerializationInfo
  name: IsStringConvertible
  nameWithType: IPropertySerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString
  name: ConvertFromString
  nameWithType: XmiArtificialIdAttribute.ConvertFromString
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertFromString
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: ConvertFromString(string)
  nameWithType: IPropertySerializationInfo.ConvertFromString(string)
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(string)
  nameWithType.vb: IPropertySerializationInfo.ConvertFromString(String)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(String)
  name.vb: ConvertFromString(String)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
    name: ConvertFromString
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
    name: ConvertFromString
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString
  name: ConvertToString
  nameWithType: XmiArtificialIdAttribute.ConvertToString
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.ConvertToString
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: ConvertToString(object)
  nameWithType: IPropertySerializationInfo.ConvertToString(object)
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertToString(object)
  nameWithType.vb: IPropertySerializationInfo.ConvertToString(Object)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ConvertToString(Object)
  name.vb: ConvertToString(Object)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
    name: ConvertToString
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
    name: ConvertToString
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection
  name: AddToCollection
  nameWithType: XmiArtificialIdAttribute.AddToCollection
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.AddToCollection
- uid: NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  isExternal: true
  name: AddToCollection(object, object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.AddToCollection(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.AddToCollection(object, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: IPropertySerializationInfo.AddToCollection(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.AddToCollection(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: AddToCollection(Object, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
    name: AddToCollection
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
    name: AddToCollection
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
  name: Opposite
  nameWithType: XmiArtificialIdAttribute.Opposite
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.Opposite
- uid: NMF.Serialization.IPropertySerializationInfo.Opposite
  commentId: P:NMF.Serialization.IPropertySerializationInfo.Opposite
  parent: NMF.Serialization.IPropertySerializationInfo
  name: Opposite
  nameWithType: IPropertySerializationInfo.Opposite
  fullName: NMF.Serialization.IPropertySerializationInfo.Opposite
- uid: NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType*
  commentId: Overload:NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
  name: PropertyMinType
  nameWithType: XmiArtificialIdAttribute.PropertyMinType
  fullName: NMF.Serialization.Xmi.XmiArtificialIdAttribute.PropertyMinType
- uid: NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  commentId: P:NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  parent: NMF.Serialization.IPropertySerializationInfo
  name: PropertyMinType
  nameWithType: IPropertySerializationInfo.PropertyMinType
  fullName: NMF.Serialization.IPropertySerializationInfo.PropertyMinType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
