### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  id: ITypeSerializationInfo
  parent: NMF.Serialization
  children:
  - NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  - NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  - NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  - NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  - NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  - NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  - NMF.Serialization.ITypeSerializationInfo.CreateObject(System.Object[])
  - NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  - NMF.Serialization.ITypeSerializationInfo.ElementName
  - NMF.Serialization.ITypeSerializationInfo.ElementProperties
  - NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  - NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.ITypeSerializationInfo.IsCollection
  - NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.ITypeSerializationInfo.IsIdentified
  - NMF.Serialization.ITypeSerializationInfo.IsInstanceOf(System.Object)
  - NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  - NMF.Serialization.ITypeSerializationInfo.MappedType
  - NMF.Serialization.ITypeSerializationInfo.Namespace
  - NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  langs:
  - csharp
  - vb
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
  type: Interface
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ITypeSerializationInfo
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 10
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Denotes abstract information necessary for serialization
  example: []
  syntax:
    content: public interface ITypeSerializationInfo
    content.vb: Public Interface ITypeSerializationInfo
- uid: NMF.Serialization.ITypeSerializationInfo.ElementName
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ElementName
  id: ElementName
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: ITypeSerializationInfo.ElementName
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementName
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementName
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 15
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the element name of the type
  example: []
  syntax:
    content: string ElementName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ElementName As String
  overload: NMF.Serialization.ITypeSerializationInfo.ElementName*
- uid: NMF.Serialization.ITypeSerializationInfo.Namespace
  commentId: P:NMF.Serialization.ITypeSerializationInfo.Namespace
  id: Namespace
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ITypeSerializationInfo.Namespace
  fullName: NMF.Serialization.ITypeSerializationInfo.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the namespace of the type or null
  example: []
  syntax:
    content: string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property [Namespace] As String
  overload: NMF.Serialization.ITypeSerializationInfo.Namespace*
- uid: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  commentId: P:NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  id: NamespacePrefix
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: NamespacePrefix
  nameWithType: ITypeSerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NamespacePrefix
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 25
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the namespace prefix of the type or null
  example: []
  syntax:
    content: string NamespacePrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property NamespacePrefix As String
  overload: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix*
- uid: NMF.Serialization.ITypeSerializationInfo.MappedType
  commentId: P:NMF.Serialization.ITypeSerializationInfo.MappedType
  id: MappedType
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: MappedType
  nameWithType: ITypeSerializationInfo.MappedType
  fullName: NMF.Serialization.ITypeSerializationInfo.MappedType
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MappedType
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 30
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the system type this type serialization is mapped to
  example: []
  syntax:
    content: Type MappedType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property MappedType As Type
  overload: NMF.Serialization.ITypeSerializationInfo.MappedType*
- uid: NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  commentId: P:NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  id: DefaultProperty
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: DefaultProperty
  nameWithType: ITypeSerializationInfo.DefaultProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultProperty
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 35
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the default property of this type
  example: []
  syntax:
    content: IPropertySerializationInfo DefaultProperty { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: ReadOnly Property DefaultProperty As IPropertySerializationInfo
  overload: NMF.Serialization.ITypeSerializationInfo.DefaultProperty*
- uid: NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  id: AttributeProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: AttributeProperties
  nameWithType: ITypeSerializationInfo.AttributeProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttributeProperties
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 40
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets a collection of properties serialized as attributes
  example: []
  syntax:
    content: IEnumerable<IPropertySerializationInfo> AttributeProperties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
    content.vb: ReadOnly Property AttributeProperties As IEnumerable(Of IPropertySerializationInfo)
  overload: NMF.Serialization.ITypeSerializationInfo.AttributeProperties*
- uid: NMF.Serialization.ITypeSerializationInfo.ElementProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ElementProperties
  id: ElementProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: ElementProperties
  nameWithType: ITypeSerializationInfo.ElementProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementProperties
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 45
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets a collection of properties serialized as elements
  example: []
  syntax:
    content: IEnumerable<IPropertySerializationInfo> ElementProperties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
    content.vb: ReadOnly Property ElementProperties As IEnumerable(Of IPropertySerializationInfo)
  overload: NMF.Serialization.ITypeSerializationInfo.ElementProperties*
- uid: NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom(NMF.Serialization.ITypeSerializationInfo)
  id: IsAssignableFrom(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsAssignableFrom(ITypeSerializationInfo)
  nameWithType: ITypeSerializationInfo.IsAssignableFrom(ITypeSerializationInfo)
  fullName: NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom(NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsAssignableFrom
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 52
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether an instance of the given more concrete type can be assigned to this type
  example: []
  syntax:
    content: bool IsAssignableFrom(ITypeSerializationInfo specializedType)
    parameters:
    - id: specializedType
      type: NMF.Serialization.ITypeSerializationInfo
      description: the more concrete type
    return:
      type: System.Boolean
      description: True, if the type is assignable, otherwise False
    content.vb: Function IsAssignableFrom(specializedType As ITypeSerializationInfo) As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom*
- uid: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf(System.Object)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.IsInstanceOf(System.Object)
  id: IsInstanceOf(System.Object)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsInstanceOf(object)
  nameWithType: ITypeSerializationInfo.IsInstanceOf(object)
  fullName: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsInstanceOf
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 59
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the given object is an instance of this type
  example: []
  syntax:
    content: bool IsInstanceOf(object instance)
    parameters:
    - id: instance
      type: System.Object
      description: the instance
    return:
      type: System.Boolean
      description: True, if the object is an instance of the serialization type, otherwise False
    content.vb: Function IsInstanceOf(instance As Object) As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf*
  nameWithType.vb: ITypeSerializationInfo.IsInstanceOf(Object)
  fullName.vb: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf(Object)
  name.vb: IsInstanceOf(Object)
- uid: NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired(NMF.Serialization.ITypeSerializationInfo)
  id: IsExplicitTypeInformationRequired(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsExplicitTypeInformationRequired(ITypeSerializationInfo)
  nameWithType: ITypeSerializationInfo.IsExplicitTypeInformationRequired(ITypeSerializationInfo)
  fullName: NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired(NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsExplicitTypeInformationRequired
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 66
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the serializer should render explicit type information
  example: []
  syntax:
    content: bool IsExplicitTypeInformationRequired(ITypeSerializationInfo itemType)
    parameters:
    - id: itemType
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type of the item
    return:
      type: System.Boolean
      description: True, if explicit type information should be rendered, otherwise false
    content.vb: Function IsExplicitTypeInformationRequired(itemType As ITypeSerializationInfo) As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired*
- uid: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  id: ConstructorProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: ConstructorProperties
  nameWithType: ITypeSerializationInfo.ConstructorProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConstructorProperties
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 71
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the properties required for constructor calls
  example: []
  syntax:
    content: IPropertySerializationInfo[] ConstructorProperties { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo[]
    content.vb: ReadOnly Property ConstructorProperties As IPropertySerializationInfo()
  overload: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties*
- uid: NMF.Serialization.ITypeSerializationInfo.CreateObject(System.Object[])
  commentId: M:NMF.Serialization.ITypeSerializationInfo.CreateObject(System.Object[])
  id: CreateObject(System.Object[])
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: CreateObject(object[])
  nameWithType: ITypeSerializationInfo.CreateObject(object[])
  fullName: NMF.Serialization.ITypeSerializationInfo.CreateObject(object[])
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateObject
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 78
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new instance
  example: []
  syntax:
    content: object CreateObject(object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: The constructor parameters
    return:
      type: System.Object
      description: ''
    content.vb: Function CreateObject(args As Object()) As Object
  overload: NMF.Serialization.ITypeSerializationInfo.CreateObject*
  nameWithType.vb: ITypeSerializationInfo.CreateObject(Object())
  fullName.vb: NMF.Serialization.ITypeSerializationInfo.CreateObject(Object())
  name.vb: CreateObject(Object())
- uid: NMF.Serialization.ITypeSerializationInfo.IsIdentified
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsIdentified
  id: IsIdentified
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsIdentified
  nameWithType: ITypeSerializationInfo.IsIdentified
  fullName: NMF.Serialization.ITypeSerializationInfo.IsIdentified
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsIdentified
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 83
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if instances of this type are identified
  example: []
  syntax:
    content: bool IsIdentified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsIdentified As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsIdentified*
- uid: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  id: IdentifierProperty
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IdentifierProperty
  nameWithType: ITypeSerializationInfo.IdentifierProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierProperty
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 88
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the property used as identifier
  example: []
  syntax:
    content: IPropertySerializationInfo IdentifierProperty { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: ReadOnly Property IdentifierProperty As IPropertySerializationInfo
  overload: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty*
- uid: NMF.Serialization.ITypeSerializationInfo.IsCollection
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsCollection
  id: IsCollection
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsCollection
  nameWithType: ITypeSerializationInfo.IsCollection
  fullName: NMF.Serialization.ITypeSerializationInfo.IsCollection
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsCollection
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 93
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if this type is a collection
  example: []
  syntax:
    content: bool IsCollection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsCollection As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsCollection*
- uid: NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  commentId: P:NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  id: CollectionItemType
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: CollectionItemType
  nameWithType: ITypeSerializationInfo.CollectionItemType
  fullName: NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CollectionItemType
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 98
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the element type of a collection
  example: []
  syntax:
    content: ITypeSerializationInfo CollectionItemType { get; }
    parameters: []
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: ReadOnly Property CollectionItemType As ITypeSerializationInfo
  overload: NMF.Serialization.ITypeSerializationInfo.CollectionItemType*
- uid: NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: AddToCollection(object, object)
  nameWithType: ITypeSerializationInfo.AddToCollection(object, object)
  fullName: NMF.Serialization.ITypeSerializationInfo.AddToCollection(object, object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AddToCollection
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 105
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Adds the given item to the collection
  example: []
  syntax:
    content: void AddToCollection(object collection, object item)
    parameters:
    - id: collection
      type: System.Object
      description: the collection
    - id: item
      type: System.Object
      description: the item to add
    content.vb: Sub AddToCollection(collection As Object, item As Object)
  overload: NMF.Serialization.ITypeSerializationInfo.AddToCollection*
  nameWithType.vb: ITypeSerializationInfo.AddToCollection(Object, Object)
  fullName.vb: NMF.Serialization.ITypeSerializationInfo.AddToCollection(Object, Object)
  name.vb: AddToCollection(Object, Object)
- uid: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  id: IsStringConvertible
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: IsStringConvertible
  nameWithType: ITypeSerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsStringConvertible
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 110
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if the items can be converted to string
  example: []
  syntax:
    content: bool IsStringConvertible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStringConvertible As Boolean
  overload: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible*
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertFromString(string)
  nameWithType: ITypeSerializationInfo.ConvertFromString(string)
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertFromString
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 117
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes the given text into an object
  example: []
  syntax:
    content: object ConvertFromString(string text)
    parameters:
    - id: text
      type: System.String
      description: the textual representation
    return:
      type: System.Object
      description: The deserialized object
    content.vb: Function ConvertFromString(text As String) As Object
  overload: NMF.Serialization.ITypeSerializationInfo.ConvertFromString*
  nameWithType.vb: ITypeSerializationInfo.ConvertFromString(String)
  fullName.vb: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(String)
  name.vb: ConvertFromString(String)
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: NMF.Serialization.ITypeSerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertToString(object)
  nameWithType: ITypeSerializationInfo.ConvertToString(object)
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertToString(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/ITypeSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertToString
    path: src/Models/Serialization/XML/ITypeSerializationInfo.cs
    startLine: 124
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Serializes the given object into a string
  example: []
  syntax:
    content: string ConvertToString(object input)
    parameters:
    - id: input
      type: System.Object
      description: the object
    return:
      type: System.String
      description: a textual representation
    content.vb: Function ConvertToString(input As Object) As String
  overload: NMF.Serialization.ITypeSerializationInfo.ConvertToString*
  nameWithType.vb: ITypeSerializationInfo.ConvertToString(Object)
  fullName.vb: NMF.Serialization.ITypeSerializationInfo.ConvertToString(Object)
  name.vb: ConvertToString(Object)
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  href: NMF.html
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
- uid: NMF.Serialization.ITypeSerializationInfo.ElementName*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.ElementName
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_ElementName
  name: ElementName
  nameWithType: ITypeSerializationInfo.ElementName
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.ITypeSerializationInfo.Namespace*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.Namespace
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_Namespace
  name: Namespace
  nameWithType: ITypeSerializationInfo.Namespace
  fullName: NMF.Serialization.ITypeSerializationInfo.Namespace
- uid: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_NamespacePrefix
  name: NamespacePrefix
  nameWithType: ITypeSerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
- uid: NMF.Serialization.ITypeSerializationInfo.MappedType*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.MappedType
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_MappedType
  name: MappedType
  nameWithType: ITypeSerializationInfo.MappedType
  fullName: NMF.Serialization.ITypeSerializationInfo.MappedType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.ITypeSerializationInfo.DefaultProperty*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_DefaultProperty
  name: DefaultProperty
  nameWithType: ITypeSerializationInfo.DefaultProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.DefaultProperty
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.IPropertySerializationInfo.html
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.ITypeSerializationInfo.AttributeProperties*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_AttributeProperties
  name: AttributeProperties
  nameWithType: ITypeSerializationInfo.AttributeProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.AttributeProperties
- uid: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IPropertySerializationInfo>
  nameWithType: IEnumerable<IPropertySerializationInfo>
  fullName: System.Collections.Generic.IEnumerable<NMF.Serialization.IPropertySerializationInfo>
  nameWithType.vb: IEnumerable(Of IPropertySerializationInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Serialization.IPropertySerializationInfo)
  name.vb: IEnumerable(Of IPropertySerializationInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    href: NMF.Serialization.IPropertySerializationInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    href: NMF.Serialization.IPropertySerializationInfo.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Serialization.ITypeSerializationInfo.ElementProperties*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.ElementProperties
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_ElementProperties
  name: ElementProperties
  nameWithType: ITypeSerializationInfo.ElementProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementProperties
- uid: NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsAssignableFrom_NMF_Serialization_ITypeSerializationInfo_
  name: IsAssignableFrom
  nameWithType: ITypeSerializationInfo.IsAssignableFrom
  fullName: NMF.Serialization.ITypeSerializationInfo.IsAssignableFrom
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.ITypeSerializationInfo.html
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsInstanceOf
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsInstanceOf_System_Object_
  name: IsInstanceOf
  nameWithType: ITypeSerializationInfo.IsInstanceOf
  fullName: NMF.Serialization.ITypeSerializationInfo.IsInstanceOf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsExplicitTypeInformationRequired_NMF_Serialization_ITypeSerializationInfo_
  name: IsExplicitTypeInformationRequired
  nameWithType: ITypeSerializationInfo.IsExplicitTypeInformationRequired
  fullName: NMF.Serialization.ITypeSerializationInfo.IsExplicitTypeInformationRequired
- uid: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_ConstructorProperties
  name: ConstructorProperties
  nameWithType: ITypeSerializationInfo.ConstructorProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
- uid: NMF.Serialization.IPropertySerializationInfo[]
  isExternal: true
  href: NMF.Serialization.IPropertySerializationInfo.html
  name: IPropertySerializationInfo[]
  nameWithType: IPropertySerializationInfo[]
  fullName: NMF.Serialization.IPropertySerializationInfo[]
  nameWithType.vb: IPropertySerializationInfo()
  fullName.vb: NMF.Serialization.IPropertySerializationInfo()
  name.vb: IPropertySerializationInfo()
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    href: NMF.Serialization.IPropertySerializationInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    href: NMF.Serialization.IPropertySerializationInfo.html
  - name: (
  - name: )
- uid: NMF.Serialization.ITypeSerializationInfo.CreateObject*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.CreateObject
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_CreateObject_System_Object___
  name: CreateObject
  nameWithType: ITypeSerializationInfo.CreateObject
  fullName: NMF.Serialization.ITypeSerializationInfo.CreateObject
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: NMF.Serialization.ITypeSerializationInfo.IsIdentified*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsIdentified
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsIdentified
  name: IsIdentified
  nameWithType: ITypeSerializationInfo.IsIdentified
  fullName: NMF.Serialization.ITypeSerializationInfo.IsIdentified
- uid: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IdentifierProperty
  name: IdentifierProperty
  nameWithType: ITypeSerializationInfo.IdentifierProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
- uid: NMF.Serialization.ITypeSerializationInfo.IsCollection*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsCollection
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsCollection
  name: IsCollection
  nameWithType: ITypeSerializationInfo.IsCollection
  fullName: NMF.Serialization.ITypeSerializationInfo.IsCollection
- uid: NMF.Serialization.ITypeSerializationInfo.CollectionItemType*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_CollectionItemType
  name: CollectionItemType
  nameWithType: ITypeSerializationInfo.CollectionItemType
  fullName: NMF.Serialization.ITypeSerializationInfo.CollectionItemType
- uid: NMF.Serialization.ITypeSerializationInfo.AddToCollection*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.AddToCollection
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_AddToCollection_System_Object_System_Object_
  name: AddToCollection
  nameWithType: ITypeSerializationInfo.AddToCollection
  fullName: NMF.Serialization.ITypeSerializationInfo.AddToCollection
- uid: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_IsStringConvertible
  name: IsStringConvertible
  nameWithType: ITypeSerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertFromString*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.ConvertFromString
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_ConvertFromString_System_String_
  name: ConvertFromString
  nameWithType: ITypeSerializationInfo.ConvertFromString
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertFromString
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertToString*
  commentId: Overload:NMF.Serialization.ITypeSerializationInfo.ConvertToString
  href: NMF.Serialization.ITypeSerializationInfo.html#NMF_Serialization_ITypeSerializationInfo_ConvertToString_System_Object_
  name: ConvertToString
  nameWithType: ITypeSerializationInfo.ConvertToString
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertToString
