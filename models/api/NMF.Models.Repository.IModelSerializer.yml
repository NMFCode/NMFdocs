### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.IModelSerializer
  commentId: T:NMF.Models.Repository.IModelSerializer
  id: IModelSerializer
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  - NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  - NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: IModelSerializer
  nameWithType: IModelSerializer
  fullName: NMF.Models.Repository.IModelSerializer
  type: Interface
  source:
    remote:
      path: Models/Models/Repository/IModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IModelSerializer
    path: src/Models/Models/Repository/IModelSerializer.cs
    startLine: 9
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: public interface IModelSerializer
    content.vb: Public Interface IModelSerializer
  extensionMethods:
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  commentId: M:NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  id: Serialize(NMF.Models.Model,System.IO.Stream)
  parent: NMF.Models.Repository.IModelSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Model, Stream)
  nameWithType: IModelSerializer.Serialize(Model, Stream)
  fullName: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/IModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Models/Repository/IModelSerializer.cs
    startLine: 11
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: void Serialize(Model model, Stream target)
    parameters:
    - id: model
      type: NMF.Models.Model
    - id: target
      type: System.IO.Stream
    content.vb: Sub Serialize(model As Model, target As Stream)
  overload: NMF.Models.Repository.IModelSerializer.Serialize*
- uid: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  commentId: M:NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  id: SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  parent: NMF.Models.Repository.IModelSerializer
  langs:
  - csharp
  - vb
  name: SerializeFragment(ModelElement, Stream)
  nameWithType: IModelSerializer.SerializeFragment(ModelElement, Stream)
  fullName: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/IModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SerializeFragment
    path: src/Models/Models/Repository/IModelSerializer.cs
    startLine: 13
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: void SerializeFragment(ModelElement element, Stream target)
    parameters:
    - id: element
      type: NMF.Models.ModelElement
    - id: target
      type: System.IO.Stream
    content.vb: Sub SerializeFragment(element As ModelElement, target As Stream)
  overload: NMF.Models.Repository.IModelSerializer.SerializeFragment*
- uid: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  commentId: M:NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  id: Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  parent: NMF.Models.Repository.IModelSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream, Uri, IModelRepository, Boolean)
  nameWithType: IModelSerializer.Deserialize(Stream, Uri, IModelRepository, Boolean)
  fullName: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream, System.Uri, NMF.Models.Repository.IModelRepository, System.Boolean)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/IModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Models/Repository/IModelSerializer.cs
    startLine: 15
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: Model Deserialize(Stream source, Uri modelUri, IModelRepository repository, bool addToRepository)
    parameters:
    - id: source
      type: System.IO.Stream
    - id: modelUri
      type: System.Uri
    - id: repository
      type: NMF.Models.Repository.IModelRepository
    - id: addToRepository
      type: System.Boolean
    return:
      type: NMF.Models.Model
    content.vb: Function Deserialize(source As Stream, modelUri As Uri, repository As IModelRepository, addToRepository As Boolean) As Model
  overload: NMF.Models.Repository.IModelSerializer.Deserialize*
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  name: Serialize(IModelElement, String)
  nameWithType: ModelExtensions.Serialize(IModelElement, String)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement, System.String)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  name: Serialize(IModelElement, String, Uri)
  nameWithType: ModelExtensions.Serialize(IModelElement, String, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement, System.String, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  name: Serialize(IModelElement, Stream, Uri)
  nameWithType: ModelExtensions.Serialize(IModelElement, Stream, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement, System.IO.Stream, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, String)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, String)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, System.String)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, String, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, String, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, System.String, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, Stream, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, Stream, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, System.IO.Stream, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
    nameWithType: ModelExtensions.Serialize
    fullName: NMF.Models.ModelExtensions.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
    nameWithType: IModelSerializer
    fullName: NMF.Models.Repository.IModelSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: NMF.Models.Repository.IModelSerializer.Serialize*
  commentId: Overload:NMF.Models.Repository.IModelSerializer.Serialize
  name: Serialize
  nameWithType: IModelSerializer.Serialize
  fullName: NMF.Models.Repository.IModelSerializer.Serialize
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  parent: NMF.Models
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: NMF.Models.Repository.IModelSerializer.SerializeFragment*
  commentId: Overload:NMF.Models.Repository.IModelSerializer.SerializeFragment
  name: SerializeFragment
  nameWithType: IModelSerializer.SerializeFragment
  fullName: NMF.Models.Repository.IModelSerializer.SerializeFragment
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Repository.IModelSerializer.Deserialize*
  commentId: Overload:NMF.Models.Repository.IModelSerializer.Deserialize
  name: Deserialize
  nameWithType: IModelSerializer.Deserialize
  fullName: NMF.Models.Repository.IModelSerializer.Deserialize
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.Repository.IModelRepository
  commentId: T:NMF.Models.Repository.IModelRepository
  parent: NMF.Models.Repository
  name: IModelRepository
  nameWithType: IModelRepository
  fullName: NMF.Models.Repository.IModelRepository
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
