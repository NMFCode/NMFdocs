### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.XmlTypeCollection
  commentId: T:NMF.Serialization.XmlTypeCollection
  id: XmlTypeCollection
  parent: NMF.Serialization
  children:
  - NMF.Serialization.XmlTypeCollection.#ctor(NMF.Serialization.XmlSerializer)
  - NMF.Serialization.XmlTypeCollection.Add(System.Type)
  - NMF.Serialization.XmlTypeCollection.Clear
  - NMF.Serialization.XmlTypeCollection.Contains(System.Type)
  - NMF.Serialization.XmlTypeCollection.CopyTo(System.Type[],System.Int32)
  - NMF.Serialization.XmlTypeCollection.Count
  - NMF.Serialization.XmlTypeCollection.GetEnumerator
  - NMF.Serialization.XmlTypeCollection.Remove(System.Type)
  - NMF.Serialization.XmlTypeCollection.Serializer
  langs:
  - csharp
  - vb
  name: XmlTypeCollection
  nameWithType: XmlTypeCollection
  fullName: NMF.Serialization.XmlTypeCollection
  type: Class
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmlTypeCollection
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 12
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Defines a collection of types known to a XmlSerializer
  remarks: This collection is only a wrapper for an internal collection of type serialization information
  example: []
  syntax:
    content: 'public sealed class XmlTypeCollection : ICollection<Type>, IEnumerable<Type>, IEnumerable'
    content.vb: Public NotInheritable Class XmlTypeCollection Implements ICollection(Of Type), IEnumerable(Of Type), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{System.Type}
  - System.Collections.Generic.IEnumerable{System.Type}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Serialization.XmlTypeCollection.#ctor(NMF.Serialization.XmlSerializer)
  commentId: M:NMF.Serialization.XmlTypeCollection.#ctor(NMF.Serialization.XmlSerializer)
  id: '#ctor(NMF.Serialization.XmlSerializer)'
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: XmlTypeCollection(XmlSerializer)
  nameWithType: XmlTypeCollection.XmlTypeCollection(XmlSerializer)
  fullName: NMF.Serialization.XmlTypeCollection.XmlTypeCollection(NMF.Serialization.XmlSerializer)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 21
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Creates a new typecollection for the given XmlSerializer
  example: []
  syntax:
    content: public XmlTypeCollection(XmlSerializer serializer)
    parameters:
    - id: serializer
      type: NMF.Serialization.XmlSerializer
      description: The XmlSerializer that will work with this set of types
    content.vb: Public Sub New(serializer As XmlSerializer)
  overload: NMF.Serialization.XmlTypeCollection.#ctor*
  nameWithType.vb: XmlTypeCollection.New(XmlSerializer)
  fullName.vb: NMF.Serialization.XmlTypeCollection.New(NMF.Serialization.XmlSerializer)
  name.vb: New(XmlSerializer)
- uid: NMF.Serialization.XmlTypeCollection.Serializer
  commentId: P:NMF.Serialization.XmlTypeCollection.Serializer
  id: Serializer
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: XmlTypeCollection.Serializer
  fullName: NMF.Serialization.XmlTypeCollection.Serializer
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serializer
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 30
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The corresponding XmlSerializer
  example: []
  syntax:
    content: public XmlSerializer Serializer { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlSerializer
    content.vb: Public ReadOnly Property Serializer As XmlSerializer
  overload: NMF.Serialization.XmlTypeCollection.Serializer*
- uid: NMF.Serialization.XmlTypeCollection.Add(System.Type)
  commentId: M:NMF.Serialization.XmlTypeCollection.Add(System.Type)
  id: Add(System.Type)
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Add(Type)
  nameWithType: XmlTypeCollection.Add(Type)
  fullName: NMF.Serialization.XmlTypeCollection.Add(System.Type)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 43
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Imports the given type to the XmlSerializer
  remarks: Note that importing a type will also import all the property types of this type, if they aren't already imported
  example: []
  syntax:
    content: public void Add(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to import
    content.vb: Public Sub Add(type As Type)
  overload: NMF.Serialization.XmlTypeCollection.Add*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.Add(System.Type)
- uid: NMF.Serialization.XmlTypeCollection.Clear
  commentId: M:NMF.Serialization.XmlTypeCollection.Clear
  id: Clear
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: XmlTypeCollection.Clear()
  fullName: NMF.Serialization.XmlTypeCollection.Clear()
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Clear
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 51
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Clears the set of types known to the XmlSerializer
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: NMF.Serialization.XmlTypeCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.Clear
- uid: NMF.Serialization.XmlTypeCollection.Contains(System.Type)
  commentId: M:NMF.Serialization.XmlTypeCollection.Contains(System.Type)
  id: Contains(System.Type)
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Contains(Type)
  nameWithType: XmlTypeCollection.Contains(Type)
  fullName: NMF.Serialization.XmlTypeCollection.Contains(System.Type)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Contains
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 61
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets a value that indicates whether the given type is already known to the XmlSerializer
  example: []
  syntax:
    content: public bool Contains(Type item)
    parameters:
    - id: item
      type: System.Type
      description: The type to look for
    return:
      type: System.Boolean
      description: True, if the type is already known to the XmlSerializer, otherwise False
    content.vb: Public Function Contains(item As Type) As Boolean
  overload: NMF.Serialization.XmlTypeCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.Contains(System.Type)
- uid: NMF.Serialization.XmlTypeCollection.CopyTo(System.Type[],System.Int32)
  commentId: M:NMF.Serialization.XmlTypeCollection.CopyTo(System.Type[],System.Int32)
  id: CopyTo(System.Type[],System.Int32)
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Type[], int)
  nameWithType: XmlTypeCollection.CopyTo(Type[], int)
  fullName: NMF.Serialization.XmlTypeCollection.CopyTo(System.Type[], int)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CopyTo
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 71
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Copies the known types into an array
  example: []
  syntax:
    content: public void CopyTo(Type[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Type[]
      description: The array to copy to
    - id: arrayIndex
      type: System.Int32
      description: The destination start index
    content.vb: Public Sub CopyTo(array As Type(), arrayIndex As Integer)
  overload: NMF.Serialization.XmlTypeCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.CopyTo(System.Type[],System.Int32)
  nameWithType.vb: XmlTypeCollection.CopyTo(Type(), Integer)
  fullName.vb: NMF.Serialization.XmlTypeCollection.CopyTo(System.Type(), Integer)
  name.vb: CopyTo(Type(), Integer)
- uid: NMF.Serialization.XmlTypeCollection.Count
  commentId: P:NMF.Serialization.XmlTypeCollection.Count
  id: Count
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: XmlTypeCollection.Count
  fullName: NMF.Serialization.XmlTypeCollection.Count
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Count
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 83
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gives the amount of types known to the XmlSerializer
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: NMF.Serialization.XmlTypeCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.Count
- uid: NMF.Serialization.XmlTypeCollection.Remove(System.Type)
  commentId: M:NMF.Serialization.XmlTypeCollection.Remove(System.Type)
  id: Remove(System.Type)
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: Remove(Type)
  nameWithType: XmlTypeCollection.Remove(Type)
  fullName: NMF.Serialization.XmlTypeCollection.Remove(System.Type)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Remove
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 104
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Removes the given type from the set
  example: []
  syntax:
    content: public bool Remove(Type item)
    parameters:
    - id: item
      type: System.Type
      description: The type to remove
    return:
      type: System.Boolean
      description: A value indicating whether removal was successful
    content.vb: Public Function Remove(item As Type) As Boolean
  overload: NMF.Serialization.XmlTypeCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Type}.Remove(System.Type)
- uid: NMF.Serialization.XmlTypeCollection.GetEnumerator
  commentId: M:NMF.Serialization.XmlTypeCollection.GetEnumerator
  id: GetEnumerator
  parent: NMF.Serialization.XmlTypeCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: XmlTypeCollection.GetEnumerator()
  fullName: NMF.Serialization.XmlTypeCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/XmlTypeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetEnumerator
    path: src/Models/Serialization/XML/XmlTypeCollection.cs
    startLine: 113
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets an enumerator to go through the collection
  example: []
  syntax:
    content: public IEnumerator<Type> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Type}
      description: An IEnumerator object
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Type)
  overload: NMF.Serialization.XmlTypeCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  href: NMF.html
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.ICollection{System.Type}
  commentId: T:System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  nameWithType.vb: ICollection(Of Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type)
  name.vb: ICollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Serialization.XmlTypeCollection.#ctor*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.#ctor
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection__ctor_NMF_Serialization_XmlSerializer_
  name: XmlTypeCollection
  nameWithType: XmlTypeCollection.XmlTypeCollection
  fullName: NMF.Serialization.XmlTypeCollection.XmlTypeCollection
  nameWithType.vb: XmlTypeCollection.New
  fullName.vb: NMF.Serialization.XmlTypeCollection.New
  name.vb: New
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  parent: NMF.Serialization
  href: NMF.Serialization.XmlSerializer.html
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
- uid: NMF.Serialization.XmlTypeCollection.Serializer*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Serializer
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Serializer
  name: Serializer
  nameWithType: XmlTypeCollection.Serializer
  fullName: NMF.Serialization.XmlTypeCollection.Serializer
- uid: NMF.Serialization.XmlTypeCollection.Add*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Add
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Add_System_Type_
  name: Add
  nameWithType: XmlTypeCollection.Add
  fullName: NMF.Serialization.XmlTypeCollection.Add
- uid: System.Collections.Generic.ICollection{System.Type}.Add(System.Type)
  commentId: M:System.Collections.Generic.ICollection{System.Type}.Add(System.Type)
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(Type)
  nameWithType: ICollection<Type>.Add(Type)
  fullName: System.Collections.Generic.ICollection<System.Type>.Add(System.Type)
  nameWithType.vb: ICollection(Of Type).Add(Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).Add(System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Type}.Add(System.Type)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Type}.Add(System.Type)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: NMF.Serialization.XmlTypeCollection.Clear*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Clear
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Clear
  name: Clear
  nameWithType: XmlTypeCollection.Clear
  fullName: NMF.Serialization.XmlTypeCollection.Clear
- uid: System.Collections.Generic.ICollection{System.Type}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Type}.Clear
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<Type>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Type>.Clear()
  nameWithType.vb: ICollection(Of Type).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Type}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Type}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: NMF.Serialization.XmlTypeCollection.Contains*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Contains
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Contains_System_Type_
  name: Contains
  nameWithType: XmlTypeCollection.Contains
  fullName: NMF.Serialization.XmlTypeCollection.Contains
- uid: System.Collections.Generic.ICollection{System.Type}.Contains(System.Type)
  commentId: M:System.Collections.Generic.ICollection{System.Type}.Contains(System.Type)
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(Type)
  nameWithType: ICollection<Type>.Contains(Type)
  fullName: System.Collections.Generic.ICollection<System.Type>.Contains(System.Type)
  nameWithType.vb: ICollection(Of Type).Contains(Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).Contains(System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Type}.Contains(System.Type)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Type}.Contains(System.Type)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: NMF.Serialization.XmlTypeCollection.CopyTo*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.CopyTo
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_CopyTo_System_Type___System_Int32_
  name: CopyTo
  nameWithType: XmlTypeCollection.CopyTo
  fullName: NMF.Serialization.XmlTypeCollection.CopyTo
- uid: System.Collections.Generic.ICollection{System.Type}.CopyTo(System.Type[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Type}.CopyTo(System.Type[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(Type[], int)
  nameWithType: ICollection<Type>.CopyTo(Type[], int)
  fullName: System.Collections.Generic.ICollection<System.Type>.CopyTo(System.Type[], int)
  nameWithType.vb: ICollection(Of Type).CopyTo(Type(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).CopyTo(System.Type(), Integer)
  name.vb: CopyTo(Type(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Type}.CopyTo(System.Type[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Type}.CopyTo(System.Type[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Serialization.XmlTypeCollection.Count*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Count
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Count
  name: Count
  nameWithType: XmlTypeCollection.Count
  fullName: NMF.Serialization.XmlTypeCollection.Count
- uid: System.Collections.Generic.ICollection{System.Type}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Type}.Count
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<Type>.Count
  fullName: System.Collections.Generic.ICollection<System.Type>.Count
  nameWithType.vb: ICollection(Of Type).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: NMF.Serialization.XmlTypeCollection.Remove*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.Remove
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_Remove_System_Type_
  name: Remove
  nameWithType: XmlTypeCollection.Remove
  fullName: NMF.Serialization.XmlTypeCollection.Remove
- uid: System.Collections.Generic.ICollection{System.Type}.Remove(System.Type)
  commentId: M:System.Collections.Generic.ICollection{System.Type}.Remove(System.Type)
  parent: System.Collections.Generic.ICollection{System.Type}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(Type)
  nameWithType: ICollection<Type>.Remove(Type)
  fullName: System.Collections.Generic.ICollection<System.Type>.Remove(System.Type)
  nameWithType.vb: ICollection(Of Type).Remove(Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type).Remove(System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Type}.Remove(System.Type)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Type}.Remove(System.Type)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: NMF.Serialization.XmlTypeCollection.GetEnumerator*
  commentId: Overload:NMF.Serialization.XmlTypeCollection.GetEnumerator
  href: NMF.Serialization.XmlTypeCollection.html#NMF_Serialization_XmlTypeCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: XmlTypeCollection.GetEnumerator
  fullName: NMF.Serialization.XmlTypeCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Type}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Type>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Type).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Type}
  commentId: T:System.Collections.Generic.IEnumerator{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<Type>
  nameWithType: IEnumerator<Type>
  fullName: System.Collections.Generic.IEnumerator<System.Type>
  nameWithType.vb: IEnumerator(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Type)
  name.vb: IEnumerator(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
