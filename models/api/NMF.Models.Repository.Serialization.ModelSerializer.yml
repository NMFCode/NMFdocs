### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.Serialization.ModelSerializer
  commentId: T:NMF.Models.Repository.Serialization.ModelSerializer
  id: ModelSerializer
  parent: NMF.Models.Repository.Serialization
  children:
  - NMF.Models.Repository.Serialization.ModelSerializer.#ctor
  - NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  - NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializer)
  - NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot(System.Object)
  - NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext(System.Object)
  - NMF.Models.Repository.Serialization.ModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  - NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  - NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
  - NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot(System.Object,System.Boolean)
  - NMF.Models.Repository.Serialization.ModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  - NMF.Models.Repository.Serialization.ModelSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  - NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  - NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  langs:
  - csharp
  - vb
  name: ModelSerializer
  nameWithType: ModelSerializer
  fullName: NMF.Models.Repository.Serialization.ModelSerializer
  type: Class
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelSerializer
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 16
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  summary: "\nDenotes the standard model serializer\n"
  example: []
  syntax:
    content: 'public class ModelSerializer : XmiSerializer, IModelSerializer'
    content.vb: Public Class ModelSerializer Inherits XmiSerializer Implements IModelSerializer
  inheritance:
  - System.Object
  - NMF.Serialization.XmlSerializer
  - NMF.Serialization.Xmi.XmiSerializer
  derivedClasses:
  - NMF.Models.Dynamic.Serialization.DynamicModelSerializer
  - NMF.Models.Repository.Serialization.ExplicitIdSerializer
  implements:
  - NMF.Models.Repository.IModelSerializer
  inheritedMembers:
  - NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  - NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  - NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  - NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  - NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  - NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  - NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.Settings
  - NMF.Serialization.XmlSerializer.KnownTypes
  - NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  - NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Deserialize(System.String)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  - NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  - NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  - NMF.Serialization.XmlSerializer.UnknownElement
  - NMF.Serialization.XmlSerializer.UnknownAttribute
  - NMF.Serialization.XmlSerializer.UnknownType
  - NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
  - NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.#ctor
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.#ctor
  id: '#ctor'
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: ModelSerializer()
  nameWithType: ModelSerializer.ModelSerializer()
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.ModelSerializer()
  type: Constructor
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 21
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  summary: "\nCreates a new model serializer\n"
  example: []
  syntax:
    content: public ModelSerializer()
    content.vb: Public Sub New()
  overload: NMF.Models.Repository.Serialization.ModelSerializer.#ctor*
  nameWithType.vb: ModelSerializer.New()
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.New()
  name.vb: New()
- uid: NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  id: '#ctor(NMF.Serialization.XmlSerializationSettings)'
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: ModelSerializer(XmlSerializationSettings)
  nameWithType: ModelSerializer.ModelSerializer(XmlSerializationSettings)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.ModelSerializer(NMF.Serialization.XmlSerializationSettings)
  type: Constructor
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 27
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  summary: "\nCreates a new model serializer\n"
  example: []
  syntax:
    content: public ModelSerializer(XmlSerializationSettings settings)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: The serialization settings
    content.vb: Public Sub New(settings As XmlSerializationSettings)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.#ctor*
  nameWithType.vb: ModelSerializer.New(XmlSerializationSettings)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.New(NMF.Serialization.XmlSerializationSettings)
  name.vb: New(XmlSerializationSettings)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializer)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializer)
  id: '#ctor(NMF.Serialization.XmlSerializer)'
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: ModelSerializer(XmlSerializer)
  nameWithType: ModelSerializer.ModelSerializer(XmlSerializer)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.ModelSerializer(NMF.Serialization.XmlSerializer)
  type: Constructor
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 33
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  summary: "\nCreates a new serializer and copies settings and known types from the given serializer\n"
  example: []
  syntax:
    content: public ModelSerializer(XmlSerializer parent)
    parameters:
    - id: parent
      type: NMF.Serialization.XmlSerializer
      description: An XML serializer to copy settings and known type information from
    content.vb: Public Sub New(parent As XmlSerializer)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.#ctor*
  nameWithType.vb: ModelSerializer.New(XmlSerializer)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.New(NMF.Serialization.XmlSerializer)
  name.vb: New(XmlSerializer)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: ModelSerializer(XmlSerializationSettings, IEnumerable<Type>)
  nameWithType: ModelSerializer.ModelSerializer(XmlSerializationSettings, IEnumerable<Type>)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.ModelSerializer(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 35
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: public ModelSerializer(XmlSerializationSettings settings, IEnumerable<Type> knownTypes)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Sub New(settings As XmlSerializationSettings, knownTypes As IEnumerable(Of Type))
  overload: NMF.Models.Repository.Serialization.ModelSerializer.#ctor*
  nameWithType.vb: ModelSerializer.New(XmlSerializationSettings, IEnumerable(Of Type))
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.New(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(XmlSerializationSettings, IEnumerable(Of Type))
- uid: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: ModelSerializer.InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties(System.Xml.XmlReader, ref object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeElementProperties
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 40
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override void InitializeElementProperties(XmlReader reader, ref object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overrides Sub InitializeElementProperties(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overridden: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties*
  nameWithType.vb: ModelSerializer.InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: ModelSerializer.WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteElementProperties
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 72
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override void WriteElementProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overrides Sub WriteElementProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overridden: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties*
  nameWithType.vb: ModelSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext(System.Object)
  id: CreateSerializationContext(System.Object)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: CreateSerializationContext(object)
  nameWithType: ModelSerializer.CreateSerializationContext(object)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext(object)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateSerializationContext
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 91
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override XmlSerializationContext CreateSerializationContext(object root)
    parameters:
    - id: root
      type: System.Object
    return:
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Protected Overrides Function CreateSerializationContext(root As Object) As XmlSerializationContext
  overridden: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext*
  nameWithType.vb: ModelSerializer.CreateSerializationContext(Object)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext(Object)
  name.vb: CreateSerializationContext(Object)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: ModelSerializer.WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteIdentifiedObject
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 99
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override bool WriteIdentifiedObject(XmlWriter writer, object obj, XmlIdentificationMode identificationMode, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    - id: obj
      type: System.Object
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function WriteIdentifiedObject(writer As XmlWriter, obj As Object, identificationMode As XmlIdentificationMode, info As ITypeSerializationInfo, context As XmlSerializationContext) As Boolean
  overridden: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject*
  nameWithType.vb: ModelSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  id: Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  nameWithType: ModelSerializer.Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.Serialize(object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, bool, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 116
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: public override void Serialize(object obj, XmlWriter writer, IPropertySerializationInfo property, bool writeInstance, XmlIdentificationMode identificationMode, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
    - id: writer
      type: System.Xml.XmlWriter
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: writeInstance
      type: System.Boolean
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    content.vb: Public Overrides Sub Serialize(obj As Object, writer As XmlWriter, [property] As IPropertySerializationInfo, writeInstance As Boolean, identificationMode As XmlIdentificationMode, context As XmlSerializationContext)
  overridden: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.Serialize*
  nameWithType.vb: ModelSerializer.Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.Serialize(Object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, Boolean, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  name.vb: Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  id: GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  nameWithType: ModelSerializer.GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue(object, NMF.Serialization.ITypeSerializationInfo, bool, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 138
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override string GetAttributeValue(object value, ITypeSerializationInfo info, bool isCollection, XmlSerializationContext context)
    parameters:
    - id: value
      type: System.Object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
    - id: isCollection
      type: System.Boolean
    - id: context
      type: NMF.Serialization.XmlSerializationContext
    return:
      type: System.String
    content.vb: Protected Overrides Function GetAttributeValue(value As Object, info As ITypeSerializationInfo, isCollection As Boolean, context As XmlSerializationContext) As String
  overridden: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue*
  nameWithType.vb: ModelSerializer.GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue(Object, NMF.Serialization.ITypeSerializationInfo, Boolean, NMF.Serialization.XmlSerializationContext)
  name.vb: GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: IsPropertyElement(XmlReader, IPropertySerializationInfo)
  nameWithType: ModelSerializer.IsPropertyElement(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsPropertyElement
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 169
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override bool IsPropertyElement(XmlReader reader, IPropertySerializationInfo p)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    - id: p
      type: NMF.Serialization.IPropertySerializationInfo
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsPropertyElement(reader As XmlReader, p As IPropertySerializationInfo) As Boolean
  overridden: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement*
- uid: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot(System.Object)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot(System.Object)
  id: CreateModelForRoot(System.Object)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: CreateModelForRoot(object)
  nameWithType: ModelSerializer.CreateModelForRoot(object)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot(object)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateModelForRoot
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 181
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected virtual Model CreateModelForRoot(object root)
    parameters:
    - id: root
      type: System.Object
    return:
      type: NMF.Models.Model
    content.vb: Protected Overridable Function CreateModelForRoot(root As Object) As Model
  overload: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot*
  nameWithType.vb: ModelSerializer.CreateModelForRoot(Object)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot(Object)
  name.vb: CreateModelForRoot(Object)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  id: Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream, Uri, IModelRepository, bool)
  nameWithType: ModelSerializer.Deserialize(Stream, Uri, IModelRepository, bool)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize(System.IO.Stream, System.Uri, NMF.Models.Repository.IModelRepository, bool)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Deserialize
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 199
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: public Model Deserialize(Stream source, Uri modelUri, IModelRepository repository, bool addToRepository)
    parameters:
    - id: source
      type: System.IO.Stream
    - id: modelUri
      type: System.Uri
    - id: repository
      type: NMF.Models.Repository.IModelRepository
    - id: addToRepository
      type: System.Boolean
    return:
      type: NMF.Models.Model
    content.vb: Public Function Deserialize(source As Stream, modelUri As Uri, repository As IModelRepository, addToRepository As Boolean) As Model
  overload: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize*
  implements:
  - NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  nameWithType.vb: ModelSerializer.Deserialize(Stream, Uri, IModelRepository, Boolean)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize(System.IO.Stream, System.Uri, NMF.Models.Repository.IModelRepository, Boolean)
  name.vb: Deserialize(Stream, Uri, IModelRepository, Boolean)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot(System.Object,System.Boolean)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot(System.Object,System.Boolean)
  id: SelectRoot(System.Object,System.Boolean)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: SelectRoot(object, bool)
  nameWithType: ModelSerializer.SelectRoot(object, bool)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot(object, bool)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SelectRoot
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 230
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  summary: "\nGets the serialization root element\n"
  example: []
  syntax:
    content: protected override object SelectRoot(object graph, bool fragment)
    parameters:
    - id: graph
      type: System.Object
      description: The base element that should be serialized
    - id: fragment
      type: System.Boolean
      description: A value indicating whether only a fragment should be written
    return:
      type: System.Object
      description: The root element for serialization
    content.vb: Protected Overrides Function SelectRoot(graph As Object, fragment As Boolean) As Object
  overridden: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot*
  nameWithType.vb: ModelSerializer.SelectRoot(Object, Boolean)
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot(Object, Boolean)
  name.vb: SelectRoot(Object, Boolean)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
  commentId: P:NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
  id: IdAttribute
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: IdAttribute
  nameWithType: ModelSerializer.IdAttribute
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
  type: Property
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdAttribute
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 246
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: protected override IPropertySerializationInfo IdAttribute { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Protected Overrides ReadOnly Property IdAttribute As IPropertySerializationInfo
  overridden: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  overload: NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute*
- uid: NMF.Models.Repository.Serialization.ModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  id: Serialize(NMF.Models.Model,System.IO.Stream)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Model, Stream)
  nameWithType: ModelSerializer.Serialize(Model, Stream)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.Serialize(NMF.Models.Model, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Serialize
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 254
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: public void Serialize(Model model, Stream target)
    parameters:
    - id: model
      type: NMF.Models.Model
    - id: target
      type: System.IO.Stream
    content.vb: Public Sub Serialize(model As Model, target As Stream)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.Serialize*
  implements:
  - NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
- uid: NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  commentId: M:NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  id: SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  parent: NMF.Models.Repository.Serialization.ModelSerializer
  langs:
  - csharp
  - vb
  name: SerializeFragment(ModelElement, Stream)
  nameWithType: ModelSerializer.SerializeFragment(ModelElement, Stream)
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment(NMF.Models.ModelElement, System.IO.Stream)
  type: Method
  source:
    remote:
      path: Models/Models/Repository/Serialization/ModelSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SerializeFragment
    path: src/Models/Models/Repository/Serialization/ModelSerializer.cs
    startLine: 259
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository.Serialization
  syntax:
    content: public void SerializeFragment(ModelElement element, Stream target)
    parameters:
    - id: element
      type: NMF.Models.ModelElement
    - id: target
      type: System.IO.Stream
    content.vb: Public Sub SerializeFragment(element As ModelElement, target As Stream)
  overload: NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment*
  implements:
  - NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
references:
- uid: NMF.Models.Repository.Serialization
  commentId: N:NMF.Models.Repository.Serialization
  name: NMF.Models.Repository.Serialization
  nameWithType: NMF.Models.Repository.Serialization
  fullName: NMF.Models.Repository.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
  - name: .
  - uid: NMF.Models.Repository.Serialization
    name: Serialization
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
  - name: .
  - uid: NMF.Models.Repository.Serialization
    name: Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  parent: NMF.Serialization
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
- uid: NMF.Serialization.Xmi.XmiSerializer
  commentId: T:NMF.Serialization.Xmi.XmiSerializer
  parent: NMF.Serialization.Xmi
  name: XmiSerializer
  nameWithType: XmiSerializer
  fullName: NMF.Serialization.Xmi.XmiSerializer
- uid: NMF.Models.Repository.IModelSerializer
  commentId: T:NMF.Models.Repository.IModelSerializer
  parent: NMF.Models.Repository
  name: IModelSerializer
  nameWithType: IModelSerializer
  fullName: NMF.Models.Repository.IModelSerializer
- uid: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: XMLSchemaInstanceNamespace
  nameWithType: XmiSerializer.XMLSchemaInstanceNamespace
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
- uid: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: XMLSchemaInstancePrefix
  nameWithType: XmiSerializer.XMLSchemaInstancePrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
- uid: NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: XMIPrefix
  nameWithType: XmiSerializer.XMIPrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
- uid: NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: XMINamespace
  nameWithType: XmiSerializer.XMINamespace
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMINamespace
- uid: NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  commentId: P:NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: RootPrefix
  nameWithType: XmiSerializer.RootPrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.RootPrefix
- uid: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: GoToPropertyContent(XmlReader)
  nameWithType: XmiSerializer.GoToPropertyContent(XmlReader)
  fullName: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
    name: GoToPropertyContent
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
    name: GoToPropertyContent
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  nameWithType: XmiSerializer.GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: GetElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: GetElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmiSerializer.WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmiSerializer.WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmiSerializer.WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmiSerializer.WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  nameWithType: XmiSerializer.OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiSerializer.OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(Object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  name.vb: OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
    name: OverrideIdentifiedObject
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
    name: OverrideIdentifiedObject
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiSerializer.HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownAttribute
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownAttribute
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  nameWithType: XmiSerializer.InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type, NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
    name: InitializeTypeSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
    name: InitializeTypeSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.XmlSerializer.Settings
  commentId: P:NMF.Serialization.XmlSerializer.Settings
  parent: NMF.Serialization.XmlSerializer
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
- uid: NMF.Serialization.XmlSerializer.KnownTypes
  commentId: P:NMF.Serialization.XmlSerializer.KnownTypes
  parent: NMF.Serialization.XmlSerializer
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  name: RegisterNamespace(ITypeSerializationInfo)
  nameWithType: XmlSerializer.RegisterNamespace(ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
    name: RegisterNamespace
  - name: (
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
    name: RegisterNamespace
  - name: (
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetTypeInfo(string, string)
  nameWithType: XmlSerializer.GetTypeInfo(string, string)
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo(string, string)
  nameWithType.vb: XmlSerializer.GetTypeInfo(String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.GetTypeInfo(String, String)
  name.vb: GetTypeInfo(String, String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
    name: GetTypeInfo
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
    name: GetTypeInfo
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  commentId: M:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateTypeSerializationInfoFor(Type)
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor(Type)
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
    name: CreateTypeSerializationInfoFor
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
    name: CreateTypeSerializationInfoFor
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, string, bool)
  nameWithType: XmlSerializer.Serialize(object, string, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, string, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, String, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, String, Boolean)
  name.vb: Serialize(Object, String, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, Stream, bool)
  nameWithType: XmlSerializer.Serialize(object, Stream, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.Stream, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, Stream, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.Stream, Boolean)
  name.vb: Serialize(Object, Stream, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, TextWriter)
  nameWithType: XmlSerializer.Serialize(object, TextWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter)
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter)
  name.vb: Serialize(Object, TextWriter)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter)
  name.vb: Serialize(Object, XmlWriter)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, TextWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, TextWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter, Boolean)
  name.vb: Serialize(Object, TextWriter, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, Boolean)
  name.vb: Serialize(Object, XmlWriter, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteConstructorProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteConstructorProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, object, object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, Object, Object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeValue
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeValue
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteCollectionMembers
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteCollectionMembers
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(string)
  nameWithType: XmlSerializer.Deserialize(string)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(string)
  nameWithType.vb: XmlSerializer.Deserialize(String)
  fullName.vb: NMF.Serialization.XmlSerializer.Deserialize(String)
  name.vb: Deserialize(String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
    name: Deserialize
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
    name: Deserialize
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(TextReader)
  nameWithType: XmlSerializer.Deserialize(TextReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
    name: Deserialize
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
    name: Deserialize
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
    name: Deserialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
    name: Deserialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateRoot(XmlReader)
  nameWithType: XmlSerializer.CreateRoot(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
    name: CreateRoot
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
    name: CreateRoot
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetRootElementTypeInfo(XmlReader)
  nameWithType: XmlSerializer.GetRootElementTypeInfo(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
    name: GetRootElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
    name: GetRootElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: CreateObject
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: CreateObject
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
    name: InitializeProperty
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
    name: InitializeProperty
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, object, string, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, Object, String, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
    name: InitializePropertyFromText
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
    name: InitializePropertyFromText
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Initialize(XmlReader, object, XmlSerializationContext)
  nameWithType: XmlSerializer.Initialize(XmlReader, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.Initialize(XmlReader, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: Initialize(XmlReader, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
    name: Initialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
    name: Initialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeAttributeProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeAttributeProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: HandleUnknownType(IPropertySerializationInfo, string, string)
  nameWithType: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, string, string)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, string, string)
  nameWithType.vb: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, String, String)
  name.vb: HandleUnknownType(IPropertySerializationInfo, String, String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
    name: HandleUnknownType
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
    name: HandleUnknownType
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownElement(UnknownElementEventArgs)
  nameWithType: XmlSerializer.OnUnknownElement(UnknownElementEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
    name: OnUnknownElement
  - name: (
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
    name: OnUnknownElement
  - name: (
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownAttribute(UnknownAttributeEventArgs)
  nameWithType: XmlSerializer.OnUnknownAttribute(UnknownAttributeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
    name: OnUnknownAttribute
  - name: (
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
    name: OnUnknownAttribute
  - name: (
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownType(UnknownTypeEventArgs)
  nameWithType: XmlSerializer.OnUnknownType(UnknownTypeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
    name: OnUnknownType
  - name: (
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
    name: OnUnknownType
  - name: (
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.UnknownElement
  commentId: E:NMF.Serialization.XmlSerializer.UnknownElement
  parent: NMF.Serialization.XmlSerializer
  name: UnknownElement
  nameWithType: XmlSerializer.UnknownElement
  fullName: NMF.Serialization.XmlSerializer.UnknownElement
- uid: NMF.Serialization.XmlSerializer.UnknownAttribute
  commentId: E:NMF.Serialization.XmlSerializer.UnknownAttribute
  parent: NMF.Serialization.XmlSerializer
  name: UnknownAttribute
  nameWithType: XmlSerializer.UnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.UnknownAttribute
- uid: NMF.Serialization.XmlSerializer.UnknownType
  commentId: E:NMF.Serialization.XmlSerializer.UnknownType
  parent: NMF.Serialization.XmlSerializer
  name: UnknownType
  nameWithType: XmlSerializer.UnknownType
  fullName: NMF.Serialization.XmlSerializer.UnknownType
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetSerializationInfoForInstance(object, bool)
  nameWithType: XmlSerializer.GetSerializationInfoForInstance(object, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(object, bool)
  nameWithType.vb: XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  name.vb: GetSerializationInfoForInstance(Object, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
    name: GetSerializationInfoForInstance
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
    name: GetSerializationInfoForInstance
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetSerializationInfo(Type, bool)
  nameWithType: XmlSerializer.GetSerializationInfo(Type, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, bool)
  nameWithType.vb: XmlSerializer.GetSerializationInfo(Type, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, Boolean)
  name.vb: GetSerializationInfo(Type, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
    name: GetSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
    name: GetSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  name: Serialize(IModelSerializer, IModelElement, Stream, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, Stream, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, System.IO.Stream, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  name: Serialize(IModelSerializer, IModelElement, string, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, string, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, string, System.Uri)
  nameWithType.vb: ModelExtensions.Serialize(IModelSerializer, IModelElement, String, Uri)
  fullName.vb: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, String, System.Uri)
  name.vb: Serialize(IModelSerializer, IModelElement, String, Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.Repository.IModelSerializer.NMF.Models.ModelExtensions.Serialize(NMF.Models.IModelElement,System.String)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  name: Serialize(IModelSerializer, IModelElement, string)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, string)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, string)
  nameWithType.vb: ModelExtensions.Serialize(IModelSerializer, IModelElement, String)
  fullName.vb: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, String)
  name.vb: Serialize(IModelSerializer, IModelElement, String)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, Stream, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, Stream, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, System.IO.Stream, System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.IO.Stream,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, string, Uri)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, string, Uri)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, string, System.Uri)
  nameWithType.vb: ModelExtensions.Serialize(IModelSerializer, IModelElement, String, Uri)
  fullName.vb: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, String, System.Uri)
  name.vb: Serialize(IModelSerializer, IModelElement, String, Uri)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String,System.Uri)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  commentId: M:NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
  isExternal: true
  name: Serialize(IModelSerializer, IModelElement, string)
  nameWithType: ModelExtensions.Serialize(IModelSerializer, IModelElement, string)
  fullName: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, string)
  nameWithType.vb: ModelExtensions.Serialize(IModelSerializer, IModelElement, String)
  fullName.vb: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer, NMF.Models.IModelElement, String)
  name.vb: Serialize(IModelSerializer, IModelElement, String)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Serialize(NMF.Models.Repository.IModelSerializer,NMF.Models.IModelElement,System.String)
    name: Serialize
  - name: (
  - uid: NMF.Models.Repository.IModelSerializer
    name: IModelSerializer
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: NMF.Models.Repository.Serialization.ModelSerializer.#ctor*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.#ctor
  name: ModelSerializer
  nameWithType: ModelSerializer.ModelSerializer
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.ModelSerializer
  nameWithType.vb: ModelSerializer.New
  fullName.vb: NMF.Models.Repository.Serialization.ModelSerializer.New
  name.vb: New
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  parent: NMF.Serialization
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader, ref object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiSerializer.InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeElementProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeElementProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties
  name: InitializeElementProperties
  nameWithType: ModelSerializer.InitializeElementProperties
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.InitializeElementProperties
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteElementProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteElementProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties
  name: WriteElementProperties
  nameWithType: ModelSerializer.WriteElementProperties
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.WriteElementProperties
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: CreateSerializationContext(object)
  nameWithType: XmiSerializer.CreateSerializationContext(object)
  fullName: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(object)
  nameWithType.vb: XmiSerializer.CreateSerializationContext(Object)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(Object)
  name.vb: CreateSerializationContext(Object)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
    name: CreateSerializationContext
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
    name: CreateSerializationContext
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext
  name: CreateSerializationContext
  nameWithType: ModelSerializer.CreateSerializationContext
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.CreateSerializationContext
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  isExternal: true
  name: WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmiSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteIdentifiedObject
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteIdentifiedObject
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject
  name: WriteIdentifiedObject
  nameWithType: ModelSerializer.WriteIdentifiedObject
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.WriteIdentifiedObject
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, bool, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, Boolean, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  name.vb: Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.Serialize*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.Serialize
  name: Serialize
  nameWithType: ModelSerializer.Serialize
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.Serialize
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  nameWithType: XmlSerializer.GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue(object, NMF.Serialization.ITypeSerializationInfo, bool, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.GetAttributeValue(Object, NMF.Serialization.ITypeSerializationInfo, Boolean, NMF.Serialization.XmlSerializationContext)
  name.vb: GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
    name: GetAttributeValue
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
    name: GetAttributeValue
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue
  name: GetAttributeValue
  nameWithType: ModelSerializer.GetAttributeValue
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.GetAttributeValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: IsPropertyElement(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.IsPropertyElement(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: IsPropertyElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: IsPropertyElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement
  name: IsPropertyElement
  nameWithType: ModelSerializer.IsPropertyElement
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.IsPropertyElement
- uid: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot
  name: CreateModelForRoot
  nameWithType: ModelSerializer.CreateModelForRoot
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.CreateModelForRoot
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  parent: NMF.Models
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
- uid: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.Deserialize
  name: Deserialize
  nameWithType: ModelSerializer.Deserialize
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.Deserialize
- uid: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  commentId: M:NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
  parent: NMF.Models.Repository.IModelSerializer
  isExternal: true
  name: Deserialize(Stream, Uri, IModelRepository, bool)
  nameWithType: IModelSerializer.Deserialize(Stream, Uri, IModelRepository, bool)
  fullName: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream, System.Uri, NMF.Models.Repository.IModelRepository, bool)
  nameWithType.vb: IModelSerializer.Deserialize(Stream, Uri, IModelRepository, Boolean)
  fullName.vb: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream, System.Uri, NMF.Models.Repository.IModelRepository, Boolean)
  name.vb: Deserialize(Stream, Uri, IModelRepository, Boolean)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Models.Repository.IModelRepository
    name: IModelRepository
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelSerializer.Deserialize(System.IO.Stream,System.Uri,NMF.Models.Repository.IModelRepository,System.Boolean)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Models.Repository.IModelRepository
    name: IModelRepository
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.Repository.IModelRepository
  commentId: T:NMF.Models.Repository.IModelRepository
  parent: NMF.Models.Repository
  name: IModelRepository
  nameWithType: IModelRepository
  fullName: NMF.Models.Repository.IModelRepository
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
- uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: SelectRoot(object, bool)
  nameWithType: XmlSerializer.SelectRoot(object, bool)
  fullName: NMF.Serialization.XmlSerializer.SelectRoot(object, bool)
  nameWithType.vb: XmlSerializer.SelectRoot(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.SelectRoot(Object, Boolean)
  name.vb: SelectRoot(Object, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
    name: SelectRoot
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
    name: SelectRoot
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot
  name: SelectRoot
  nameWithType: ModelSerializer.SelectRoot
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.SelectRoot
- uid: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  commentId: P:NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  parent: NMF.Serialization.Xmi.XmiSerializer
  name: IdAttribute
  nameWithType: XmiSerializer.IdAttribute
  fullName: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
- uid: NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
  name: IdAttribute
  nameWithType: ModelSerializer.IdAttribute
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.IdAttribute
- uid: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  commentId: M:NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
  parent: NMF.Models.Repository.IModelSerializer
  isExternal: true
  name: Serialize(Model, Stream)
  nameWithType: IModelSerializer.Serialize(Model, Stream)
  fullName: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model, System.IO.Stream)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
    name: Serialize
  - name: (
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelSerializer.Serialize(NMF.Models.Model,System.IO.Stream)
    name: Serialize
  - name: (
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
- uid: NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment*
  commentId: Overload:NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment
  name: SerializeFragment
  nameWithType: ModelSerializer.SerializeFragment
  fullName: NMF.Models.Repository.Serialization.ModelSerializer.SerializeFragment
- uid: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  commentId: M:NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
  parent: NMF.Models.Repository.IModelSerializer
  isExternal: true
  name: SerializeFragment(ModelElement, Stream)
  nameWithType: IModelSerializer.SerializeFragment(ModelElement, Stream)
  fullName: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement, System.IO.Stream)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
    name: SerializeFragment
  - name: (
  - uid: NMF.Models.ModelElement
    name: ModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelSerializer.SerializeFragment(NMF.Models.ModelElement,System.IO.Stream)
    name: SerializeFragment
  - name: (
  - uid: NMF.Models.ModelElement
    name: ModelElement
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
