### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.UnknownAttributeEventArgs
  commentId: T:NMF.Serialization.UnknownAttributeEventArgs
  id: UnknownAttributeEventArgs
  parent: NMF.Serialization
  children:
  - NMF.Serialization.UnknownAttributeEventArgs.#ctor(System.Object,System.String,System.String,System.String)
  - NMF.Serialization.UnknownAttributeEventArgs.Context
  - NMF.Serialization.UnknownAttributeEventArgs.Name
  - NMF.Serialization.UnknownAttributeEventArgs.Namespace
  - NMF.Serialization.UnknownAttributeEventArgs.Value
  langs:
  - csharp
  - vb
  name: UnknownAttributeEventArgs
  nameWithType: UnknownAttributeEventArgs
  fullName: NMF.Serialization.UnknownAttributeEventArgs
  type: Class
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownAttributeEventArgs
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 6
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: 'public class UnknownAttributeEventArgs : EventArgs'
    content.vb: >-
      Public Class UnknownAttributeEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.UnknownAttributeEventArgs.Context
  commentId: P:NMF.Serialization.UnknownAttributeEventArgs.Context
  id: Context
  parent: NMF.Serialization.UnknownAttributeEventArgs
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: UnknownAttributeEventArgs.Context
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Context
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Context
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 8
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public object Context { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Context As Object
  overload: NMF.Serialization.UnknownAttributeEventArgs.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownAttributeEventArgs.Namespace
  commentId: P:NMF.Serialization.UnknownAttributeEventArgs.Namespace
  id: Namespace
  parent: NMF.Serialization.UnknownAttributeEventArgs
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: UnknownAttributeEventArgs.Namespace
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 9
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Namespace As String
  overload: NMF.Serialization.UnknownAttributeEventArgs.Namespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownAttributeEventArgs.Name
  commentId: P:NMF.Serialization.UnknownAttributeEventArgs.Name
  id: Name
  parent: NMF.Serialization.UnknownAttributeEventArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnknownAttributeEventArgs.Name
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Name
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Name
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 11
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: NMF.Serialization.UnknownAttributeEventArgs.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownAttributeEventArgs.Value
  commentId: P:NMF.Serialization.UnknownAttributeEventArgs.Value
  id: Value
  parent: NMF.Serialization.UnknownAttributeEventArgs
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: UnknownAttributeEventArgs.Value
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Value
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Value
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 13
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: NMF.Serialization.UnknownAttributeEventArgs.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownAttributeEventArgs.#ctor(System.Object,System.String,System.String,System.String)
  commentId: M:NMF.Serialization.UnknownAttributeEventArgs.#ctor(System.Object,System.String,System.String,System.String)
  id: '#ctor(System.Object,System.String,System.String,System.String)'
  parent: NMF.Serialization.UnknownAttributeEventArgs
  langs:
  - csharp
  - vb
  name: UnknownAttributeEventArgs(Object, String, String, String)
  nameWithType: UnknownAttributeEventArgs.UnknownAttributeEventArgs(Object, String, String, String)
  fullName: NMF.Serialization.UnknownAttributeEventArgs.UnknownAttributeEventArgs(System.Object, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/UnknownAttributeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/UnknownAttributeEventArgs.cs
    startLine: 15
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public UnknownAttributeEventArgs(object context, string ns, string name, string value)
    parameters:
    - id: context
      type: System.Object
    - id: ns
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub New(context As Object, ns As String, name As String, value As String)
  overload: NMF.Serialization.UnknownAttributeEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.UnknownAttributeEventArgs.Context*
  commentId: Overload:NMF.Serialization.UnknownAttributeEventArgs.Context
  name: Context
  nameWithType: UnknownAttributeEventArgs.Context
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Context
- uid: NMF.Serialization.UnknownAttributeEventArgs.Namespace*
  commentId: Overload:NMF.Serialization.UnknownAttributeEventArgs.Namespace
  name: Namespace
  nameWithType: UnknownAttributeEventArgs.Namespace
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Namespace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.UnknownAttributeEventArgs.Name*
  commentId: Overload:NMF.Serialization.UnknownAttributeEventArgs.Name
  name: Name
  nameWithType: UnknownAttributeEventArgs.Name
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Name
- uid: NMF.Serialization.UnknownAttributeEventArgs.Value*
  commentId: Overload:NMF.Serialization.UnknownAttributeEventArgs.Value
  name: Value
  nameWithType: UnknownAttributeEventArgs.Value
  fullName: NMF.Serialization.UnknownAttributeEventArgs.Value
- uid: NMF.Serialization.UnknownAttributeEventArgs.#ctor*
  commentId: Overload:NMF.Serialization.UnknownAttributeEventArgs.#ctor
  name: UnknownAttributeEventArgs
  nameWithType: UnknownAttributeEventArgs.UnknownAttributeEventArgs
  fullName: NMF.Serialization.UnknownAttributeEventArgs.UnknownAttributeEventArgs
