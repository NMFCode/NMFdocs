### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.FileLocator
  commentId: T:NMF.Models.Repository.FileLocator
  id: FileLocator
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.FileLocator.CanLocate(System.Uri)
  - NMF.Models.Repository.FileLocator.GetRepositoryUri(System.Uri)
  - NMF.Models.Repository.FileLocator.Instance
  - NMF.Models.Repository.FileLocator.Open(System.Uri)
  langs:
  - csharp
  - vb
  name: FileLocator
  nameWithType: FileLocator
  fullName: NMF.Models.Repository.FileLocator
  type: Class
  source:
    remote:
      path: src/Models/Models/Repository/FileLocator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: FileLocator
    path: src/Models/Models/Repository/FileLocator.cs
    startLine: 8
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: 'public class FileLocator : IModelLocator'
    content.vb: Public Class FileLocator Implements IModelLocator
  inheritance:
  - System.Object
  implements:
  - NMF.Models.Repository.IModelLocator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.Repository.FileLocator.Instance
  commentId: P:NMF.Models.Repository.FileLocator.Instance
  id: Instance
  parent: NMF.Models.Repository.FileLocator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: FileLocator.Instance
  fullName: NMF.Models.Repository.FileLocator.Instance
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/FileLocator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Instance
    path: src/Models/Models/Repository/FileLocator.cs
    startLine: 12
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: public static FileLocator Instance { get; }
    parameters: []
    return:
      type: NMF.Models.Repository.FileLocator
    content.vb: Public Shared ReadOnly Property Instance As FileLocator
  overload: NMF.Models.Repository.FileLocator.Instance*
- uid: NMF.Models.Repository.FileLocator.CanLocate(System.Uri)
  commentId: M:NMF.Models.Repository.FileLocator.CanLocate(System.Uri)
  id: CanLocate(System.Uri)
  parent: NMF.Models.Repository.FileLocator
  langs:
  - csharp
  - vb
  name: CanLocate(Uri)
  nameWithType: FileLocator.CanLocate(Uri)
  fullName: NMF.Models.Repository.FileLocator.CanLocate(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/FileLocator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CanLocate
    path: src/Models/Models/Repository/FileLocator.cs
    startLine: 14
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool CanLocate(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: System.Boolean
    content.vb: Public Function CanLocate(uri As Uri) As Boolean
  overload: NMF.Models.Repository.FileLocator.CanLocate*
  implements:
  - NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
- uid: NMF.Models.Repository.FileLocator.GetRepositoryUri(System.Uri)
  commentId: M:NMF.Models.Repository.FileLocator.GetRepositoryUri(System.Uri)
  id: GetRepositoryUri(System.Uri)
  parent: NMF.Models.Repository.FileLocator
  langs:
  - csharp
  - vb
  name: GetRepositoryUri(Uri)
  nameWithType: FileLocator.GetRepositoryUri(Uri)
  fullName: NMF.Models.Repository.FileLocator.GetRepositoryUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/FileLocator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetRepositoryUri
    path: src/Models/Models/Repository/FileLocator.cs
    startLine: 19
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public Uri GetRepositoryUri(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: System.Uri
    content.vb: Public Function GetRepositoryUri(uri As Uri) As Uri
  overload: NMF.Models.Repository.FileLocator.GetRepositoryUri*
  implements:
  - NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
- uid: NMF.Models.Repository.FileLocator.Open(System.Uri)
  commentId: M:NMF.Models.Repository.FileLocator.Open(System.Uri)
  id: Open(System.Uri)
  parent: NMF.Models.Repository.FileLocator
  langs:
  - csharp
  - vb
  name: Open(Uri)
  nameWithType: FileLocator.Open(Uri)
  fullName: NMF.Models.Repository.FileLocator.Open(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/FileLocator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Open
    path: src/Models/Models/Repository/FileLocator.cs
    startLine: 32
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public Stream Open(Uri repositoryId)
    parameters:
    - id: repositoryId
      type: System.Uri
    return:
      type: System.IO.Stream
    content.vb: Public Function Open(repositoryId As Uri) As Stream
  overload: NMF.Models.Repository.FileLocator.Open*
  implements:
  - NMF.Models.Repository.IModelLocator.Open(System.Uri)
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  href: NMF.html
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Models.Repository.IModelLocator
  commentId: T:NMF.Models.Repository.IModelLocator
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.IModelLocator.html
  name: IModelLocator
  nameWithType: IModelLocator
  fullName: NMF.Models.Repository.IModelLocator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Repository.FileLocator.Instance*
  commentId: Overload:NMF.Models.Repository.FileLocator.Instance
  href: NMF.Models.Repository.FileLocator.html#NMF_Models_Repository_FileLocator_Instance
  name: Instance
  nameWithType: FileLocator.Instance
  fullName: NMF.Models.Repository.FileLocator.Instance
- uid: NMF.Models.Repository.FileLocator
  commentId: T:NMF.Models.Repository.FileLocator
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.FileLocator.html
  name: FileLocator
  nameWithType: FileLocator
  fullName: NMF.Models.Repository.FileLocator
- uid: NMF.Models.Repository.FileLocator.CanLocate*
  commentId: Overload:NMF.Models.Repository.FileLocator.CanLocate
  href: NMF.Models.Repository.FileLocator.html#NMF_Models_Repository_FileLocator_CanLocate_System_Uri_
  name: CanLocate
  nameWithType: FileLocator.CanLocate
  fullName: NMF.Models.Repository.FileLocator.CanLocate
- uid: NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
  commentId: M:NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
  parent: NMF.Models.Repository.IModelLocator
  isExternal: true
  href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_CanLocate_System_Uri_
  name: CanLocate(Uri)
  nameWithType: IModelLocator.CanLocate(Uri)
  fullName: NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
    name: CanLocate
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_CanLocate_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelLocator.CanLocate(System.Uri)
    name: CanLocate
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_CanLocate_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Models.Repository.FileLocator.GetRepositoryUri*
  commentId: Overload:NMF.Models.Repository.FileLocator.GetRepositoryUri
  href: NMF.Models.Repository.FileLocator.html#NMF_Models_Repository_FileLocator_GetRepositoryUri_System_Uri_
  name: GetRepositoryUri
  nameWithType: FileLocator.GetRepositoryUri
  fullName: NMF.Models.Repository.FileLocator.GetRepositoryUri
- uid: NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
  commentId: M:NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
  parent: NMF.Models.Repository.IModelLocator
  isExternal: true
  href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_GetRepositoryUri_System_Uri_
  name: GetRepositoryUri(Uri)
  nameWithType: IModelLocator.GetRepositoryUri(Uri)
  fullName: NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
    name: GetRepositoryUri
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_GetRepositoryUri_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelLocator.GetRepositoryUri(System.Uri)
    name: GetRepositoryUri
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_GetRepositoryUri_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: NMF.Models.Repository.FileLocator.Open*
  commentId: Overload:NMF.Models.Repository.FileLocator.Open
  href: NMF.Models.Repository.FileLocator.html#NMF_Models_Repository_FileLocator_Open_System_Uri_
  name: Open
  nameWithType: FileLocator.Open
  fullName: NMF.Models.Repository.FileLocator.Open
- uid: NMF.Models.Repository.IModelLocator.Open(System.Uri)
  commentId: M:NMF.Models.Repository.IModelLocator.Open(System.Uri)
  parent: NMF.Models.Repository.IModelLocator
  isExternal: true
  href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_Open_System_Uri_
  name: Open(Uri)
  nameWithType: IModelLocator.Open(Uri)
  fullName: NMF.Models.Repository.IModelLocator.Open(System.Uri)
  spec.csharp:
  - uid: NMF.Models.Repository.IModelLocator.Open(System.Uri)
    name: Open
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_Open_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: NMF.Models.Repository.IModelLocator.Open(System.Uri)
    name: Open
    href: NMF.Models.Repository.IModelLocator.html#NMF_Models_Repository_IModelLocator_Open_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
