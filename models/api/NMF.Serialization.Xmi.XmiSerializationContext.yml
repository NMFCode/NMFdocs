### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.Xmi.XmiSerializationContext
  commentId: T:NMF.Serialization.Xmi.XmiSerializationContext
  id: XmiSerializationContext
  parent: NMF.Serialization.Xmi
  children:
  - NMF.Serialization.Xmi.XmiSerializationContext.#ctor(System.Object)
  - NMF.Serialization.Xmi.XmiSerializationContext.GetId(System.Object)
  - NMF.Serialization.Xmi.XmiSerializationContext.IDs
  - NMF.Serialization.Xmi.XmiSerializationContext.SetId(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: XmiSerializationContext
  nameWithType: XmiSerializationContext
  fullName: NMF.Serialization.Xmi.XmiSerializationContext
  type: Class
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializationEntity.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmiSerializationContext
    path: src/Models/Serialization/XMI/XmiSerializationEntity.cs
    startLine: 12
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes a deserialization context for XMI\n"
  example: []
  syntax:
    content: 'public class XmiSerializationContext : XmlSerializationContext'
    content.vb: >-
      Public Class XmiSerializationContext
          Inherits XmlSerializationContext
  inheritance:
  - System.Object
  - NMF.Serialization.XmlSerializationContext
  derivedClasses:
  - NMF.Models.Repository.Serialization.ModelSerializationContext
  inheritedMembers:
  - NMF.Serialization.XmlSerializationContext.Cleanup
  - NMF.Serialization.XmlSerializationContext.RegisterId(System.String,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializationContext.ContainsId(System.String,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializationContext.OnNameClash(System.String,NMF.Serialization.ITypeSerializationInfo,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  - NMF.Serialization.XmlSerializationContext.Resolve(System.String,NMF.Serialization.ITypeSerializationInfo,System.Type,System.Boolean,System.Object)
  - NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializationContext.Root
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.Xmi.XmiSerializationContext.#ctor(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiSerializationContext.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: NMF.Serialization.Xmi.XmiSerializationContext
  langs:
  - csharp
  - vb
  name: XmiSerializationContext(Object)
  nameWithType: XmiSerializationContext.XmiSerializationContext(Object)
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.XmiSerializationContext(System.Object)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializationEntity.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializationEntity.cs
    startLine: 18
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public XmiSerializationContext(object root)
    parameters:
    - id: root
      type: System.Object
      description: the root object of the deserialization
    content.vb: Public Sub New(root As Object)
  overload: NMF.Serialization.Xmi.XmiSerializationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiSerializationContext.GetId(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiSerializationContext.GetId(System.Object)
  id: GetId(System.Object)
  parent: NMF.Serialization.Xmi.XmiSerializationContext
  langs:
  - csharp
  - vb
  name: GetId(Object)
  nameWithType: XmiSerializationContext.GetId(Object)
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.GetId(System.Object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializationEntity.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetId
    path: src/Models/Serialization/XMI/XmiSerializationEntity.cs
    startLine: 27
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the identifier of the given object\n"
  example: []
  syntax:
    content: public string GetId(object input)
    parameters:
    - id: input
      type: System.Object
      description: the object
    return:
      type: System.String
      description: the objects identifier
    content.vb: Public Function GetId(input As Object) As String
  overload: NMF.Serialization.Xmi.XmiSerializationContext.GetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiSerializationContext.SetId(System.Object,System.String)
  commentId: M:NMF.Serialization.Xmi.XmiSerializationContext.SetId(System.Object,System.String)
  id: SetId(System.Object,System.String)
  parent: NMF.Serialization.Xmi.XmiSerializationContext
  langs:
  - csharp
  - vb
  name: SetId(Object, String)
  nameWithType: XmiSerializationContext.SetId(Object, String)
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.SetId(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializationEntity.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetId
    path: src/Models/Serialization/XMI/XmiSerializationEntity.cs
    startLine: 43
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nSets the identifier of the given object\n"
  example: []
  syntax:
    content: public void SetId(object input, string id)
    parameters:
    - id: input
      type: System.Object
      description: the object
    - id: id
      type: System.String
      description: the identifier
    content.vb: Public Sub SetId(input As Object, id As String)
  overload: NMF.Serialization.Xmi.XmiSerializationContext.SetId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiSerializationContext.IDs
  commentId: P:NMF.Serialization.Xmi.XmiSerializationContext.IDs
  id: IDs
  parent: NMF.Serialization.Xmi.XmiSerializationContext
  langs:
  - csharp
  - vb
  name: IDs
  nameWithType: XmiSerializationContext.IDs
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.IDs
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializationEntity.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IDs
    path: src/Models/Serialization/XMI/XmiSerializationEntity.cs
    startLine: 58
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the stored identfiers\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, object>> IDs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
    content.vb: Public ReadOnly Property IDs As IEnumerable(Of KeyValuePair(Of String, Object))
  overload: NMF.Serialization.Xmi.XmiSerializationContext.IDs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.XmlSerializationContext.Cleanup
  commentId: M:NMF.Serialization.XmlSerializationContext.Cleanup
  parent: NMF.Serialization.XmlSerializationContext
  name: Cleanup()
  nameWithType: XmlSerializationContext.Cleanup()
  fullName: NMF.Serialization.XmlSerializationContext.Cleanup()
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.Cleanup
    name: Cleanup
    nameWithType: XmlSerializationContext.Cleanup
    fullName: NMF.Serialization.XmlSerializationContext.Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.Cleanup
    name: Cleanup
    nameWithType: XmlSerializationContext.Cleanup
    fullName: NMF.Serialization.XmlSerializationContext.Cleanup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.RegisterId(System.String,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializationContext.RegisterId(System.String,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: RegisterId(String, Object, ITypeSerializationInfo)
  nameWithType: XmlSerializationContext.RegisterId(String, Object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializationContext.RegisterId(System.String, System.Object, NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.RegisterId(System.String,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: RegisterId
    nameWithType: XmlSerializationContext.RegisterId
    fullName: NMF.Serialization.XmlSerializationContext.RegisterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.RegisterId(System.String,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: RegisterId
    nameWithType: XmlSerializationContext.RegisterId
    fullName: NMF.Serialization.XmlSerializationContext.RegisterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.ContainsId(System.String,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializationContext.ContainsId(System.String,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: ContainsId(String, ITypeSerializationInfo)
  nameWithType: XmlSerializationContext.ContainsId(String, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializationContext.ContainsId(System.String, NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.ContainsId(System.String,NMF.Serialization.ITypeSerializationInfo)
    name: ContainsId
    nameWithType: XmlSerializationContext.ContainsId
    fullName: NMF.Serialization.XmlSerializationContext.ContainsId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.ContainsId(System.String,NMF.Serialization.ITypeSerializationInfo)
    name: ContainsId
    nameWithType: XmlSerializationContext.ContainsId
    fullName: NMF.Serialization.XmlSerializationContext.ContainsId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.OnNameClash(System.String,NMF.Serialization.ITypeSerializationInfo,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  commentId: M:NMF.Serialization.XmlSerializationContext.OnNameClash(System.String,NMF.Serialization.ITypeSerializationInfo,System.Collections.Generic.IEnumerable{System.Object},System.Object)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: OnNameClash(String, ITypeSerializationInfo, IEnumerable<Object>, Object)
  nameWithType: XmlSerializationContext.OnNameClash(String, ITypeSerializationInfo, IEnumerable<Object>, Object)
  fullName: NMF.Serialization.XmlSerializationContext.OnNameClash(System.String, NMF.Serialization.ITypeSerializationInfo, System.Collections.Generic.IEnumerable<System.Object>, System.Object)
  nameWithType.vb: XmlSerializationContext.OnNameClash(String, ITypeSerializationInfo, IEnumerable(Of Object), Object)
  fullName.vb: NMF.Serialization.XmlSerializationContext.OnNameClash(System.String, NMF.Serialization.ITypeSerializationInfo, System.Collections.Generic.IEnumerable(Of System.Object), System.Object)
  name.vb: OnNameClash(String, ITypeSerializationInfo, IEnumerable(Of Object), Object)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.OnNameClash(System.String,NMF.Serialization.ITypeSerializationInfo,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: OnNameClash
    nameWithType: XmlSerializationContext.OnNameClash
    fullName: NMF.Serialization.XmlSerializationContext.OnNameClash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.OnNameClash(System.String,NMF.Serialization.ITypeSerializationInfo,System.Collections.Generic.IEnumerable{System.Object},System.Object)
    name: OnNameClash
    nameWithType: XmlSerializationContext.OnNameClash
    fullName: NMF.Serialization.XmlSerializationContext.OnNameClash
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.Resolve(System.String,NMF.Serialization.ITypeSerializationInfo,System.Type,System.Boolean,System.Object)
  commentId: M:NMF.Serialization.XmlSerializationContext.Resolve(System.String,NMF.Serialization.ITypeSerializationInfo,System.Type,System.Boolean,System.Object)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: Resolve(String, ITypeSerializationInfo, Type, Boolean, Object)
  nameWithType: XmlSerializationContext.Resolve(String, ITypeSerializationInfo, Type, Boolean, Object)
  fullName: NMF.Serialization.XmlSerializationContext.Resolve(System.String, NMF.Serialization.ITypeSerializationInfo, System.Type, System.Boolean, System.Object)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.Resolve(System.String,NMF.Serialization.ITypeSerializationInfo,System.Type,System.Boolean,System.Object)
    name: Resolve
    nameWithType: XmlSerializationContext.Resolve
    fullName: NMF.Serialization.XmlSerializationContext.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.Resolve(System.String,NMF.Serialization.ITypeSerializationInfo,System.Type,System.Boolean,System.Object)
    name: Resolve
    nameWithType: XmlSerializationContext.Resolve
    fullName: NMF.Serialization.XmlSerializationContext.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: IsBlocked(Object, IPropertySerializationInfo)
  nameWithType: XmlSerializationContext.IsBlocked(Object, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object,NMF.Serialization.IPropertySerializationInfo)
    name: IsBlocked
    nameWithType: XmlSerializationContext.IsBlocked
    fullName: NMF.Serialization.XmlSerializationContext.IsBlocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.IsBlocked(System.Object,NMF.Serialization.IPropertySerializationInfo)
    name: IsBlocked
    nameWithType: XmlSerializationContext.IsBlocked
    fullName: NMF.Serialization.XmlSerializationContext.IsBlocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializationContext
  isExternal: true
  name: BlockProperty(Object, IPropertySerializationInfo)
  nameWithType: XmlSerializationContext.BlockProperty(Object, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object,NMF.Serialization.IPropertySerializationInfo)
    name: BlockProperty
    nameWithType: XmlSerializationContext.BlockProperty
    fullName: NMF.Serialization.XmlSerializationContext.BlockProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializationContext.BlockProperty(System.Object,NMF.Serialization.IPropertySerializationInfo)
    name: BlockProperty
    nameWithType: XmlSerializationContext.BlockProperty
    fullName: NMF.Serialization.XmlSerializationContext.BlockProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.XmlSerializationContext.Root
  commentId: P:NMF.Serialization.XmlSerializationContext.Root
  parent: NMF.Serialization.XmlSerializationContext
  name: Root
  nameWithType: XmlSerializationContext.Root
  fullName: NMF.Serialization.XmlSerializationContext.Root
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: NMF.Serialization.Xmi.XmiSerializationContext.#ctor*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializationContext.#ctor
  name: XmiSerializationContext
  nameWithType: XmiSerializationContext.XmiSerializationContext
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.XmiSerializationContext
- uid: NMF.Serialization.Xmi.XmiSerializationContext.GetId*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializationContext.GetId
  name: GetId
  nameWithType: XmiSerializationContext.GetId
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.GetId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.Xmi.XmiSerializationContext.SetId*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializationContext.SetId
  name: SetId
  nameWithType: XmiSerializationContext.SetId
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.SetId
- uid: NMF.Serialization.Xmi.XmiSerializationContext.IDs*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializationContext.IDs
  name: IDs
  nameWithType: XmiSerializationContext.IDs
  fullName: NMF.Serialization.Xmi.XmiSerializationContext.IDs
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
