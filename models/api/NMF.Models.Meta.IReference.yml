### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.IReference
  commentId: T:NMF.Models.Meta.IReference
  id: IReference
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.IReference.Anchor
  - NMF.Models.Meta.IReference.AnchorChanged
  - NMF.Models.Meta.IReference.AnchorChanging
  - NMF.Models.Meta.IReference.DeclaringType
  - NMF.Models.Meta.IReference.DeclaringTypeChanged
  - NMF.Models.Meta.IReference.DeclaringTypeChanging
  - NMF.Models.Meta.IReference.IsContainment
  - NMF.Models.Meta.IReference.IsContainmentChanged
  - NMF.Models.Meta.IReference.IsContainmentChanging
  - NMF.Models.Meta.IReference.Opposite
  - NMF.Models.Meta.IReference.OppositeChanged
  - NMF.Models.Meta.IReference.OppositeChanging
  - NMF.Models.Meta.IReference.ReferenceType
  - NMF.Models.Meta.IReference.ReferenceTypeChanged
  - NMF.Models.Meta.IReference.ReferenceTypeChanging
  - NMF.Models.Meta.IReference.Refines
  - NMF.Models.Meta.IReference.RefinesChanged
  - NMF.Models.Meta.IReference.RefinesChanging
  langs:
  - csharp
  - vb
  name: IReference
  nameWithType: IReference
  fullName: NMF.Models.Meta.IReference
  type: Interface
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IReference
    path: src/Models/Models/Meta/IReference.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe public interface for Reference\n"
  example: []
  syntax:
    content: >-
      [DefaultImplementationType(typeof(Reference))]

      [XmlDefaultImplementationType(typeof(Reference))]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Reference")]

      public interface IReference : ITypedElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <DefaultImplementationType(GetType(Reference))>

      <XmlDefaultImplementationType(GetType(Reference))>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Reference")>

      Public Interface IReference Inherits ITypedElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.Meta.ITypedElement.IsOrdered
  - NMF.Models.Meta.ITypedElement.IsUnique
  - NMF.Models.Meta.ITypedElement.LowerBound
  - NMF.Models.Meta.ITypedElement.UpperBound
  - NMF.Models.Meta.ITypedElement.Type
  - NMF.Models.Meta.ITypedElement.IsOrderedChanging
  - NMF.Models.Meta.ITypedElement.IsOrderedChanged
  - NMF.Models.Meta.ITypedElement.IsUniqueChanging
  - NMF.Models.Meta.ITypedElement.IsUniqueChanged
  - NMF.Models.Meta.ITypedElement.LowerBoundChanging
  - NMF.Models.Meta.ITypedElement.LowerBoundChanged
  - NMF.Models.Meta.ITypedElement.UpperBoundChanging
  - NMF.Models.Meta.ITypedElement.UpperBoundChanged
  - NMF.Models.Meta.ITypedElement.TypeChanging
  - NMF.Models.Meta.ITypedElement.TypeChanged
  - NMF.Models.Meta.IMetaElement.Name
  - NMF.Models.Meta.IMetaElement.Summary
  - NMF.Models.Meta.IMetaElement.Remarks
  - NMF.Models.Meta.IMetaElement.NameChanging
  - NMF.Models.Meta.IMetaElement.NameChanged
  - NMF.Models.Meta.IMetaElement.SummaryChanging
  - NMF.Models.Meta.IMetaElement.SummaryChanged
  - NMF.Models.Meta.IMetaElement.RemarksChanging
  - NMF.Models.Meta.IMetaElement.RemarksChanged
  - NMF.Models.IModelElement.Delete
  - NMF.Models.IModelElement.Deleted
  - NMF.Models.IModelElement.Deleting
  - NMF.Models.IModelElement.IsIdentified
  - NMF.Models.IModelElement.ToIdentifierString
  - NMF.Models.IModelElement.RelativeUri
  - NMF.Models.IModelElement.AbsoluteUri
  - NMF.Models.IModelElement.Resolve(System.Uri)
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.IModelElement.Model
  - NMF.Models.IModelElement.Parent
  - NMF.Models.IModelElement.ParentChanged
  - NMF.Models.IModelElement.Children
  - NMF.Models.IModelElement.ReferencedElements
  - NMF.Models.IModelElement.Extensions
  - NMF.Models.IModelElement.GetExtension``1
  - NMF.Models.IModelElement.GetClass
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.IModelElement.Freeze
  - NMF.Models.IModelElement.Lock
  - NMF.Models.IModelElement.Unlock
  - NMF.Models.IModelElement.TryUnlock
  - NMF.Models.IModelElement.IsFrozen
  - NMF.Models.IModelElement.IsLocked
  - NMF.Models.IModelElement.BubbledChange
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.Meta.IReference.NMF.Models.Meta.ClassExtensions.IsContainerReference
  attributes:
  - type: NMF.Utilities.DefaultImplementationTypeAttribute
    ctor: NMF.Utilities.DefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Models.Meta.Reference
  - type: NMF.Serialization.XmlDefaultImplementationTypeAttribute
    ctor: NMF.Serialization.XmlDefaultImplementationTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: NMF.Models.Meta.Reference
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//Reference
- uid: NMF.Models.Meta.IReference.IsContainment
  commentId: P:NMF.Models.Meta.IReference.IsContainment
  id: IsContainment
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: IsContainment
  nameWithType: IReference.IsContainment
  fullName: NMF.Models.Meta.IReference.IsContainment
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainment
    path: src/Models/Models/Meta/IReference.cs
    startLine: 46
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe IsContainment property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      bool IsContainment { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <XmlAttribute(True)>

      Property IsContainment As Boolean
  overload: NMF.Models.Meta.IReference.IsContainment*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.IReference.DeclaringType
  commentId: P:NMF.Models.Meta.IReference.DeclaringType
  id: DeclaringType
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: IReference.DeclaringType
  fullName: NMF.Models.Meta.IReference.DeclaringType
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringType
    path: src/Models/Models/Meta/IReference.cs
    startLine: 57
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe DeclaringType property\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlAttribute(true)]

      [XmlOpposite("References")]

      IReferenceType DeclaringType { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReferenceType
    content.vb: >-
      <Browsable(False)>

      <XmlAttribute(True)>

      <XmlOpposite("References")>

      Property DeclaringType As IReferenceType
  overload: NMF.Models.Meta.IReference.DeclaringType*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: References
- uid: NMF.Models.Meta.IReference.Opposite
  commentId: P:NMF.Models.Meta.IReference.Opposite
  id: Opposite
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: IReference.Opposite
  fullName: NMF.Models.Meta.IReference.Opposite
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Opposite
    path: src/Models/Models/Meta/IReference.cs
    startLine: 70
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe Opposite property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      [XmlOpposite("Opposite")]

      IReference Opposite { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReference
    content.vb: >-
      <XmlAttribute(True)>

      <XmlOpposite("Opposite")>

      Property Opposite As IReference
  overload: NMF.Models.Meta.IReference.Opposite*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Opposite
- uid: NMF.Models.Meta.IReference.ReferenceType
  commentId: P:NMF.Models.Meta.IReference.ReferenceType
  id: ReferenceType
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: ReferenceType
  nameWithType: IReference.ReferenceType
  fullName: NMF.Models.Meta.IReference.ReferenceType
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceType
    path: src/Models/Models/Meta/IReference.cs
    startLine: 82
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe ReferenceType property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      IReferenceType ReferenceType { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReferenceType
    content.vb: >-
      <XmlAttribute(True)>

      Property ReferenceType As IReferenceType
  overload: NMF.Models.Meta.IReference.ReferenceType*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.IReference.Refines
  commentId: P:NMF.Models.Meta.IReference.Refines
  id: Refines
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: Refines
  nameWithType: IReference.Refines
  fullName: NMF.Models.Meta.IReference.Refines
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Refines
    path: src/Models/Models/Meta/IReference.cs
    startLine: 93
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe reference that is refined by the current reference, only applicable if the reference is part of a class\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      IReference Refines { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReference
    content.vb: >-
      <XmlAttribute(True)>

      Property Refines As IReference
  overload: NMF.Models.Meta.IReference.Refines*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.IReference.Anchor
  commentId: P:NMF.Models.Meta.IReference.Anchor
  id: Anchor
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: IReference.Anchor
  fullName: NMF.Models.Meta.IReference.Anchor
  type: Property
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Anchor
    path: src/Models/Models/Meta/IReference.cs
    startLine: 106
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe least common anchestor of an instance and its referenced element, if statically known\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      IClass Anchor { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: >-
      <XmlAttribute(True)>

      Property Anchor As IClass
  overload: NMF.Models.Meta.IReference.Anchor*
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.IReference.IsContainmentChanging
  commentId: E:NMF.Models.Meta.IReference.IsContainmentChanging
  id: IsContainmentChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: IsContainmentChanging
  nameWithType: IReference.IsContainmentChanging
  fullName: NMF.Models.Meta.IReference.IsContainmentChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainmentChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 119
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IsContainment property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> IsContainmentChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event IsContainmentChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.IsContainmentChanged
  commentId: E:NMF.Models.Meta.IReference.IsContainmentChanged
  id: IsContainmentChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: IsContainmentChanged
  nameWithType: IReference.IsContainmentChanged
  fullName: NMF.Models.Meta.IReference.IsContainmentChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainmentChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 124
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IsContainment property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> IsContainmentChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event IsContainmentChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.DeclaringTypeChanging
  commentId: E:NMF.Models.Meta.IReference.DeclaringTypeChanging
  id: DeclaringTypeChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanging
  nameWithType: IReference.DeclaringTypeChanging
  fullName: NMF.Models.Meta.IReference.DeclaringTypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 129
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the DeclaringType property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DeclaringTypeChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DeclaringTypeChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.DeclaringTypeChanged
  commentId: E:NMF.Models.Meta.IReference.DeclaringTypeChanged
  id: DeclaringTypeChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanged
  nameWithType: IReference.DeclaringTypeChanged
  fullName: NMF.Models.Meta.IReference.DeclaringTypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 134
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the DeclaringType property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> DeclaringTypeChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event DeclaringTypeChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.OppositeChanging
  commentId: E:NMF.Models.Meta.IReference.OppositeChanging
  id: OppositeChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: OppositeChanging
  nameWithType: IReference.OppositeChanging
  fullName: NMF.Models.Meta.IReference.OppositeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OppositeChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 139
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Opposite property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> OppositeChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event OppositeChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.OppositeChanged
  commentId: E:NMF.Models.Meta.IReference.OppositeChanged
  id: OppositeChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: OppositeChanged
  nameWithType: IReference.OppositeChanged
  fullName: NMF.Models.Meta.IReference.OppositeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OppositeChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 144
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Opposite property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> OppositeChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event OppositeChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.ReferenceTypeChanging
  commentId: E:NMF.Models.Meta.IReference.ReferenceTypeChanging
  id: ReferenceTypeChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: ReferenceTypeChanging
  nameWithType: IReference.ReferenceTypeChanging
  fullName: NMF.Models.Meta.IReference.ReferenceTypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceTypeChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 149
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the ReferenceType property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ReferenceTypeChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ReferenceTypeChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.ReferenceTypeChanged
  commentId: E:NMF.Models.Meta.IReference.ReferenceTypeChanged
  id: ReferenceTypeChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: ReferenceTypeChanged
  nameWithType: IReference.ReferenceTypeChanged
  fullName: NMF.Models.Meta.IReference.ReferenceTypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceTypeChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 154
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the ReferenceType property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ReferenceTypeChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event ReferenceTypeChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.RefinesChanging
  commentId: E:NMF.Models.Meta.IReference.RefinesChanging
  id: RefinesChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: RefinesChanging
  nameWithType: IReference.RefinesChanging
  fullName: NMF.Models.Meta.IReference.RefinesChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 159
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Refines property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> RefinesChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event RefinesChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.RefinesChanged
  commentId: E:NMF.Models.Meta.IReference.RefinesChanged
  id: RefinesChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: RefinesChanged
  nameWithType: IReference.RefinesChanged
  fullName: NMF.Models.Meta.IReference.RefinesChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 164
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Refines property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> RefinesChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event RefinesChanged As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.AnchorChanging
  commentId: E:NMF.Models.Meta.IReference.AnchorChanging
  id: AnchorChanging
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: AnchorChanging
  nameWithType: IReference.AnchorChanging
  fullName: NMF.Models.Meta.IReference.AnchorChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AnchorChanging
    path: src/Models/Models/Meta/IReference.cs
    startLine: 169
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Anchor property changes its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> AnchorChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event AnchorChanging As EventHandler(Of ValueChangedEventArgs)
- uid: NMF.Models.Meta.IReference.AnchorChanged
  commentId: E:NMF.Models.Meta.IReference.AnchorChanged
  id: AnchorChanged
  parent: NMF.Models.Meta.IReference
  langs:
  - csharp
  - vb
  name: AnchorChanged
  nameWithType: IReference.AnchorChanged
  fullName: NMF.Models.Meta.IReference.AnchorChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/IReference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AnchorChanged
    path: src/Models/Models/Meta/IReference.cs
    startLine: 174
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Anchor property changed its value\n"
  example: []
  syntax:
    content: event EventHandler<ValueChangedEventArgs> AnchorChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Event AnchorChanged As EventHandler(Of ValueChangedEventArgs)
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
- uid: NMF.Models.Meta.ITypedElement.IsOrdered
  commentId: P:NMF.Models.Meta.ITypedElement.IsOrdered
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrdered
  nameWithType: ITypedElement.IsOrdered
  fullName: NMF.Models.Meta.ITypedElement.IsOrdered
- uid: NMF.Models.Meta.ITypedElement.IsUnique
  commentId: P:NMF.Models.Meta.ITypedElement.IsUnique
  parent: NMF.Models.Meta.ITypedElement
  name: IsUnique
  nameWithType: ITypedElement.IsUnique
  fullName: NMF.Models.Meta.ITypedElement.IsUnique
- uid: NMF.Models.Meta.ITypedElement.LowerBound
  commentId: P:NMF.Models.Meta.ITypedElement.LowerBound
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBound
  nameWithType: ITypedElement.LowerBound
  fullName: NMF.Models.Meta.ITypedElement.LowerBound
- uid: NMF.Models.Meta.ITypedElement.UpperBound
  commentId: P:NMF.Models.Meta.ITypedElement.UpperBound
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBound
  nameWithType: ITypedElement.UpperBound
  fullName: NMF.Models.Meta.ITypedElement.UpperBound
- uid: NMF.Models.Meta.ITypedElement.Type
  commentId: P:NMF.Models.Meta.ITypedElement.Type
  parent: NMF.Models.Meta.ITypedElement
  name: Type
  nameWithType: ITypedElement.Type
  fullName: NMF.Models.Meta.ITypedElement.Type
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanging
  nameWithType: ITypedElement.IsOrderedChanging
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanging
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanged
  nameWithType: ITypedElement.IsOrderedChanged
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanged
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanging
  nameWithType: ITypedElement.IsUniqueChanging
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanging
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanged
  nameWithType: ITypedElement.IsUniqueChanged
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanged
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanging
  nameWithType: ITypedElement.LowerBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanging
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanged
  nameWithType: ITypedElement.LowerBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanged
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanging
  nameWithType: ITypedElement.UpperBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanging
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanged
  nameWithType: ITypedElement.UpperBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanged
- uid: NMF.Models.Meta.ITypedElement.TypeChanging
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanging
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanging
  nameWithType: ITypedElement.TypeChanging
  fullName: NMF.Models.Meta.ITypedElement.TypeChanging
- uid: NMF.Models.Meta.ITypedElement.TypeChanged
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanged
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanged
  nameWithType: ITypedElement.TypeChanged
  fullName: NMF.Models.Meta.ITypedElement.TypeChanged
- uid: NMF.Models.Meta.IMetaElement.Name
  commentId: P:NMF.Models.Meta.IMetaElement.Name
  parent: NMF.Models.Meta.IMetaElement
  name: Name
  nameWithType: IMetaElement.Name
  fullName: NMF.Models.Meta.IMetaElement.Name
- uid: NMF.Models.Meta.IMetaElement.Summary
  commentId: P:NMF.Models.Meta.IMetaElement.Summary
  parent: NMF.Models.Meta.IMetaElement
  name: Summary
  nameWithType: IMetaElement.Summary
  fullName: NMF.Models.Meta.IMetaElement.Summary
- uid: NMF.Models.Meta.IMetaElement.Remarks
  commentId: P:NMF.Models.Meta.IMetaElement.Remarks
  parent: NMF.Models.Meta.IMetaElement
  name: Remarks
  nameWithType: IMetaElement.Remarks
  fullName: NMF.Models.Meta.IMetaElement.Remarks
- uid: NMF.Models.Meta.IMetaElement.NameChanging
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanging
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanging
  nameWithType: IMetaElement.NameChanging
  fullName: NMF.Models.Meta.IMetaElement.NameChanging
- uid: NMF.Models.Meta.IMetaElement.NameChanged
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanged
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanged
  nameWithType: IMetaElement.NameChanged
  fullName: NMF.Models.Meta.IMetaElement.NameChanged
- uid: NMF.Models.Meta.IMetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanging
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanging
  nameWithType: IMetaElement.SummaryChanging
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanging
- uid: NMF.Models.Meta.IMetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanged
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanged
  nameWithType: IMetaElement.SummaryChanged
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanged
- uid: NMF.Models.Meta.IMetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanging
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanging
  nameWithType: IMetaElement.RemarksChanging
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanging
- uid: NMF.Models.Meta.IMetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanged
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanged
  nameWithType: IMetaElement.RemarksChanged
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanged
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, out int)
  nameWithType: IModelElement.GetContainerReference(IModelElement, out int)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, out int)
  nameWithType.vb: IModelElement.GetContainerReference(IModelElement, Integer)
  fullName.vb: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, Integer)
  name.vb: GetContainerReference(IModelElement, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, int)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, int)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, int)
  nameWithType.vb: IModelElement.GetAttributeValue(IAttribute, Integer)
  fullName.vb: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, Integer)
  name.vb: GetAttributeValue(IAttribute, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  name: CallOperation(IOperation, params object[])
  nameWithType: IModelElement.CallOperation(IOperation, params object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, params object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, ParamArray Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, ParamArray Object())
  name.vb: CallOperation(IOperation, ParamArray Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: GetReferencedElement(IReference, int)
  nameWithType: IModelElement.GetReferencedElement(IReference, int)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, int)
  nameWithType.vb: IModelElement.GetReferencedElement(IReference, Integer)
  fullName.vb: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, Integer)
  name.vb: GetReferencedElement(IReference, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, object)
  nameWithType.vb: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName.vb: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, Object)
  name.vb: SetAttributeValue(IAttribute, Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.Meta.IReference.NMF.Models.Meta.ClassExtensions.IsContainerReference
  commentId: M:NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  name: IsContainerReference(IReference)
  nameWithType: ClassExtensions.IsContainerReference(IReference)
  fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
- uid: NMF.Models.Meta.ITypedElement
  commentId: T:NMF.Models.Meta.ITypedElement
  parent: NMF.Models.Meta
  name: ITypedElement
  nameWithType: ITypedElement
  fullName: NMF.Models.Meta.ITypedElement
- uid: NMF.Models.Meta.IMetaElement
  commentId: T:NMF.Models.Meta.IMetaElement
  parent: NMF.Models.Meta
  name: IMetaElement
  nameWithType: IMetaElement
  fullName: NMF.Models.Meta.IMetaElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  name: IsContainerReference(IReference)
  nameWithType: ClassExtensions.IsContainerReference(IReference)
  fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
- uid: NMF.Models.Meta.ClassExtensions
  commentId: T:NMF.Models.Meta.ClassExtensions
  parent: NMF.Models.Meta
  name: ClassExtensions
  nameWithType: ClassExtensions
  fullName: NMF.Models.Meta.ClassExtensions
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
- uid: NMF.Models.Meta.IReference.IsContainment*
  commentId: Overload:NMF.Models.Meta.IReference.IsContainment
  name: IsContainment
  nameWithType: IReference.IsContainment
  fullName: NMF.Models.Meta.IReference.IsContainment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Meta.IReference.DeclaringType*
  commentId: Overload:NMF.Models.Meta.IReference.DeclaringType
  name: DeclaringType
  nameWithType: IReference.DeclaringType
  fullName: NMF.Models.Meta.IReference.DeclaringType
- uid: NMF.Models.Meta.IReferenceType
  commentId: T:NMF.Models.Meta.IReferenceType
  parent: NMF.Models.Meta
  name: IReferenceType
  nameWithType: IReferenceType
  fullName: NMF.Models.Meta.IReferenceType
- uid: NMF.Models.Meta.IReference.Opposite*
  commentId: Overload:NMF.Models.Meta.IReference.Opposite
  name: Opposite
  nameWithType: IReference.Opposite
  fullName: NMF.Models.Meta.IReference.Opposite
- uid: NMF.Models.Meta.IReference
  commentId: T:NMF.Models.Meta.IReference
  parent: NMF.Models.Meta
  name: IReference
  nameWithType: IReference
  fullName: NMF.Models.Meta.IReference
- uid: NMF.Models.Meta.IReference.ReferenceType*
  commentId: Overload:NMF.Models.Meta.IReference.ReferenceType
  name: ReferenceType
  nameWithType: IReference.ReferenceType
  fullName: NMF.Models.Meta.IReference.ReferenceType
- uid: NMF.Models.Meta.IReference.Refines*
  commentId: Overload:NMF.Models.Meta.IReference.Refines
  name: Refines
  nameWithType: IReference.Refines
  fullName: NMF.Models.Meta.IReference.Refines
- uid: NMF.Models.Meta.IReference.Anchor*
  commentId: Overload:NMF.Models.Meta.IReference.Anchor
  name: Anchor
  nameWithType: IReference.Anchor
  fullName: NMF.Models.Meta.IReference.Anchor
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
