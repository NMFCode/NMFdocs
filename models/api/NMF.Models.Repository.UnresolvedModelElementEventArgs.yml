### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs
  commentId: T:NMF.Models.Repository.UnresolvedModelElementEventArgs
  id: UnresolvedModelElementEventArgs
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  langs:
  - csharp
  - vb
  name: UnresolvedModelElementEventArgs
  nameWithType: UnresolvedModelElementEventArgs
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs
  type: Class
  source:
    remote:
      path: Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnresolvedModelElementEventArgs
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 10
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: "\nDenotes the event data that a model element could not be resolved\n"
  example: []
  syntax:
    content: 'public class UnresolvedModelElementEventArgs : EventArgs'
    content.vb: >-
      Public Class UnresolvedModelElementEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  commentId: M:NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: UnresolvedModelElementEventArgs(Uri)
  nameWithType: UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(Uri)
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(System.Uri)
  type: Constructor
  source:
    remote:
      path: Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 16
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public UnresolvedModelElementEventArgs(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The uri that could not be resolved
    content.vb: Public Sub New(uri As Uri)
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  commentId: P:NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  id: Uri
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: UnresolvedModelElementEventArgs.Uri
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  type: Property
  source:
    remote:
      path: Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Uri
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: "\nThe Uri that could not be resolved\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  commentId: P:NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  id: ModelElement
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: ModelElement
  nameWithType: UnresolvedModelElementEventArgs.ModelElement
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  type: Property
  source:
    remote:
      path: Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelElement
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 31
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: "\nGets or sets the model element that was identified during the event\n"
  example: []
  syntax:
    content: public IModelElement ModelElement { get; set; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public Property ModelElement As IModelElement
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor
  name: UnresolvedModelElementEventArgs
  nameWithType: UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  name: Uri
  nameWithType: UnresolvedModelElementEventArgs.Uri
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  name: ModelElement
  nameWithType: UnresolvedModelElementEventArgs.ModelElement
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
