### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs
  commentId: T:NMF.Models.Repository.UnresolvedModelElementEventArgs
  id: UnresolvedModelElementEventArgs
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri,System.String)
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  - NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  langs:
  - csharp
  - vb
  name: UnresolvedModelElementEventArgs
  nameWithType: UnresolvedModelElementEventArgs
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs
  type: Class
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: UnresolvedModelElementEventArgs
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 10
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Denotes the event data that a model element could not be resolved
  example: []
  syntax:
    content: 'public class UnresolvedModelElementEventArgs : EventArgs'
    content.vb: Public Class UnresolvedModelElementEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  commentId: M:NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: UnresolvedModelElementEventArgs(Uri)
  nameWithType: UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(Uri)
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 16
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Creates a new instance
  example: []
  syntax:
    content: public UnresolvedModelElementEventArgs(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The uri that could not be resolved
    content.vb: Public Sub New(uri As Uri)
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor*
  nameWithType.vb: UnresolvedModelElementEventArgs.New(Uri)
  fullName.vb: NMF.Models.Repository.UnresolvedModelElementEventArgs.New(System.Uri)
  name.vb: New(Uri)
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri,System.String)
  commentId: M:NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: UnresolvedModelElementEventArgs(Uri, string)
  nameWithType: UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(Uri, string)
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs(System.Uri, string)
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 23
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Creates a new instance
  example: []
  syntax:
    content: public UnresolvedModelElementEventArgs(Uri uri, string hintPath)
    parameters:
    - id: uri
      type: System.Uri
      description: The uri that could not be resolved
    - id: hintPath
      type: System.String
      description: A hint path, if available
    content.vb: Public Sub New(uri As Uri, hintPath As String)
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor*
  nameWithType.vb: UnresolvedModelElementEventArgs.New(Uri, String)
  fullName.vb: NMF.Models.Repository.UnresolvedModelElementEventArgs.New(System.Uri, String)
  name.vb: New(Uri, String)
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  commentId: P:NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  id: Uri
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: UnresolvedModelElementEventArgs.Uri
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Uri
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 34
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: The Uri that could not be resolved
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property Uri As Uri
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri*
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
  commentId: P:NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
  id: HintPath
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: HintPath
  nameWithType: UnresolvedModelElementEventArgs.HintPath
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: HintPath
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 39
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: A hint path
  example: []
  syntax:
    content: public string HintPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HintPath As String
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath*
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  commentId: P:NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  id: ModelElement
  parent: NMF.Models.Repository.UnresolvedModelElementEventArgs
  langs:
  - csharp
  - vb
  name: ModelElement
  nameWithType: UnresolvedModelElementEventArgs.ModelElement
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ModelElement
    path: src/Models/Models/Repository/UnresolvedModelElementEventArgs.cs
    startLine: 44
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  summary: Gets or sets the model element that was identified during the event
  example: []
  syntax:
    content: public IModelElement ModelElement { get; set; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: Public Property ModelElement As IModelElement
  overload: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement*
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  href: NMF.html
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.#ctor
  href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html#NMF_Models_Repository_UnresolvedModelElementEventArgs__ctor_System_Uri_
  name: UnresolvedModelElementEventArgs
  nameWithType: UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.UnresolvedModelElementEventArgs
  nameWithType.vb: UnresolvedModelElementEventArgs.New
  fullName.vb: NMF.Models.Repository.UnresolvedModelElementEventArgs.New
  name.vb: New
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
  href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html#NMF_Models_Repository_UnresolvedModelElementEventArgs_Uri
  name: Uri
  nameWithType: UnresolvedModelElementEventArgs.Uri
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.Uri
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
  href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html#NMF_Models_Repository_UnresolvedModelElementEventArgs_HintPath
  name: HintPath
  nameWithType: UnresolvedModelElementEventArgs.HintPath
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.HintPath
- uid: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement*
  commentId: Overload:NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
  href: NMF.Models.Repository.UnresolvedModelElementEventArgs.html#NMF_Models_Repository_UnresolvedModelElementEventArgs_ModelElement
  name: ModelElement
  nameWithType: UnresolvedModelElementEventArgs.ModelElement
  fullName: NMF.Models.Repository.UnresolvedModelElementEventArgs.ModelElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  href: NMF.Models.IModelElement.html
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
