### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  id: IPropertySerializationInfo
  parent: NMF.Serialization
  children:
  - NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  - NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  - NMF.Serialization.IPropertySerializationInfo.ElementName
  - NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  - NMF.Serialization.IPropertySerializationInfo.Initialize(System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  - NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  - NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  - NMF.Serialization.IPropertySerializationInfo.Namespace
  - NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  - NMF.Serialization.IPropertySerializationInfo.Opposite
  - NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  - NMF.Serialization.IPropertySerializationInfo.PropertyType
  - NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
  - NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  - NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
  type: Interface
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IPropertySerializationInfo
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 10
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Denotes the serialization information for a property
  example: []
  syntax:
    content: public interface IPropertySerializationInfo
    content.vb: Public Interface IPropertySerializationInfo
- uid: NMF.Serialization.IPropertySerializationInfo.ElementName
  commentId: P:NMF.Serialization.IPropertySerializationInfo.ElementName
  id: ElementName
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: IPropertySerializationInfo.ElementName
  fullName: NMF.Serialization.IPropertySerializationInfo.ElementName
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementName
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 15
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The element name that should be serialized
  example: []
  syntax:
    content: string ElementName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ElementName As String
  overload: NMF.Serialization.IPropertySerializationInfo.ElementName*
- uid: NMF.Serialization.IPropertySerializationInfo.Namespace
  commentId: P:NMF.Serialization.IPropertySerializationInfo.Namespace
  id: Namespace
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: IPropertySerializationInfo.Namespace
  fullName: NMF.Serialization.IPropertySerializationInfo.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The namespace to which the element should be serialized or null
  example: []
  syntax:
    content: string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property [Namespace] As String
  overload: NMF.Serialization.IPropertySerializationInfo.Namespace*
- uid: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  commentId: P:NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  id: NamespacePrefix
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: NamespacePrefix
  nameWithType: IPropertySerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NamespacePrefix
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 25
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: The namespace prefix that should be used for serialization or null
  example: []
  syntax:
    content: string NamespacePrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property NamespacePrefix As String
  overload: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix*
- uid: NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
  commentId: P:NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
  id: RequiresInitialization
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: RequiresInitialization
  nameWithType: IPropertySerializationInfo.RequiresInitialization
  fullName: NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RequiresInitialization
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 30
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if the property requires initialization, otherwise False
  example: []
  syntax:
    content: bool RequiresInitialization { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property RequiresInitialization As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.RequiresInitialization*
- uid: NMF.Serialization.IPropertySerializationInfo.Initialize(System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.Initialize(System.Object,NMF.Serialization.XmlSerializationContext)
  id: Initialize(System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: Initialize(object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.Initialize(object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.Initialize(object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Initialize
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 37
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Initializes the property for the given element
  example: []
  syntax:
    content: void Initialize(object input, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The object instance for which the property should be initialized
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The deserialization context
    content.vb: Sub Initialize(input As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.IPropertySerializationInfo.Initialize*
  nameWithType.vb: IPropertySerializationInfo.Initialize(Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.Initialize(Object, NMF.Serialization.XmlSerializationContext)
  name.vb: Initialize(Object, XmlSerializationContext)
- uid: NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  id: AddToCollection(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: AddToCollection(object, object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.AddToCollection(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.AddToCollection(object, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AddToCollection
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 45
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Adds the given object to the collection
  example: []
  syntax:
    content: void AddToCollection(object input, object item, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: item
      type: System.Object
      description: The item that should be added
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The deserialization context
    content.vb: Sub AddToCollection(input As Object, item As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.IPropertySerializationInfo.AddToCollection*
  nameWithType.vb: IPropertySerializationInfo.AddToCollection(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.AddToCollection(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: AddToCollection(Object, Object, XmlSerializationContext)
- uid: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  commentId: P:NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  id: ShallCreateInstance
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: ShallCreateInstance
  nameWithType: IPropertySerializationInfo.ShallCreateInstance
  fullName: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ShallCreateInstance
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 50
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the instance should be created explicitly
  example: []
  syntax:
    content: bool ShallCreateInstance { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ShallCreateInstance As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance*
- uid: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(System.Object,System.Object)
  id: ShouldSerializeValue(System.Object,System.Object)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: ShouldSerializeValue(object, object)
  nameWithType: IPropertySerializationInfo.ShouldSerializeValue(object, object)
  fullName: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(object, object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ShouldSerializeValue
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 58
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Determines whether the provided value should be serialized
  example: []
  syntax:
    content: bool ShouldSerializeValue(object obj, object value)
    parameters:
    - id: obj
      type: System.Object
      description: The context object
    - id: value
      type: System.Object
      description: The value in question
    return:
      type: System.Boolean
      description: True, if the value should be serialized, otherwise False
    content.vb: Function ShouldSerializeValue(obj As Object, value As Object) As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue*
  nameWithType.vb: IPropertySerializationInfo.ShouldSerializeValue(Object, Object)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue(Object, Object)
  name.vb: ShouldSerializeValue(Object, Object)
- uid: NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  id: IsReadOnly
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: IPropertySerializationInfo.IsReadOnly
  fullName: NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsReadOnly
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 63
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if the property is read-only, otherwise False
  example: []
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.IsReadOnly*
- uid: NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  id: GetValue(System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: GetValue(object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.GetValue(object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.GetValue(object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetValue
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 71
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the value of this property for the given input object
  example: []
  syntax:
    content: object GetValue(object input, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Object
      description: ''
    content.vb: Function GetValue(input As Object, context As XmlSerializationContext) As Object
  overload: NMF.Serialization.IPropertySerializationInfo.GetValue*
  nameWithType.vb: IPropertySerializationInfo.GetValue(Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.GetValue(Object, NMF.Serialization.XmlSerializationContext)
  name.vb: GetValue(Object, XmlSerializationContext)
- uid: NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  id: SetValue(System.Object,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: SetValue(object, object, XmlSerializationContext)
  nameWithType: IPropertySerializationInfo.SetValue(object, object, XmlSerializationContext)
  fullName: NMF.Serialization.IPropertySerializationInfo.SetValue(object, object, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetValue
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 79
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Sets the value for the property
  example: []
  syntax:
    content: void SetValue(object input, object value, XmlSerializationContext context)
    parameters:
    - id: input
      type: System.Object
      description: The context object
    - id: value
      type: System.Object
      description: The value of the property
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The deserialization context
    content.vb: Sub SetValue(input As Object, value As Object, context As XmlSerializationContext)
  overload: NMF.Serialization.IPropertySerializationInfo.SetValue*
  nameWithType.vb: IPropertySerializationInfo.SetValue(Object, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.SetValue(Object, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: SetValue(Object, Object, XmlSerializationContext)
- uid: NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  id: IsIdentifier
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: IsIdentifier
  nameWithType: IPropertySerializationInfo.IsIdentifier
  fullName: NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsIdentifier
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 84
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if the property is an identifier, otherwise False
  example: []
  syntax:
    content: bool IsIdentifier { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsIdentifier As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.IsIdentifier*
- uid: NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  id: IdentificationMode
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: IdentificationMode
  nameWithType: IPropertySerializationInfo.IdentificationMode
  fullName: NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentificationMode
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 89
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the identification mode of the property
  example: []
  syntax:
    content: XmlIdentificationMode IdentificationMode { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlIdentificationMode
    content.vb: ReadOnly Property IdentificationMode As XmlIdentificationMode
  overload: NMF.Serialization.IPropertySerializationInfo.IdentificationMode*
- uid: NMF.Serialization.IPropertySerializationInfo.PropertyType
  commentId: P:NMF.Serialization.IPropertySerializationInfo.PropertyType
  id: PropertyType
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: PropertyType
  nameWithType: IPropertySerializationInfo.PropertyType
  fullName: NMF.Serialization.IPropertySerializationInfo.PropertyType
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyType
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 94
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the property type
  example: []
  syntax:
    content: ITypeSerializationInfo PropertyType { get; }
    parameters: []
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: ReadOnly Property PropertyType As ITypeSerializationInfo
  overload: NMF.Serialization.IPropertySerializationInfo.PropertyType*
- uid: NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  commentId: P:NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  id: PropertyMinType
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: PropertyMinType
  nameWithType: IPropertySerializationInfo.PropertyMinType
  fullName: NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyMinType
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 99
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the minimum type system type of the property
  example: []
  syntax:
    content: Type PropertyMinType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property PropertyMinType As Type
  overload: NMF.Serialization.IPropertySerializationInfo.PropertyMinType*
- uid: NMF.Serialization.IPropertySerializationInfo.Opposite
  commentId: P:NMF.Serialization.IPropertySerializationInfo.Opposite
  id: Opposite
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: IPropertySerializationInfo.Opposite
  fullName: NMF.Serialization.IPropertySerializationInfo.Opposite
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Opposite
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 104
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Gets the opposite property or null
  example: []
  syntax:
    content: IPropertySerializationInfo Opposite { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: ReadOnly Property Opposite As IPropertySerializationInfo
  overload: NMF.Serialization.IPropertySerializationInfo.Opposite*
- uid: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  commentId: P:NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  id: IsStringConvertible
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: IsStringConvertible
  nameWithType: IPropertySerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsStringConvertible
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 109
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: True, if the value of this property allows roundtrip-serialization to string
  example: []
  syntax:
    content: bool IsStringConvertible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsStringConvertible As Boolean
  overload: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible*
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertFromString(string)
  nameWithType: IPropertySerializationInfo.ConvertFromString(string)
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(string)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertFromString
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 116
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Deserializes the provided text
  example: []
  syntax:
    content: object ConvertFromString(string text)
    parameters:
    - id: text
      type: System.String
      description: the text
    return:
      type: System.Object
      description: The deserialized value
    content.vb: Function ConvertFromString(text As String) As Object
  overload: NMF.Serialization.IPropertySerializationInfo.ConvertFromString*
  nameWithType.vb: IPropertySerializationInfo.ConvertFromString(String)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ConvertFromString(String)
  name.vb: ConvertFromString(String)
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.IPropertySerializationInfo.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: NMF.Serialization.IPropertySerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertToString(object)
  nameWithType: IPropertySerializationInfo.ConvertToString(object)
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertToString(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XML/IPropertySerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertToString
    path: src/Models/Serialization/XML/IPropertySerializationInfo.cs
    startLine: 123
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: Converts the provided object to a string
  example: []
  syntax:
    content: string ConvertToString(object input)
    parameters:
    - id: input
      type: System.Object
      description: The object to convert
    return:
      type: System.String
      description: A string representation
    content.vb: Function ConvertToString(input As Object) As String
  overload: NMF.Serialization.IPropertySerializationInfo.ConvertToString*
  nameWithType.vb: IPropertySerializationInfo.ConvertToString(Object)
  fullName.vb: NMF.Serialization.IPropertySerializationInfo.ConvertToString(Object)
  name.vb: ConvertToString(Object)
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  href: NMF.html
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Serialization
    name: Serialization
    href: NMF.Serialization.html
- uid: NMF.Serialization.IPropertySerializationInfo.ElementName*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.ElementName
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_ElementName
  name: ElementName
  nameWithType: IPropertySerializationInfo.ElementName
  fullName: NMF.Serialization.IPropertySerializationInfo.ElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.IPropertySerializationInfo.Namespace*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.Namespace
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_Namespace
  name: Namespace
  nameWithType: IPropertySerializationInfo.Namespace
  fullName: NMF.Serialization.IPropertySerializationInfo.Namespace
- uid: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_NamespacePrefix
  name: NamespacePrefix
  nameWithType: IPropertySerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.IPropertySerializationInfo.NamespacePrefix
- uid: NMF.Serialization.IPropertySerializationInfo.RequiresInitialization*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_RequiresInitialization
  name: RequiresInitialization
  nameWithType: IPropertySerializationInfo.RequiresInitialization
  fullName: NMF.Serialization.IPropertySerializationInfo.RequiresInitialization
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Serialization.IPropertySerializationInfo.Initialize*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.Initialize
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_Initialize_System_Object_NMF_Serialization_XmlSerializationContext_
  name: Initialize
  nameWithType: IPropertySerializationInfo.Initialize
  fullName: NMF.Serialization.IPropertySerializationInfo.Initialize
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  href: NMF.Serialization.XmlSerializationContext.html
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.IPropertySerializationInfo.AddToCollection*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.AddToCollection
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_AddToCollection_System_Object_System_Object_NMF_Serialization_XmlSerializationContext_
  name: AddToCollection
  nameWithType: IPropertySerializationInfo.AddToCollection
  fullName: NMF.Serialization.IPropertySerializationInfo.AddToCollection
- uid: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_ShallCreateInstance
  name: ShallCreateInstance
  nameWithType: IPropertySerializationInfo.ShallCreateInstance
  fullName: NMF.Serialization.IPropertySerializationInfo.ShallCreateInstance
- uid: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_ShouldSerializeValue_System_Object_System_Object_
  name: ShouldSerializeValue
  nameWithType: IPropertySerializationInfo.ShouldSerializeValue
  fullName: NMF.Serialization.IPropertySerializationInfo.ShouldSerializeValue
- uid: NMF.Serialization.IPropertySerializationInfo.IsReadOnly*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.IsReadOnly
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_IsReadOnly
  name: IsReadOnly
  nameWithType: IPropertySerializationInfo.IsReadOnly
  fullName: NMF.Serialization.IPropertySerializationInfo.IsReadOnly
- uid: NMF.Serialization.IPropertySerializationInfo.GetValue*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.GetValue
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_GetValue_System_Object_NMF_Serialization_XmlSerializationContext_
  name: GetValue
  nameWithType: IPropertySerializationInfo.GetValue
  fullName: NMF.Serialization.IPropertySerializationInfo.GetValue
- uid: NMF.Serialization.IPropertySerializationInfo.SetValue*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.SetValue
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_SetValue_System_Object_System_Object_NMF_Serialization_XmlSerializationContext_
  name: SetValue
  nameWithType: IPropertySerializationInfo.SetValue
  fullName: NMF.Serialization.IPropertySerializationInfo.SetValue
- uid: NMF.Serialization.IPropertySerializationInfo.IsIdentifier*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.IsIdentifier
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_IsIdentifier
  name: IsIdentifier
  nameWithType: IPropertySerializationInfo.IsIdentifier
  fullName: NMF.Serialization.IPropertySerializationInfo.IsIdentifier
- uid: NMF.Serialization.IPropertySerializationInfo.IdentificationMode*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.IdentificationMode
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_IdentificationMode
  name: IdentificationMode
  nameWithType: IPropertySerializationInfo.IdentificationMode
  fullName: NMF.Serialization.IPropertySerializationInfo.IdentificationMode
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  href: NMF.Serialization.XmlIdentificationMode.html
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: NMF.Serialization.IPropertySerializationInfo.PropertyType*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.PropertyType
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_PropertyType
  name: PropertyType
  nameWithType: IPropertySerializationInfo.PropertyType
  fullName: NMF.Serialization.IPropertySerializationInfo.PropertyType
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.ITypeSerializationInfo.html
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.IPropertySerializationInfo.PropertyMinType*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.PropertyMinType
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_PropertyMinType
  name: PropertyMinType
  nameWithType: IPropertySerializationInfo.PropertyMinType
  fullName: NMF.Serialization.IPropertySerializationInfo.PropertyMinType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.IPropertySerializationInfo.Opposite*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.Opposite
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_Opposite
  name: Opposite
  nameWithType: IPropertySerializationInfo.Opposite
  fullName: NMF.Serialization.IPropertySerializationInfo.Opposite
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  href: NMF.Serialization.IPropertySerializationInfo.html
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_IsStringConvertible
  name: IsStringConvertible
  nameWithType: IPropertySerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.IPropertySerializationInfo.IsStringConvertible
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertFromString*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.ConvertFromString
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_ConvertFromString_System_String_
  name: ConvertFromString
  nameWithType: IPropertySerializationInfo.ConvertFromString
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertFromString
- uid: NMF.Serialization.IPropertySerializationInfo.ConvertToString*
  commentId: Overload:NMF.Serialization.IPropertySerializationInfo.ConvertToString
  href: NMF.Serialization.IPropertySerializationInfo.html#NMF_Serialization_IPropertySerializationInfo_ConvertToString_System_Object_
  name: ConvertToString
  nameWithType: IPropertySerializationInfo.ConvertToString
  fullName: NMF.Serialization.IPropertySerializationInfo.ConvertToString
