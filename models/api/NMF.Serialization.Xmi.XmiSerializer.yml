### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.Xmi.XmiSerializer
  commentId: T:NMF.Serialization.Xmi.XmiSerializer
  id: XmiSerializer
  parent: NMF.Serialization.Xmi
  children:
  - NMF.Serialization.Xmi.XmiSerializer.#ctor
  - NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  - NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializer)
  - NMF.Serialization.Xmi.XmiSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  - NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  - NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  - NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  - NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  - NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  - NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  - NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  - NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  langs:
  - csharp
  - vb
  name: XmiSerializer
  nameWithType: XmiSerializer
  fullName: NMF.Serialization.Xmi.XmiSerializer
  type: Class
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmiSerializer
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 13
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes a serializer implementation that serializes objects to XMI\n"
  example: []
  syntax:
    content: 'public class XmiSerializer : XmlSerializer'
    content.vb: Public Class XmiSerializer Inherits XmlSerializer
  inheritance:
  - System.Object
  - NMF.Serialization.XmlSerializer
  derivedClasses:
  - NMF.Models.Repository.Serialization.ModelSerializer
  inheritedMembers:
  - NMF.Serialization.XmlSerializer.Settings
  - NMF.Serialization.XmlSerializer.KnownTypes
  - NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  - NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  - NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  - NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Deserialize(System.String)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  - NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  - NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  - NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  - NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  - NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  - NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  - NMF.Serialization.XmlSerializer.UnknownElement
  - NMF.Serialization.XmlSerializer.UnknownAttribute
  - NMF.Serialization.XmlSerializer.UnknownType
  - NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  - NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.#ctor
  id: '#ctor'
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XmiSerializer()
  nameWithType: XmiSerializer.XmiSerializer()
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer()
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 18
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new XmiSerializer with default settings and no preloaded types\n"
  example: []
  syntax:
    content: public XmiSerializer()
    content.vb: Public Sub New()
  overload: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  nameWithType.vb: XmiSerializer.New()
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New()
  name.vb: New()
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.#ctor(System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XmiSerializer(IEnumerable<Type>)
  nameWithType: XmiSerializer.XmiSerializer(IEnumerable<Type>)
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer(System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 25
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new XmiSerializer with default settings\n"
  remarks: Types will be loaded with default settings
  example: []
  syntax:
    content: public XmiSerializer(IEnumerable<Type> additionalTypes)
    parameters:
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to preload into the serializer
    content.vb: Public Sub New(additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  nameWithType.vb: XmiSerializer.New(IEnumerable(Of Type))
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(IEnumerable(Of Type))
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings)
  id: '#ctor(NMF.Serialization.XmlSerializationSettings)'
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XmiSerializer(XmlSerializationSettings)
  nameWithType: XmiSerializer.XmiSerializer(XmlSerializationSettings)
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer(NMF.Serialization.XmlSerializationSettings)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 31
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new XmiSerializer with the specified settings\n"
  example: []
  syntax:
    content: public XmiSerializer(XmlSerializationSettings settings)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: Serializer-settings for the serializer. Can be null or Nothing in Visual Basic. In this case, the default settings will be used.
    content.vb: Public Sub New(settings As XmlSerializationSettings)
  overload: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  nameWithType.vb: XmiSerializer.New(XmlSerializationSettings)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New(NMF.Serialization.XmlSerializationSettings)
  name.vb: New(XmlSerializationSettings)
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(NMF.Serialization.XmlSerializationSettings,System.Collections.Generic.IEnumerable{System.Type})'
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XmiSerializer(XmlSerializationSettings, IEnumerable<Type>)
  nameWithType: XmiSerializer.XmiSerializer(XmlSerializationSettings, IEnumerable<Type>)
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 39
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new XmiSerializer with the specified settings and the given preloaded types\n"
  remarks: The types will be loaded with the specified settings
  example: []
  syntax:
    content: public XmiSerializer(XmlSerializationSettings settings, IEnumerable<Type> additionalTypes)
    parameters:
    - id: settings
      type: NMF.Serialization.XmlSerializationSettings
      description: The settings to use for the serializer
    - id: additionalTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: Set of types to load into the serializer
    content.vb: Public Sub New(settings As XmlSerializationSettings, additionalTypes As IEnumerable(Of Type))
  overload: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  nameWithType.vb: XmiSerializer.New(XmlSerializationSettings, IEnumerable(Of Type))
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New(NMF.Serialization.XmlSerializationSettings, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: New(XmlSerializationSettings, IEnumerable(Of Type))
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializer)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.#ctor(NMF.Serialization.XmlSerializer)
  id: '#ctor(NMF.Serialization.XmlSerializer)'
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XmiSerializer(XmlSerializer)
  nameWithType: XmiSerializer.XmiSerializer(XmlSerializer)
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer(NMF.Serialization.XmlSerializer)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 45
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a new XmlSerializer and copies settings and known types from the given serializer\n"
  example: []
  syntax:
    content: public XmiSerializer(XmlSerializer parent)
    parameters:
    - id: parent
      type: NMF.Serialization.XmlSerializer
      description: An XML serializer to copy settings and known type information from
    content.vb: Public Sub New(parent As XmlSerializer)
  overload: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  nameWithType.vb: XmiSerializer.New(XmlSerializer)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New(NMF.Serialization.XmlSerializer)
  name.vb: New(XmlSerializer)
- uid: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  id: XMLSchemaInstanceNamespace
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XMLSchemaInstanceNamespace
  nameWithType: XmiSerializer.XMLSchemaInstanceNamespace
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstanceNamespace
  type: Field
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XMLSchemaInstanceNamespace
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 51
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes the namespace for XML schema instance\n"
  example: []
  syntax:
    content: public static readonly string XMLSchemaInstanceNamespace
    return:
      type: System.String
    content.vb: Public Shared ReadOnly XMLSchemaInstanceNamespace As String
- uid: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  id: XMLSchemaInstancePrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XMLSchemaInstancePrefix
  nameWithType: XmiSerializer.XMLSchemaInstancePrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMLSchemaInstancePrefix
  type: Field
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XMLSchemaInstancePrefix
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 56
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes the standard prefix to use for the XML schema instance namespace\n"
  example: []
  syntax:
    content: public static readonly string XMLSchemaInstancePrefix
    return:
      type: System.String
    content.vb: Public Shared ReadOnly XMLSchemaInstancePrefix As String
- uid: NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  id: XMIPrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XMIPrefix
  nameWithType: XmiSerializer.XMIPrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMIPrefix
  type: Field
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XMIPrefix
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 61
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes the standard prefix for the XMI namespace\n"
  example: []
  syntax:
    content: public static readonly string XMIPrefix
    return:
      type: System.String
    content.vb: Public Shared ReadOnly XMIPrefix As String
- uid: NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  commentId: F:NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  id: XMINamespace
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: XMINamespace
  nameWithType: XmiSerializer.XMINamespace
  fullName: NMF.Serialization.Xmi.XmiSerializer.XMINamespace
  type: Field
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XMINamespace
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 66
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDenotes the XMI namespace\n"
  example: []
  syntax:
    content: public static readonly string XMINamespace
    return:
      type: System.String
    content.vb: Public Shared ReadOnly XMINamespace As String
- uid: NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  commentId: P:NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  id: RootPrefix
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: RootPrefix
  nameWithType: XmiSerializer.RootPrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RootPrefix
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 71
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets or sets the root prefix\n"
  example: []
  syntax:
    content: public string RootPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RootPrefix As String
  overload: NMF.Serialization.Xmi.XmiSerializer.RootPrefix*
- uid: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  id: GoToPropertyContent(System.Xml.XmlReader)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: GoToPropertyContent(XmlReader)
  nameWithType: XmiSerializer.GoToPropertyContent(XmlReader)
  fullName: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GoToPropertyContent
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 74
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nMoves the reader to the content of the property\n"
  example: []
  syntax:
    content: protected override bool GoToPropertyContent(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the Xml reader
    return:
      type: System.Boolean
      description: true, if the reader could be moved sucessfully, otherwise false
    content.vb: Protected Overrides Function GoToPropertyContent(reader As XmlReader) As Boolean
  overridden: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  overload: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent*
- uid: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(System.Object)
  id: CreateSerializationContext(System.Object)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: CreateSerializationContext(object)
  nameWithType: XmiSerializer.CreateSerializationContext(object)
  fullName: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateSerializationContext
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 81
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCreates a serialization context for the given root element\n"
  example: []
  syntax:
    content: protected override XmlSerializationContext CreateSerializationContext(object root)
    parameters:
    - id: root
      type: System.Object
      description: The root element of the serialization
    return:
      type: NMF.Serialization.XmlSerializationContext
      description: A serialization context
    content.vb: Protected Overrides Function CreateSerializationContext(root As Object) As XmlSerializationContext
  overridden: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  overload: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext*
  nameWithType.vb: XmiSerializer.CreateSerializationContext(Object)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext(Object)
  name.vb: CreateSerializationContext(Object)
- uid: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  id: GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  nameWithType: XmiSerializer.GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetElementTypeInfo
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 87
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the type information for the current property\n"
  example: []
  syntax:
    content: protected override ITypeSerializationInfo GetElementTypeInfo(XmlReader reader, IPropertySerializationInfo property)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The xml reader
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
      description: The current property
    return:
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization info that should be used in the remainder
    content.vb: Protected Overrides Function GetElementTypeInfo(reader As XmlReader, [property] As IPropertySerializationInfo) As ITypeSerializationInfo
  overridden: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo*
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginElement
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 118
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nWrites the beginning of an element\n"
  example: []
  syntax:
    content: protected override void WriteBeginElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overrides Sub WriteBeginElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overridden: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement*
  nameWithType.vb: XmiSerializer.WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndElement
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 134
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCompletes the current element for the provided object\n"
  example: []
  syntax:
    content: protected override void WriteEndElement(XmlWriter writer, object obj, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overrides Sub WriteEndElement(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo)
  overridden: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement*
  nameWithType.vb: XmiSerializer.WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteBeginRootElement
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 139
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nWrites the root element to the given writer\n"
  example: []
  syntax:
    content: protected override void WriteBeginRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: root
      type: System.Object
      description: The root element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overrides Sub WriteBeginRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overridden: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement*
  nameWithType.vb: XmiSerializer.WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  id: WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmiSerializer.WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteEndRootElement
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 148
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nCompletes the root element\n"
  example: []
  syntax:
    content: protected override void WriteEndRootElement(XmlWriter writer, object root, ITypeSerializationInfo info)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: root
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    content.vb: Protected Overrides Sub WriteEndRootElement(writer As XmlWriter, root As Object, info As ITypeSerializationInfo)
  overridden: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement*
  nameWithType.vb: XmiSerializer.WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteIdentifiedObject
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 154
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nWrites the provided identified object\n"
  example: []
  syntax:
    content: protected override bool WriteIdentifiedObject(XmlWriter writer, object obj, XmlIdentificationMode identificationMode, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: identificationMode
      type: NMF.Serialization.XmlIdentificationMode
      description: The identification mode for the current object
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Boolean
      description: true, if the object could be written as identified object, otherwise false
    content.vb: Protected Overrides Function WriteIdentifiedObject(writer As XmlWriter, obj As Object, identificationMode As XmlIdentificationMode, info As ITypeSerializationInfo, context As XmlSerializationContext) As Boolean
  overridden: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject*
  nameWithType.vb: XmiSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: WriteElementProperties
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 160
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nWrites the element properties of the given object to the provided writer\n"
  example: []
  syntax:
    content: protected override void WriteElementProperties(XmlWriter writer, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The xml writer to write to
    - id: obj
      type: System.Object
      description: The element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The serialization information of the objects type
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overrides Sub WriteElementProperties(writer As XmlWriter, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overridden: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties*
  nameWithType.vb: XmiSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader, ref object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeElementProperties
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 239
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nInitializes the element properties from the xml reader position\n"
  example: []
  syntax:
    content: protected override void InitializeElementProperties(XmlReader reader, ref object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: the xml reader
    - id: obj
      type: System.Object
      description: the element
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: the type serialization information
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: the serialization context
    content.vb: Protected Overrides Sub InitializeElementProperties(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overridden: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties*
  nameWithType.vb: XmiSerializer.InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  id: OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  nameWithType: XmiSerializer.OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OverrideIdentifiedObject
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 293
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nDetermines whether the already identified element should be overridden\n"
  example: []
  syntax:
    content: protected override bool OverrideIdentifiedObject(object obj, XmlReader reader, XmlSerializationContext context)
    parameters:
    - id: obj
      type: System.Object
      description: The object that would be overridden
    - id: reader
      type: System.Xml.XmlReader
      description: The current reader position
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    return:
      type: System.Boolean
      description: true, if the element shall be overridden, otherwise false
    content.vb: Protected Overrides Function OverrideIdentifiedObject(obj As Object, reader As XmlReader, context As XmlSerializationContext) As Boolean
  overridden: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject*
  nameWithType.vb: XmiSerializer.OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject(Object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  name.vb: OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  id: HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmiSerializer.HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleUnknownAttribute
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 299
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nHandles an attribute that was not known to the serializer\n"
  example: []
  syntax:
    content: protected override void HandleUnknownAttribute(XmlReader reader, object obj, ITypeSerializationInfo info, XmlSerializationContext context)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The current reader position
    - id: obj
      type: System.Object
      description: The object that is currently deserialized
    - id: info
      type: NMF.Serialization.ITypeSerializationInfo
      description: The type serialization information of the object
    - id: context
      type: NMF.Serialization.XmlSerializationContext
      description: The serialization context
    content.vb: Protected Overrides Sub HandleUnknownAttribute(reader As XmlReader, obj As Object, info As ITypeSerializationInfo, context As XmlSerializationContext)
  overridden: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  overload: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute*
  nameWithType.vb: XmiSerializer.HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  id: InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  nameWithType: XmiSerializer.InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo(System.Type, NMF.Serialization.ITypeSerializationInfo)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InitializeTypeSerializationInfo
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 355
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nInitializes the given type serialization information for the given type\n"
  example: []
  syntax:
    content: protected override void InitializeTypeSerializationInfo(Type type, ITypeSerializationInfo serializationInfo)
    parameters:
    - id: type
      type: System.Type
      description: the system type
    - id: serializationInfo
      type: NMF.Serialization.ITypeSerializationInfo
      description: the serialization information object
    content.vb: Protected Overrides Sub InitializeTypeSerializationInfo(type As Type, serializationInfo As ITypeSerializationInfo)
  overridden: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo*
- uid: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  commentId: P:NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  id: IdAttribute
  parent: NMF.Serialization.Xmi.XmiSerializer
  langs:
  - csharp
  - vb
  name: IdAttribute
  nameWithType: XmiSerializer.IdAttribute
  fullName: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiSerializer.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdAttribute
    path: src/Models/Serialization/XMI/XmiSerializer.cs
    startLine: 376
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  summary: "\nGets the attribute used for identifiers\n"
  example: []
  syntax:
    content: protected virtual IPropertySerializationInfo IdAttribute { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Protected Overridable ReadOnly Property IdAttribute As IPropertySerializationInfo
  overload: NMF.Serialization.Xmi.XmiSerializer.IdAttribute*
references:
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  - name: .
  - uid: NMF.Serialization.Xmi
    name: Xmi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Serialization.XmlSerializer
  commentId: T:NMF.Serialization.XmlSerializer
  parent: NMF.Serialization
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: NMF.Serialization.XmlSerializer
- uid: NMF.Serialization.XmlSerializer.Settings
  commentId: P:NMF.Serialization.XmlSerializer.Settings
  parent: NMF.Serialization.XmlSerializer
  name: Settings
  nameWithType: XmlSerializer.Settings
  fullName: NMF.Serialization.XmlSerializer.Settings
- uid: NMF.Serialization.XmlSerializer.KnownTypes
  commentId: P:NMF.Serialization.XmlSerializer.KnownTypes
  parent: NMF.Serialization.XmlSerializer
  name: KnownTypes
  nameWithType: XmlSerializer.KnownTypes
  fullName: NMF.Serialization.XmlSerializer.KnownTypes
- uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  name: RegisterNamespace(ITypeSerializationInfo)
  nameWithType: XmlSerializer.RegisterNamespace(ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
    name: RegisterNamespace
  - name: (
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.RegisterNamespace(NMF.Serialization.ITypeSerializationInfo)
    name: RegisterNamespace
  - name: (
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetTypeInfo(string, string)
  nameWithType: XmlSerializer.GetTypeInfo(string, string)
  fullName: NMF.Serialization.XmlSerializer.GetTypeInfo(string, string)
  nameWithType.vb: XmlSerializer.GetTypeInfo(String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.GetTypeInfo(String, String)
  name.vb: GetTypeInfo(String, String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
    name: GetTypeInfo
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetTypeInfo(System.String,System.String)
    name: GetTypeInfo
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  commentId: M:NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateTypeSerializationInfoFor(Type)
  nameWithType: XmlSerializer.CreateTypeSerializationInfoFor(Type)
  fullName: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
    name: CreateTypeSerializationInfoFor
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateTypeSerializationInfoFor(System.Type)
    name: CreateTypeSerializationInfoFor
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, string, bool)
  nameWithType: XmlSerializer.Serialize(object, string, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, string, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, String, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, String, Boolean)
  name.vb: Serialize(Object, String, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.String,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, Stream, bool)
  nameWithType: XmlSerializer.Serialize(object, Stream, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.Stream, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, Stream, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.Stream, Boolean)
  name.vb: Serialize(Object, Stream, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.Stream,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, TextWriter)
  nameWithType: XmlSerializer.Serialize(object, TextWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter)
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter)
  name.vb: Serialize(Object, TextWriter)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter)
  name.vb: Serialize(Object, XmlWriter)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, TextWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, TextWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.IO.TextWriter, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, TextWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.IO.TextWriter, Boolean)
  name.vb: Serialize(Object, TextWriter, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.IO.TextWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.TextWriter
    name: TextWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter, bool)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, bool)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, bool)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, Boolean)
  name.vb: Serialize(Object, XmlWriter, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,System.Boolean)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: SelectRoot(object, bool)
  nameWithType: XmlSerializer.SelectRoot(object, bool)
  fullName: NMF.Serialization.XmlSerializer.SelectRoot(object, bool)
  nameWithType.vb: XmlSerializer.SelectRoot(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.SelectRoot(Object, Boolean)
  name.vb: SelectRoot(Object, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
    name: SelectRoot
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.SelectRoot(System.Object,System.Boolean)
    name: SelectRoot
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  nameWithType: XmlSerializer.Serialize(object, XmlWriter, IPropertySerializationInfo, bool, XmlIdentificationMode, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Serialize(object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, bool, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Serialize(Object, System.Xml.XmlWriter, NMF.Serialization.IPropertySerializationInfo, Boolean, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.XmlSerializationContext)
  name.vb: Serialize(Object, XmlWriter, IPropertySerializationInfo, Boolean, XmlIdentificationMode, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
    name: Serialize
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.XmlWriter,NMF.Serialization.IPropertySerializationInfo,System.Boolean,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.XmlSerializationContext)
    name: Serialize
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteConstructorProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteConstructorProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteConstructorProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteConstructorProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteConstructorProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteAttributeValue(XmlWriter, object, object, IPropertySerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, object, object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter, Object, Object, NMF.Serialization.IPropertySerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteAttributeValue(XmlWriter, Object, Object, IPropertySerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeValue
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteAttributeValue(System.Xml.XmlWriter,System.Object,System.Object,NMF.Serialization.IPropertySerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteAttributeValue
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  nameWithType: XmlSerializer.GetAttributeValue(object, ITypeSerializationInfo, bool, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.GetAttributeValue(object, NMF.Serialization.ITypeSerializationInfo, bool, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.GetAttributeValue(Object, NMF.Serialization.ITypeSerializationInfo, Boolean, NMF.Serialization.XmlSerializationContext)
  name.vb: GetAttributeValue(Object, ITypeSerializationInfo, Boolean, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
    name: GetAttributeValue
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetAttributeValue(System.Object,NMF.Serialization.ITypeSerializationInfo,System.Boolean,NMF.Serialization.XmlSerializationContext)
    name: GetAttributeValue
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteCollectionMembers(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteCollectionMembers(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteCollectionMembers
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteCollectionMembers(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteCollectionMembers
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(string)
  nameWithType: XmlSerializer.Deserialize(string)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(string)
  nameWithType.vb: XmlSerializer.Deserialize(String)
  fullName.vb: NMF.Serialization.XmlSerializer.Deserialize(String)
  name.vb: Deserialize(String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
    name: Deserialize
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.String)
    name: Deserialize
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    name: Deserialize
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(TextReader)
  nameWithType: XmlSerializer.Deserialize(TextReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
    name: Deserialize
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
    name: Deserialize
  - name: (
  - uid: System.IO.TextReader
    name: TextReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
    name: Deserialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
    name: Deserialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateRoot(XmlReader)
  nameWithType: XmlSerializer.CreateRoot(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
    name: CreateRoot
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateRoot(System.Xml.XmlReader)
    name: CreateRoot
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetRootElementTypeInfo(XmlReader)
  nameWithType: XmlSerializer.GetRootElementTypeInfo(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
    name: GetRootElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetRootElementTypeInfo(System.Xml.XmlReader)
    name: GetRootElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.CreateObject(XmlReader, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: CreateObject
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateObject(System.Xml.XmlReader,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: CreateObject
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeProperty(XmlReader, IPropertySerializationInfo, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
    name: InitializeProperty
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeProperty(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo,System.Object,NMF.Serialization.XmlSerializationContext)
    name: InitializeProperty
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, object, string, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, object, string, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo, Object, String, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializePropertyFromText(IPropertySerializationInfo, Object, String, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
    name: InitializePropertyFromText
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializePropertyFromText(NMF.Serialization.IPropertySerializationInfo,System.Object,System.String,NMF.Serialization.XmlSerializationContext)
    name: InitializePropertyFromText
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: Initialize(XmlReader, object, XmlSerializationContext)
  nameWithType: XmlSerializer.Initialize(XmlReader, object, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, object, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.Initialize(XmlReader, Object, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader, Object, NMF.Serialization.XmlSerializationContext)
  name.vb: Initialize(XmlReader, Object, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
    name: Initialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.Initialize(System.Xml.XmlReader,System.Object,NMF.Serialization.XmlSerializationContext)
    name: Initialize
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: IsPropertyElement(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.IsPropertyElement(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: IsPropertyElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.IsPropertyElement(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: IsPropertyElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
- uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeAttributeProperties(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeAttributeProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeAttributeProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeAttributeProperties(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeAttributeProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: HandleUnknownType(IPropertySerializationInfo, string, string)
  nameWithType: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, string, string)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, string, string)
  nameWithType.vb: XmlSerializer.HandleUnknownType(IPropertySerializationInfo, String, String)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo, String, String)
  name.vb: HandleUnknownType(IPropertySerializationInfo, String, String)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
    name: HandleUnknownType
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownType(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
    name: HandleUnknownType
  - name: (
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownElement(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownElement(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownElement(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownElement
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownElement(UnknownElementEventArgs)
  nameWithType: XmlSerializer.OnUnknownElement(UnknownElementEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
    name: OnUnknownElement
  - name: (
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownElement(NMF.Serialization.UnknownElementEventArgs)
    name: OnUnknownElement
  - name: (
  - uid: NMF.Serialization.UnknownElementEventArgs
    name: UnknownElementEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownAttribute(UnknownAttributeEventArgs)
  nameWithType: XmlSerializer.OnUnknownAttribute(UnknownAttributeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
    name: OnUnknownAttribute
  - name: (
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownAttribute(NMF.Serialization.UnknownAttributeEventArgs)
    name: OnUnknownAttribute
  - name: (
  - uid: NMF.Serialization.UnknownAttributeEventArgs
    name: UnknownAttributeEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  commentId: M:NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  parent: NMF.Serialization.XmlSerializer
  name: OnUnknownType(UnknownTypeEventArgs)
  nameWithType: XmlSerializer.OnUnknownType(UnknownTypeEventArgs)
  fullName: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
    name: OnUnknownType
  - name: (
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OnUnknownType(NMF.Serialization.UnknownTypeEventArgs)
    name: OnUnknownType
  - name: (
  - uid: NMF.Serialization.UnknownTypeEventArgs
    name: UnknownTypeEventArgs
  - name: )
- uid: NMF.Serialization.XmlSerializer.UnknownElement
  commentId: E:NMF.Serialization.XmlSerializer.UnknownElement
  parent: NMF.Serialization.XmlSerializer
  name: UnknownElement
  nameWithType: XmlSerializer.UnknownElement
  fullName: NMF.Serialization.XmlSerializer.UnknownElement
- uid: NMF.Serialization.XmlSerializer.UnknownAttribute
  commentId: E:NMF.Serialization.XmlSerializer.UnknownAttribute
  parent: NMF.Serialization.XmlSerializer
  name: UnknownAttribute
  nameWithType: XmlSerializer.UnknownAttribute
  fullName: NMF.Serialization.XmlSerializer.UnknownAttribute
- uid: NMF.Serialization.XmlSerializer.UnknownType
  commentId: E:NMF.Serialization.XmlSerializer.UnknownType
  parent: NMF.Serialization.XmlSerializer
  name: UnknownType
  nameWithType: XmlSerializer.UnknownType
  fullName: NMF.Serialization.XmlSerializer.UnknownType
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetSerializationInfoForInstance(object, bool)
  nameWithType: XmlSerializer.GetSerializationInfoForInstance(object, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(object, bool)
  nameWithType.vb: XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(Object, Boolean)
  name.vb: GetSerializationInfoForInstance(Object, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
    name: GetSerializationInfoForInstance
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfoForInstance(System.Object,System.Boolean)
    name: GetSerializationInfoForInstance
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  commentId: M:NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetSerializationInfo(Type, bool)
  nameWithType: XmlSerializer.GetSerializationInfo(Type, bool)
  fullName: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, bool)
  nameWithType.vb: XmlSerializer.GetSerializationInfo(Type, Boolean)
  fullName.vb: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type, Boolean)
  name.vb: GetSerializationInfo(Type, Boolean)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
    name: GetSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetSerializationInfo(System.Type,System.Boolean)
    name: GetSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Serialization
    name: Serialization
- uid: NMF.Serialization.Xmi.XmiSerializer.#ctor*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.#ctor
  name: XmiSerializer
  nameWithType: XmiSerializer.XmiSerializer
  fullName: NMF.Serialization.Xmi.XmiSerializer.XmiSerializer
  nameWithType.vb: XmiSerializer.New
  fullName.vb: NMF.Serialization.Xmi.XmiSerializer.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  parent: NMF.Serialization
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Serialization.Xmi.XmiSerializer.RootPrefix*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.RootPrefix
  name: RootPrefix
  nameWithType: XmiSerializer.RootPrefix
  fullName: NMF.Serialization.Xmi.XmiSerializer.RootPrefix
- uid: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  commentId: M:NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GoToPropertyContent(XmlReader)
  nameWithType: XmlSerializer.GoToPropertyContent(XmlReader)
  fullName: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
    name: GoToPropertyContent
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GoToPropertyContent(System.Xml.XmlReader)
    name: GoToPropertyContent
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent
  name: GoToPropertyContent
  nameWithType: XmiSerializer.GoToPropertyContent
  fullName: NMF.Serialization.Xmi.XmiSerializer.GoToPropertyContent
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
- uid: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  commentId: M:NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: CreateSerializationContext(object)
  nameWithType: XmlSerializer.CreateSerializationContext(object)
  fullName: NMF.Serialization.XmlSerializer.CreateSerializationContext(object)
  nameWithType.vb: XmlSerializer.CreateSerializationContext(Object)
  fullName.vb: NMF.Serialization.XmlSerializer.CreateSerializationContext(Object)
  name.vb: CreateSerializationContext(Object)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
    name: CreateSerializationContext
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.CreateSerializationContext(System.Object)
    name: CreateSerializationContext
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext
  name: CreateSerializationContext
  nameWithType: XmiSerializer.CreateSerializationContext
  fullName: NMF.Serialization.Xmi.XmiSerializer.CreateSerializationContext
- uid: NMF.Serialization.XmlSerializationContext
  commentId: T:NMF.Serialization.XmlSerializationContext
  parent: NMF.Serialization
  name: XmlSerializationContext
  nameWithType: XmlSerializationContext
  fullName: NMF.Serialization.XmlSerializationContext
- uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  nameWithType: XmlSerializer.GetElementTypeInfo(XmlReader, IPropertySerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader, NMF.Serialization.IPropertySerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: GetElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.GetElementTypeInfo(System.Xml.XmlReader,NMF.Serialization.IPropertySerializationInfo)
    name: GetElementTypeInfo
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo
  name: GetElementTypeInfo
  nameWithType: XmiSerializer.GetElementTypeInfo
  fullName: NMF.Serialization.Xmi.XmiSerializer.GetElementTypeInfo
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmlSerializer.WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteBeginElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement
  name: WriteBeginElement
  nameWithType: XmiSerializer.WriteBeginElement
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginElement
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmlSerializer.WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteEndElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteEndElement
  name: WriteEndElement
  nameWithType: XmiSerializer.WriteEndElement
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndElement
- uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteBeginRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmlSerializer.WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteBeginRootElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteBeginRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteBeginRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement
  name: WriteBeginRootElement
  nameWithType: XmiSerializer.WriteBeginRootElement
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteBeginRootElement
- uid: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  nameWithType: XmlSerializer.WriteEndRootElement(XmlWriter, object, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo)
  nameWithType.vb: XmlSerializer.WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo)
  name.vb: WriteEndRootElement(XmlWriter, Object, ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteEndRootElement(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo)
    name: WriteEndRootElement
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement
  name: WriteEndRootElement
  nameWithType: XmiSerializer.WriteEndRootElement
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteEndRootElement
- uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteIdentifiedObject(XmlWriter, object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter, Object, NMF.Serialization.XmlIdentificationMode, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteIdentifiedObject(XmlWriter, Object, XmlIdentificationMode, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteIdentifiedObject
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteIdentifiedObject(System.Xml.XmlWriter,System.Object,NMF.Serialization.XmlIdentificationMode,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteIdentifiedObject
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlIdentificationMode
    name: XmlIdentificationMode
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject
  name: WriteIdentifiedObject
  nameWithType: XmiSerializer.WriteIdentifiedObject
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteIdentifiedObject
- uid: NMF.Serialization.XmlIdentificationMode
  commentId: T:NMF.Serialization.XmlIdentificationMode
  parent: NMF.Serialization
  name: XmlIdentificationMode
  nameWithType: XmlIdentificationMode
  fullName: NMF.Serialization.XmlIdentificationMode
- uid: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.WriteElementProperties(XmlWriter, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: WriteElementProperties(XmlWriter, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteElementProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.WriteElementProperties(System.Xml.XmlWriter,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: WriteElementProperties
  - name: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties
  name: WriteElementProperties
  nameWithType: XmiSerializer.WriteElementProperties
  fullName: NMF.Serialization.Xmi.XmiSerializer.WriteElementProperties
- uid: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.InitializeElementProperties(XmlReader, ref object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, ref object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: InitializeElementProperties(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeElementProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeElementProperties(System.Xml.XmlReader,System.Object@,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: InitializeElementProperties
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties
  name: InitializeElementProperties
  nameWithType: XmiSerializer.InitializeElementProperties
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeElementProperties
- uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  nameWithType: XmlSerializer.OverrideIdentifiedObject(object, XmlReader, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(Object, System.Xml.XmlReader, NMF.Serialization.XmlSerializationContext)
  name.vb: OverrideIdentifiedObject(Object, XmlReader, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
    name: OverrideIdentifiedObject
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.OverrideIdentifiedObject(System.Object,System.Xml.XmlReader,NMF.Serialization.XmlSerializationContext)
    name: OverrideIdentifiedObject
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject
  name: OverrideIdentifiedObject
  nameWithType: XmiSerializer.OverrideIdentifiedObject
  fullName: NMF.Serialization.Xmi.XmiSerializer.OverrideIdentifiedObject
- uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  commentId: M:NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  nameWithType: XmlSerializer.HandleUnknownAttribute(XmlReader, object, ITypeSerializationInfo, XmlSerializationContext)
  fullName: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader, object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  nameWithType.vb: XmlSerializer.HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  fullName.vb: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader, Object, NMF.Serialization.ITypeSerializationInfo, NMF.Serialization.XmlSerializationContext)
  name.vb: HandleUnknownAttribute(XmlReader, Object, ITypeSerializationInfo, XmlSerializationContext)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownAttribute
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.HandleUnknownAttribute(System.Xml.XmlReader,System.Object,NMF.Serialization.ITypeSerializationInfo,NMF.Serialization.XmlSerializationContext)
    name: HandleUnknownAttribute
  - name: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: ','
  - name: " "
  - uid: NMF.Serialization.XmlSerializationContext
    name: XmlSerializationContext
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute
  name: HandleUnknownAttribute
  nameWithType: XmiSerializer.HandleUnknownAttribute
  fullName: NMF.Serialization.Xmi.XmiSerializer.HandleUnknownAttribute
- uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  commentId: M:NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
  parent: NMF.Serialization.XmlSerializer
  isExternal: true
  name: InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  nameWithType: XmlSerializer.InitializeTypeSerializationInfo(Type, ITypeSerializationInfo)
  fullName: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type, NMF.Serialization.ITypeSerializationInfo)
  spec.csharp:
  - uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
    name: InitializeTypeSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
  spec.vb:
  - uid: NMF.Serialization.XmlSerializer.InitializeTypeSerializationInfo(System.Type,NMF.Serialization.ITypeSerializationInfo)
    name: InitializeTypeSerializationInfo
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
  - name: )
- uid: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo
  name: InitializeTypeSerializationInfo
  nameWithType: XmiSerializer.InitializeTypeSerializationInfo
  fullName: NMF.Serialization.Xmi.XmiSerializer.InitializeTypeSerializationInfo
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.Xmi.XmiSerializer.IdAttribute*
  commentId: Overload:NMF.Serialization.Xmi.XmiSerializer.IdAttribute
  name: IdAttribute
  nameWithType: XmiSerializer.IdAttribute
  fullName: NMF.Serialization.Xmi.XmiSerializer.IdAttribute
