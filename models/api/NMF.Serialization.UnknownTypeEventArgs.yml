### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.UnknownTypeEventArgs
  commentId: T:NMF.Serialization.UnknownTypeEventArgs
  id: UnknownTypeEventArgs
  parent: NMF.Serialization
  children:
  - NMF.Serialization.UnknownTypeEventArgs.#ctor(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  - NMF.Serialization.UnknownTypeEventArgs.LocalName
  - NMF.Serialization.UnknownTypeEventArgs.Namespace
  - NMF.Serialization.UnknownTypeEventArgs.Property
  - NMF.Serialization.UnknownTypeEventArgs.Type
  langs:
  - csharp
  - vb
  name: UnknownTypeEventArgs
  nameWithType: UnknownTypeEventArgs
  fullName: NMF.Serialization.UnknownTypeEventArgs
  type: Class
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnknownTypeEventArgs
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 6
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: 'public class UnknownTypeEventArgs : EventArgs'
    content.vb: >-
      Public Class UnknownTypeEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.UnknownTypeEventArgs.Property
  commentId: P:NMF.Serialization.UnknownTypeEventArgs.Property
  id: Property
  parent: NMF.Serialization.UnknownTypeEventArgs
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: UnknownTypeEventArgs.Property
  fullName: NMF.Serialization.UnknownTypeEventArgs.Property
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Property
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 8
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public IPropertySerializationInfo Property { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Public ReadOnly Property Property As IPropertySerializationInfo
  overload: NMF.Serialization.UnknownTypeEventArgs.Property*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownTypeEventArgs.Namespace
  commentId: P:NMF.Serialization.UnknownTypeEventArgs.Namespace
  id: Namespace
  parent: NMF.Serialization.UnknownTypeEventArgs
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: UnknownTypeEventArgs.Namespace
  fullName: NMF.Serialization.UnknownTypeEventArgs.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 10
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Namespace As String
  overload: NMF.Serialization.UnknownTypeEventArgs.Namespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownTypeEventArgs.LocalName
  commentId: P:NMF.Serialization.UnknownTypeEventArgs.LocalName
  id: LocalName
  parent: NMF.Serialization.UnknownTypeEventArgs
  langs:
  - csharp
  - vb
  name: LocalName
  nameWithType: UnknownTypeEventArgs.LocalName
  fullName: NMF.Serialization.UnknownTypeEventArgs.LocalName
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LocalName
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 12
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public string LocalName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocalName As String
  overload: NMF.Serialization.UnknownTypeEventArgs.LocalName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.UnknownTypeEventArgs.Type
  commentId: P:NMF.Serialization.UnknownTypeEventArgs.Type
  id: Type
  parent: NMF.Serialization.UnknownTypeEventArgs
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: UnknownTypeEventArgs.Type
  fullName: NMF.Serialization.UnknownTypeEventArgs.Type
  type: Property
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Type
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 14
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public ITypeSerializationInfo Type { get; set; }
    parameters: []
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Public Property Type As ITypeSerializationInfo
  overload: NMF.Serialization.UnknownTypeEventArgs.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Serialization.UnknownTypeEventArgs.#ctor(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  commentId: M:NMF.Serialization.UnknownTypeEventArgs.#ctor(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)
  id: '#ctor(NMF.Serialization.IPropertySerializationInfo,System.String,System.String)'
  parent: NMF.Serialization.UnknownTypeEventArgs
  langs:
  - csharp
  - vb
  name: UnknownTypeEventArgs(IPropertySerializationInfo, String, String)
  nameWithType: UnknownTypeEventArgs.UnknownTypeEventArgs(IPropertySerializationInfo, String, String)
  fullName: NMF.Serialization.UnknownTypeEventArgs.UnknownTypeEventArgs(NMF.Serialization.IPropertySerializationInfo, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Models/Serialization/UnknownTypeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Serialization/UnknownTypeEventArgs.cs
    startLine: 16
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  syntax:
    content: public UnknownTypeEventArgs(IPropertySerializationInfo property, string ns, string localName)
    parameters:
    - id: property
      type: NMF.Serialization.IPropertySerializationInfo
    - id: ns
      type: System.String
    - id: localName
      type: System.String
    content.vb: Public Sub New(property As IPropertySerializationInfo, ns As String, localName As String)
  overload: NMF.Serialization.UnknownTypeEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.UnknownTypeEventArgs.Property*
  commentId: Overload:NMF.Serialization.UnknownTypeEventArgs.Property
  name: Property
  nameWithType: UnknownTypeEventArgs.Property
  fullName: NMF.Serialization.UnknownTypeEventArgs.Property
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.UnknownTypeEventArgs.Namespace*
  commentId: Overload:NMF.Serialization.UnknownTypeEventArgs.Namespace
  name: Namespace
  nameWithType: UnknownTypeEventArgs.Namespace
  fullName: NMF.Serialization.UnknownTypeEventArgs.Namespace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.UnknownTypeEventArgs.LocalName*
  commentId: Overload:NMF.Serialization.UnknownTypeEventArgs.LocalName
  name: LocalName
  nameWithType: UnknownTypeEventArgs.LocalName
  fullName: NMF.Serialization.UnknownTypeEventArgs.LocalName
- uid: NMF.Serialization.UnknownTypeEventArgs.Type*
  commentId: Overload:NMF.Serialization.UnknownTypeEventArgs.Type
  name: Type
  nameWithType: UnknownTypeEventArgs.Type
  fullName: NMF.Serialization.UnknownTypeEventArgs.Type
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: NMF.Serialization.UnknownTypeEventArgs.#ctor*
  commentId: Overload:NMF.Serialization.UnknownTypeEventArgs.#ctor
  name: UnknownTypeEventArgs
  nameWithType: UnknownTypeEventArgs.UnknownTypeEventArgs
  fullName: NMF.Serialization.UnknownTypeEventArgs.UnknownTypeEventArgs
