### YamlMime:ManagedReference
items:
- uid: NMF.Models.UriChangedEventArgs
  commentId: T:NMF.Models.UriChangedEventArgs
  id: UriChangedEventArgs
  parent: NMF.Models
  children:
  - NMF.Models.UriChangedEventArgs.#ctor(System.Uri)
  - NMF.Models.UriChangedEventArgs.OldUri
  langs:
  - csharp
  - vb
  name: UriChangedEventArgs
  nameWithType: UriChangedEventArgs
  fullName: NMF.Models.UriChangedEventArgs
  type: Class
  source:
    remote:
      path: Models/Models/BubbledChangeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UriChangedEventArgs
    path: src/Models/Models/BubbledChangeEventArgs.cs
    startLine: 260
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nDenotes event data that the uri of a model element has changed\n"
  example: []
  syntax:
    content: 'public class UriChangedEventArgs : EventArgs'
    content.vb: Public Class UriChangedEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.UriChangedEventArgs.#ctor(System.Uri)
  commentId: M:NMF.Models.UriChangedEventArgs.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: NMF.Models.UriChangedEventArgs
  langs:
  - csharp
  - vb
  name: UriChangedEventArgs(Uri)
  nameWithType: UriChangedEventArgs.UriChangedEventArgs(Uri)
  fullName: NMF.Models.UriChangedEventArgs.UriChangedEventArgs(System.Uri)
  type: Constructor
  source:
    remote:
      path: Models/Models/BubbledChangeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/BubbledChangeEventArgs.cs
    startLine: 266
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public UriChangedEventArgs(Uri oldUri)
    parameters:
    - id: oldUri
      type: System.Uri
      description: The old uri
    content.vb: Public Sub New(oldUri As Uri)
  overload: NMF.Models.UriChangedEventArgs.#ctor*
  nameWithType.vb: UriChangedEventArgs.New(Uri)
  fullName.vb: NMF.Models.UriChangedEventArgs.New(System.Uri)
  name.vb: New(Uri)
- uid: NMF.Models.UriChangedEventArgs.OldUri
  commentId: P:NMF.Models.UriChangedEventArgs.OldUri
  id: OldUri
  parent: NMF.Models.UriChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldUri
  nameWithType: UriChangedEventArgs.OldUri
  fullName: NMF.Models.UriChangedEventArgs.OldUri
  type: Property
  source:
    remote:
      path: Models/Models/BubbledChangeEventArgs.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldUri
    path: src/Models/Models/BubbledChangeEventArgs.cs
    startLine: 274
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the old uri of the model element\n"
  example: []
  syntax:
    content: public Uri OldUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property OldUri As Uri
  overload: NMF.Models.UriChangedEventArgs.OldUri*
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.UriChangedEventArgs.#ctor*
  commentId: Overload:NMF.Models.UriChangedEventArgs.#ctor
  name: UriChangedEventArgs
  nameWithType: UriChangedEventArgs.UriChangedEventArgs
  fullName: NMF.Models.UriChangedEventArgs.UriChangedEventArgs
  nameWithType.vb: UriChangedEventArgs.New
  fullName.vb: NMF.Models.UriChangedEventArgs.New
  name.vb: New
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.UriChangedEventArgs.OldUri*
  commentId: Overload:NMF.Models.UriChangedEventArgs.OldUri
  name: OldUri
  nameWithType: UriChangedEventArgs.OldUri
  fullName: NMF.Models.UriChangedEventArgs.OldUri
