### YamlMime:ManagedReference
items:
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  id: Model
  parent: NMF.Models
  children:
  - NMF.Models.Model.#ctor
  - NMF.Models.Model.Children
  - NMF.Models.Model.ClassInstance
  - NMF.Models.Model.CreateUriForElement(NMF.Models.IModelElement)
  - NMF.Models.Model.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.Model.EnsureAllElementsContained
  - NMF.Models.Model.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.Model.GetClass
  - NMF.Models.Model.GetCollectionForFeature(System.String)
  - NMF.Models.Model.GetCompositionName(System.Object)
  - NMF.Models.Model.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.Model.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.Model.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.Model.ModelUri
  - NMF.Models.Model.ModelUriChanged
  - NMF.Models.Model.ModelUriChanging
  - NMF.Models.Model.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.Model.OnModelUriChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Model.OnModelUriChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Model.PromoteSingleRootElement
  - NMF.Models.Model.ReferencedElements
  - NMF.Models.Model.RegisterId(System.String,NMF.Models.ModelElement)
  - NMF.Models.Model.Repository
  - NMF.Models.Model.Resolve(System.String)
  - NMF.Models.Model.ResolveGlobal(System.String)
  - NMF.Models.Model.RootElements
  - NMF.Models.Model.SerializeAsReference(NMF.Models.IModelElement)
  - NMF.Models.Model.SetFeature(System.String,System.Object)
  - NMF.Models.Model.SimplifyUri(System.Uri)
  - NMF.Models.Model.UnlockRequested
  - NMF.Models.Model.UnregisterId(System.String)
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
  type: Class
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Model
    path: src/Models/Models/Model.cs
    startLine: 21
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: >-
      [XmlElementName("XMI")]

      [XmlNamespace("http://www.omg.org/XMI")]

      [XmlNamespacePrefix("xmi")]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Model/")]

      public class Model : ModelElement, IModel, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlElementName("XMI")>

      <XmlNamespace("http://www.omg.org/XMI")>

      <XmlNamespacePrefix("xmi")>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Model/")>

      Public Class Model
          Inherits ModelElement
          Implements IModel, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  implements:
  - NMF.Models.Meta.IModel
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.IsIdentified
  - NMF.Models.ModelElement.ToIdentifierString
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.GetExpressionForReference(System.String)
  - NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  attributes:
  - type: NMF.Serialization.XmlElementNameAttribute
    ctor: NMF.Serialization.XmlElementNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XMI
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://www.omg.org/XMI
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: xmi
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//Model/
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Model.#ctor
  commentId: M:NMF.Models.Model.#ctor
  id: '#ctor'
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: Model()
  nameWithType: Model.Model()
  fullName: NMF.Models.Model.Model()
  type: Constructor
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Model.cs
    startLine: 44
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public Model()
    content.vb: Public Sub New
  overload: NMF.Models.Model.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.ModelUri
  commentId: P:NMF.Models.Model.ModelUri
  id: ModelUri
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ModelUri
  nameWithType: Model.ModelUri
  fullName: NMF.Models.Model.ModelUri
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelUri
    path: src/Models/Models/Model.cs
    startLine: 54
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nThe ModelUri property\n"
  example: []
  syntax:
    content: public Uri ModelUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property ModelUri As Uri
  overload: NMF.Models.Model.ModelUri*
  implements:
  - NMF.Models.Meta.IModel.ModelUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.RootElements
  commentId: P:NMF.Models.Model.RootElements
  id: RootElements
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: RootElements
  nameWithType: Model.RootElements
  fullName: NMF.Models.Model.RootElements
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RootElements
    path: src/Models/Models/Model.cs
    startLine: 79
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nThe RootElements property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(false)]

      [Containment]

      public IOrderedSetExpression<IModelElement> RootElements { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.IOrderedSetExpression{NMF.Models.IModelElement}
    content.vb: >-
      <XmlAttribute(False)>

      <Containment>

      Public ReadOnly Property RootElements As IOrderedSetExpression(Of IModelElement)
  overload: NMF.Models.Model.RootElements*
  implements:
  - NMF.Models.Meta.IModel.RootElements
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Models.ContainmentAttribute
    ctor: NMF.Models.ContainmentAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Model.Children
  commentId: P:NMF.Models.Model.Children
  id: Children
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: Model.Children
  fullName: NMF.Models.Model.Children
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Children
    path: src/Models/Models/Model.cs
    startLine: 94
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the child model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.Children
  overload: NMF.Models.Model.Children*
  implements:
  - NMF.Models.IModelElement.Children
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Model.ReferencedElements
  commentId: P:NMF.Models.Model.ReferencedElements
  id: ReferencedElements
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: Model.ReferencedElements
  fullName: NMF.Models.Model.ReferencedElements
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Models/Models/Model.cs
    startLine: 105
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.ReferencedElements
  overload: NMF.Models.Model.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Model.ClassInstance
  commentId: P:NMF.Models.Model.ClassInstance
  id: ClassInstance
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: Model.ClassInstance
  fullName: NMF.Models.Model.ClassInstance
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Models/Models/Model.cs
    startLine: 116
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.Model.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Models.Model.ModelUriChanging
  commentId: E:NMF.Models.Model.ModelUriChanging
  id: ModelUriChanging
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ModelUriChanging
  nameWithType: Model.ModelUriChanging
  fullName: NMF.Models.Model.ModelUriChanging
  type: Event
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelUriChanging
    path: src/Models/Models/Model.cs
    startLine: 131
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets fired before the ModelUri property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ModelUriChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event ModelUriChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IModel.ModelUriChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.ModelUriChanged
  commentId: E:NMF.Models.Model.ModelUriChanged
  id: ModelUriChanged
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ModelUriChanged
  nameWithType: Model.ModelUriChanged
  fullName: NMF.Models.Model.ModelUriChanged
  type: Event
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ModelUriChanged
    path: src/Models/Models/Model.cs
    startLine: 136
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets fired when the ModelUri property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ModelUriChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event ModelUriChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IModel.ModelUriChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.OnModelUriChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Model.OnModelUriChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnModelUriChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: OnModelUriChanging(ValueChangedEventArgs)
  nameWithType: Model.OnModelUriChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Model.OnModelUriChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnModelUriChanging
    path: src/Models/Models/Model.cs
    startLine: 147
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nRaises the ModelUriChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnModelUriChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnModelUriChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Model.OnModelUriChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Model.OnModelUriChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Model.OnModelUriChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnModelUriChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: OnModelUriChanged(ValueChangedEventArgs)
  nameWithType: Model.OnModelUriChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Model.OnModelUriChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnModelUriChanged
    path: src/Models/Models/Model.cs
    startLine: 160
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nRaises the ModelUriChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnModelUriChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnModelUriChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Model.OnModelUriChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Model.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Model.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetAttributeValue(String, Int32)
  nameWithType: Model.GetAttributeValue(String, Int32)
  fullName: NMF.Models.Model.GetAttributeValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Models/Model.cs
    startLine: 232
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Models.Model.GetAttributeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.Model.GetCollectionForFeature(System.String)
  id: GetCollectionForFeature(System.String)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetCollectionForFeature(String)
  nameWithType: Model.GetCollectionForFeature(String)
  fullName: NMF.Models.Model.GetCollectionForFeature(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCollectionForFeature
    path: src/Models/Models/Model.cs
    startLine: 246
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the Model element collection for the given feature\n"
  example: []
  syntax:
    content: protected override IList GetCollectionForFeature(string feature)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    return:
      type: System.Collections.IList
      description: A non-generic list of elements
    content.vb: Protected Overrides Function GetCollectionForFeature(feature As String) As IList
  overridden: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  overload: NMF.Models.Model.GetCollectionForFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Model.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: Model.SetFeature(String, Object)
  fullName: NMF.Models.Model.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Models/Models/Model.cs
    startLine: 260
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  overload: NMF.Models.Model.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.GetCompositionName(System.Object)
  commentId: M:NMF.Models.Model.GetCompositionName(System.Object)
  id: GetCompositionName(System.Object)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetCompositionName(Object)
  nameWithType: Model.GetCompositionName(Object)
  fullName: NMF.Models.Model.GetCompositionName(System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetCompositionName
    path: src/Models/Models/Model.cs
    startLine: 275
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the property name for the given container\n"
  example: []
  syntax:
    content: protected override string GetCompositionName(object container)
    parameters:
    - id: container
      type: System.Object
      description: The container object
    return:
      type: System.String
      description: The name of the respective container reference
    content.vb: Protected Overrides Function GetCompositionName(container As Object) As String
  overridden: NMF.Models.ModelElement.GetCompositionName(System.Object)
  overload: NMF.Models.Model.GetCompositionName*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.GetClass
  commentId: M:NMF.Models.Model.GetClass
  id: GetClass
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: Model.GetClass()
  fullName: NMF.Models.Model.GetClass()
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Models/Models/Model.cs
    startLine: 287
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Models.ModelElement.GetClass
  overload: NMF.Models.Model.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.Model.PromoteSingleRootElement
  commentId: P:NMF.Models.Model.PromoteSingleRootElement
  id: PromoteSingleRootElement
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: PromoteSingleRootElement
  nameWithType: Model.PromoteSingleRootElement
  fullName: NMF.Models.Model.PromoteSingleRootElement
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PromoteSingleRootElement
    path: src/Models/Models/Model.cs
    startLine: 586
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nThis configuration sets whether a model should be identified with its single root model if such an element exists\n"
  example: []
  syntax:
    content: public static bool PromoteSingleRootElement { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property PromoteSingleRootElement As Boolean
  overload: NMF.Models.Model.PromoteSingleRootElement*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: NMF.Models.Model.Repository
  commentId: P:NMF.Models.Model.Repository
  id: Repository
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: Model.Repository
  fullName: NMF.Models.Model.Repository
  type: Property
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Repository
    path: src/Models/Models/Model.cs
    startLine: 591
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nThe repository that manages this model\n"
  example: []
  syntax:
    content: public IModelRepository Repository { get; }
    parameters: []
    return:
      type: NMF.Models.Repository.IModelRepository
    content.vb: Public ReadOnly Property Repository As IModelRepository
  overload: NMF.Models.Model.Repository*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Models.Model.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Model.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: Model.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Model.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Models/Models/Model.cs
    startLine: 593
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
    - id: index
      type: System.Int32
    return:
      type: NMF.Models.IModelElement
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Models.Model.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Model.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  id: GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: Model.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.Model.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRelativePathForNonIdentifiedChild
    path: src/Models/Models/Model.cs
    startLine: 611
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected override string GetRelativePathForNonIdentifiedChild(IModelElement child)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
    return:
      type: System.String
    content.vb: Protected Overrides Function GetRelativePathForNonIdentifiedChild(child As IModelElement) As String
  overridden: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  overload: NMF.Models.Model.GetRelativePathForNonIdentifiedChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Model.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  id: CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: Model.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.Model.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateUriWithFragment
    path: src/Models/Models/Model.cs
    startLine: 631
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected override Uri CreateUriWithFragment(string fragment, bool absolute, IModelElement baseElement = null)
    parameters:
    - id: fragment
      type: System.String
    - id: absolute
      type: System.Boolean
    - id: baseElement
      type: NMF.Models.IModelElement
    return:
      type: System.Uri
    content.vb: Protected Overrides Function CreateUriWithFragment(fragment As String, absolute As Boolean, baseElement As IModelElement = Nothing) As Uri
  overridden: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  overload: NMF.Models.Model.CreateUriWithFragment*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.RegisterId(System.String,NMF.Models.ModelElement)
  commentId: M:NMF.Models.Model.RegisterId(System.String,NMF.Models.ModelElement)
  id: RegisterId(System.String,NMF.Models.ModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: RegisterId(String, ModelElement)
  nameWithType: Model.RegisterId(String, ModelElement)
  fullName: NMF.Models.Model.RegisterId(System.String, NMF.Models.ModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RegisterId
    path: src/Models/Models/Model.cs
    startLine: 667
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nRegisters the given model element with the given id\n"
  example: []
  syntax:
    content: public bool RegisterId(string id, ModelElement element)
    parameters:
    - id: id
      type: System.String
      description: The identifier
    - id: element
      type: NMF.Models.ModelElement
      description: That element to register with the id
    return:
      type: System.Boolean
      description: True, if the registration process was successful. Otherwise, False denotes that already an element with this identifier existed.
    content.vb: Public Function RegisterId(id As String, element As ModelElement) As Boolean
  overload: NMF.Models.Model.RegisterId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.UnregisterId(System.String)
  commentId: M:NMF.Models.Model.UnregisterId(System.String)
  id: UnregisterId(System.String)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: UnregisterId(String)
  nameWithType: Model.UnregisterId(String)
  fullName: NMF.Models.Model.UnregisterId(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnregisterId
    path: src/Models/Models/Model.cs
    startLine: 691
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nUnregister the given identifier\n"
  example: []
  syntax:
    content: public bool UnregisterId(string id)
    parameters:
    - id: id
      type: System.String
      description: The identifier
    return:
      type: System.Boolean
      description: True, if the identifier is removed. False denotes that this identifier was not registered
    content.vb: Public Function UnregisterId(id As String) As Boolean
  overload: NMF.Models.Model.UnregisterId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.CreateUriForElement(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Model.CreateUriForElement(NMF.Models.IModelElement)
  id: CreateUriForElement(NMF.Models.IModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: CreateUriForElement(IModelElement)
  nameWithType: Model.CreateUriForElement(IModelElement)
  fullName: NMF.Models.Model.CreateUriForElement(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateUriForElement
    path: src/Models/Models/Model.cs
    startLine: 704
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public virtual Uri CreateUriForElement(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
    return:
      type: System.Uri
    content.vb: Public Overridable Function CreateUriForElement(element As IModelElement) As Uri
  overload: NMF.Models.Model.CreateUriForElement*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: NMF.Models.Model.SimplifyUri(System.Uri)
  commentId: M:NMF.Models.Model.SimplifyUri(System.Uri)
  id: SimplifyUri(System.Uri)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: SimplifyUri(Uri)
  nameWithType: Model.SimplifyUri(Uri)
  fullName: NMF.Models.Model.SimplifyUri(System.Uri)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SimplifyUri
    path: src/Models/Models/Model.cs
    startLine: 718
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected Uri SimplifyUri(Uri target)
    parameters:
    - id: target
      type: System.Uri
    return:
      type: System.Uri
    content.vb: Protected Function SimplifyUri(target As Uri) As Uri
  overload: NMF.Models.Model.SimplifyUri*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NMF.Models.Model.ResolveGlobal(System.String)
  commentId: M:NMF.Models.Model.ResolveGlobal(System.String)
  id: ResolveGlobal(System.String)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: ResolveGlobal(String)
  nameWithType: Model.ResolveGlobal(String)
  fullName: NMF.Models.Model.ResolveGlobal(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ResolveGlobal
    path: src/Models/Models/Model.cs
    startLine: 742
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: "\nResolves the given global ID\n"
  example: []
  syntax:
    content: public IModelElement ResolveGlobal(string id)
    parameters:
    - id: id
      type: System.String
      description: The given global id
    return:
      type: NMF.Models.IModelElement
      description: The model element with the given id or null, if no such element is found
    content.vb: Public Function ResolveGlobal(id As String) As IModelElement
  overload: NMF.Models.Model.ResolveGlobal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.Resolve(System.String)
  commentId: M:NMF.Models.Model.Resolve(System.String)
  id: Resolve(System.String)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: Resolve(String)
  nameWithType: Model.Resolve(String)
  fullName: NMF.Models.Model.Resolve(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Resolve
    path: src/Models/Models/Model.cs
    startLine: 752
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public override IModelElement Resolve(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: NMF.Models.IModelElement
    content.vb: Public Overrides Function Resolve(path As String) As IModelElement
  overridden: NMF.Models.ModelElement.Resolve(System.String)
  overload: NMF.Models.Model.Resolve*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Models.Model.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Model.GetRelativePathForChild(NMF.Models.IModelElement)
  id: GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: GetRelativePathForChild(IModelElement)
  nameWithType: Model.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.Model.GetRelativePathForChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetRelativePathForChild
    path: src/Models/Models/Model.cs
    startLine: 815
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected override string GetRelativePathForChild(IModelElement child)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
    return:
      type: System.String
    content.vb: Protected Overrides Function GetRelativePathForChild(child As IModelElement) As String
  overridden: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  overload: NMF.Models.Model.GetRelativePathForChild*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Model.EnsureAllElementsContained
  commentId: M:NMF.Models.Model.EnsureAllElementsContained
  id: EnsureAllElementsContained
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: EnsureAllElementsContained()
  nameWithType: Model.EnsureAllElementsContained()
  fullName: NMF.Models.Model.EnsureAllElementsContained()
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnsureAllElementsContained
    path: src/Models/Models/Model.cs
    startLine: 824
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected virtual void EnsureAllElementsContained()
    content.vb: Protected Overridable Sub EnsureAllElementsContained
  overload: NMF.Models.Model.EnsureAllElementsContained*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Model.SerializeAsReference(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Model.SerializeAsReference(NMF.Models.IModelElement)
  id: SerializeAsReference(NMF.Models.IModelElement)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: SerializeAsReference(IModelElement)
  nameWithType: Model.SerializeAsReference(IModelElement)
  fullName: NMF.Models.Model.SerializeAsReference(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SerializeAsReference
    path: src/Models/Models/Model.cs
    startLine: 843
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected virtual bool SerializeAsReference(IModelElement element)
    parameters:
    - id: element
      type: NMF.Models.IModelElement
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function SerializeAsReference(element As IModelElement) As Boolean
  overload: NMF.Models.Model.SerializeAsReference*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Model.UnlockRequested
  commentId: E:NMF.Models.Model.UnlockRequested
  id: UnlockRequested
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: UnlockRequested
  nameWithType: Model.UnlockRequested
  fullName: NMF.Models.Model.UnlockRequested
  type: Event
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnlockRequested
    path: src/Models/Models/Model.cs
    startLine: 848
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: public event EventHandler<UnlockEventArgs> UnlockRequested
    return:
      type: System.EventHandler{NMF.Models.UnlockEventArgs}
    content.vb: Public Event UnlockRequested As EventHandler(Of UnlockEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Model.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.Model.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  id: OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.Model
  langs:
  - csharp
  - vb
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: Model.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.Model.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Model.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnBubbledChange
    path: src/Models/Models/Model.cs
    startLine: 850
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  syntax:
    content: protected override void OnBubbledChange(BubbledChangeEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.BubbledChangeEventArgs
    content.vb: Protected Overrides Sub OnBubbledChange(e As BubbledChangeEventArgs)
  overridden: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  overload: NMF.Models.Model.OnBubbledChange*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Meta.IModel
  commentId: T:NMF.Models.Meta.IModel
  parent: NMF.Models.Meta
  name: IModel
  nameWithType: IModel
  fullName: NMF.Models.Meta.IModel
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.IsIdentified
  commentId: P:NMF.Models.ModelElement.IsIdentified
  parent: NMF.Models.ModelElement
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
- uid: NMF.Models.ModelElement.ToIdentifierString
  commentId: M:NMF.Models.ModelElement.ToIdentifierString
  parent: NMF.Models.ModelElement
  name: ToIdentifierString()
  nameWithType: ModelElement.ToIdentifierString()
  fullName: NMF.Models.ModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: ModelElement.ToIdentifierString
    fullName: NMF.Models.ModelElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: ModelElement.GetExpressionForReference(String)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: ModelElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: ModelElement.GetExpressionForAttribute
    fullName: NMF.Models.ModelElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants()
  nameWithType: ModelExtensions.Descendants()
  fullName: NMF.Models.ModelExtensions.Descendants()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors()
  nameWithType: ModelExtensions.Ancestors()
  fullName: NMF.Models.ModelExtensions.Ancestors()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree()
  nameWithType: ModelExtensions.AncestorTree()
  fullName: NMF.Models.ModelExtensions.AncestorTree()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    nameWithType: ModelExtensions.Ancestors
    fullName: NMF.Models.ModelExtensions.Ancestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    nameWithType: ModelExtensions.AncestorTree
    fullName: NMF.Models.ModelExtensions.AncestorTree
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.#ctor*
  commentId: Overload:NMF.Models.Model.#ctor
  name: Model
  nameWithType: Model.Model
  fullName: NMF.Models.Model.Model
- uid: NMF.Models.Model.ModelUri*
  commentId: Overload:NMF.Models.Model.ModelUri
  name: ModelUri
  nameWithType: Model.ModelUri
  fullName: NMF.Models.Model.ModelUri
- uid: NMF.Models.Meta.IModel.ModelUri
  commentId: P:NMF.Models.Meta.IModel.ModelUri
  parent: NMF.Models.Meta.IModel
  name: ModelUri
  nameWithType: IModel.ModelUri
  fullName: NMF.Models.Meta.IModel.ModelUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.Model.RootElements*
  commentId: Overload:NMF.Models.Model.RootElements
  name: RootElements
  nameWithType: Model.RootElements
  fullName: NMF.Models.Model.RootElements
- uid: NMF.Models.Meta.IModel.RootElements
  commentId: P:NMF.Models.Meta.IModel.RootElements
  parent: NMF.Models.Meta.IModel
  name: RootElements
  nameWithType: IModel.RootElements
  fullName: NMF.Models.Meta.IModel.RootElements
- uid: NMF.Collections.Generic.IOrderedSetExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression{NMF.Models.IModelElement}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<IModelElement>
  nameWithType: IOrderedSetExpression<IModelElement>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<NMF.Models.IModelElement>
  nameWithType.vb: IOrderedSetExpression(Of IModelElement)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of NMF.Models.IModelElement)
  name.vb: IOrderedSetExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    nameWithType: IOrderedSetExpression
    fullName: NMF.Collections.Generic.IOrderedSetExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  parent: NMF.Models.ModelElement
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.Model.Children*
  commentId: Overload:NMF.Models.Model.Children
  name: Children
  nameWithType: Model.Children
  fullName: NMF.Models.Model.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Models.ModelElement.ReferencedElements
  commentId: P:NMF.Models.ModelElement.ReferencedElements
  parent: NMF.Models.ModelElement
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
- uid: NMF.Models.Model.ReferencedElements*
  commentId: Overload:NMF.Models.Model.ReferencedElements
  name: ReferencedElements
  nameWithType: Model.ReferencedElements
  fullName: NMF.Models.Model.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.Model.ClassInstance*
  commentId: Overload:NMF.Models.Model.ClassInstance
  name: ClassInstance
  nameWithType: Model.ClassInstance
  fullName: NMF.Models.Model.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta.IModel.ModelUriChanging
  commentId: E:NMF.Models.Meta.IModel.ModelUriChanging
  parent: NMF.Models.Meta.IModel
  name: ModelUriChanging
  nameWithType: IModel.ModelUriChanging
  fullName: NMF.Models.Meta.IModel.ModelUriChanging
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IModel.ModelUriChanged
  commentId: E:NMF.Models.Meta.IModel.ModelUriChanged
  parent: NMF.Models.Meta.IModel
  name: ModelUriChanged
  nameWithType: IModel.ModelUriChanged
  fullName: NMF.Models.Meta.IModel.ModelUriChanged
- uid: NMF.Models.Model.OnModelUriChanging*
  commentId: Overload:NMF.Models.Model.OnModelUriChanging
  name: OnModelUriChanging
  nameWithType: Model.OnModelUriChanging
  fullName: NMF.Models.Model.OnModelUriChanging
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Models.Model.OnModelUriChanged*
  commentId: Overload:NMF.Models.Model.OnModelUriChanged
  name: OnModelUriChanged
  nameWithType: Model.OnModelUriChanged
  fullName: NMF.Models.Model.OnModelUriChanged
- uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: ModelElement.GetAttributeValue(String, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetAttributeValue*
  commentId: Overload:NMF.Models.Model.GetAttributeValue
  name: GetAttributeValue
  nameWithType: Model.GetAttributeValue
  fullName: NMF.Models.Model.GetAttributeValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: ModelElement.GetCollectionForFeature(String)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetCollectionForFeature*
  commentId: Overload:NMF.Models.Model.GetCollectionForFeature
  name: GetCollectionForFeature
  nameWithType: Model.GetCollectionForFeature
  fullName: NMF.Models.Model.GetCollectionForFeature
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: ModelElement.SetFeature(String, Object)
  fullName: NMF.Models.ModelElement.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ModelElement.SetFeature
    fullName: NMF.Models.ModelElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: ModelElement.SetFeature
    fullName: NMF.Models.ModelElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.SetFeature*
  commentId: Overload:NMF.Models.Model.SetFeature
  name: SetFeature
  nameWithType: Model.SetFeature
  fullName: NMF.Models.Model.SetFeature
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetCompositionName*
  commentId: Overload:NMF.Models.Model.GetCompositionName
  name: GetCompositionName
  nameWithType: Model.GetCompositionName
  fullName: NMF.Models.Model.GetCompositionName
- uid: NMF.Models.ModelElement.GetClass
  commentId: M:NMF.Models.ModelElement.GetClass
  parent: NMF.Models.ModelElement
  name: GetClass()
  nameWithType: ModelElement.GetClass()
  fullName: NMF.Models.ModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetClass
    name: GetClass
    nameWithType: ModelElement.GetClass
    fullName: NMF.Models.ModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetClass
    name: GetClass
    nameWithType: ModelElement.GetClass
    fullName: NMF.Models.ModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetClass*
  commentId: Overload:NMF.Models.Model.GetClass
  name: GetClass
  nameWithType: Model.GetClass
  fullName: NMF.Models.Model.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.PromoteSingleRootElement*
  commentId: Overload:NMF.Models.Model.PromoteSingleRootElement
  name: PromoteSingleRootElement
  nameWithType: Model.PromoteSingleRootElement
  fullName: NMF.Models.Model.PromoteSingleRootElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Models.Model.Repository*
  commentId: Overload:NMF.Models.Model.Repository
  name: Repository
  nameWithType: Model.Repository
  fullName: NMF.Models.Model.Repository
- uid: NMF.Models.Repository.IModelRepository
  commentId: T:NMF.Models.Repository.IModelRepository
  parent: NMF.Models.Repository
  name: IModelRepository
  nameWithType: IModelRepository
  fullName: NMF.Models.Repository.IModelRepository
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
- uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: ModelElement.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.ModelElement.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetModelElementForReference*
  commentId: Overload:NMF.Models.Model.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: Model.GetModelElementForReference
  fullName: NMF.Models.Model.GetModelElementForReference
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetRelativePathForNonIdentifiedChild*
  commentId: Overload:NMF.Models.Model.GetRelativePathForNonIdentifiedChild
  name: GetRelativePathForNonIdentifiedChild
  nameWithType: Model.GetRelativePathForNonIdentifiedChild
  fullName: NMF.Models.Model.GetRelativePathForNonIdentifiedChild
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.CreateUriWithFragment*
  commentId: Overload:NMF.Models.Model.CreateUriWithFragment
  name: CreateUriWithFragment
  nameWithType: Model.CreateUriWithFragment
  fullName: NMF.Models.Model.CreateUriWithFragment
- uid: NMF.Models.Model.RegisterId*
  commentId: Overload:NMF.Models.Model.RegisterId
  name: RegisterId
  nameWithType: Model.RegisterId
  fullName: NMF.Models.Model.RegisterId
- uid: NMF.Models.Model.UnregisterId*
  commentId: Overload:NMF.Models.Model.UnregisterId
  name: UnregisterId
  nameWithType: Model.UnregisterId
  fullName: NMF.Models.Model.UnregisterId
- uid: NMF.Models.Model.CreateUriForElement*
  commentId: Overload:NMF.Models.Model.CreateUriForElement
  name: CreateUriForElement
  nameWithType: Model.CreateUriForElement
  fullName: NMF.Models.Model.CreateUriForElement
- uid: NMF.Models.Model.SimplifyUri*
  commentId: Overload:NMF.Models.Model.SimplifyUri
  name: SimplifyUri
  nameWithType: Model.SimplifyUri
  fullName: NMF.Models.Model.SimplifyUri
- uid: NMF.Models.Model.ResolveGlobal*
  commentId: Overload:NMF.Models.Model.ResolveGlobal
  name: ResolveGlobal
  nameWithType: Model.ResolveGlobal
  fullName: NMF.Models.Model.ResolveGlobal
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.Resolve*
  commentId: Overload:NMF.Models.Model.Resolve
  name: Resolve
  nameWithType: Model.Resolve
  fullName: NMF.Models.Model.Resolve
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.GetRelativePathForChild*
  commentId: Overload:NMF.Models.Model.GetRelativePathForChild
  name: GetRelativePathForChild
  nameWithType: Model.GetRelativePathForChild
  fullName: NMF.Models.Model.GetRelativePathForChild
- uid: NMF.Models.Model.EnsureAllElementsContained*
  commentId: Overload:NMF.Models.Model.EnsureAllElementsContained
  name: EnsureAllElementsContained
  nameWithType: Model.EnsureAllElementsContained
  fullName: NMF.Models.Model.EnsureAllElementsContained
- uid: NMF.Models.Model.SerializeAsReference*
  commentId: Overload:NMF.Models.Model.SerializeAsReference
  name: SerializeAsReference
  nameWithType: Model.SerializeAsReference
  fullName: NMF.Models.Model.SerializeAsReference
- uid: System.EventHandler{NMF.Models.UnlockEventArgs}
  commentId: T:System.EventHandler{NMF.Models.UnlockEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UnlockEventArgs>
  nameWithType: EventHandler<UnlockEventArgs>
  fullName: System.EventHandler<NMF.Models.UnlockEventArgs>
  nameWithType.vb: EventHandler(Of UnlockEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Models.UnlockEventArgs)
  name.vb: EventHandler(Of UnlockEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.UnlockEventArgs
    name: UnlockEventArgs
    nameWithType: UnlockEventArgs
    fullName: NMF.Models.UnlockEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.UnlockEventArgs
    name: UnlockEventArgs
    nameWithType: UnlockEventArgs
    fullName: NMF.Models.UnlockEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Model.OnBubbledChange*
  commentId: Overload:NMF.Models.Model.OnBubbledChange
  name: OnBubbledChange
  nameWithType: Model.OnBubbledChange
  fullName: NMF.Models.Model.OnBubbledChange
- uid: NMF.Models.BubbledChangeEventArgs
  commentId: T:NMF.Models.BubbledChangeEventArgs
  parent: NMF.Models
  name: BubbledChangeEventArgs
  nameWithType: BubbledChangeEventArgs
  fullName: NMF.Models.BubbledChangeEventArgs
