### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.EnumerationLiteralsCollection
  commentId: T:NMF.Models.Meta.EnumerationLiteralsCollection
  id: EnumerationLiteralsCollection
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.EnumerationLiteralsCollection.#ctor(NMF.Models.Meta.IEnumeration)
  - NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  langs:
  - csharp
  - vb
  name: EnumerationLiteralsCollection
  nameWithType: EnumerationLiteralsCollection
  fullName: NMF.Models.Meta.EnumerationLiteralsCollection
  type: Class
  source:
    remote:
      path: Models/Models/Meta/EnumerationLiteralsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnumerationLiteralsCollection
    path: src/Models/Models/Meta/EnumerationLiteralsCollection.cs
    startLine: 34
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: 'public class EnumerationLiteralsCollection : ObservableOppositeList<IEnumeration, ILiteral>, IReadOnlyList<ILiteral>, IReadOnlyCollection<ILiteral>, IList, ICollection, INotifyCollectionChanging, INotifyPropertyChanged, INotifyCollectionChanged, IListExpression<ILiteral>, IList<ILiteral>, ICollectionExpression<ILiteral>, IEnumerableExpression<ILiteral>, IEnumerableExpression, ICollection<ILiteral>, IEnumerable<ILiteral>, IEnumerable'
    content.vb: >-
      Public Class EnumerationLiteralsCollection
          Inherits ObservableOppositeList(Of IEnumeration, ILiteral)
          Implements IReadOnlyList(Of ILiteral), IReadOnlyCollection(Of ILiteral), IList, ICollection, INotifyCollectionChanging, INotifyPropertyChanged, INotifyCollectionChanged, IListExpression(Of ILiteral), IList(Of ILiteral), ICollectionExpression(Of ILiteral), IEnumerableExpression(Of ILiteral), IEnumerableExpression, ICollection(Of ILiteral), IEnumerable(Of ILiteral), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  implements:
  - System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.ILiteral}
  - System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.ILiteral}
  - System.Collections.IList
  - System.Collections.ICollection
  - NMF.Collections.ObjectModel.INotifyCollectionChanging
  - System.ComponentModel.INotifyPropertyChanged
  - System.Collections.Specialized.INotifyCollectionChanged
  - NMF.Expressions.IListExpression{NMF.Models.Meta.ILiteral}
  - System.Collections.Generic.IList{NMF.Models.Meta.ILiteral}
  - NMF.Expressions.ICollectionExpression{NMF.Models.Meta.ILiteral}
  - NMF.Expressions.IEnumerableExpression{NMF.Models.Meta.ILiteral}
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.Generic.ICollection{NMF.Models.Meta.ILiteral}
  - System.Collections.Generic.IEnumerable{NMF.Models.Meta.ILiteral}
  - System.Collections.IEnumerable
  inheritedMembers:
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.Parent
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.ClearItems
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.AsNotifiable
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanging
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanged
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.PropertyChanged
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RequireEvents
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.ClearItems
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.MoveItem(System.Int32,System.Int32)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Add(NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Clear
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Contains(NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.CopyTo(NMF.Models.Meta.ILiteral[],System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.IndexOf(NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Insert(System.Int32,NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Remove(NMF.Models.Meta.ILiteral)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Count
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Items
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Meta.EnumerationLiteralsCollection.#ctor(NMF.Models.Meta.IEnumeration)
  commentId: M:NMF.Models.Meta.EnumerationLiteralsCollection.#ctor(NMF.Models.Meta.IEnumeration)
  id: '#ctor(NMF.Models.Meta.IEnumeration)'
  parent: NMF.Models.Meta.EnumerationLiteralsCollection
  langs:
  - csharp
  - vb
  name: EnumerationLiteralsCollection(IEnumeration)
  nameWithType: EnumerationLiteralsCollection.EnumerationLiteralsCollection(IEnumeration)
  fullName: NMF.Models.Meta.EnumerationLiteralsCollection.EnumerationLiteralsCollection(NMF.Models.Meta.IEnumeration)
  type: Constructor
  source:
    remote:
      path: Models/Models/Meta/EnumerationLiteralsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Meta/EnumerationLiteralsCollection.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public EnumerationLiteralsCollection(IEnumeration parent)
    parameters:
    - id: parent
      type: NMF.Models.Meta.IEnumeration
    content.vb: Public Sub New(parent As IEnumeration)
  overload: NMF.Models.Meta.EnumerationLiteralsCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  commentId: M:NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  id: SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  parent: NMF.Models.Meta.EnumerationLiteralsCollection
  langs:
  - csharp
  - vb
  name: SetOpposite(ILiteral, IEnumeration)
  nameWithType: EnumerationLiteralsCollection.SetOpposite(ILiteral, IEnumeration)
  fullName: NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite(NMF.Models.Meta.ILiteral, NMF.Models.Meta.IEnumeration)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/EnumerationLiteralsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetOpposite
    path: src/Models/Models/Meta/EnumerationLiteralsCollection.cs
    startLine: 50
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: protected override void SetOpposite(ILiteral item, IEnumeration parent)
    parameters:
    - id: item
      type: NMF.Models.Meta.ILiteral
    - id: parent
      type: NMF.Models.Meta.IEnumeration
    content.vb: Protected Overrides Sub SetOpposite(item As ILiteral, parent As IEnumeration)
  overridden: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  overload: NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<ILiteral>
  nameWithType: Collection<ILiteral>
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>
  nameWithType.vb: Collection(Of ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral)
  name.vb: Collection(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  name: ObservableCollectionExtended<ILiteral>
  nameWithType: ObservableCollectionExtended<ILiteral>
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral)
  name.vb: ObservableCollectionExtended(Of ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableList`1
  name: ObservableList<ILiteral>
  nameWithType: ObservableList<ILiteral>
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>
  nameWithType.vb: ObservableList(Of ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral)
  name.vb: ObservableList(Of ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2
  name: ObservableOppositeList<IEnumeration, ILiteral>
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral)
  name.vb: ObservableOppositeList(Of IEnumeration, ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IEnumeration
    name: IEnumeration
    nameWithType: IEnumeration
    fullName: NMF.Models.Meta.IEnumeration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IEnumeration
    name: IEnumeration
    nameWithType: IEnumeration
    fullName: NMF.Models.Meta.IEnumeration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.ILiteral}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ILiteral>
  nameWithType: IReadOnlyList<ILiteral>
  fullName: System.Collections.Generic.IReadOnlyList<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IReadOnlyList(Of ILiteral)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of NMF.Models.Meta.ILiteral)
  name.vb: IReadOnlyList(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.ILiteral}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ILiteral>
  nameWithType: IReadOnlyCollection<ILiteral>
  fullName: System.Collections.Generic.IReadOnlyCollection<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IReadOnlyCollection(Of ILiteral)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of NMF.Models.Meta.ILiteral)
  name.vb: IReadOnlyCollection(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
  commentId: T:NMF.Collections.ObjectModel.INotifyCollectionChanging
  parent: NMF.Collections.ObjectModel
  name: INotifyCollectionChanging
  nameWithType: INotifyCollectionChanging
  fullName: NMF.Collections.ObjectModel.INotifyCollectionChanging
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: NMF.Expressions.IListExpression{NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Expressions.IListExpression{NMF.Models.Meta.ILiteral}
  parent: NMF.Expressions
  definition: NMF.Expressions.IListExpression`1
  name: IListExpression<ILiteral>
  nameWithType: IListExpression<ILiteral>
  fullName: NMF.Expressions.IListExpression<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IListExpression(Of ILiteral)
  fullName.vb: NMF.Expressions.IListExpression(Of NMF.Models.Meta.ILiteral)
  name.vb: IListExpression(Of ILiteral)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.Generic.IList{NMF.Models.Meta.ILiteral}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ILiteral>
  nameWithType: IList<ILiteral>
  fullName: System.Collections.Generic.IList<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IList(Of ILiteral)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Models.Meta.ILiteral)
  name.vb: IList(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ICollectionExpression{NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Models.Meta.ILiteral}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<ILiteral>
  nameWithType: ICollectionExpression<ILiteral>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Models.Meta.ILiteral>
  nameWithType.vb: ICollectionExpression(Of ILiteral)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Models.Meta.ILiteral)
  name.vb: ICollectionExpression(Of ILiteral)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.Meta.ILiteral}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.Meta.ILiteral}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<ILiteral>
  nameWithType: IEnumerableExpression<ILiteral>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IEnumerableExpression(Of ILiteral)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.Meta.ILiteral)
  name.vb: IEnumerableExpression(Of ILiteral)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.Generic.ICollection{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.Generic.ICollection{NMF.Models.Meta.ILiteral}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ILiteral>
  nameWithType: ICollection<ILiteral>
  fullName: System.Collections.Generic.ICollection<NMF.Models.Meta.ILiteral>
  nameWithType.vb: ICollection(Of ILiteral)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Models.Meta.ILiteral)
  name.vb: ICollection(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Models.Meta.ILiteral}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Models.Meta.ILiteral}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ILiteral>
  nameWithType: IEnumerable<ILiteral>
  fullName: System.Collections.Generic.IEnumerable<NMF.Models.Meta.ILiteral>
  nameWithType.vb: IEnumerable(Of ILiteral)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Models.Meta.ILiteral)
  name.vb: IEnumerable(Of ILiteral)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.Parent
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  name: Parent
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.Parent
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetOpposite(NMF.Models.Meta.ILiteral,NMF.Models.Meta.IEnumeration)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  name: SetOpposite(ILiteral, IEnumeration)
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.SetOpposite(ILiteral, IEnumeration)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.SetOpposite(NMF.Models.Meta.ILiteral, NMF.Models.Meta.IEnumeration)
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).SetOpposite(ILiteral, IEnumeration)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).SetOpposite(NMF.Models.Meta.ILiteral, NMF.Models.Meta.IEnumeration)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IEnumeration
    name: IEnumeration
    nameWithType: IEnumeration
    fullName: NMF.Models.Meta.IEnumeration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList(Of IEnumeration, ILiteral).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IEnumeration
    name: IEnumeration
    nameWithType: IEnumeration
    fullName: NMF.Models.Meta.IEnumeration
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.ClearItems
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  name: ClearItems()
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.ClearItems()
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList(Of IEnumeration, ILiteral).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  name: InsertItem(Int32, ILiteral)
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.InsertItem(Int32, ILiteral)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.InsertItem(System.Int32, NMF.Models.Meta.ILiteral)
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).InsertItem(Int32, ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).InsertItem(System.Int32, NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList(Of IEnumeration, ILiteral).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList(Of IEnumeration, ILiteral).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IEnumeration,NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  name: SetItem(Int32, ILiteral)
  nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.SetItem(Int32, ILiteral)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.SetItem(System.Int32, NMF.Models.Meta.ILiteral)
  nameWithType.vb: ObservableOppositeList(Of IEnumeration, ILiteral).SetItem(Int32, ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).SetItem(System.Int32, NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList<IEnumeration, ILiteral>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList(Of IEnumeration, ILiteral).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IEnumeration, NMF.Models.Meta.ILiteral).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableList<ILiteral>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.AsNotifiable()
  nameWithType.vb: ObservableList(Of ILiteral).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList<ILiteral>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList(Of ILiteral).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  name: IEnumerableExpression<ILiteral>.AsNotifiable()
  nameWithType: ObservableList<ILiteral>.IEnumerableExpression<ILiteral>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.NMF.Expressions.IEnumerableExpression<NMF.Models.Meta.ILiteral>.AsNotifiable()
  nameWithType.vb: ObservableList(Of ILiteral).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: IEnumerableExpression<ILiteral>.AsNotifiable
    nameWithType: ObservableList<ILiteral>.IEnumerableExpression<ILiteral>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.NMF.Expressions.IEnumerableExpression<NMF.Models.Meta.ILiteral>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableList(Of ILiteral).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}.NMF#Expressions#IEnumerableExpression#AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  nameWithType: ObservableList<ILiteral>.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ObservableList(Of ILiteral).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: IEnumerableExpression.AsNotifiable
    nameWithType: ObservableList<ILiteral>.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.ILiteral>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression.AsNotifiable
    nameWithType: ObservableList(Of ILiteral).NMF.Expressions.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.ILiteral).NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanging
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableCollectionExtended<ILiteral>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.CollectionChanging
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.CollectionChanged
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollectionExtended<ILiteral>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.CollectionChanged
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.PropertyChanged
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollectionExtended<ILiteral>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.PropertyChanged
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollectionExtended<ILiteral>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended<ILiteral>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended(Of ILiteral).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  nameWithType: ObservableCollectionExtended<ILiteral>.OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended<ILiteral>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended(Of ILiteral).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RequireEvents
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableCollectionExtended<ILiteral>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.RequireEvents()
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended<ILiteral>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended(Of ILiteral).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.ClearItems
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollectionExtended<ILiteral>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.ClearItems()
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended<ILiteral>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended(Of ILiteral).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.InsertItem(System.Int32,NMF.Models.Meta.ILiteral)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, ILiteral)
  nameWithType: ObservableCollectionExtended<ILiteral>.InsertItem(Int32, ILiteral)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.InsertItem(System.Int32, NMF.Models.Meta.ILiteral)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).InsertItem(Int32, ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).InsertItem(System.Int32, NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended<ILiteral>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended(Of ILiteral).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.MoveItem(System.Int32,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.MoveItem(System.Int32,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollectionExtended<ILiteral>.MoveItem(Int32, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).MoveItem(Int32, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended<ILiteral>.MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended(Of ILiteral).MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.RemoveItem(System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableCollectionExtended<ILiteral>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended<ILiteral>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended(Of ILiteral).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}.SetItem(System.Int32,NMF.Models.Meta.ILiteral)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.ILiteral}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, ILiteral)
  nameWithType: ObservableCollectionExtended<ILiteral>.SetItem(Int32, ILiteral)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.SetItem(System.Int32, NMF.Models.Meta.ILiteral)
  nameWithType.vb: ObservableCollectionExtended(Of ILiteral).SetItem(Int32, ILiteral)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).SetItem(System.Int32, NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended<ILiteral>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.ILiteral>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended(Of ILiteral).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.ILiteral).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<ILiteral>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<ILiteral>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of ILiteral).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<ILiteral>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<ILiteral>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of ILiteral).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Add(NMF.Models.Meta.ILiteral)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Add(NMF.Models.Meta.ILiteral)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(ILiteral)
  nameWithType: Collection<ILiteral>.Add(ILiteral)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Add(NMF.Models.Meta.ILiteral)
  nameWithType.vb: Collection(Of ILiteral).Add(ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Add(NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<ILiteral>.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of ILiteral).Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Clear
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<ILiteral>.Clear()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Clear()
  nameWithType.vb: Collection(Of ILiteral).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<ILiteral>.Clear
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of ILiteral).Clear
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Contains(NMF.Models.Meta.ILiteral)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Contains(NMF.Models.Meta.ILiteral)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(ILiteral)
  nameWithType: Collection<ILiteral>.Contains(ILiteral)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Contains(NMF.Models.Meta.ILiteral)
  nameWithType.vb: Collection(Of ILiteral).Contains(ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Contains(NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<ILiteral>.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of ILiteral).Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.CopyTo(NMF.Models.Meta.ILiteral[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.CopyTo(NMF.Models.Meta.ILiteral[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ILiteral[], Int32)
  nameWithType: Collection<ILiteral>.CopyTo(ILiteral[], Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.CopyTo(NMF.Models.Meta.ILiteral[], System.Int32)
  nameWithType.vb: Collection(Of ILiteral).CopyTo(ILiteral(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).CopyTo(NMF.Models.Meta.ILiteral(), System.Int32)
  name.vb: CopyTo(ILiteral(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<ILiteral>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of ILiteral).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<ILiteral>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.GetEnumerator()
  nameWithType.vb: Collection(Of ILiteral).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<ILiteral>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of ILiteral).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.IndexOf(NMF.Models.Meta.ILiteral)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.IndexOf(NMF.Models.Meta.ILiteral)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(ILiteral)
  nameWithType: Collection<ILiteral>.IndexOf(ILiteral)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.IndexOf(NMF.Models.Meta.ILiteral)
  nameWithType.vb: Collection(Of ILiteral).IndexOf(ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).IndexOf(NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<ILiteral>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of ILiteral).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Insert(System.Int32,NMF.Models.Meta.ILiteral)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Insert(System.Int32,NMF.Models.Meta.ILiteral)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, ILiteral)
  nameWithType: Collection<ILiteral>.Insert(Int32, ILiteral)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Insert(System.Int32, NMF.Models.Meta.ILiteral)
  nameWithType.vb: Collection(Of ILiteral).Insert(Int32, ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Insert(System.Int32, NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<ILiteral>.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of ILiteral).Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Remove(NMF.Models.Meta.ILiteral)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Remove(NMF.Models.Meta.ILiteral)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(ILiteral)
  nameWithType: Collection<ILiteral>.Remove(ILiteral)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Remove(NMF.Models.Meta.ILiteral)
  nameWithType.vb: Collection(Of ILiteral).Remove(ILiteral)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Remove(NMF.Models.Meta.ILiteral)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<ILiteral>.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of ILiteral).Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.ILiteral
    name: ILiteral
    nameWithType: ILiteral
    fullName: NMF.Models.Meta.ILiteral
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<ILiteral>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of ILiteral).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<ILiteral>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of ILiteral).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<ILiteral>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<ILiteral>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of ILiteral).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<ILiteral>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<ILiteral>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of ILiteral).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<ILiteral>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<ILiteral>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of ILiteral).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<ILiteral>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<ILiteral>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of ILiteral).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<ILiteral>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<ILiteral>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of ILiteral).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<ILiteral>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<ILiteral>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of ILiteral).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<ILiteral>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<ILiteral>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of ILiteral).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Count
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Count
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<ILiteral>.Count
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Count
  nameWithType.vb: Collection(Of ILiteral).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Count
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<ILiteral>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Item[System.Int32]
  nameWithType.vb: Collection(Of ILiteral).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<ILiteral>.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of ILiteral).Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Items
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.Items
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<ILiteral>.Items
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.Items
  nameWithType.vb: Collection(Of ILiteral).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).Items
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<ILiteral>.IsReadOnly
  nameWithType: Collection<ILiteral>.ICollection<ILiteral>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.Generic.ICollection<NMF.Models.Meta.ILiteral>.IsReadOnly
  nameWithType.vb: Collection(Of ILiteral).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<ILiteral>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of ILiteral).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<ILiteral>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of ILiteral).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<ILiteral>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<ILiteral>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.ILiteral}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<ILiteral>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of ILiteral).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<ILiteral>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.ILiteral>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of ILiteral).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.ILiteral).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  commentId: T:NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  name: ObservableCollectionExtended<T>
  nameWithType: ObservableCollectionExtended<T>
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>
  nameWithType.vb: ObservableCollectionExtended(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T)
  name.vb: ObservableCollectionExtended(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableList`1
  commentId: T:NMF.Collections.ObjectModel.ObservableList`1
  name: ObservableList<T>
  nameWithType: ObservableList<T>
  fullName: NMF.Collections.ObjectModel.ObservableList<T>
  nameWithType.vb: ObservableList(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T)
  name.vb: ObservableList(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeList`2
  name: ObservableOppositeList<TParent, TCollected>
  nameWithType: ObservableOppositeList<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected)
  name.vb: ObservableOppositeList(Of TParent, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: <
    nameWithType: <
    fullName: <
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: NMF.Expressions.IListExpression`1
  commentId: T:NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  nameWithType: IListExpression<T>
  fullName: NMF.Expressions.IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  name.vb: IListExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: NMF.Expressions.IListExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  name: Parent
  nameWithType: ObservableOppositeList<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.Parent
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  name: SetOpposite(TCollected, TParent)
  nameWithType: ObservableOppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList<TParent, TCollected>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList(Of TParent, TCollected).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  name: ClearItems()
  nameWithType: ObservableOppositeList<TParent, TCollected>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.ClearItems()
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList<TParent, TCollected>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList(Of TParent, TCollected).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  isExternal: true
  name: InsertItem(Int32, TCollected)
  nameWithType: ObservableOppositeList<TParent, TCollected>.InsertItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.InsertItem(System.Int32, TCollected)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).InsertItem(Int32, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).InsertItem(System.Int32, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableOppositeList<TParent, TCollected>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  isExternal: true
  name: SetItem(Int32, TCollected)
  nameWithType: ObservableOppositeList<TParent, TCollected>.SetItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetItem(System.Int32, TCollected)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).SetItem(Int32, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetItem(System.Int32, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableList<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<T>.AsNotifiable()
  nameWithType.vb: ObservableList(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList(Of T).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of T).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
  name: IEnumerableExpression<T>.AsNotifiable()
  nameWithType: ObservableList<T>.IEnumerableExpression<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<T>.NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  nameWithType.vb: ObservableList(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableList<T>.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<T>.NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression{T}#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    nameWithType: ObservableList(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of T).NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  nameWithType: ObservableList<T>.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<T>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ObservableList(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: IEnumerableExpression.AsNotifiable
    nameWithType: ObservableList<T>.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<T>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression.AsNotifiable
    nameWithType: ObservableList(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of T).NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableCollectionExtended<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.CollectionChanging
  nameWithType.vb: ObservableCollectionExtended(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollectionExtended<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.CollectionChanged
  nameWithType.vb: ObservableCollectionExtended(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollectionExtended<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.PropertyChanged
  nameWithType.vb: ObservableCollectionExtended(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollectionExtended<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollectionExtended(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended<T>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended(Of T).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  nameWithType: ObservableCollectionExtended<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  nameWithType.vb: ObservableCollectionExtended(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended<T>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended(Of T).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableCollectionExtended<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RequireEvents()
  nameWithType.vb: ObservableCollectionExtended(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended<T>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended(Of T).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollectionExtended<T>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.ClearItems()
  nameWithType.vb: ObservableCollectionExtended(Of T).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended<T>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended(Of T).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: ObservableCollectionExtended<T>.InsertItem(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.InsertItem(System.Int32, T)
  nameWithType.vb: ObservableCollectionExtended(Of T).InsertItem(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended<T>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended(Of T).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  isExternal: true
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollectionExtended<T>.MoveItem(Int32, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of T).MoveItem(Int32, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended<T>.MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended(Of T).MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableCollectionExtended<T>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of T).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended<T>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended(Of T).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: ObservableCollectionExtended<T>.SetItem(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.SetItem(System.Int32, T)
  nameWithType.vb: ObservableCollectionExtended(Of T).SetItem(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended<T>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended(Of T).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.EnumerationLiteralsCollection.#ctor*
  commentId: Overload:NMF.Models.Meta.EnumerationLiteralsCollection.#ctor
  name: EnumerationLiteralsCollection
  nameWithType: EnumerationLiteralsCollection.EnumerationLiteralsCollection
  fullName: NMF.Models.Meta.EnumerationLiteralsCollection.EnumerationLiteralsCollection
- uid: NMF.Models.Meta.IEnumeration
  commentId: T:NMF.Models.Meta.IEnumeration
  parent: NMF.Models.Meta
  name: IEnumeration
  nameWithType: IEnumeration
  fullName: NMF.Models.Meta.IEnumeration
- uid: NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite*
  commentId: Overload:NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite
  name: SetOpposite
  nameWithType: EnumerationLiteralsCollection.SetOpposite
  fullName: NMF.Models.Meta.EnumerationLiteralsCollection.SetOpposite
- uid: NMF.Models.Meta.ILiteral
  commentId: T:NMF.Models.Meta.ILiteral
  parent: NMF.Models.Meta
  name: ILiteral
  nameWithType: ILiteral
  fullName: NMF.Models.Meta.ILiteral
