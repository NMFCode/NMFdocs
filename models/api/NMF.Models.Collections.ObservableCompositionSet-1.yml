### YamlMime:ManagedReference
items:
- uid: NMF.Models.Collections.ObservableCompositionSet`1
  commentId: T:NMF.Models.Collections.ObservableCompositionSet`1
  id: ObservableCompositionSet`1
  parent: NMF.Models.Collections
  children:
  - NMF.Models.Collections.ObservableCompositionSet`1.#ctor(NMF.Models.IModelElement)
  - NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite(`0,NMF.Models.IModelElement)
  langs:
  - csharp
  - vb
  name: ObservableCompositionSet<T>
  nameWithType: ObservableCompositionSet<T>
  fullName: NMF.Models.Collections.ObservableCompositionSet<T>
  type: Class
  source:
    remote:
      path: src/Models/Models/Collections/CompositionSet.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ObservableCompositionSet
    path: src/Models/Models/Collections/CompositionSet.cs
    startLine: 42
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Collections
  syntax:
    content: 'public class ObservableCompositionSet<T> : ObservableOppositeSet<IModelElement, T>, IList, ICollection, INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, ISetExpression<T>, ISet<T>, ICollectionExpression<T>, IEnumerableExpression<T>, IEnumerableExpression, ICollection<T>, IEnumerable<T>, IEnumerable where T : class, IModelElement'
    typeParameters:
    - id: T
    content.vb: Public Class ObservableCompositionSet(Of T As {Class, IModelElement}) Inherits ObservableOppositeSet(Of IModelElement, T) Implements IList, ICollection, INotifyCollectionChanged, INotifyCollectionChanging, INotifyPropertyChanged, ISetExpression(Of T), ISet(Of T), ICollectionExpression(Of T), IEnumerableExpression(Of T), IEnumerableExpression, ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  - NMF.Collections.Generic.DecoratedSet{{T}}
  - NMF.Collections.ObjectModel.ObservableSet{{T}}
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Specialized.INotifyCollectionChanged
  - NMF.Collections.ObjectModel.INotifyCollectionChanging
  - System.ComponentModel.INotifyPropertyChanged
  - NMF.Expressions.ISetExpression{{T}}
  - System.Collections.Generic.ISet{{T}}
  - NMF.Expressions.ICollectionExpression{{T}}
  - NMF.Expressions.IEnumerableExpression{{T}}
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Parent
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.SetOpposite({T},NMF.Models.IModelElement)
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Clear
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Add({T})
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Remove({T})
  - NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.ToString
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.Add({T})
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.RequireEvents
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentAdd({T})
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.Clear
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentClear
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.Remove({T})
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentRemove({T})
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.CollectionChanged
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.CollectionChanging
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.OnPropertyChanged(System.String)
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.PropertyChanged
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.AsNotifiable
  - NMF.Collections.ObjectModel.ObservableSet{{T}}.ToString
  - NMF.Collections.Generic.DecoratedSet{{T}}.Items
  - NMF.Collections.Generic.DecoratedSet{{T}}.ExceptWith(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.IntersectWith(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.Overlaps(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.SetEquals(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.UnionWith(System.Collections.Generic.IEnumerable{{T}})
  - NMF.Collections.Generic.DecoratedSet{{T}}.Contains({T})
  - NMF.Collections.Generic.DecoratedSet{{T}}.CopyTo({T}[],System.Int32)
  - NMF.Collections.Generic.DecoratedSet{{T}}.Count
  - NMF.Collections.Generic.DecoratedSet{{T}}.GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: ObservableCompositionSet(Of T)
  fullName.vb: NMF.Models.Collections.ObservableCompositionSet(Of T)
  name.vb: ObservableCompositionSet(Of T)
- uid: NMF.Models.Collections.ObservableCompositionSet`1.#ctor(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Collections.ObservableCompositionSet`1.#ctor(NMF.Models.IModelElement)
  id: '#ctor(NMF.Models.IModelElement)'
  parent: NMF.Models.Collections.ObservableCompositionSet`1
  langs:
  - csharp
  - vb
  name: ObservableCompositionSet(IModelElement)
  nameWithType: ObservableCompositionSet<T>.ObservableCompositionSet(IModelElement)
  fullName: NMF.Models.Collections.ObservableCompositionSet<T>.ObservableCompositionSet(NMF.Models.IModelElement)
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Collections/CompositionSet.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Collections/CompositionSet.cs
    startLine: 44
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Collections
  syntax:
    content: public ObservableCompositionSet(IModelElement parent)
    parameters:
    - id: parent
      type: NMF.Models.IModelElement
    content.vb: Public Sub New(parent As IModelElement)
  overload: NMF.Models.Collections.ObservableCompositionSet`1.#ctor*
  nameWithType.vb: ObservableCompositionSet(Of T).New(IModelElement)
  fullName.vb: NMF.Models.Collections.ObservableCompositionSet(Of T).New(NMF.Models.IModelElement)
  name.vb: New(IModelElement)
- uid: NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite(`0,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite(`0,NMF.Models.IModelElement)
  id: SetOpposite(`0,NMF.Models.IModelElement)
  parent: NMF.Models.Collections.ObservableCompositionSet`1
  langs:
  - csharp
  - vb
  name: SetOpposite(T, IModelElement)
  nameWithType: ObservableCompositionSet<T>.SetOpposite(T, IModelElement)
  fullName: NMF.Models.Collections.ObservableCompositionSet<T>.SetOpposite(T, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/Collections/CompositionSet.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetOpposite
    path: src/Models/Models/Collections/CompositionSet.cs
    startLine: 48
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Collections
  example: []
  syntax:
    content: protected override void SetOpposite(T item, IModelElement newParent)
    parameters:
    - id: item
      type: '{T}'
    - id: newParent
      type: NMF.Models.IModelElement
    content.vb: Protected Overrides Sub SetOpposite(item As T, newParent As IModelElement)
  overridden: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.SetOpposite({T},NMF.Models.IModelElement)
  overload: NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite*
  nameWithType.vb: ObservableCompositionSet(Of T).SetOpposite(T, IModelElement)
  fullName.vb: NMF.Models.Collections.ObservableCompositionSet(Of T).SetOpposite(T, NMF.Models.IModelElement)
references:
- uid: NMF.Models.Collections
  commentId: N:NMF.Models.Collections
  href: NMF.html
  name: NMF.Models.Collections
  nameWithType: NMF.Models.Collections
  fullName: NMF.Models.Collections
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Collections
    name: Collections
    href: NMF.Models.Collections.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Collections
    name: Collections
    href: NMF.Models.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Collections.Generic.DecoratedSet{{T}}
  commentId: T:NMF.Collections.Generic.DecoratedSet{`0}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.DecoratedSet`1
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}
  commentId: T:NMF.Collections.ObjectModel.ObservableSet{`0}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableSet`1
  name: ObservableSet<T>
  nameWithType: ObservableSet<T>
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>
  nameWithType.vb: ObservableSet(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T)
  name.vb: ObservableSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1
    name: ObservableSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1
    name: ObservableSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2
  href: NMF.Models.IModelElement.html
  name: ObservableOppositeSet<IModelElement, T>
  nameWithType: ObservableOppositeSet<IModelElement, T>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T)
  name.vb: ObservableOppositeSet(Of IModelElement, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
    name: ObservableOppositeSet
  - name: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
    name: ObservableOppositeSet
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
  commentId: T:NMF.Collections.ObjectModel.INotifyCollectionChanging
  parent: NMF.Collections.ObjectModel
  name: INotifyCollectionChanging
  nameWithType: INotifyCollectionChanging
  fullName: NMF.Collections.ObjectModel.INotifyCollectionChanging
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: NMF.Expressions.ISetExpression{{T}}
  commentId: T:NMF.Expressions.ISetExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.ISetExpression`1
  name: ISetExpression<T>
  nameWithType: ISetExpression<T>
  fullName: NMF.Expressions.ISetExpression<T>
  nameWithType.vb: ISetExpression(Of T)
  fullName.vb: NMF.Expressions.ISetExpression(Of T)
  name.vb: ISetExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ISet{{T}}
  commentId: T:System.Collections.Generic.ISet{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.ICollectionExpression{{T}}
  commentId: T:NMF.Expressions.ICollectionExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression{{T}}
  commentId: T:NMF.Expressions.IEnumerableExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Parent
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeSet<IModelElement, T>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.Parent
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.SetOpposite({T},NMF.Models.IModelElement)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.SetOpposite(`0,NMF.Models.IModelElement)
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.SetOpposite(`1,`0)
  href: NMF.Models.IModelElement.html
  name: SetOpposite(T, IModelElement)
  nameWithType: ObservableOppositeSet<IModelElement, T>.SetOpposite(T, IModelElement)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.SetOpposite(T, NMF.Models.IModelElement)
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).SetOpposite(T, IModelElement)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).SetOpposite(T, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.SetOpposite(`0,NMF.Models.IModelElement)
    name: SetOpposite
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.SetOpposite(`0,NMF.Models.IModelElement)
    name: SetOpposite
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Clear
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeSet<IModelElement, T>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.Clear()
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Add({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Add(`0)
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Add(`1)
  name: Add(T)
  nameWithType: ObservableOppositeSet<IModelElement, T>.Add(T)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.Add(T)
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).Add(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.Remove({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Remove(`0)
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Remove(`1)
  name: Remove(T)
  nameWithType: ObservableOppositeSet<IModelElement, T>.Remove(T)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.Remove(T)
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).Remove(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.ToString
  parent: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,{T}}
  definition: NMF.Collections.ObjectModel.ObservableOppositeSet`2.ToString
  name: ToString()
  nameWithType: ObservableOppositeSet<IModelElement, T>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<NMF.Models.IModelElement, T>.ToString()
  nameWithType.vb: ObservableOppositeSet(Of IModelElement, T).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of NMF.Models.IModelElement, T).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet{NMF.Models.IModelElement,`0}.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.Add({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.Add(`0)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.Add(`0)
  name: Add(T)
  nameWithType: ObservableSet<T>.Add(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Add(T)
  nameWithType.vb: ObservableSet(Of T).Add(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.RequireEvents
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableSet<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.RequireEvents()
  nameWithType.vb: ObservableSet(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentAdd({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.SilentAdd(`0)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.SilentAdd(`0)
  name: SilentAdd(T)
  nameWithType: ObservableSet<T>.SilentAdd(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentAdd(T)
  nameWithType.vb: ObservableSet(Of T).SilentAdd(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentAdd(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.Clear
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.Clear
  name: Clear()
  nameWithType: ObservableSet<T>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Clear()
  nameWithType.vb: ObservableSet(Of T).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.SilentClear
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableSet<T>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentClear()
  nameWithType.vb: ObservableSet(Of T).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentClear
    name: SilentClear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentClear
    name: SilentClear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.Remove({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.Remove(`0)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.Remove(`0)
  name: Remove(T)
  nameWithType: ObservableSet<T>.Remove(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Remove(T)
  nameWithType.vb: ObservableSet(Of T).Remove(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.SilentRemove({T})
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.SilentRemove(`0)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.SilentRemove(`0)
  name: SilentRemove(T)
  nameWithType: ObservableSet<T>.SilentRemove(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentRemove(T)
  nameWithType.vb: ObservableSet(Of T).SilentRemove(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentRemove(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentRemove(`0)
    name: SilentRemove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.SilentRemove(`0)
    name: SilentRemove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableSet{`0}.CollectionChanged
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableSet<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.CollectionChanged
  nameWithType.vb: ObservableSet(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableSet{`0}.CollectionChanging
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableSet<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.CollectionChanging
  nameWithType.vb: ObservableSet(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.OnPropertyChanged(System.String)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.OnPropertyChanged(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OnPropertyChanged(string)
  nameWithType: ObservableSet<T>.OnPropertyChanged(string)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnPropertyChanged(string)
  nameWithType.vb: ObservableSet(Of T).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableSet<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableSet(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableSet<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableSet(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableSet{`0}.PropertyChanged
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableSet<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.PropertyChanged
  nameWithType.vb: ObservableSet(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableSet<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.AsNotifiable()
  nameWithType.vb: ObservableSet(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet{{T}}.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableSet{`0}.ToString
  parent: NMF.Collections.ObjectModel.ObservableSet{{T}}
  definition: NMF.Collections.ObjectModel.ObservableSet`1.ToString
  name: ToString()
  nameWithType: ObservableSet<T>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.ToString()
  nameWithType.vb: ObservableSet(Of T).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet{`0}.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet{`0}.Items
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<T>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Items
  nameWithType.vb: DecoratedSet(Of T).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Items
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.ExceptWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: ExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.IntersectWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IntersectWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.Overlaps(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Overlaps(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.Overlaps(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.SetEquals(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SetEquals(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SetEquals(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.UnionWith(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: UnionWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.UnionWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.Contains({T})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.Contains(`0)
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  name: Contains(T)
  nameWithType: DecoratedSet<T>.Contains(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains(T)
  nameWithType.vb: DecoratedSet(Of T).Contains(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Contains(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.CopyTo(`0[],System.Int32)
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: CopyTo(T[], int)
  nameWithType: DecoratedSet<T>.CopyTo(T[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo(T[], int)
  nameWithType.vb: DecoratedSet(Of T).CopyTo(T(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet{`0}.Count
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<T>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Count
  nameWithType.vb: DecoratedSet(Of T).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Count
- uid: NMF.Collections.Generic.DecoratedSet{{T}}.GetEnumerator
  commentId: M:NMF.Collections.Generic.DecoratedSet{`0}.GetEnumerator
  parent: NMF.Collections.Generic.DecoratedSet{{T}}
  definition: NMF.Collections.Generic.DecoratedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: DecoratedSet<T>.GetEnumerator()
  fullName: NMF.Collections.Generic.DecoratedSet<T>.GetEnumerator()
  nameWithType.vb: DecoratedSet(Of T).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`0}.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Collections.Generic.DecoratedSet`1
  commentId: T:NMF.Collections.Generic.DecoratedSet`1
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
- uid: NMF.Collections.ObjectModel.ObservableSet`1
  commentId: T:NMF.Collections.ObjectModel.ObservableSet`1
  name: ObservableSet<T>
  nameWithType: ObservableSet<T>
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>
  nameWithType.vb: ObservableSet(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T)
  name.vb: ObservableSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1
    name: ObservableSet
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1
    name: ObservableSet
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Collections
    name: Collections
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeSet`2
  name: ObservableOppositeSet<TParent, TCollected>
  nameWithType: ObservableOppositeSet<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected)
  name.vb: ObservableOppositeSet(Of TParent, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
    name: ObservableOppositeSet
  - name: <
  - name: TParent
  - name: ','
  - name: " "
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
    name: ObservableOppositeSet
  - name: (
  - name: Of
  - name: " "
  - name: TParent
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: NMF.Expressions.ISetExpression`1
  commentId: T:NMF.Expressions.ISetExpression`1
  name: ISetExpression<T>
  nameWithType: ISetExpression<T>
  fullName: NMF.Expressions.ISetExpression<T>
  nameWithType.vb: ISetExpression(Of T)
  fullName.vb: NMF.Expressions.ISetExpression(Of T)
  name.vb: ISetExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ISetExpression`1
    name: ISetExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeSet`2.Parent
  name: Parent
  nameWithType: ObservableOppositeSet<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.Parent
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet`2.SetOpposite(`1,`0)
  name: SetOpposite(TCollected, TParent)
  nameWithType: ObservableOppositeSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.SetOpposite(`1,`0)
    name: SetOpposite
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - name: TParent
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.SetOpposite(`1,`0)
    name: SetOpposite
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - name: TParent
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet`2.Clear
  name: Clear()
  nameWithType: ObservableOppositeSet<TParent, TCollected>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.Clear()
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Add(`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet`2.Add(`1)
  name: Add(TCollected)
  nameWithType: ObservableOppositeSet<TParent, TCollected>.Add(TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.Add(TCollected)
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).Add(TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).Add(TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Add(`1)
    name: Add
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Add(`1)
    name: Add
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Remove(`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet`2.Remove(`1)
  name: Remove(TCollected)
  nameWithType: ObservableOppositeSet<TParent, TCollected>.Remove(TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.Remove(TCollected)
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).Remove(TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).Remove(TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Remove(`1)
    name: Remove
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.Remove(`1)
    name: Remove
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeSet`2.ToString
  name: ToString()
  nameWithType: ObservableOppositeSet<TParent, TCollected>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeSet<TParent, TCollected>.ToString()
  nameWithType.vb: ObservableOppositeSet(Of TParent, TCollected).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeSet(Of TParent, TCollected).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.Add(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.Add(`0)
  name: Add(T)
  nameWithType: ObservableSet<T>.Add(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Add(T)
  nameWithType.vb: ObservableSet(Of T).Add(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Add(`0)
    name: Add
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableSet<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.RequireEvents()
  nameWithType.vb: ObservableSet(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.RequireEvents
    name: RequireEvents
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentAdd(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.SilentAdd(`0)
  name: SilentAdd(T)
  nameWithType: ObservableSet<T>.SilentAdd(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentAdd(T)
  nameWithType.vb: ObservableSet(Of T).SilentAdd(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentAdd(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentAdd(`0)
    name: SilentAdd
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.Clear
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.Clear
  name: Clear()
  nameWithType: ObservableSet<T>.Clear()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Clear()
  nameWithType.vb: ObservableSet(Of T).Clear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Clear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Clear
    name: Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Clear
    name: Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentClear
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.SilentClear
  name: SilentClear()
  nameWithType: ObservableSet<T>.SilentClear()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentClear()
  nameWithType.vb: ObservableSet(Of T).SilentClear()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentClear()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentClear
    name: SilentClear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentClear
    name: SilentClear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.Remove(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.Remove(`0)
  name: Remove(T)
  nameWithType: ObservableSet<T>.Remove(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.Remove(T)
  nameWithType.vb: ObservableSet(Of T).Remove(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.Remove(`0)
    name: Remove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentRemove(`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.SilentRemove(`0)
  name: SilentRemove(T)
  nameWithType: ObservableSet<T>.SilentRemove(T)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.SilentRemove(T)
  nameWithType.vb: ObservableSet(Of T).SilentRemove(T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).SilentRemove(T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentRemove(`0)
    name: SilentRemove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.SilentRemove(`0)
    name: SilentRemove
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableSet<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.CollectionChanged
  nameWithType.vb: ObservableSet(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableSet`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableSet<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.CollectionChanging
  nameWithType.vb: ObservableSet(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableSet`1.OnPropertyChanged(System.String)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.OnPropertyChanged(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OnPropertyChanged(string)
  nameWithType: ObservableSet<T>.OnPropertyChanged(string)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnPropertyChanged(string)
  nameWithType.vb: ObservableSet(Of T).OnPropertyChanged(String)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnPropertyChanged(String)
  name.vb: OnPropertyChanged(String)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableSet<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableSet(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableSet<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableSet(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
  - name: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableSet<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.PropertyChanged
  nameWithType.vb: ObservableSet(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableSet`1.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableSet<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.AsNotifiable()
  nameWithType.vb: ObservableSet(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.ObservableSet`1.ToString
  commentId: M:NMF.Collections.ObjectModel.ObservableSet`1.ToString
  name: ToString()
  nameWithType: ObservableSet<T>.ToString()
  fullName: NMF.Collections.ObjectModel.ObservableSet<T>.ToString()
  nameWithType.vb: ObservableSet(Of T).ToString()
  fullName.vb: NMF.Collections.ObjectModel.ObservableSet(Of T).ToString()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableSet`1.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Items
  name: Items
  nameWithType: DecoratedSet<T>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Items
  nameWithType.vb: DecoratedSet(Of T).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Items
- uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: ExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IntersectWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: Overlaps(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.Overlaps(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SetEquals(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SetEquals(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: UnionWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.UnionWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  name: Contains(T)
  nameWithType: DecoratedSet<T>.Contains(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains(T)
  nameWithType.vb: DecoratedSet(Of T).Contains(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Contains(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: CopyTo(T[], int)
  nameWithType: DecoratedSet<T>.CopyTo(T[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo(T[], int)
  nameWithType.vb: DecoratedSet(Of T).CopyTo(T(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Count
  name: Count
  nameWithType: DecoratedSet<T>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Count
  nameWithType.vb: DecoratedSet(Of T).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Count
- uid: NMF.Collections.Generic.DecoratedSet`1.GetEnumerator
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: DecoratedSet<T>.GetEnumerator()
  fullName: NMF.Collections.Generic.DecoratedSet<T>.GetEnumerator()
  nameWithType.vb: DecoratedSet(Of T).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.GetEnumerator
    name: GetEnumerator
  - name: (
  - name: )
- uid: NMF.Models.Collections.ObservableCompositionSet`1.#ctor*
  commentId: Overload:NMF.Models.Collections.ObservableCompositionSet`1.#ctor
  href: NMF.Models.Collections.ObservableCompositionSet-1.html#NMF_Models_Collections_ObservableCompositionSet_1__ctor_NMF_Models_IModelElement_
  name: ObservableCompositionSet
  nameWithType: ObservableCompositionSet<T>.ObservableCompositionSet
  fullName: NMF.Models.Collections.ObservableCompositionSet<T>.ObservableCompositionSet
  nameWithType.vb: ObservableCompositionSet(Of T).New
  fullName.vb: NMF.Models.Collections.ObservableCompositionSet(Of T).New
  name.vb: New
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  href: NMF.Models.IModelElement.html
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
- uid: NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite*
  commentId: Overload:NMF.Models.Collections.ObservableCompositionSet`1.SetOpposite
  href: NMF.Models.Collections.ObservableCompositionSet-1.html#NMF_Models_Collections_ObservableCompositionSet_1_SetOpposite__0_NMF_Models_IModelElement_
  name: SetOpposite
  nameWithType: ObservableCompositionSet<T>.SetOpposite
  fullName: NMF.Models.Collections.ObservableCompositionSet<T>.SetOpposite
  nameWithType.vb: ObservableCompositionSet(Of T).SetOpposite
  fullName.vb: NMF.Models.Collections.ObservableCompositionSet(Of T).SetOpposite
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
