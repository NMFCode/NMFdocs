### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.Reference
  commentId: T:NMF.Models.Meta.Reference
  id: Reference
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.Reference.Anchor
  - NMF.Models.Meta.Reference.AnchorChanged
  - NMF.Models.Meta.Reference.AnchorChanging
  - NMF.Models.Meta.Reference.ClassInstance
  - NMF.Models.Meta.Reference.DeclaringType
  - NMF.Models.Meta.Reference.DeclaringTypeChanged
  - NMF.Models.Meta.Reference.DeclaringTypeChanging
  - NMF.Models.Meta.Reference.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.Meta.Reference.GetClass
  - NMF.Models.Meta.Reference.GetExpressionForAttribute(System.String)
  - NMF.Models.Meta.Reference.GetExpressionForReference(System.String)
  - NMF.Models.Meta.Reference.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.Meta.Reference.IsContainment
  - NMF.Models.Meta.Reference.IsContainmentChanged
  - NMF.Models.Meta.Reference.IsContainmentChanging
  - NMF.Models.Meta.Reference.IsOrdered
  - NMF.Models.Meta.Reference.IsOrderedChanged
  - NMF.Models.Meta.Reference.IsOrderedChanging
  - NMF.Models.Meta.Reference.IsUnique
  - NMF.Models.Meta.Reference.IsUniqueChanged
  - NMF.Models.Meta.Reference.IsUniqueChanging
  - NMF.Models.Meta.Reference.LowerBound
  - NMF.Models.Meta.Reference.LowerBoundChanged
  - NMF.Models.Meta.Reference.LowerBoundChanging
  - NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type
  - NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanged
  - NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanging
  - NMF.Models.Meta.Reference.OnAnchorChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnAnchorChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnDeclaringTypeChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnDeclaringTypeChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsContainmentChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsContainmentChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsOrderedChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsOrderedChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsUniqueChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnIsUniqueChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnLowerBoundChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnLowerBoundChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnOppositeChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnOppositeChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.Meta.Reference.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.Meta.Reference.OnReferenceTypeChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnReferenceTypeChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnRefinesChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnRefinesChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnUpperBoundChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.OnUpperBoundChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.Reference.Opposite
  - NMF.Models.Meta.Reference.OppositeChanged
  - NMF.Models.Meta.Reference.OppositeChanging
  - NMF.Models.Meta.Reference.ReferencedElements
  - NMF.Models.Meta.Reference.ReferenceType
  - NMF.Models.Meta.Reference.ReferenceTypeChanged
  - NMF.Models.Meta.Reference.ReferenceTypeChanging
  - NMF.Models.Meta.Reference.Refines
  - NMF.Models.Meta.Reference.RefinesChanged
  - NMF.Models.Meta.Reference.RefinesChanging
  - NMF.Models.Meta.Reference.SetFeature(System.String,System.Object)
  - NMF.Models.Meta.Reference.UpperBound
  - NMF.Models.Meta.Reference.UpperBoundChanged
  - NMF.Models.Meta.Reference.UpperBoundChanging
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: Reference
  fullName: NMF.Models.Meta.Reference
  type: Class
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Reference
    path: src/Models/Models/Meta/Reference.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe default implementation of the Reference class\n"
  example: []
  syntax:
    content: >-
      [XmlNamespace("http://nmf.codeplex.com/nmeta/")]

      [XmlNamespacePrefix("nmeta")]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Reference")]

      public class Reference : MetaElement, IReference, ITypedElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlNamespace("http://nmf.codeplex.com/nmeta/")>

      <XmlNamespacePrefix("nmeta")>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//Reference")>

      Public Class Reference

          Inherits MetaElement

          Implements IReference, ITypedElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  - NMF.Models.Meta.MetaElement
  implements:
  - NMF.Models.Meta.IReference
  - NMF.Models.Meta.ITypedElement
  - NMF.Models.Meta.IMetaElement
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.Meta.MetaElement.Name
  - NMF.Models.Meta.MetaElement.Summary
  - NMF.Models.Meta.MetaElement.Remarks
  - NMF.Models.Meta.MetaElement.IsIdentified
  - NMF.Models.Meta.MetaElement.NameChanging
  - NMF.Models.Meta.MetaElement.NameChanged
  - NMF.Models.Meta.MetaElement.SummaryChanging
  - NMF.Models.Meta.MetaElement.SummaryChanged
  - NMF.Models.Meta.MetaElement.RemarksChanging
  - NMF.Models.Meta.MetaElement.RemarksChanged
  - NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.ToIdentifierString
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.Children
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  - NMF.Models.Meta.IReference.NMF.Models.Meta.ClassExtensions.IsContainerReference
  attributes:
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nmeta
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//Reference
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanged
  commentId: E:NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanged
  id: NMF#Models#Meta#ITypedElement#TypeChanged
  isEii: true
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ITypedElement.TypeChanged
  nameWithType: Reference.ITypedElement.TypeChanged
  fullName: NMF.Models.Meta.Reference.NMF.Models.Meta.ITypedElement.TypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NMF.Models.Meta.ITypedElement.TypeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 111
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ITypedElement.TypeChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Event NMF.Models.Meta.ITypedElement.TypeChanged As EventHandler(Of ValueChangedEventArgs) Implements ITypedElement.TypeChanged
  implements:
  - NMF.Models.Meta.ITypedElement.TypeChanged
  nameWithType.vb: Reference.NMF.Models.Meta.ITypedElement.TypeChanged
  name.vb: NMF.Models.Meta.ITypedElement.TypeChanged
- uid: NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanging
  commentId: E:NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#TypeChanging
  id: NMF#Models#Meta#ITypedElement#TypeChanging
  isEii: true
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ITypedElement.TypeChanging
  nameWithType: Reference.ITypedElement.TypeChanging
  fullName: NMF.Models.Meta.Reference.NMF.Models.Meta.ITypedElement.TypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NMF.Models.Meta.ITypedElement.TypeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 124
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: event EventHandler<ValueChangedEventArgs> ITypedElement.TypeChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Event NMF.Models.Meta.ITypedElement.TypeChanging As EventHandler(Of ValueChangedEventArgs) Implements ITypedElement.TypeChanging
  implements:
  - NMF.Models.Meta.ITypedElement.TypeChanging
  nameWithType.vb: Reference.NMF.Models.Meta.ITypedElement.TypeChanging
  name.vb: NMF.Models.Meta.ITypedElement.TypeChanging
- uid: NMF.Models.Meta.Reference.IsContainment
  commentId: P:NMF.Models.Meta.Reference.IsContainment
  id: IsContainment
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsContainment
  nameWithType: Reference.IsContainment
  fullName: NMF.Models.Meta.Reference.IsContainment
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainment
    path: src/Models/Models/Meta/Reference.cs
    startLine: 141
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe IsContainment property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public bool IsContainment { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <XmlAttribute(True)>

      Public Property IsContainment As Boolean
  overload: NMF.Models.Meta.Reference.IsContainment*
  implements:
  - NMF.Models.Meta.IReference.IsContainment
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.DeclaringType
  commentId: P:NMF.Models.Meta.Reference.DeclaringType
  id: DeclaringType
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: DeclaringType
  nameWithType: Reference.DeclaringType
  fullName: NMF.Models.Meta.Reference.DeclaringType
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringType
    path: src/Models/Models/Meta/Reference.cs
    startLine: 167
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe DeclaringType property\n"
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      [XmlAttribute(true)]

      [XmlOpposite("References")]

      public IReferenceType DeclaringType { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReferenceType
    content.vb: >-
      <Browsable(False)>

      <XmlAttribute(True)>

      <XmlOpposite("References")>

      Public Property DeclaringType As IReferenceType
  overload: NMF.Models.Meta.Reference.DeclaringType*
  implements:
  - NMF.Models.Meta.IReference.DeclaringType
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: References
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.Opposite
  commentId: P:NMF.Models.Meta.Reference.Opposite
  id: Opposite
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: Reference.Opposite
  fullName: NMF.Models.Meta.Reference.Opposite
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Opposite
    path: src/Models/Models/Meta/Reference.cs
    startLine: 186
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe Opposite property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      [XmlOpposite("Opposite")]

      public IReference Opposite { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReference
    content.vb: >-
      <XmlAttribute(True)>

      <XmlOpposite("Opposite")>

      Public Property Opposite As IReference
  overload: NMF.Models.Meta.Reference.Opposite*
  implements:
  - NMF.Models.Meta.IReference.Opposite
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  - type: NMF.Serialization.XmlOppositeAttribute
    ctor: NMF.Serialization.XmlOppositeAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Opposite
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.ReferenceType
  commentId: P:NMF.Models.Meta.Reference.ReferenceType
  id: ReferenceType
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ReferenceType
  nameWithType: Reference.ReferenceType
  fullName: NMF.Models.Meta.Reference.ReferenceType
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceType
    path: src/Models/Models/Meta/Reference.cs
    startLine: 223
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe ReferenceType property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IReferenceType ReferenceType { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReferenceType
    content.vb: >-
      <XmlAttribute(True)>

      Public Property ReferenceType As IReferenceType
  overload: NMF.Models.Meta.Reference.ReferenceType*
  implements:
  - NMF.Models.Meta.IReference.ReferenceType
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.Refines
  commentId: P:NMF.Models.Meta.Reference.Refines
  id: Refines
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: Refines
  nameWithType: Reference.Refines
  fullName: NMF.Models.Meta.Reference.Refines
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Refines
    path: src/Models/Models/Meta/Reference.cs
    startLine: 257
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe reference that is refined by the current reference, only applicable if the reference is part of a class\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IReference Refines { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IReference
    content.vb: >-
      <XmlAttribute(True)>

      Public Property Refines As IReference
  overload: NMF.Models.Meta.Reference.Refines*
  implements:
  - NMF.Models.Meta.IReference.Refines
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.Anchor
  commentId: P:NMF.Models.Meta.Reference.Anchor
  id: Anchor
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: Reference.Anchor
  fullName: NMF.Models.Meta.Reference.Anchor
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Anchor
    path: src/Models/Models/Meta/Reference.cs
    startLine: 293
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe least common anchestor of an instance and its referenced element, if statically known\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public IClass Anchor { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: >-
      <XmlAttribute(True)>

      Public Property Anchor As IClass
  overload: NMF.Models.Meta.Reference.Anchor*
  implements:
  - NMF.Models.Meta.IReference.Anchor
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type
  commentId: P:NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type
  id: NMF#Models#Meta#ITypedElement#Type
  isEii: true
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ITypedElement.Type
  nameWithType: Reference.ITypedElement.Type
  fullName: NMF.Models.Meta.Reference.NMF.Models.Meta.ITypedElement.Type
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NMF.Models.Meta.ITypedElement.Type
    path: src/Models/Models/Meta/Reference.cs
    startLine: 326
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: IType ITypedElement.Type { get; set; }
    parameters: []
    return:
      type: NMF.Models.Meta.IType
    content.vb: ReadOnly WriteOnly Property NMF.Models.Meta.ITypedElement.Type As IType Implements ITypedElement.Type
  overload: NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type*
  implements:
  - NMF.Models.Meta.ITypedElement.Type
  nameWithType.vb: Reference.NMF.Models.Meta.ITypedElement.Type
  modifiers.csharp:
  - get
  - set
  name.vb: NMF.Models.Meta.ITypedElement.Type
- uid: NMF.Models.Meta.Reference.IsOrdered
  commentId: P:NMF.Models.Meta.Reference.IsOrdered
  id: IsOrdered
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsOrdered
  nameWithType: Reference.IsOrdered
  fullName: NMF.Models.Meta.Reference.IsOrdered
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsOrdered
    path: src/Models/Models/Meta/Reference.cs
    startLine: 361
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe IsOrdered property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public bool IsOrdered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <XmlAttribute(True)>

      Public Property IsOrdered As Boolean
  overload: NMF.Models.Meta.Reference.IsOrdered*
  implements:
  - NMF.Models.Meta.ITypedElement.IsOrdered
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsUnique
  commentId: P:NMF.Models.Meta.Reference.IsUnique
  id: IsUnique
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsUnique
  nameWithType: Reference.IsUnique
  fullName: NMF.Models.Meta.Reference.IsUnique
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsUnique
    path: src/Models/Models/Meta/Reference.cs
    startLine: 387
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe IsUnique property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public bool IsUnique { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <XmlAttribute(True)>

      Public Property IsUnique As Boolean
  overload: NMF.Models.Meta.Reference.IsUnique*
  implements:
  - NMF.Models.Meta.ITypedElement.IsUnique
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.LowerBound
  commentId: P:NMF.Models.Meta.Reference.LowerBound
  id: LowerBound
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: LowerBound
  nameWithType: Reference.LowerBound
  fullName: NMF.Models.Meta.Reference.LowerBound
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LowerBound
    path: src/Models/Models/Meta/Reference.cs
    startLine: 413
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe LowerBound property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public int LowerBound { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <XmlAttribute(True)>

      Public Property LowerBound As Integer
  overload: NMF.Models.Meta.Reference.LowerBound*
  implements:
  - NMF.Models.Meta.ITypedElement.LowerBound
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.UpperBound
  commentId: P:NMF.Models.Meta.Reference.UpperBound
  id: UpperBound
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: UpperBound
  nameWithType: Reference.UpperBound
  fullName: NMF.Models.Meta.Reference.UpperBound
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UpperBound
    path: src/Models/Models/Meta/Reference.cs
    startLine: 440
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe UpperBound property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public int UpperBound { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <XmlAttribute(True)>

      Public Property UpperBound As Integer
  overload: NMF.Models.Meta.Reference.UpperBound*
  implements:
  - NMF.Models.Meta.ITypedElement.UpperBound
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.ReferencedElements
  commentId: P:NMF.Models.Meta.Reference.ReferencedElements
  id: ReferencedElements
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: Reference.ReferencedElements
  fullName: NMF.Models.Meta.Reference.ReferencedElements
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferencedElements
    path: src/Models/Models/Meta/Reference.cs
    startLine: 467
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the referenced model elements of this model element\n"
  example: []
  syntax:
    content: public override IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: Public Overrides ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.ReferencedElements
  overload: NMF.Models.Meta.Reference.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: NMF.Models.Meta.Reference.ClassInstance
  commentId: P:NMF.Models.Meta.Reference.ClassInstance
  id: ClassInstance
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: Reference.ClassInstance
  fullName: NMF.Models.Meta.Reference.ClassInstance
  type: Property
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Models/Models/Meta/Reference.cs
    startLine: 478
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.Meta.Reference.ClassInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Models.Meta.Reference.IsContainmentChanging
  commentId: E:NMF.Models.Meta.Reference.IsContainmentChanging
  id: IsContainmentChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsContainmentChanging
  nameWithType: Reference.IsContainmentChanging
  fullName: NMF.Models.Meta.Reference.IsContainmentChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainmentChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 493
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IsContainment property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsContainmentChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsContainmentChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.IsContainmentChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsContainmentChanged
  commentId: E:NMF.Models.Meta.Reference.IsContainmentChanged
  id: IsContainmentChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsContainmentChanged
  nameWithType: Reference.IsContainmentChanged
  fullName: NMF.Models.Meta.Reference.IsContainmentChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsContainmentChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 498
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IsContainment property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsContainmentChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsContainmentChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.IsContainmentChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.DeclaringTypeChanging
  commentId: E:NMF.Models.Meta.Reference.DeclaringTypeChanging
  id: DeclaringTypeChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanging
  nameWithType: Reference.DeclaringTypeChanging
  fullName: NMF.Models.Meta.Reference.DeclaringTypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 503
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the DeclaringType property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> DeclaringTypeChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event DeclaringTypeChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.DeclaringTypeChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.DeclaringTypeChanged
  commentId: E:NMF.Models.Meta.Reference.DeclaringTypeChanged
  id: DeclaringTypeChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: DeclaringTypeChanged
  nameWithType: Reference.DeclaringTypeChanged
  fullName: NMF.Models.Meta.Reference.DeclaringTypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclaringTypeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 508
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the DeclaringType property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> DeclaringTypeChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event DeclaringTypeChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.DeclaringTypeChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.OppositeChanging
  commentId: E:NMF.Models.Meta.Reference.OppositeChanging
  id: OppositeChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OppositeChanging
  nameWithType: Reference.OppositeChanging
  fullName: NMF.Models.Meta.Reference.OppositeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OppositeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 513
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Opposite property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OppositeChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event OppositeChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.OppositeChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.OppositeChanged
  commentId: E:NMF.Models.Meta.Reference.OppositeChanged
  id: OppositeChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OppositeChanged
  nameWithType: Reference.OppositeChanged
  fullName: NMF.Models.Meta.Reference.OppositeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OppositeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 518
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Opposite property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OppositeChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event OppositeChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.OppositeChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.ReferenceTypeChanging
  commentId: E:NMF.Models.Meta.Reference.ReferenceTypeChanging
  id: ReferenceTypeChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ReferenceTypeChanging
  nameWithType: Reference.ReferenceTypeChanging
  fullName: NMF.Models.Meta.Reference.ReferenceTypeChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceTypeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 523
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the ReferenceType property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ReferenceTypeChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event ReferenceTypeChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.ReferenceTypeChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.ReferenceTypeChanged
  commentId: E:NMF.Models.Meta.Reference.ReferenceTypeChanged
  id: ReferenceTypeChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: ReferenceTypeChanged
  nameWithType: Reference.ReferenceTypeChanged
  fullName: NMF.Models.Meta.Reference.ReferenceTypeChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReferenceTypeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 528
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the ReferenceType property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ReferenceTypeChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event ReferenceTypeChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.ReferenceTypeChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.RefinesChanging
  commentId: E:NMF.Models.Meta.Reference.RefinesChanging
  id: RefinesChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: RefinesChanging
  nameWithType: Reference.RefinesChanging
  fullName: NMF.Models.Meta.Reference.RefinesChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 533
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Refines property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> RefinesChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event RefinesChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.RefinesChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.RefinesChanged
  commentId: E:NMF.Models.Meta.Reference.RefinesChanged
  id: RefinesChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: RefinesChanged
  nameWithType: Reference.RefinesChanged
  fullName: NMF.Models.Meta.Reference.RefinesChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RefinesChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 538
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Refines property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> RefinesChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event RefinesChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.RefinesChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.AnchorChanging
  commentId: E:NMF.Models.Meta.Reference.AnchorChanging
  id: AnchorChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: AnchorChanging
  nameWithType: Reference.AnchorChanging
  fullName: NMF.Models.Meta.Reference.AnchorChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AnchorChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 543
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Anchor property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> AnchorChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event AnchorChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.AnchorChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.AnchorChanged
  commentId: E:NMF.Models.Meta.Reference.AnchorChanged
  id: AnchorChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: AnchorChanged
  nameWithType: Reference.AnchorChanged
  fullName: NMF.Models.Meta.Reference.AnchorChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AnchorChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 548
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Anchor property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> AnchorChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event AnchorChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IReference.AnchorChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsOrderedChanging
  commentId: E:NMF.Models.Meta.Reference.IsOrderedChanging
  id: IsOrderedChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsOrderedChanging
  nameWithType: Reference.IsOrderedChanging
  fullName: NMF.Models.Meta.Reference.IsOrderedChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsOrderedChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 553
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IsOrdered property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsOrderedChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsOrderedChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.IsOrderedChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsOrderedChanged
  commentId: E:NMF.Models.Meta.Reference.IsOrderedChanged
  id: IsOrderedChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsOrderedChanged
  nameWithType: Reference.IsOrderedChanged
  fullName: NMF.Models.Meta.Reference.IsOrderedChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsOrderedChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 558
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IsOrdered property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsOrderedChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsOrderedChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.IsOrderedChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsUniqueChanging
  commentId: E:NMF.Models.Meta.Reference.IsUniqueChanging
  id: IsUniqueChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsUniqueChanging
  nameWithType: Reference.IsUniqueChanging
  fullName: NMF.Models.Meta.Reference.IsUniqueChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsUniqueChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 563
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the IsUnique property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsUniqueChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsUniqueChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.IsUniqueChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.IsUniqueChanged
  commentId: E:NMF.Models.Meta.Reference.IsUniqueChanged
  id: IsUniqueChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: IsUniqueChanged
  nameWithType: Reference.IsUniqueChanged
  fullName: NMF.Models.Meta.Reference.IsUniqueChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsUniqueChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 568
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the IsUnique property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> IsUniqueChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event IsUniqueChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.IsUniqueChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.LowerBoundChanging
  commentId: E:NMF.Models.Meta.Reference.LowerBoundChanging
  id: LowerBoundChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: LowerBoundChanging
  nameWithType: Reference.LowerBoundChanging
  fullName: NMF.Models.Meta.Reference.LowerBoundChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LowerBoundChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 573
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the LowerBound property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> LowerBoundChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event LowerBoundChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.LowerBoundChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.LowerBoundChanged
  commentId: E:NMF.Models.Meta.Reference.LowerBoundChanged
  id: LowerBoundChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: LowerBoundChanged
  nameWithType: Reference.LowerBoundChanged
  fullName: NMF.Models.Meta.Reference.LowerBoundChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LowerBoundChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 578
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the LowerBound property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> LowerBoundChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event LowerBoundChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.LowerBoundChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.UpperBoundChanging
  commentId: E:NMF.Models.Meta.Reference.UpperBoundChanging
  id: UpperBoundChanging
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: UpperBoundChanging
  nameWithType: Reference.UpperBoundChanging
  fullName: NMF.Models.Meta.Reference.UpperBoundChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UpperBoundChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 583
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the UpperBound property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> UpperBoundChanging
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event UpperBoundChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.UpperBoundChanging
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.UpperBoundChanged
  commentId: E:NMF.Models.Meta.Reference.UpperBoundChanged
  id: UpperBoundChanged
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: UpperBoundChanged
  nameWithType: Reference.UpperBoundChanged
  fullName: NMF.Models.Meta.Reference.UpperBoundChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UpperBoundChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 588
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the UpperBound property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> UpperBoundChanged
    return:
      type: System.EventHandler{ValueChangedEventArgs}
    content.vb: Public Event UpperBoundChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.ITypedElement.UpperBoundChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.Reference.OnIsContainmentChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsContainmentChanging(ValueChangedEventArgs)
  id: OnIsContainmentChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsContainmentChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnIsContainmentChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsContainmentChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsContainmentChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 599
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsContainmentChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIsContainmentChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsContainmentChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsContainmentChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnIsContainmentChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsContainmentChanged(ValueChangedEventArgs)
  id: OnIsContainmentChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsContainmentChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnIsContainmentChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsContainmentChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsContainmentChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 612
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsContainmentChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIsContainmentChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsContainmentChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsContainmentChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnDeclaringTypeChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnDeclaringTypeChanging(ValueChangedEventArgs)
  id: OnDeclaringTypeChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnDeclaringTypeChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnDeclaringTypeChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnDeclaringTypeChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnDeclaringTypeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 630
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the DeclaringTypeChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnDeclaringTypeChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnDeclaringTypeChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnDeclaringTypeChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Meta.Reference.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: Reference.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.Meta.Reference.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnParentChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 644
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets called when the parent model element of the current model element is about to change\n"
  example: []
  syntax:
    content: protected override void OnParentChanging(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent model element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent model element
    content.vb: Protected Overrides Sub OnParentChanging(newParent As IModelElement, oldParent As IModelElement)
  overridden: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  overload: NMF.Models.Meta.Reference.OnParentChanging*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.OnDeclaringTypeChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnDeclaringTypeChanged(ValueChangedEventArgs)
  id: OnDeclaringTypeChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnDeclaringTypeChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnDeclaringTypeChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnDeclaringTypeChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnDeclaringTypeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 657
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the DeclaringTypeChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnDeclaringTypeChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnDeclaringTypeChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnDeclaringTypeChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.Meta.Reference.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: Reference.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.Meta.Reference.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnParentChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 671
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets called when the parent model element of the current model element changes\n"
  example: []
  syntax:
    content: protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent model element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent model element
    content.vb: Protected Overrides Sub OnParentChanged(newParent As IModelElement, oldParent As IModelElement)
  overridden: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  overload: NMF.Models.Meta.Reference.OnParentChanged*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.OnOppositeChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnOppositeChanging(ValueChangedEventArgs)
  id: OnOppositeChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnOppositeChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnOppositeChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnOppositeChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOppositeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 698
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the OppositeChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnOppositeChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOppositeChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnOppositeChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnOppositeChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnOppositeChanged(ValueChangedEventArgs)
  id: OnOppositeChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnOppositeChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnOppositeChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnOppositeChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnOppositeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 711
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the OppositeChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnOppositeChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnOppositeChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnOppositeChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnReferenceTypeChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnReferenceTypeChanging(ValueChangedEventArgs)
  id: OnReferenceTypeChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnReferenceTypeChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnReferenceTypeChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnReferenceTypeChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnReferenceTypeChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 739
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the ReferenceTypeChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnReferenceTypeChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnReferenceTypeChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnReferenceTypeChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnReferenceTypeChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnReferenceTypeChanged(ValueChangedEventArgs)
  id: OnReferenceTypeChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnReferenceTypeChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnReferenceTypeChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnReferenceTypeChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnReferenceTypeChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 752
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the ReferenceTypeChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnReferenceTypeChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnReferenceTypeChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnReferenceTypeChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnRefinesChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnRefinesChanging(ValueChangedEventArgs)
  id: OnRefinesChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnRefinesChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnRefinesChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnRefinesChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnRefinesChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 780
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the RefinesChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnRefinesChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnRefinesChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnRefinesChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnRefinesChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnRefinesChanged(ValueChangedEventArgs)
  id: OnRefinesChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnRefinesChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnRefinesChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnRefinesChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnRefinesChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 793
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the RefinesChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnRefinesChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnRefinesChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnRefinesChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnAnchorChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnAnchorChanging(ValueChangedEventArgs)
  id: OnAnchorChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnAnchorChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnAnchorChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnAnchorChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnAnchorChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 821
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the AnchorChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnAnchorChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnAnchorChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnAnchorChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnAnchorChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnAnchorChanged(ValueChangedEventArgs)
  id: OnAnchorChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnAnchorChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnAnchorChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnAnchorChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnAnchorChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 834
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the AnchorChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnAnchorChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnAnchorChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnAnchorChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnIsOrderedChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsOrderedChanging(ValueChangedEventArgs)
  id: OnIsOrderedChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsOrderedChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnIsOrderedChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsOrderedChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsOrderedChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 862
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsOrderedChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIsOrderedChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsOrderedChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsOrderedChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnIsOrderedChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsOrderedChanged(ValueChangedEventArgs)
  id: OnIsOrderedChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsOrderedChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnIsOrderedChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsOrderedChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsOrderedChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 875
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsOrderedChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIsOrderedChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsOrderedChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsOrderedChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnIsUniqueChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsUniqueChanging(ValueChangedEventArgs)
  id: OnIsUniqueChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsUniqueChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnIsUniqueChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsUniqueChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsUniqueChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 893
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsUniqueChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnIsUniqueChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsUniqueChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsUniqueChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnIsUniqueChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnIsUniqueChanged(ValueChangedEventArgs)
  id: OnIsUniqueChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnIsUniqueChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnIsUniqueChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnIsUniqueChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnIsUniqueChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 906
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the IsUniqueChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnIsUniqueChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnIsUniqueChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnIsUniqueChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnLowerBoundChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnLowerBoundChanging(ValueChangedEventArgs)
  id: OnLowerBoundChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnLowerBoundChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnLowerBoundChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnLowerBoundChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnLowerBoundChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 924
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the LowerBoundChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnLowerBoundChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnLowerBoundChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnLowerBoundChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnLowerBoundChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnLowerBoundChanged(ValueChangedEventArgs)
  id: OnLowerBoundChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnLowerBoundChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnLowerBoundChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnLowerBoundChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnLowerBoundChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 937
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the LowerBoundChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnLowerBoundChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnLowerBoundChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnLowerBoundChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnUpperBoundChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnUpperBoundChanging(ValueChangedEventArgs)
  id: OnUpperBoundChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnUpperBoundChanging(ValueChangedEventArgs)
  nameWithType: Reference.OnUpperBoundChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnUpperBoundChanging(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnUpperBoundChanging
    path: src/Models/Models/Meta/Reference.cs
    startLine: 955
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the UpperBoundChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnUpperBoundChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnUpperBoundChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnUpperBoundChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.OnUpperBoundChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.Reference.OnUpperBoundChanged(ValueChangedEventArgs)
  id: OnUpperBoundChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: OnUpperBoundChanged(ValueChangedEventArgs)
  nameWithType: Reference.OnUpperBoundChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.Reference.OnUpperBoundChanged(ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnUpperBoundChanged
    path: src/Models/Models/Meta/Reference.cs
    startLine: 968
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the UpperBoundChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnUpperBoundChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnUpperBoundChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.Reference.OnUpperBoundChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NMF.Models.Meta.Reference.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.Reference.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(String, Int32)
  nameWithType: Reference.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.Meta.Reference.GetModelElementForReference(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetModelElementForReference
    path: src/Models/Models/Meta/Reference.cs
    startLine: 983
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nResolves the given URI to a child model element\n"
  example: []
  syntax:
    content: protected override IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference name
    - id: index
      type: System.Int32
      description: The index of this reference
    return:
      type: NMF.Models.IModelElement
      description: The model element or null if it could not be found
    content.vb: Protected Overrides Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overridden: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  overload: NMF.Models.Meta.Reference.GetModelElementForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.Reference.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: GetAttributeValue(String, Int32)
  nameWithType: Reference.GetAttributeValue(String, Int32)
  fullName: NMF.Models.Meta.Reference.GetAttributeValue(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Models/Meta/Reference.cs
    startLine: 1014
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Models.Meta.Reference.GetAttributeValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Meta.Reference.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: SetFeature(String, Object)
  nameWithType: Reference.SetFeature(String, Object)
  fullName: NMF.Models.Meta.Reference.SetFeature(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Models/Models/Meta/Reference.cs
    startLine: 1044
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  overload: NMF.Models.Meta.Reference.SetFeature*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.Meta.Reference.GetExpressionForAttribute(System.String)
  id: GetExpressionForAttribute(System.String)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: GetExpressionForAttribute(String)
  nameWithType: Reference.GetExpressionForAttribute(String)
  fullName: NMF.Models.Meta.Reference.GetExpressionForAttribute(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForAttribute
    path: src/Models/Models/Meta/Reference.cs
    startLine: 1104
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property expression for the given attribute\n"
  example: []
  syntax:
    content: protected override Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute in upper case
    return:
      type: NMF.Expressions.INotifyExpression{System.Object}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForAttribute(attribute As String) As Expressions.INotifyExpression(Of Object)
  overridden: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  overload: NMF.Models.Meta.Reference.GetExpressionForAttribute*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.Meta.Reference.GetExpressionForReference(System.String)
  id: GetExpressionForReference(System.String)
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: GetExpressionForReference(String)
  nameWithType: Reference.GetExpressionForReference(String)
  fullName: NMF.Models.Meta.Reference.GetExpressionForReference(System.String)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForReference
    path: src/Models/Models/Meta/Reference.cs
    startLine: 1134
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property expression for the given reference\n"
  example: []
  syntax:
    content: protected override Expressions.INotifyExpression<IModelElement> GetExpressionForReference(string reference)
    parameters:
    - id: reference
      type: System.String
      description: The requested reference in upper case
    return:
      type: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForReference(reference As String) As Expressions.INotifyExpression(Of IModelElement)
  overridden: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  overload: NMF.Models.Meta.Reference.GetExpressionForReference*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NMF.Models.Meta.Reference.GetClass
  commentId: M:NMF.Models.Meta.Reference.GetClass
  id: GetClass
  parent: NMF.Models.Meta.Reference
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: Reference.GetClass()
  fullName: NMF.Models.Meta.Reference.GetClass()
  type: Method
  source:
    remote:
      path: Models/Models/Meta/Reference.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Models/Models/Meta/Reference.cs
    startLine: 1162
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass As IClass
  overridden: NMF.Models.Meta.MetaElement.GetClass
  overload: NMF.Models.Meta.Reference.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Meta.MetaElement
  commentId: T:NMF.Models.Meta.MetaElement
  parent: NMF.Models.Meta
  name: MetaElement
  nameWithType: MetaElement
  fullName: NMF.Models.Meta.MetaElement
- uid: NMF.Models.Meta.IReference
  commentId: T:NMF.Models.Meta.IReference
  parent: NMF.Models.Meta
  name: IReference
  nameWithType: IReference
  fullName: NMF.Models.Meta.IReference
- uid: NMF.Models.Meta.ITypedElement
  commentId: T:NMF.Models.Meta.ITypedElement
  parent: NMF.Models.Meta
  name: ITypedElement
  nameWithType: ITypedElement
  fullName: NMF.Models.Meta.ITypedElement
- uid: NMF.Models.Meta.IMetaElement
  commentId: T:NMF.Models.Meta.IMetaElement
  parent: NMF.Models.Meta
  name: IMetaElement
  nameWithType: IMetaElement
  fullName: NMF.Models.Meta.IMetaElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.Meta.MetaElement.Name
  commentId: P:NMF.Models.Meta.MetaElement.Name
  parent: NMF.Models.Meta.MetaElement
  name: Name
  nameWithType: MetaElement.Name
  fullName: NMF.Models.Meta.MetaElement.Name
- uid: NMF.Models.Meta.MetaElement.Summary
  commentId: P:NMF.Models.Meta.MetaElement.Summary
  parent: NMF.Models.Meta.MetaElement
  name: Summary
  nameWithType: MetaElement.Summary
  fullName: NMF.Models.Meta.MetaElement.Summary
- uid: NMF.Models.Meta.MetaElement.Remarks
  commentId: P:NMF.Models.Meta.MetaElement.Remarks
  parent: NMF.Models.Meta.MetaElement
  name: Remarks
  nameWithType: MetaElement.Remarks
  fullName: NMF.Models.Meta.MetaElement.Remarks
- uid: NMF.Models.Meta.MetaElement.IsIdentified
  commentId: P:NMF.Models.Meta.MetaElement.IsIdentified
  parent: NMF.Models.Meta.MetaElement
  name: IsIdentified
  nameWithType: MetaElement.IsIdentified
  fullName: NMF.Models.Meta.MetaElement.IsIdentified
- uid: NMF.Models.Meta.MetaElement.NameChanging
  commentId: E:NMF.Models.Meta.MetaElement.NameChanging
  parent: NMF.Models.Meta.MetaElement
  name: NameChanging
  nameWithType: MetaElement.NameChanging
  fullName: NMF.Models.Meta.MetaElement.NameChanging
- uid: NMF.Models.Meta.MetaElement.NameChanged
  commentId: E:NMF.Models.Meta.MetaElement.NameChanged
  parent: NMF.Models.Meta.MetaElement
  name: NameChanged
  nameWithType: MetaElement.NameChanged
  fullName: NMF.Models.Meta.MetaElement.NameChanged
- uid: NMF.Models.Meta.MetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanging
  parent: NMF.Models.Meta.MetaElement
  name: SummaryChanging
  nameWithType: MetaElement.SummaryChanging
  fullName: NMF.Models.Meta.MetaElement.SummaryChanging
- uid: NMF.Models.Meta.MetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanged
  parent: NMF.Models.Meta.MetaElement
  name: SummaryChanged
  nameWithType: MetaElement.SummaryChanged
  fullName: NMF.Models.Meta.MetaElement.SummaryChanged
- uid: NMF.Models.Meta.MetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanging
  parent: NMF.Models.Meta.MetaElement
  name: RemarksChanging
  nameWithType: MetaElement.RemarksChanging
  fullName: NMF.Models.Meta.MetaElement.RemarksChanging
- uid: NMF.Models.Meta.MetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanged
  parent: NMF.Models.Meta.MetaElement
  name: RemarksChanged
  nameWithType: MetaElement.RemarksChanged
  fullName: NMF.Models.Meta.MetaElement.RemarksChanged
- uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnNameChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: MetaElement.OnNameChanging
    fullName: NMF.Models.Meta.MetaElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanging(ValueChangedEventArgs)
    name: OnNameChanging
    nameWithType: MetaElement.OnNameChanging
    fullName: NMF.Models.Meta.MetaElement.OnNameChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnNameChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: MetaElement.OnNameChanged
    fullName: NMF.Models.Meta.MetaElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnNameChanged(ValueChangedEventArgs)
    name: OnNameChanged
    nameWithType: MetaElement.OnNameChanged
    fullName: NMF.Models.Meta.MetaElement.OnNameChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnSummaryChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
    name: OnSummaryChanging
    nameWithType: MetaElement.OnSummaryChanging
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(ValueChangedEventArgs)
    name: OnSummaryChanging
    nameWithType: MetaElement.OnSummaryChanging
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnSummaryChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
    name: OnSummaryChanged
    nameWithType: MetaElement.OnSummaryChanged
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(ValueChangedEventArgs)
    name: OnSummaryChanged
    nameWithType: MetaElement.OnSummaryChanged
    fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnRemarksChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
    name: OnRemarksChanging
    nameWithType: MetaElement.OnRemarksChanging
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(ValueChangedEventArgs)
    name: OnRemarksChanging
    nameWithType: MetaElement.OnRemarksChanging
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: OnRemarksChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
    name: OnRemarksChanged
    nameWithType: MetaElement.OnRemarksChanged
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(ValueChangedEventArgs)
    name: OnRemarksChanged
    nameWithType: MetaElement.OnRemarksChanged
    fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.ToIdentifierString
  commentId: M:NMF.Models.Meta.MetaElement.ToIdentifierString
  parent: NMF.Models.Meta.MetaElement
  name: ToIdentifierString()
  nameWithType: MetaElement.ToIdentifierString()
  fullName: NMF.Models.Meta.MetaElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: MetaElement.ToIdentifierString
    fullName: NMF.Models.Meta.MetaElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.ToIdentifierString
    name: ToIdentifierString
    nameWithType: MetaElement.ToIdentifierString
    fullName: NMF.Models.Meta.MetaElement.ToIdentifierString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
    nameWithType: ModelElement.Freeze
    fullName: NMF.Models.ModelElement.Freeze
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
    nameWithType: ModelElement.Lock
    fullName: NMF.Models.ModelElement.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
    nameWithType: ModelElement.Unlock
    fullName: NMF.Models.ModelElement.Unlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
    nameWithType: ModelElement.TryUnlock
    fullName: NMF.Models.ModelElement.TryUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, Int32)
  nameWithType: ModelElement.GetContainerReference(IModelElement, Int32)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    nameWithType: ModelElement.GetContainerReference
    fullName: NMF.Models.ModelElement.GetContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
    nameWithType: ModelElement.PropagateNewModel
    fullName: NMF.Models.ModelElement.PropagateNewModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Model
    name: Model
    nameWithType: Model
    fullName: NMF.Models.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
    nameWithType: ModelElement.OnChildCreated
    fullName: NMF.Models.ModelElement.OnChildCreated
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  parent: NMF.Models.ModelElement
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(String, Boolean, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(System.String, System.Boolean, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
    nameWithType: ModelElement.CreateUriWithFragment
    fullName: NMF.Models.ModelElement.CreateUriWithFragment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(String, Boolean)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String, System.Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
    nameWithType: ModelElement.CreateUriFromGlobalIdentifier
    fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(ValueChangedEventArgs)
    name: PropagateNewId
    nameWithType: ModelElement.PropagateNewId
    fullName: NMF.Models.ModelElement.PropagateNewId
  - name: (
    nameWithType: (
    fullName: (
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
    nameWithType: ModelElement.ToString
    fullName: NMF.Models.ModelElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
    nameWithType: ModelElement.OnKeyChanged
    fullName: NMF.Models.ModelElement.OnKeyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(String)
  nameWithType: ModelElement.Resolve(String)
  fullName: NMF.Models.ModelElement.Resolve(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
    nameWithType: ModelElement.Resolve
    fullName: NMF.Models.ModelElement.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
    nameWithType: ModelElement.GetRelativePathForChild
    fullName: NMF.Models.ModelElement.GetRelativePathForChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
    nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
    fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(Object)
  nameWithType: ModelElement.GetCompositionName(Object)
  fullName: NMF.Models.ModelElement.GetCompositionName(System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
    nameWithType: ModelElement.GetCompositionName
    fullName: NMF.Models.ModelElement.GetCompositionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(String)
  nameWithType: ModelElement.GetModelElementForPathSegment(String)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
    nameWithType: ModelElement.GetModelElementForPathSegment
    fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCollectionForFeature(String)
  nameWithType: ModelElement.GetCollectionForFeature(String)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
    nameWithType: ModelElement.GetCollectionForFeature
    fullName: NMF.Models.ModelElement.GetCollectionForFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, Object[])
  nameWithType: ModelElement.CallOperation(IOperation, Object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, System.Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    nameWithType: ModelElement.CallOperation
    fullName: NMF.Models.ModelElement.CallOperation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    nameWithType: IOperation
    fullName: NMF.Models.Meta.IOperation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension<T>
    nameWithType: ModelElement.GetExtension<T>
    fullName: NMF.Models.ModelElement.GetExtension<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension(Of T)
    nameWithType: ModelElement.GetExtension(Of T)
    fullName: NMF.Models.ModelElement.GetExtension(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(System.String, ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(System.String, ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
    nameWithType: ModelElement.OnPropertyChanged
    fullName: NMF.Models.ModelElement.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(System.String, ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(System.String, ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
    nameWithType: ModelElement.OnPropertyChanging
    fullName: NMF.Models.ModelElement.OnPropertyChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
    nameWithType: ModelElement.Delete
    fullName: NMF.Models.ModelElement.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
    nameWithType: ModelElement.OnDeleting
    fullName: NMF.Models.ModelElement.OnDeleting
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
    nameWithType: ModelElement.OnDeleted
    fullName: NMF.Models.ModelElement.OnDeleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    nameWithType: UriChangedEventArgs
    fullName: NMF.Models.UriChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValue(IAttribute)
  nameWithType: ModelElement.GetAttributeValue(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, Int32)
  nameWithType: ModelElement.GetReferencedElement(IReference, Int32)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    nameWithType: ModelElement.GetReferencedElement
    fullName: NMF.Models.ModelElement.GetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    nameWithType: ModelElement.SetReferencedElement
    fullName: NMF.Models.ModelElement.SetReferencedElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    nameWithType: ModelElement.GetReferencedElements
    fullName: NMF.Models.ModelElement.GetReferencedElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, Int32)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, Int32)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    nameWithType: ModelElement.GetAttributeValue
    fullName: NMF.Models.ModelElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, Object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, System.Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    nameWithType: ModelElement.SetAttributeValue
    fullName: NMF.Models.ModelElement.SetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    nameWithType: ModelElement.GetAttributeValues
    fullName: NMF.Models.ModelElement.GetAttributeValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    nameWithType: IAttribute
    fullName: NMF.Models.Meta.IAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
    nameWithType: ModelElement.OnCollectionChanged
    fullName: NMF.Models.ModelElement.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(System.String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
    nameWithType: ModelElement.OnCollectionChanging
    fullName: NMF.Models.ModelElement.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: System.Lazy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    nameWithType: ITypedElement
    fullName: NMF.Models.Meta.ITypedElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
    nameWithType: ModelElement.OnBubbledChange
    fullName: NMF.Models.ModelElement.OnBubbledChange
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    nameWithType: BubbledChangeEventArgs
    fullName: NMF.Models.BubbledChangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants()
  nameWithType: ModelExtensions.Descendants()
  fullName: NMF.Models.ModelExtensions.Descendants()
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.IReference.NMF.Models.Meta.ClassExtensions.IsContainerReference
  commentId: M:NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  parent: NMF.Models.Meta.ClassExtensions
  definition: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  name: IsContainerReference()
  nameWithType: ClassExtensions.IsContainerReference()
  fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference()
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference
    name: IsContainerReference
    nameWithType: ClassExtensions.IsContainerReference
    fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference
    name: IsContainerReference
    nameWithType: ClassExtensions.IsContainerReference
    fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    nameWithType: ModelExtensions.Descendants
    fullName: NMF.Models.ModelExtensions.Descendants
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  name: IsContainerReference(IReference)
  nameWithType: ClassExtensions.IsContainerReference(IReference)
  fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
    nameWithType: ClassExtensions.IsContainerReference
    fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.ClassExtensions.IsContainerReference(NMF.Models.Meta.IReference)
    name: IsContainerReference
    nameWithType: ClassExtensions.IsContainerReference
    fullName: NMF.Models.Meta.ClassExtensions.IsContainerReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    nameWithType: IReference
    fullName: NMF.Models.Meta.IReference
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ClassExtensions
  commentId: T:NMF.Models.Meta.ClassExtensions
  parent: NMF.Models.Meta
  name: ClassExtensions
  nameWithType: ClassExtensions
  fullName: NMF.Models.Meta.ClassExtensions
- uid: NMF.Models.Meta.ITypedElement.TypeChanged
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanged
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanged
  nameWithType: ITypedElement.TypeChanged
  fullName: NMF.Models.Meta.ITypedElement.TypeChanged
- uid: System.EventHandler{ValueChangedEventArgs}
  commentId: T:System.EventHandler{ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: ValueChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.ITypedElement.TypeChanging
  commentId: E:NMF.Models.Meta.ITypedElement.TypeChanging
  parent: NMF.Models.Meta.ITypedElement
  name: TypeChanging
  nameWithType: ITypedElement.TypeChanging
  fullName: NMF.Models.Meta.ITypedElement.TypeChanging
- uid: NMF.Models.Meta.Reference.IsContainment*
  commentId: Overload:NMF.Models.Meta.Reference.IsContainment
  name: IsContainment
  nameWithType: Reference.IsContainment
  fullName: NMF.Models.Meta.Reference.IsContainment
- uid: NMF.Models.Meta.IReference.IsContainment
  commentId: P:NMF.Models.Meta.IReference.IsContainment
  parent: NMF.Models.Meta.IReference
  name: IsContainment
  nameWithType: IReference.IsContainment
  fullName: NMF.Models.Meta.IReference.IsContainment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Models.Meta.Reference.DeclaringType*
  commentId: Overload:NMF.Models.Meta.Reference.DeclaringType
  name: DeclaringType
  nameWithType: Reference.DeclaringType
  fullName: NMF.Models.Meta.Reference.DeclaringType
- uid: NMF.Models.Meta.IReference.DeclaringType
  commentId: P:NMF.Models.Meta.IReference.DeclaringType
  parent: NMF.Models.Meta.IReference
  name: DeclaringType
  nameWithType: IReference.DeclaringType
  fullName: NMF.Models.Meta.IReference.DeclaringType
- uid: NMF.Models.Meta.IReferenceType
  commentId: T:NMF.Models.Meta.IReferenceType
  parent: NMF.Models.Meta
  name: IReferenceType
  nameWithType: IReferenceType
  fullName: NMF.Models.Meta.IReferenceType
- uid: NMF.Models.Meta.Reference.Opposite*
  commentId: Overload:NMF.Models.Meta.Reference.Opposite
  name: Opposite
  nameWithType: Reference.Opposite
  fullName: NMF.Models.Meta.Reference.Opposite
- uid: NMF.Models.Meta.IReference.Opposite
  commentId: P:NMF.Models.Meta.IReference.Opposite
  parent: NMF.Models.Meta.IReference
  name: Opposite
  nameWithType: IReference.Opposite
  fullName: NMF.Models.Meta.IReference.Opposite
- uid: NMF.Models.Meta.Reference.ReferenceType*
  commentId: Overload:NMF.Models.Meta.Reference.ReferenceType
  name: ReferenceType
  nameWithType: Reference.ReferenceType
  fullName: NMF.Models.Meta.Reference.ReferenceType
- uid: NMF.Models.Meta.IReference.ReferenceType
  commentId: P:NMF.Models.Meta.IReference.ReferenceType
  parent: NMF.Models.Meta.IReference
  name: ReferenceType
  nameWithType: IReference.ReferenceType
  fullName: NMF.Models.Meta.IReference.ReferenceType
- uid: NMF.Models.Meta.Reference.Refines*
  commentId: Overload:NMF.Models.Meta.Reference.Refines
  name: Refines
  nameWithType: Reference.Refines
  fullName: NMF.Models.Meta.Reference.Refines
- uid: NMF.Models.Meta.IReference.Refines
  commentId: P:NMF.Models.Meta.IReference.Refines
  parent: NMF.Models.Meta.IReference
  name: Refines
  nameWithType: IReference.Refines
  fullName: NMF.Models.Meta.IReference.Refines
- uid: NMF.Models.Meta.Reference.Anchor*
  commentId: Overload:NMF.Models.Meta.Reference.Anchor
  name: Anchor
  nameWithType: Reference.Anchor
  fullName: NMF.Models.Meta.Reference.Anchor
- uid: NMF.Models.Meta.IReference.Anchor
  commentId: P:NMF.Models.Meta.IReference.Anchor
  parent: NMF.Models.Meta.IReference
  name: Anchor
  nameWithType: IReference.Anchor
  fullName: NMF.Models.Meta.IReference.Anchor
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type*
  commentId: Overload:NMF.Models.Meta.Reference.NMF#Models#Meta#ITypedElement#Type
  name: ITypedElement.Type
  nameWithType: Reference.ITypedElement.Type
  fullName: NMF.Models.Meta.Reference.NMF.Models.Meta.ITypedElement.Type
  nameWithType.vb: Reference.NMF.Models.Meta.ITypedElement.Type
  name.vb: NMF.Models.Meta.ITypedElement.Type
- uid: NMF.Models.Meta.ITypedElement.Type
  commentId: P:NMF.Models.Meta.ITypedElement.Type
  parent: NMF.Models.Meta.ITypedElement
  name: Type
  nameWithType: ITypedElement.Type
  fullName: NMF.Models.Meta.ITypedElement.Type
- uid: NMF.Models.Meta.IType
  commentId: T:NMF.Models.Meta.IType
  parent: NMF.Models.Meta
  name: IType
  nameWithType: IType
  fullName: NMF.Models.Meta.IType
- uid: NMF.Models.Meta.Reference.IsOrdered*
  commentId: Overload:NMF.Models.Meta.Reference.IsOrdered
  name: IsOrdered
  nameWithType: Reference.IsOrdered
  fullName: NMF.Models.Meta.Reference.IsOrdered
- uid: NMF.Models.Meta.ITypedElement.IsOrdered
  commentId: P:NMF.Models.Meta.ITypedElement.IsOrdered
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrdered
  nameWithType: ITypedElement.IsOrdered
  fullName: NMF.Models.Meta.ITypedElement.IsOrdered
- uid: NMF.Models.Meta.Reference.IsUnique*
  commentId: Overload:NMF.Models.Meta.Reference.IsUnique
  name: IsUnique
  nameWithType: Reference.IsUnique
  fullName: NMF.Models.Meta.Reference.IsUnique
- uid: NMF.Models.Meta.ITypedElement.IsUnique
  commentId: P:NMF.Models.Meta.ITypedElement.IsUnique
  parent: NMF.Models.Meta.ITypedElement
  name: IsUnique
  nameWithType: ITypedElement.IsUnique
  fullName: NMF.Models.Meta.ITypedElement.IsUnique
- uid: NMF.Models.Meta.Reference.LowerBound*
  commentId: Overload:NMF.Models.Meta.Reference.LowerBound
  name: LowerBound
  nameWithType: Reference.LowerBound
  fullName: NMF.Models.Meta.Reference.LowerBound
- uid: NMF.Models.Meta.ITypedElement.LowerBound
  commentId: P:NMF.Models.Meta.ITypedElement.LowerBound
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBound
  nameWithType: ITypedElement.LowerBound
  fullName: NMF.Models.Meta.ITypedElement.LowerBound
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Models.Meta.Reference.UpperBound*
  commentId: Overload:NMF.Models.Meta.Reference.UpperBound
  name: UpperBound
  nameWithType: Reference.UpperBound
  fullName: NMF.Models.Meta.Reference.UpperBound
- uid: NMF.Models.Meta.ITypedElement.UpperBound
  commentId: P:NMF.Models.Meta.ITypedElement.UpperBound
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBound
  nameWithType: ITypedElement.UpperBound
  fullName: NMF.Models.Meta.ITypedElement.UpperBound
- uid: NMF.Models.ModelElement.ReferencedElements
  commentId: P:NMF.Models.ModelElement.ReferencedElements
  parent: NMF.Models.ModelElement
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
- uid: NMF.Models.Meta.Reference.ReferencedElements*
  commentId: Overload:NMF.Models.Meta.Reference.ReferencedElements
  name: ReferencedElements
  nameWithType: Reference.ReferencedElements
  fullName: NMF.Models.Meta.Reference.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: IEnumerableExpression{NMF.Models.IModelElement}
  commentId: '!:IEnumerableExpression{NMF.Models.IModelElement}'
  definition: IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExpression`1
  isExternal: true
  name: IEnumerableExpression<>
  nameWithType: IEnumerableExpression<>
  fullName: IEnumerableExpression<>
  nameWithType.vb: IEnumerableExpression(Of )
  fullName.vb: IEnumerableExpression(Of )
  name.vb: IEnumerableExpression(Of )
  spec.csharp:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: IEnumerableExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.ClassInstance*
  commentId: Overload:NMF.Models.Meta.Reference.ClassInstance
  name: ClassInstance
  nameWithType: Reference.ClassInstance
  fullName: NMF.Models.Meta.Reference.ClassInstance
- uid: NMF.Models.Meta.IReference.IsContainmentChanging
  commentId: E:NMF.Models.Meta.IReference.IsContainmentChanging
  parent: NMF.Models.Meta.IReference
  name: IsContainmentChanging
  nameWithType: IReference.IsContainmentChanging
  fullName: NMF.Models.Meta.IReference.IsContainmentChanging
- uid: NMF.Models.Meta.IReference.IsContainmentChanged
  commentId: E:NMF.Models.Meta.IReference.IsContainmentChanged
  parent: NMF.Models.Meta.IReference
  name: IsContainmentChanged
  nameWithType: IReference.IsContainmentChanged
  fullName: NMF.Models.Meta.IReference.IsContainmentChanged
- uid: NMF.Models.Meta.IReference.DeclaringTypeChanging
  commentId: E:NMF.Models.Meta.IReference.DeclaringTypeChanging
  parent: NMF.Models.Meta.IReference
  name: DeclaringTypeChanging
  nameWithType: IReference.DeclaringTypeChanging
  fullName: NMF.Models.Meta.IReference.DeclaringTypeChanging
- uid: NMF.Models.Meta.IReference.DeclaringTypeChanged
  commentId: E:NMF.Models.Meta.IReference.DeclaringTypeChanged
  parent: NMF.Models.Meta.IReference
  name: DeclaringTypeChanged
  nameWithType: IReference.DeclaringTypeChanged
  fullName: NMF.Models.Meta.IReference.DeclaringTypeChanged
- uid: NMF.Models.Meta.IReference.OppositeChanging
  commentId: E:NMF.Models.Meta.IReference.OppositeChanging
  parent: NMF.Models.Meta.IReference
  name: OppositeChanging
  nameWithType: IReference.OppositeChanging
  fullName: NMF.Models.Meta.IReference.OppositeChanging
- uid: NMF.Models.Meta.IReference.OppositeChanged
  commentId: E:NMF.Models.Meta.IReference.OppositeChanged
  parent: NMF.Models.Meta.IReference
  name: OppositeChanged
  nameWithType: IReference.OppositeChanged
  fullName: NMF.Models.Meta.IReference.OppositeChanged
- uid: NMF.Models.Meta.IReference.ReferenceTypeChanging
  commentId: E:NMF.Models.Meta.IReference.ReferenceTypeChanging
  parent: NMF.Models.Meta.IReference
  name: ReferenceTypeChanging
  nameWithType: IReference.ReferenceTypeChanging
  fullName: NMF.Models.Meta.IReference.ReferenceTypeChanging
- uid: NMF.Models.Meta.IReference.ReferenceTypeChanged
  commentId: E:NMF.Models.Meta.IReference.ReferenceTypeChanged
  parent: NMF.Models.Meta.IReference
  name: ReferenceTypeChanged
  nameWithType: IReference.ReferenceTypeChanged
  fullName: NMF.Models.Meta.IReference.ReferenceTypeChanged
- uid: NMF.Models.Meta.IReference.RefinesChanging
  commentId: E:NMF.Models.Meta.IReference.RefinesChanging
  parent: NMF.Models.Meta.IReference
  name: RefinesChanging
  nameWithType: IReference.RefinesChanging
  fullName: NMF.Models.Meta.IReference.RefinesChanging
- uid: NMF.Models.Meta.IReference.RefinesChanged
  commentId: E:NMF.Models.Meta.IReference.RefinesChanged
  parent: NMF.Models.Meta.IReference
  name: RefinesChanged
  nameWithType: IReference.RefinesChanged
  fullName: NMF.Models.Meta.IReference.RefinesChanged
- uid: NMF.Models.Meta.IReference.AnchorChanging
  commentId: E:NMF.Models.Meta.IReference.AnchorChanging
  parent: NMF.Models.Meta.IReference
  name: AnchorChanging
  nameWithType: IReference.AnchorChanging
  fullName: NMF.Models.Meta.IReference.AnchorChanging
- uid: NMF.Models.Meta.IReference.AnchorChanged
  commentId: E:NMF.Models.Meta.IReference.AnchorChanged
  parent: NMF.Models.Meta.IReference
  name: AnchorChanged
  nameWithType: IReference.AnchorChanged
  fullName: NMF.Models.Meta.IReference.AnchorChanged
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanging
  nameWithType: ITypedElement.IsOrderedChanging
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanging
- uid: NMF.Models.Meta.ITypedElement.IsOrderedChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsOrderedChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsOrderedChanged
  nameWithType: ITypedElement.IsOrderedChanged
  fullName: NMF.Models.Meta.ITypedElement.IsOrderedChanged
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanging
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanging
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanging
  nameWithType: ITypedElement.IsUniqueChanging
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanging
- uid: NMF.Models.Meta.ITypedElement.IsUniqueChanged
  commentId: E:NMF.Models.Meta.ITypedElement.IsUniqueChanged
  parent: NMF.Models.Meta.ITypedElement
  name: IsUniqueChanged
  nameWithType: ITypedElement.IsUniqueChanged
  fullName: NMF.Models.Meta.ITypedElement.IsUniqueChanged
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanging
  nameWithType: ITypedElement.LowerBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanging
- uid: NMF.Models.Meta.ITypedElement.LowerBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.LowerBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: LowerBoundChanged
  nameWithType: ITypedElement.LowerBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.LowerBoundChanged
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanging
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanging
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanging
  nameWithType: ITypedElement.UpperBoundChanging
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanging
- uid: NMF.Models.Meta.ITypedElement.UpperBoundChanged
  commentId: E:NMF.Models.Meta.ITypedElement.UpperBoundChanged
  parent: NMF.Models.Meta.ITypedElement
  name: UpperBoundChanged
  nameWithType: ITypedElement.UpperBoundChanged
  fullName: NMF.Models.Meta.ITypedElement.UpperBoundChanged
- uid: NMF.Models.Meta.Reference.OnIsContainmentChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsContainmentChanging
  name: OnIsContainmentChanging
  nameWithType: Reference.OnIsContainmentChanging
  fullName: NMF.Models.Meta.Reference.OnIsContainmentChanging
- uid: ValueChangedEventArgs
  isExternal: true
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: ValueChangedEventArgs
- uid: NMF.Models.Meta.Reference.OnIsContainmentChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsContainmentChanged
  name: OnIsContainmentChanged
  nameWithType: Reference.OnIsContainmentChanged
  fullName: NMF.Models.Meta.Reference.OnIsContainmentChanged
- uid: NMF.Models.Meta.Reference.OnDeclaringTypeChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnDeclaringTypeChanging
  name: OnDeclaringTypeChanging
  nameWithType: Reference.OnDeclaringTypeChanging
  fullName: NMF.Models.Meta.Reference.OnDeclaringTypeChanging
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
    nameWithType: ModelElement.OnParentChanging
    fullName: NMF.Models.ModelElement.OnParentChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.OnParentChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnParentChanging
  name: OnParentChanging
  nameWithType: Reference.OnParentChanging
  fullName: NMF.Models.Meta.Reference.OnParentChanging
- uid: NMF.Models.Meta.Reference.OnDeclaringTypeChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnDeclaringTypeChanged
  name: OnDeclaringTypeChanged
  nameWithType: Reference.OnDeclaringTypeChanged
  fullName: NMF.Models.Meta.Reference.OnDeclaringTypeChanged
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
    nameWithType: ModelElement.OnParentChanged
    fullName: NMF.Models.ModelElement.OnParentChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.OnParentChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnParentChanged
  name: OnParentChanged
  nameWithType: Reference.OnParentChanged
  fullName: NMF.Models.Meta.Reference.OnParentChanged
- uid: NMF.Models.Meta.Reference.OnOppositeChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnOppositeChanging
  name: OnOppositeChanging
  nameWithType: Reference.OnOppositeChanging
  fullName: NMF.Models.Meta.Reference.OnOppositeChanging
- uid: NMF.Models.Meta.Reference.OnOppositeChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnOppositeChanged
  name: OnOppositeChanged
  nameWithType: Reference.OnOppositeChanged
  fullName: NMF.Models.Meta.Reference.OnOppositeChanged
- uid: NMF.Models.Meta.Reference.OnReferenceTypeChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnReferenceTypeChanging
  name: OnReferenceTypeChanging
  nameWithType: Reference.OnReferenceTypeChanging
  fullName: NMF.Models.Meta.Reference.OnReferenceTypeChanging
- uid: NMF.Models.Meta.Reference.OnReferenceTypeChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnReferenceTypeChanged
  name: OnReferenceTypeChanged
  nameWithType: Reference.OnReferenceTypeChanged
  fullName: NMF.Models.Meta.Reference.OnReferenceTypeChanged
- uid: NMF.Models.Meta.Reference.OnRefinesChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnRefinesChanging
  name: OnRefinesChanging
  nameWithType: Reference.OnRefinesChanging
  fullName: NMF.Models.Meta.Reference.OnRefinesChanging
- uid: NMF.Models.Meta.Reference.OnRefinesChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnRefinesChanged
  name: OnRefinesChanged
  nameWithType: Reference.OnRefinesChanged
  fullName: NMF.Models.Meta.Reference.OnRefinesChanged
- uid: NMF.Models.Meta.Reference.OnAnchorChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnAnchorChanging
  name: OnAnchorChanging
  nameWithType: Reference.OnAnchorChanging
  fullName: NMF.Models.Meta.Reference.OnAnchorChanging
- uid: NMF.Models.Meta.Reference.OnAnchorChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnAnchorChanged
  name: OnAnchorChanged
  nameWithType: Reference.OnAnchorChanged
  fullName: NMF.Models.Meta.Reference.OnAnchorChanged
- uid: NMF.Models.Meta.Reference.OnIsOrderedChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsOrderedChanging
  name: OnIsOrderedChanging
  nameWithType: Reference.OnIsOrderedChanging
  fullName: NMF.Models.Meta.Reference.OnIsOrderedChanging
- uid: NMF.Models.Meta.Reference.OnIsOrderedChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsOrderedChanged
  name: OnIsOrderedChanged
  nameWithType: Reference.OnIsOrderedChanged
  fullName: NMF.Models.Meta.Reference.OnIsOrderedChanged
- uid: NMF.Models.Meta.Reference.OnIsUniqueChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsUniqueChanging
  name: OnIsUniqueChanging
  nameWithType: Reference.OnIsUniqueChanging
  fullName: NMF.Models.Meta.Reference.OnIsUniqueChanging
- uid: NMF.Models.Meta.Reference.OnIsUniqueChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnIsUniqueChanged
  name: OnIsUniqueChanged
  nameWithType: Reference.OnIsUniqueChanged
  fullName: NMF.Models.Meta.Reference.OnIsUniqueChanged
- uid: NMF.Models.Meta.Reference.OnLowerBoundChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnLowerBoundChanging
  name: OnLowerBoundChanging
  nameWithType: Reference.OnLowerBoundChanging
  fullName: NMF.Models.Meta.Reference.OnLowerBoundChanging
- uid: NMF.Models.Meta.Reference.OnLowerBoundChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnLowerBoundChanged
  name: OnLowerBoundChanged
  nameWithType: Reference.OnLowerBoundChanged
  fullName: NMF.Models.Meta.Reference.OnLowerBoundChanged
- uid: NMF.Models.Meta.Reference.OnUpperBoundChanging*
  commentId: Overload:NMF.Models.Meta.Reference.OnUpperBoundChanging
  name: OnUpperBoundChanging
  nameWithType: Reference.OnUpperBoundChanging
  fullName: NMF.Models.Meta.Reference.OnUpperBoundChanging
- uid: NMF.Models.Meta.Reference.OnUpperBoundChanged*
  commentId: Overload:NMF.Models.Meta.Reference.OnUpperBoundChanged
  name: OnUpperBoundChanged
  nameWithType: Reference.OnUpperBoundChanged
  fullName: NMF.Models.Meta.Reference.OnUpperBoundChanged
- uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForReference(String, Int32)
  nameWithType: ModelElement.GetModelElementForReference(String, Int32)
  fullName: NMF.Models.ModelElement.GetModelElementForReference(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
    nameWithType: ModelElement.GetModelElementForReference
    fullName: NMF.Models.ModelElement.GetModelElementForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.GetModelElementForReference*
  commentId: Overload:NMF.Models.Meta.Reference.GetModelElementForReference
  name: GetModelElementForReference
  nameWithType: Reference.GetModelElementForReference
  fullName: NMF.Models.Meta.Reference.GetModelElementForReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: GetAttributeValue(String, Int32)
  nameWithType: MetaElement.GetAttributeValue(String, Int32)
  fullName: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String, System.Int32)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: MetaElement.GetAttributeValue
    fullName: NMF.Models.Meta.MetaElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
    nameWithType: MetaElement.GetAttributeValue
    fullName: NMF.Models.Meta.MetaElement.GetAttributeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.GetAttributeValue*
  commentId: Overload:NMF.Models.Meta.Reference.GetAttributeValue
  name: GetAttributeValue
  nameWithType: Reference.GetAttributeValue
  fullName: NMF.Models.Meta.Reference.GetAttributeValue
- uid: NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: SetFeature(String, Object)
  nameWithType: MetaElement.SetFeature(String, Object)
  fullName: NMF.Models.Meta.MetaElement.SetFeature(System.String, System.Object)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: MetaElement.SetFeature
    fullName: NMF.Models.Meta.MetaElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
    name: SetFeature
    nameWithType: MetaElement.SetFeature
    fullName: NMF.Models.Meta.MetaElement.SetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.SetFeature*
  commentId: Overload:NMF.Models.Meta.Reference.SetFeature
  name: SetFeature
  nameWithType: Reference.SetFeature
  fullName: NMF.Models.Meta.Reference.SetFeature
- uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.Meta.MetaElement
  isExternal: true
  name: GetExpressionForAttribute(String)
  nameWithType: MetaElement.GetExpressionForAttribute(String)
  fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: MetaElement.GetExpressionForAttribute
    fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
    nameWithType: MetaElement.GetExpressionForAttribute
    fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.GetExpressionForAttribute*
  commentId: Overload:NMF.Models.Meta.Reference.GetExpressionForAttribute
  name: GetExpressionForAttribute
  nameWithType: Reference.GetExpressionForAttribute
  fullName: NMF.Models.Meta.Reference.GetExpressionForAttribute
- uid: NMF.Expressions.INotifyExpression{System.Object}
  commentId: '!:NMF.Expressions.INotifyExpression{System.Object}'
  definition: NMF.Expressions.INotifyExpression`1
  name: Expressions.INotifyExpression<Object>
  nameWithType: Expressions.INotifyExpression<Object>
  fullName: NMF.Expressions.INotifyExpression<System.Object>
  nameWithType.vb: Expressions.INotifyExpression(Of Object)
  fullName.vb: NMF.Expressions.INotifyExpression(Of System.Object)
  name.vb: Expressions.INotifyExpression(Of Object)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotifyExpression`1
  isExternal: true
  name: Expressions.INotifyExpression<>
  nameWithType: Expressions.INotifyExpression<>
  fullName: NMF.Expressions.INotifyExpression<>
  nameWithType.vb: Expressions.INotifyExpression(Of )
  fullName.vb: NMF.Expressions.INotifyExpression(Of )
  name.vb: Expressions.INotifyExpression(Of )
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForReference(String)
  nameWithType: ModelElement.GetExpressionForReference(String)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
    nameWithType: ModelElement.GetExpressionForReference
    fullName: NMF.Models.ModelElement.GetExpressionForReference
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.GetExpressionForReference*
  commentId: Overload:NMF.Models.Meta.Reference.GetExpressionForReference
  name: GetExpressionForReference
  nameWithType: Reference.GetExpressionForReference
  fullName: NMF.Models.Meta.Reference.GetExpressionForReference
- uid: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  commentId: '!:NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}'
  definition: NMF.Expressions.INotifyExpression`1
  name: Expressions.INotifyExpression<IModelElement>
  nameWithType: Expressions.INotifyExpression<IModelElement>
  fullName: NMF.Expressions.INotifyExpression<NMF.Models.IModelElement>
  nameWithType.vb: Expressions.INotifyExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.INotifyExpression(Of NMF.Models.IModelElement)
  name.vb: Expressions.INotifyExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: Expressions.INotifyExpression
    nameWithType: Expressions.INotifyExpression
    fullName: NMF.Expressions.INotifyExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.MetaElement.GetClass
  commentId: M:NMF.Models.Meta.MetaElement.GetClass
  parent: NMF.Models.Meta.MetaElement
  name: GetClass()
  nameWithType: MetaElement.GetClass()
  fullName: NMF.Models.Meta.MetaElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.Meta.MetaElement.GetClass
    name: GetClass
    nameWithType: MetaElement.GetClass
    fullName: NMF.Models.Meta.MetaElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Meta.MetaElement.GetClass
    name: GetClass
    nameWithType: MetaElement.GetClass
    fullName: NMF.Models.Meta.MetaElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Meta.Reference.GetClass*
  commentId: Overload:NMF.Models.Meta.Reference.GetClass
  name: GetClass
  nameWithType: Reference.GetClass
  fullName: NMF.Models.Meta.Reference.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    nameWithType: IModelElement.GetClass
    fullName: NMF.Models.IModelElement.GetClass
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
