### YamlMime:ManagedReference
items:
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  id: ModelElement
  parent: NMF.Models
  children:
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.Children
  - NMF.Models.ModelElement.ClassInstance
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.GetClass
  - NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  - NMF.Models.ModelElement.GetExpressionForReference(System.String)
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsIdentified
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.ParentChanged
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.ReferencedElements
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.ToIdentifierString
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.UriChanged
  langs:
  - csharp
  - vb
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
  type: Class
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ModelElement
    path: src/Models/Models/ModelElement.cs
    startLine: 24
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Defines the base class for a model element implementation
  example: []
  syntax:
    content: >-
      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//ModelElement/")]

      public abstract class ModelElement : IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//ModelElement/")>

      Public MustInherit Class ModelElement Implements IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Expressions.IncrementalizationConfiguration.Configuration
  - NMF.Expressions.IncrementalizationConfiguration.MethodConfiguration
  - NMF.Interop.Ecore.EGenericType
  - NMF.Interop.Ecore.EModelElement
  - NMF.Interop.Ecore.EObject
  - NMF.Interop.Ecore.EStringToStringMapEntry
  - NMF.Interop.Layout.LayoutInformation
  - NMF.Interop.Type.AnyType
  - NMF.Interop.Type.ProcessingInstruction
  - NMF.Interop.Type.XMLTypeDocumentRoot
  - NMF.Models.Changes.ModelChange
  - NMF.Models.Changes.ModelChangeSet
  - NMF.Models.Changes.OperationArgument
  - NMF.Models.Dynamic.DynamicModelElement
  - NMF.Models.Meta.AnnotationEntry
  - NMF.Models.Meta.AttributeConstraint
  - NMF.Models.Meta.MetaElement
  - NMF.Models.Meta.ReferenceConstraint
  - NMF.Models.Model
  - NMF.Models.ModelElementExtension
  implements:
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  attributes:
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//ModelElement/
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  id: Model
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Model
    path: src/Models/Models/ModelElement.cs
    startLine: 60
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the model that contains the current model element
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public Model Model { get; }
    parameters: []
    return:
      type: NMF.Models.Model
    content.vb: >-
      <Browsable(False)>

      Public ReadOnly Property Model As Model
  overload: NMF.Models.ModelElement.Model*
  implements:
  - NMF.Models.IModelElement.Model
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  id: Freeze
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Freeze
    path: src/Models/Models/ModelElement.cs
    startLine: 151
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Freezes this model element such that it becomes immutable.
  example: []
  syntax:
    content: public void Freeze()
    content.vb: Public Sub Freeze()
  overload: NMF.Models.ModelElement.Freeze*
  implements:
  - NMF.Models.IModelElement.Freeze
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  id: Lock
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Lock
    path: src/Models/Models/ModelElement.cs
    startLine: 170
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Locks this model element against any changes (can be undone)
  example: []
  syntax:
    content: public void Lock()
    content.vb: Public Sub Lock()
  overload: NMF.Models.ModelElement.Lock*
  implements:
  - NMF.Models.IModelElement.Lock
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  id: IsFrozen
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsFrozen
    path: src/Models/Models/ModelElement.cs
    startLine: 185
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a value indicating whether the model element is closed for any future modifications
  example: []
  syntax:
    content: public bool IsFrozen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFrozen As Boolean
  overload: NMF.Models.ModelElement.IsFrozen*
  implements:
  - NMF.Models.IModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  id: IsLocked
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsLocked
    path: src/Models/Models/ModelElement.cs
    startLine: 190
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a value indicating whether the model element is temporarily locked
  example: []
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: NMF.Models.ModelElement.IsLocked*
  implements:
  - NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  id: Unlock
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Unlock
    path: src/Models/Models/ModelElement.cs
    startLine: 196
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Unlocks this model element.
  example: []
  syntax:
    content: public void Unlock()
    content.vb: Public Sub Unlock()
  overload: NMF.Models.ModelElement.Unlock*
  exceptions:
  - type: NMF.Models.LockedException
    commentId: T:NMF.Models.LockedException
    description: thrown if the model element could not be unlocked
  implements:
  - NMF.Models.IModelElement.Unlock
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  id: TryUnlock
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: TryUnlock
    path: src/Models/Models/ModelElement.cs
    startLine: 205
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Tries to unlock the current model element in order to make changes possible
  example: []
  syntax:
    content: public bool TryUnlock()
    return:
      type: System.Boolean
      description: True, if unlocking the model element succeeds, otherwise False
    content.vb: Public Function TryUnlock() As Boolean
  overload: NMF.Models.ModelElement.TryUnlock*
  implements:
  - NMF.Models.IModelElement.TryUnlock
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  id: GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetContainerReference(IModelElement, out int)
  nameWithType: ModelElement.GetContainerReference(IModelElement, out int)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, out int)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetContainerReference
    path: src/Models/Models/ModelElement.cs
    startLine: 356
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the container reference for the given child element
  example: []
  syntax:
    content: public virtual IReference GetContainerReference(IModelElement child, out int index)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
      description: The child element
    - id: index
      type: System.Int32
      description: The index of the child in the returned reference
    return:
      type: NMF.Models.Meta.IReference
      description: A composition reference or null, if the child is not contained in the model element
    content.vb: Public Overridable Function GetContainerReference(child As IModelElement, index As Integer) As IReference
  overload: NMF.Models.ModelElement.GetContainerReference*
  implements:
  - NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  nameWithType.vb: ModelElement.GetContainerReference(IModelElement, Integer)
  fullName.vb: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, Integer)
  name.vb: GetContainerReference(IModelElement, Integer)
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  id: PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: PropagateNewModel
    path: src/Models/Models/ModelElement.cs
    startLine: 375
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Propagates through the composition hierarchy that an entire subtree has been added to a new model
  example: []
  syntax:
    content: protected virtual void PropagateNewModel(Model newModel, Model oldModel, IModelElement subtreeRoot)
    parameters:
    - id: newModel
      type: NMF.Models.Model
      description: The new model that will host the subtree
    - id: oldModel
      type: NMF.Models.Model
      description: The old model of the subtree
    - id: subtreeRoot
      type: NMF.Models.IModelElement
      description: The root element of the inserted subtree
    content.vb: Protected Overridable Sub PropagateNewModel(newModel As Model, oldModel As Model, subtreeRoot As IModelElement)
  overload: NMF.Models.ModelElement.PropagateNewModel*
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  id: OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnChildCreated
    path: src/Models/Models/ModelElement.cs
    startLine: 388
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when a new model element is added as a child of the current model element
  remarks: This method is not called if an existing model element is moved in the composition hierarchy
  example: []
  syntax:
    content: protected virtual void OnChildCreated(IModelElement child)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
      description: The child element
    content.vb: Protected Overridable Sub OnChildCreated(child As IModelElement)
  overload: NMF.Models.ModelElement.OnChildCreated*
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnParentChanging
    path: src/Models/Models/ModelElement.cs
    startLine: 399
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when the parent element of the current element changes
  example: []
  syntax:
    content: protected virtual void OnParentChanging(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent element
    content.vb: Protected Overridable Sub OnParentChanging(newParent As IModelElement, oldParent As IModelElement)
  overload: NMF.Models.ModelElement.OnParentChanging*
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  id: OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnParentChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 406
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when the parent element of the current element changes
  example: []
  syntax:
    content: protected virtual void OnParentChanged(IModelElement newParent, IModelElement oldParent)
    parameters:
    - id: newParent
      type: NMF.Models.IModelElement
      description: The new parent element
    - id: oldParent
      type: NMF.Models.IModelElement
      description: The old parent element
    content.vb: Protected Overridable Sub OnParentChanged(newParent As IModelElement, oldParent As IModelElement)
  overload: NMF.Models.ModelElement.OnParentChanged*
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  id: Parent
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Parent
    path: src/Models/Models/ModelElement.cs
    startLine: 414
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets or sets the parent element for the current model element
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public IModelElement Parent { get; set; }
    parameters: []
    return:
      type: NMF.Models.IModelElement
    content.vb: >-
      <Browsable(False)>

      Public Property Parent As IModelElement
  overload: NMF.Models.ModelElement.Parent*
  implements:
  - NMF.Models.IModelElement.Parent
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  id: Children
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Children
    path: src/Models/Models/ModelElement.cs
    startLine: 439
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a collection with the children of the current model element
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public virtual IEnumerableExpression<IModelElement> Children { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: >-
      <Browsable(False)>

      Public Overridable ReadOnly Property Children As IEnumerableExpression(Of IModelElement)
  overload: NMF.Models.ModelElement.Children*
  implements:
  - NMF.Models.IModelElement.Children
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  id: RelativeUri
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: RelativeUri
    path: src/Models/Models/ModelElement.cs
    startLine: 454
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the relative Uri for the current model element
  example: []
  syntax:
    content: public Uri RelativeUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property RelativeUri As Uri
  overload: NMF.Models.ModelElement.RelativeUri*
  implements:
  - NMF.Models.IModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  id: AbsoluteUri
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: AbsoluteUri
    path: src/Models/Models/ModelElement.cs
    startLine: 467
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the abolute Uri for the current model element
  example: []
  syntax:
    content: public Uri AbsoluteUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property AbsoluteUri As Uri
  overload: NMF.Models.ModelElement.AbsoluteUri*
  implements:
  - NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  id: CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: CreateUriWithFragment(string, bool, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(string, bool, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(string, bool, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CreateUriWithFragment
    path: src/Models/Models/ModelElement.cs
    startLine: 485
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Creates the uri with the given fragment starting from the current model element
  example: []
  syntax:
    content: protected virtual Uri CreateUriWithFragment(string fragment, bool absolute, IModelElement baseElement = null)
    parameters:
    - id: fragment
      type: System.String
      description: The fragment starting from this element
    - id: absolute
      type: System.Boolean
      description: True, if an absolute Uri is desired, otherwise false
    - id: baseElement
      type: NMF.Models.IModelElement
      description: The element from which the uri shall be created or null
    return:
      type: System.Uri
      description: A uri (relative or absolute)
    content.vb: Protected Overridable Function CreateUriWithFragment(fragment As String, absolute As Boolean, baseElement As IModelElement = Nothing) As Uri
  overload: NMF.Models.ModelElement.CreateUriWithFragment*
  nameWithType.vb: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName.vb: NMF.Models.ModelElement.CreateUriWithFragment(String, Boolean, NMF.Models.IModelElement)
  name.vb: CreateUriWithFragment(String, Boolean, IModelElement)
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  id: CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: CreateUriFromGlobalIdentifier(string, bool)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(string, bool)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(string, bool)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CreateUriFromGlobalIdentifier
    path: src/Models/Models/ModelElement.cs
    startLine: 529
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Creates a uri with the given fragment
  example: []
  syntax:
    content: protected Uri CreateUriFromGlobalIdentifier(string fragment, bool absolute)
    parameters:
    - id: fragment
      type: System.String
      description: The fragment
    - id: absolute
      type: System.Boolean
      description: True when the Uri should be absolute, otherwise False
    return:
      type: System.Uri
      description: A uri with the given fragment
    content.vb: Protected Function CreateUriFromGlobalIdentifier(fragment As String, absolute As Boolean) As Uri
  overload: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier*
  nameWithType.vb: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName.vb: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  name.vb: CreateUriFromGlobalIdentifier(String, Boolean)
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  id: PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: PropagateNewId
    path: src/Models/Models/ModelElement.cs
    startLine: 573
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Informs the model that the current model element has a new id
  example: []
  syntax:
    content: protected void PropagateNewId(ValueChangedEventArgs e)
    parameters:
    - id: e
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data for the value change of the identifier
    content.vb: Protected Sub PropagateNewId(e As ValueChangedEventArgs)
  overload: NMF.Models.ModelElement.PropagateNewId*
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  id: EnforceModels
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: EnforceModels
    path: src/Models/Models/ModelElement.cs
    startLine: 584
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets or sets a value indicating whether a correct model containment should be enforced
  example: []
  syntax:
    content: public static bool EnforceModels { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property EnforceModels As Boolean
  overload: NMF.Models.ModelElement.EnforceModels*
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  id: PreferIdentifiers
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: PreferIdentifiers
    path: src/Models/Models/ModelElement.cs
    startLine: 589
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets or sets whether identifiers should be preferred in the serialization
  example: []
  syntax:
    content: public static bool PreferIdentifiers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property PreferIdentifiers As Boolean
  overload: NMF.Models.ModelElement.PreferIdentifiers*
- uid: NMF.Models.ModelElement.IsIdentified
  commentId: P:NMF.Models.ModelElement.IsIdentified
  id: IsIdentified
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsIdentified
    path: src/Models/Models/ModelElement.cs
    startLine: 594
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a value indicating whether this item can be identified through its ToString value
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public virtual bool IsIdentified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Browsable(False)>

      Public Overridable ReadOnly Property IsIdentified As Boolean
  overload: NMF.Models.ModelElement.IsIdentified*
  implements:
  - NMF.Models.IModelElement.IsIdentified
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: NMF.Models.ModelElement.ToIdentifierString
  commentId: M:NMF.Models.ModelElement.ToIdentifierString
  id: ToIdentifierString
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: ToIdentifierString()
  nameWithType: ModelElement.ToIdentifierString()
  fullName: NMF.Models.ModelElement.ToIdentifierString()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ToIdentifierString
    path: src/Models/Models/ModelElement.cs
    startLine: 607
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the identifier for this model element
  example: []
  syntax:
    content: public virtual string ToIdentifierString()
    return:
      type: System.String
    content.vb: Public Overridable Function ToIdentifierString() As String
  overload: NMF.Models.ModelElement.ToIdentifierString*
  implements:
  - NMF.Models.IModelElement.ToIdentifierString
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  id: ToString
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ToString
    path: src/Models/Models/ModelElement.cs
    startLine: 617
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a string representation of the current model element
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the current model element
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: NMF.Models.ModelElement.ToString*
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  id: KeyChanged
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: KeyChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 633
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired when the identifier of the current model element changes
  example: []
  syntax:
    content: public event EventHandler KeyChanged
    return:
      type: System.EventHandler
    content.vb: Public Event KeyChanged As EventHandler
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  id: OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnKeyChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 640
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Fires the <xref href="NMF.Models.ModelElement.KeyChanged" data-throw-if-not-resolved="false"></xref> event
  example: []
  syntax:
    content: protected virtual void OnKeyChanged(EventArgs e)
    parameters:
    - id: e
      type: System.EventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnKeyChanged(e As EventArgs)
  overload: NMF.Models.ModelElement.OnKeyChanged*
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  id: Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Resolve
    path: src/Models/Models/ModelElement.cs
    startLine: 651
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Resolves the given relative Uri from the current model element
  example: []
  syntax:
    content: public IModelElement Resolve(Uri relativeUri)
    parameters:
    - id: relativeUri
      type: System.Uri
      description: A relative uri describing the path to the desired child element
    return:
      type: NMF.Models.IModelElement
      description: The corresponding child element or null, if no such was found
    content.vb: Public Function Resolve(relativeUri As Uri) As IModelElement
  overload: NMF.Models.ModelElement.Resolve*
  implements:
  - NMF.Models.IModelElement.Resolve(System.Uri)
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  id: Resolve(System.String)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Resolve(string)
  nameWithType: ModelElement.Resolve(string)
  fullName: NMF.Models.ModelElement.Resolve(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Resolve
    path: src/Models/Models/ModelElement.cs
    startLine: 664
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Resolves the given path starting from the current element
  example: []
  syntax:
    content: public virtual IModelElement Resolve(string path)
    parameters:
    - id: path
      type: System.String
      description: The path
    return:
      type: NMF.Models.IModelElement
      description: The element corresponding to the given path or null, if no such element could be found
    content.vb: Public Overridable Function Resolve(path As String) As IModelElement
  overload: NMF.Models.ModelElement.Resolve*
  nameWithType.vb: ModelElement.Resolve(String)
  fullName.vb: NMF.Models.ModelElement.Resolve(String)
  name.vb: Resolve(String)
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  id: GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetRelativePathForChild
    path: src/Models/Models/ModelElement.cs
    startLine: 688
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the relative Uri for the given child element
  example: []
  syntax:
    content: protected virtual string GetRelativePathForChild(IModelElement child)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
      description: The child element
    return:
      type: System.String
      description: A relative Uri to resolve the child element
    content.vb: Protected Overridable Function GetRelativePathForChild(child As IModelElement) As String
  overload: NMF.Models.ModelElement.GetRelativePathForChild*
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  id: GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetRelativePathForNonIdentifiedChild
    path: src/Models/Models/ModelElement.cs
    startLine: 729
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the relative Uri for the given child element that is not identified
  example: []
  syntax:
    content: protected virtual string GetRelativePathForNonIdentifiedChild(IModelElement child)
    parameters:
    - id: child
      type: NMF.Models.IModelElement
      description: The child element
    return:
      type: System.String
      description: A relative Uri to resolve the child element
    content.vb: Protected Overridable Function GetRelativePathForNonIdentifiedChild(child As IModelElement) As String
  overload: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild*
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  id: GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetCompositionName(object)
  nameWithType: ModelElement.GetCompositionName(object)
  fullName: NMF.Models.ModelElement.GetCompositionName(object)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetCompositionName
    path: src/Models/Models/ModelElement.cs
    startLine: 743
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the property name for the given container
  example: []
  syntax:
    content: protected virtual string GetCompositionName(object container)
    parameters:
    - id: container
      type: System.Object
      description: The container object
    return:
      type: System.String
      description: The name of the respective container reference
    content.vb: Protected Overridable Function GetCompositionName(container As Object) As String
  overload: NMF.Models.ModelElement.GetCompositionName*
  nameWithType.vb: ModelElement.GetCompositionName(Object)
  fullName.vb: NMF.Models.ModelElement.GetCompositionName(Object)
  name.vb: GetCompositionName(Object)
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  id: GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetModelElementForPathSegment(string)
  nameWithType: ModelElement.GetModelElementForPathSegment(string)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetModelElementForPathSegment
    path: src/Models/Models/ModelElement.cs
    startLine: 754
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the model element for the given relative Uri
  example: []
  syntax:
    content: protected IModelElement GetModelElementForPathSegment(string segment)
    parameters:
    - id: segment
      type: System.String
      description: The relative Uri
    return:
      type: NMF.Models.IModelElement
      description: The model element that corresponds to the given Uri
    content.vb: Protected Function GetModelElementForPathSegment(segment As String) As IModelElement
  overload: NMF.Models.ModelElement.GetModelElementForPathSegment*
  nameWithType.vb: ModelElement.GetModelElementForPathSegment(String)
  fullName.vb: NMF.Models.ModelElement.GetModelElementForPathSegment(String)
  name.vb: GetModelElementForPathSegment(String)
- uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  id: GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetModelElementForReference(string, int)
  nameWithType: ModelElement.GetModelElementForReference(string, int)
  fullName: NMF.Models.ModelElement.GetModelElementForReference(string, int)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetModelElementForReference
    path: src/Models/Models/ModelElement.cs
    startLine: 819
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the Model element for the given reference and index
  example: []
  syntax:
    content: protected virtual IModelElement GetModelElementForReference(string reference, int index)
    parameters:
    - id: reference
      type: System.String
      description: The reference name in upper case
    - id: index
      type: System.Int32
      description: The index of the element within the reference
    return:
      type: NMF.Models.IModelElement
      description: The model element at the given reference
    content.vb: Protected Overridable Function GetModelElementForReference(reference As String, index As Integer) As IModelElement
  overload: NMF.Models.ModelElement.GetModelElementForReference*
  nameWithType.vb: ModelElement.GetModelElementForReference(String, Integer)
  fullName.vb: NMF.Models.ModelElement.GetModelElementForReference(String, Integer)
  name.vb: GetModelElementForReference(String, Integer)
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  id: GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetCollectionForFeature(string)
  nameWithType: ModelElement.GetCollectionForFeature(string)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetCollectionForFeature
    path: src/Models/Models/ModelElement.cs
    startLine: 829
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the Model element collection for the given feature
  example: []
  syntax:
    content: protected virtual IList GetCollectionForFeature(string feature)
    parameters:
    - id: feature
      type: System.String
      description: The features name in upper case
    return:
      type: System.Collections.IList
      description: A non-generic list of elements
    content.vb: Protected Overridable Function GetCollectionForFeature(feature As String) As IList
  overload: NMF.Models.ModelElement.GetCollectionForFeature*
  nameWithType.vb: ModelElement.GetCollectionForFeature(String)
  fullName.vb: NMF.Models.ModelElement.GetCollectionForFeature(String)
  name.vb: GetCollectionForFeature(String)
- uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetAttributeValue(string, int)
  nameWithType: ModelElement.GetAttributeValue(string, int)
  fullName: NMF.Models.ModelElement.GetAttributeValue(string, int)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetAttributeValue
    path: src/Models/Models/ModelElement.cs
    startLine: 840
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the attribute value for the given attribute
  example: []
  syntax:
    content: protected virtual object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The attributes name in upper case
    - id: index
      type: System.Int32
      description: The attributes index
    return:
      type: System.Object
      description: The attribute value
    content.vb: Protected Overridable Function GetAttributeValue(attribute As String, index As Integer) As Object
  overload: NMF.Models.ModelElement.GetAttributeValue*
  nameWithType.vb: ModelElement.GetAttributeValue(String, Integer)
  fullName.vb: NMF.Models.ModelElement.GetAttributeValue(String, Integer)
  name.vb: GetAttributeValue(String, Integer)
- uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: SetFeature(string, object)
  nameWithType: ModelElement.SetFeature(string, object)
  fullName: NMF.Models.ModelElement.SetFeature(string, object)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetFeature
    path: src/Models/Models/ModelElement.cs
    startLine: 858
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Sets the given feature to the given value
  example: []
  syntax:
    content: protected virtual void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The name of the feature that should be set
    - id: value
      type: System.Object
      description: The value that should be set
    content.vb: Protected Overridable Sub SetFeature(feature As String, value As Object)
  overload: NMF.Models.ModelElement.SetFeature*
  nameWithType.vb: ModelElement.SetFeature(String, Object)
  fullName.vb: NMF.Models.ModelElement.SetFeature(String, Object)
  name.vb: SetFeature(String, Object)
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  id: CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: CallOperation(IOperation, object[])
  nameWithType: ModelElement.CallOperation(IOperation, object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, object[])
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CallOperation
    path: src/Models/Models/ModelElement.cs
    startLine: 869
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Calls the given operation
  example: []
  syntax:
    content: public virtual object CallOperation(IOperation operation, object[] arguments)
    parameters:
    - id: operation
      type: NMF.Models.Meta.IOperation
      description: The operation that should be called
    - id: arguments
      type: System.Object[]
      description: The arguments used to call the operation
    return:
      type: System.Object
      description: The operation result or null, if the operation does not return any value
    content.vb: Public Overridable Function CallOperation(operation As IOperation, arguments As Object()) As Object
  overload: NMF.Models.ModelElement.CallOperation*
  implements:
  - NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, Object())
  name.vb: CallOperation(IOperation, Object())
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  id: GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetExpressionForReference(string)
  nameWithType: ModelElement.GetExpressionForReference(string)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetExpressionForReference
    path: src/Models/Models/ModelElement.cs
    startLine: 879
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a property expression for the given reference
  example: []
  syntax:
    content: protected virtual INotifyExpression<IModelElement> GetExpressionForReference(string reference)
    parameters:
    - id: reference
      type: System.String
      description: The name of the requested reference in upper case
    return:
      type: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
      description: A property expression
    content.vb: Protected Overridable Function GetExpressionForReference(reference As String) As INotifyExpression(Of IModelElement)
  overload: NMF.Models.ModelElement.GetExpressionForReference*
  nameWithType.vb: ModelElement.GetExpressionForReference(String)
  fullName.vb: NMF.Models.ModelElement.GetExpressionForReference(String)
  name.vb: GetExpressionForReference(String)
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  id: GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetExpressionForAttribute(string)
  nameWithType: ModelElement.GetExpressionForAttribute(string)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(string)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetExpressionForAttribute
    path: src/Models/Models/ModelElement.cs
    startLine: 889
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a property expression for the given attribute
  example: []
  syntax:
    content: protected virtual INotifyExpression<object> GetExpressionForAttribute(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute in upper case
    return:
      type: NMF.Expressions.INotifyExpression{System.Object}
      description: A property expression
    content.vb: Protected Overridable Function GetExpressionForAttribute(attribute As String) As INotifyExpression(Of Object)
  overload: NMF.Models.ModelElement.GetExpressionForAttribute*
  nameWithType.vb: ModelElement.GetExpressionForAttribute(String)
  fullName.vb: NMF.Models.ModelElement.GetExpressionForAttribute(String)
  name.vb: GetExpressionForAttribute(String)
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  id: Extensions
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Extensions
    path: src/Models/Models/ModelElement.cs
    startLine: 898
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a collection of model element extensions that have been applied to this model element
  example: []
  syntax:
    content: public ICollectionExpression<ModelElementExtension> Extensions { get; }
    parameters: []
    return:
      type: NMF.Expressions.ICollectionExpression{NMF.Models.ModelElementExtension}
    content.vb: Public ReadOnly Property Extensions As ICollectionExpression(Of ModelElementExtension)
  overload: NMF.Models.ModelElement.Extensions*
  implements:
  - NMF.Models.IModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  id: GetExtension``1
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetExtension
    path: src/Models/Models/ModelElement.cs
    startLine: 914
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the extension with the given extension type
  example: []
  syntax:
    content: 'public T GetExtension<T>() where T : ModelElementExtension'
    typeParameters:
    - id: T
      description: The model element extension type
    return:
      type: '{T}'
      description: The extension of the given extension type or null, if no such exists
    content.vb: Public Function GetExtension(Of T As ModelElementExtension)() As T
  overload: NMF.Models.ModelElement.GetExtension*
  implements:
  - NMF.Models.IModelElement.GetExtension``1
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
- uid: NMF.Models.ModelElement.ReferencedElements
  commentId: P:NMF.Models.ModelElement.ReferencedElements
  id: ReferencedElements
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ReferencedElements
    path: src/Models/Models/ModelElement.cs
    startLine: 923
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets a collection of model elements referenced from this element.
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public virtual IEnumerableExpression<IModelElement> ReferencedElements { get; }
    parameters: []
    return:
      type: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
    content.vb: >-
      <Browsable(False)>

      Public Overridable ReadOnly Property ReferencedElements As IEnumerableExpression(Of IModelElement)
  overload: NMF.Models.ModelElement.ReferencedElements*
  implements:
  - NMF.Models.IModelElement.ReferencedElements
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  id: OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(string, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnPropertyChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 934
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when the PropertyChanged event is fired
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName, ValueChangedEventArgs valueChangedEvent, Lazy<ITypedElement> feature = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the changed property
    - id: valueChangedEvent
      type: NMF.Expressions.ValueChangedEventArgs
      description: The original event data
    - id: feature
      type: System.Lazy{NMF.Models.Meta.ITypedElement}
      description: The feature
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String, valueChangedEvent As ValueChangedEventArgs, feature As Lazy(Of ITypedElement) = Nothing)
  overload: NMF.Models.ModelElement.OnPropertyChanged*
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  id: OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnPropertyChanging(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(string, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnPropertyChanging
    path: src/Models/Models/ModelElement.cs
    startLine: 948
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when the PropertyChanging event is fired
  example: []
  syntax:
    content: protected virtual void OnPropertyChanging(string propertyName, ValueChangedEventArgs e = null, Lazy<ITypedElement> feature = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the changed property
    - id: e
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    - id: feature
      type: System.Lazy{NMF.Models.Meta.ITypedElement}
      description: The feature
    content.vb: Protected Overridable Sub OnPropertyChanging(propertyName As String, e As ValueChangedEventArgs = Nothing, feature As Lazy(Of ITypedElement) = Nothing)
  overload: NMF.Models.ModelElement.OnPropertyChanging*
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  id: Delete
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Delete
    path: src/Models/Models/ModelElement.cs
    startLine: 960
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Deletes the current model element
  example: []
  syntax:
    content: public virtual void Delete()
    content.vb: Public Overridable Sub Delete()
  overload: NMF.Models.ModelElement.Delete*
  implements:
  - NMF.Models.IModelElement.Delete
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  id: OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnDeleting
    path: src/Models/Models/ModelElement.cs
    startLine: 988
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called before the model element gets deleted
  example: []
  syntax:
    content: protected virtual void OnDeleting(UriChangedEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.UriChangedEventArgs
      description: ''
    content.vb: Protected Overridable Sub OnDeleting(e As UriChangedEventArgs)
  overload: NMF.Models.ModelElement.OnDeleting*
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  id: OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnDeleted
    path: src/Models/Models/ModelElement.cs
    startLine: 997
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets called when the model element gets deleted
  example: []
  syntax:
    content: protected virtual void OnDeleted(UriChangedEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.UriChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnDeleted(e As UriChangedEventArgs)
  overload: NMF.Models.ModelElement.OnDeleted*
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  id: PropertyChanged
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: PropertyChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 1023
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired when a property value changes
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  id: PropertyChanging
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: PropertyChanging
    path: src/Models/Models/ModelElement.cs
    startLine: 1029
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired before a property value changes
  example: []
  syntax:
    content: public event PropertyChangingEventHandler PropertyChanging
    return:
      type: System.ComponentModel.PropertyChangingEventHandler
    content.vb: Public Event PropertyChanging As PropertyChangingEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  id: Deleted
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Deleted
    path: src/Models/Models/ModelElement.cs
    startLine: 1035
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired after the model element has been deleted
  example: []
  syntax:
    content: public event EventHandler<UriChangedEventArgs> Deleted
    return:
      type: System.EventHandler{NMF.Models.UriChangedEventArgs}
    content.vb: Public Event Deleted As EventHandler(Of UriChangedEventArgs)
  implements:
  - NMF.Models.IModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  id: Deleting
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Deleting
    path: src/Models/Models/ModelElement.cs
    startLine: 1041
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired before the model element gets deleted
  example: []
  syntax:
    content: public event EventHandler<UriChangedEventArgs> Deleting
    return:
      type: System.EventHandler{NMF.Models.UriChangedEventArgs}
    content.vb: Public Event Deleting As EventHandler(Of UriChangedEventArgs)
  implements:
  - NMF.Models.IModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  id: UriChanged
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: UriChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 1047
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired when the Uri of this element changes
  example: []
  syntax:
    content: public event EventHandler<UriChangedEventArgs> UriChanged
    return:
      type: System.EventHandler{NMF.Models.UriChangedEventArgs}
    content.vb: Public Event UriChanged As EventHandler(Of UriChangedEventArgs)
- uid: NMF.Models.ModelElement.GetClass
  commentId: M:NMF.Models.ModelElement.GetClass
  id: GetClass
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: ModelElement.GetClass()
  fullName: NMF.Models.ModelElement.GetClass()
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetClass
    path: src/Models/Models/ModelElement.cs
    startLine: 1062
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the class of the current model element
  example: []
  syntax:
    content: public abstract IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
      description: The class of the current model element
    content.vb: Public MustOverride Function GetClass() As IClass
  overload: NMF.Models.ModelElement.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
- uid: NMF.Models.ModelElement.ClassInstance
  commentId: P:NMF.Models.ModelElement.ClassInstance
  id: ClassInstance
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: ModelElement.ClassInstance
  fullName: NMF.Models.ModelElement.ClassInstance
  type: Property
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ClassInstance
    path: src/Models/Models/ModelElement.cs
    startLine: 1068
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the NMeta class object for this type
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.ModelElement.ClassInstance*
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  id: GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetReferencedElement(IReference, int)
  nameWithType: ModelElement.GetReferencedElement(IReference, int)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, int)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetReferencedElement
    path: src/Models/Models/ModelElement.cs
    startLine: 1076
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the referenced element of the current model element for the given reference
  example: []
  syntax:
    content: >-
      [ObservableProxy(typeof(ModelElement.ModelElementProxy), "GetReferencedElement", false)]

      public IModelElement GetReferencedElement(IReference reference, int index = 0)
    parameters:
    - id: reference
      type: NMF.Models.Meta.IReference
      description: The reference
    - id: index
      type: System.Int32
      description: The index of the desired model element, if multi-valued reference
    return:
      type: NMF.Models.IModelElement
      description: The referenced element for the given reference
    content.vb: >-
      <ObservableProxy(GetType(ModelElement.ModelElementProxy), "GetReferencedElement", False)>

      Public Function GetReferencedElement(reference As IReference, index As Integer = 0) As IModelElement
  overload: NMF.Models.ModelElement.GetReferencedElement*
  implements:
  - NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  nameWithType.vb: ModelElement.GetReferencedElement(IReference, Integer)
  fullName.vb: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, Integer)
  name.vb: GetReferencedElement(IReference, Integer)
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  id: SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetReferencedElement
    path: src/Models/Models/ModelElement.cs
    startLine: 1088
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Sets the referenced element of the current model element for the given reference
  example: []
  syntax:
    content: public void SetReferencedElement(IReference reference, IModelElement element)
    parameters:
    - id: reference
      type: NMF.Models.Meta.IReference
      description: The reference
    - id: element
      type: NMF.Models.IModelElement
      description: The element that should be set
    content.vb: Public Sub SetReferencedElement(reference As IReference, element As IModelElement)
  overload: NMF.Models.ModelElement.SetReferencedElement*
  implements:
  - NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  id: GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetReferencedElements
    path: src/Models/Models/ModelElement.cs
    startLine: 1099
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the referenced elements of the current model element for the given reference
  example: []
  syntax:
    content: public IList GetReferencedElements(IReference reference)
    parameters:
    - id: reference
      type: NMF.Models.Meta.IReference
      description: The reference
    return:
      type: System.Collections.IList
      description: A collection of referenced elements
    content.vb: Public Function GetReferencedElements(reference As IReference) As IList
  overload: NMF.Models.ModelElement.GetReferencedElements*
  implements:
  - NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  id: GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetAttributeValue(IAttribute, int)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, int)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, int)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetAttributeValue
    path: src/Models/Models/ModelElement.cs
    startLine: 1110
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the value of the current model element under the given attribute
  example: []
  syntax:
    content: >-
      [ObservableProxy(typeof(ModelElement.ModelElementProxy), "GetAttributeValue", false)]

      public object GetAttributeValue(IAttribute attribute, int index = 0)
    parameters:
    - id: attribute
      type: NMF.Models.Meta.IAttribute
      description: The attribute
    - id: index
      type: System.Int32
      description: The index of the desired value, if multi-valued attribute
    return:
      type: System.Object
      description: The attributes value
    content.vb: >-
      <ObservableProxy(GetType(ModelElement.ModelElementProxy), "GetAttributeValue", False)>

      Public Function GetAttributeValue(attribute As IAttribute, index As Integer = 0) As Object
  overload: NMF.Models.ModelElement.GetAttributeValue*
  implements:
  - NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  nameWithType.vb: ModelElement.GetAttributeValue(IAttribute, Integer)
  fullName.vb: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, Integer)
  name.vb: GetAttributeValue(IAttribute, Integer)
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  id: SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: SetAttributeValue(IAttribute, object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, object)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetAttributeValue
    path: src/Models/Models/ModelElement.cs
    startLine: 1122
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Sets the value of the current model element for the given attribute
  example: []
  syntax:
    content: public void SetAttributeValue(IAttribute attribute, object value)
    parameters:
    - id: attribute
      type: NMF.Models.Meta.IAttribute
      description: The attribute
    - id: value
      type: System.Object
      description: The value that should be set
    content.vb: Public Sub SetAttributeValue(attribute As IAttribute, value As Object)
  overload: NMF.Models.ModelElement.SetAttributeValue*
  implements:
  - NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  nameWithType.vb: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName.vb: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, Object)
  name.vb: SetAttributeValue(IAttribute, Object)
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  id: GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetAttributeValues
    path: src/Models/Models/ModelElement.cs
    startLine: 1133
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets the values for the given attribute
  example: []
  syntax:
    content: public IList GetAttributeValues(IAttribute attribute)
    parameters:
    - id: attribute
      type: NMF.Models.Meta.IAttribute
      description: The attribute whose value is queried
    return:
      type: System.Collections.IList
      description: The attribute value collection
    content.vb: Public Function GetAttributeValues(attribute As IAttribute) As IList
  overload: NMF.Models.ModelElement.GetAttributeValues*
  implements:
  - NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  id: OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnCollectionChanged(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(string, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnCollectionChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 1145
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Raises the Bubbled Change event for the given collection change
  example: []
  syntax:
    content: protected void OnCollectionChanged(string propertyName, NotifyCollectionChangedEventArgs e, Lazy<ITypedElement> feature = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property that has changed
    - id: e
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: The event data
    - id: feature
      type: System.Lazy{NMF.Models.Meta.ITypedElement}
      description: The feature that is changing
    content.vb: Protected Sub OnCollectionChanged(propertyName As String, e As NotifyCollectionChangedEventArgs, feature As Lazy(Of ITypedElement) = Nothing)
  overload: NMF.Models.ModelElement.OnCollectionChanged*
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  id: OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnCollectionChanging(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(string, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnCollectionChanging
    path: src/Models/Models/ModelElement.cs
    startLine: 1157
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Raises the Bubbled Change event for the given upcoming collection change
  example: []
  syntax:
    content: protected void OnCollectionChanging(string propertyName, NotifyCollectionChangedEventArgs e, Lazy<ITypedElement> feature = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property that has changed
    - id: e
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: The event data
    - id: feature
      type: System.Lazy{NMF.Models.Meta.ITypedElement}
      description: The feature that is changing
    content.vb: Protected Sub OnCollectionChanging(propertyName As String, e As NotifyCollectionChangedEventArgs, feature As Lazy(Of ITypedElement) = Nothing)
  overload: NMF.Models.ModelElement.OnCollectionChanging*
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  id: OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  type: Method
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnBubbledChange
    path: src/Models/Models/ModelElement.cs
    startLine: 1168
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Fires the BubbledChange event
  example: []
  syntax:
    content: protected virtual void OnBubbledChange(BubbledChangeEventArgs e)
    parameters:
    - id: e
      type: NMF.Models.BubbledChangeEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnBubbledChange(e As BubbledChangeEventArgs)
  overload: NMF.Models.ModelElement.OnBubbledChange*
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  id: BubbledChange
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: BubbledChange
    path: src/Models/Models/ModelElement.cs
    startLine: 1183
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Is fired when an element in the below containment hierarchy has changed
  example: []
  syntax:
    content: public event EventHandler<BubbledChangeEventArgs> BubbledChange
    return:
      type: System.EventHandler{NMF.Models.BubbledChangeEventArgs}
    content.vb: Public Event BubbledChange As EventHandler(Of BubbledChangeEventArgs)
  implements:
  - NMF.Models.IModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  id: ParentChanged
  parent: NMF.Models.ModelElement
  langs:
  - csharp
  - vb
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
  type: Event
  source:
    remote:
      path: src/Models/Models/ModelElement.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ParentChanged
    path: src/Models/Models/ModelElement.cs
    startLine: 1202
  assemblies:
  - NMF.Models
  namespace: NMF.Models
  summary: Gets fired when the container of the current model element has changed
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> ParentChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event ParentChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.IModelElement.ParentChanged
references:
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  href: NMF.Models.IModelElement.html
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanging
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_AncestorTree_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  href: NMF.Models.ModelExtensions.html
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Ancestors_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
    href: NMF.Models.ModelExtensions.html#NMF_Models_ModelExtensions_Descendants_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.ModelElement.Model*
  commentId: Overload:NMF.Models.ModelElement.Model
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Model
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.IModelElement.Model
  commentId: P:NMF.Models.IModelElement.Model
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Model
  name: Model
  nameWithType: IModelElement.Model
  fullName: NMF.Models.IModelElement.Model
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  parent: NMF.Models
  href: NMF.Models.Model.html
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
- uid: NMF.Models.ModelElement.Freeze*
  commentId: Overload:NMF.Models.ModelElement.Freeze
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Freeze
  name: Freeze
  nameWithType: ModelElement.Freeze
  fullName: NMF.Models.ModelElement.Freeze
- uid: NMF.Models.IModelElement.Freeze
  commentId: M:NMF.Models.IModelElement.Freeze
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Freeze
  name: Freeze()
  nameWithType: IModelElement.Freeze()
  fullName: NMF.Models.IModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Freeze
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Freeze
    name: Freeze
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Freeze
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.Lock*
  commentId: Overload:NMF.Models.ModelElement.Lock
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Lock
  name: Lock
  nameWithType: ModelElement.Lock
  fullName: NMF.Models.ModelElement.Lock
- uid: NMF.Models.IModelElement.Lock
  commentId: M:NMF.Models.IModelElement.Lock
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Lock
  name: Lock()
  nameWithType: IModelElement.Lock()
  fullName: NMF.Models.IModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Lock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Lock
    name: Lock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Lock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.IsFrozen*
  commentId: Overload:NMF.Models.ModelElement.IsFrozen
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_IsFrozen
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.IModelElement.IsFrozen
  commentId: P:NMF.Models.IModelElement.IsFrozen
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_IsFrozen
  name: IsFrozen
  nameWithType: IModelElement.IsFrozen
  fullName: NMF.Models.IModelElement.IsFrozen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Models.ModelElement.IsLocked*
  commentId: Overload:NMF.Models.ModelElement.IsLocked
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_IsLocked
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.IModelElement.IsLocked
  commentId: P:NMF.Models.IModelElement.IsLocked
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_IsLocked
  name: IsLocked
  nameWithType: IModelElement.IsLocked
  fullName: NMF.Models.IModelElement.IsLocked
- uid: NMF.Models.LockedException
  commentId: T:NMF.Models.LockedException
  href: NMF.Models.LockedException.html
  name: LockedException
  nameWithType: LockedException
  fullName: NMF.Models.LockedException
- uid: NMF.Models.ModelElement.Unlock*
  commentId: Overload:NMF.Models.ModelElement.Unlock
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Unlock
  name: Unlock
  nameWithType: ModelElement.Unlock
  fullName: NMF.Models.ModelElement.Unlock
- uid: NMF.Models.IModelElement.Unlock
  commentId: M:NMF.Models.IModelElement.Unlock
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Unlock
  name: Unlock()
  nameWithType: IModelElement.Unlock()
  fullName: NMF.Models.IModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Unlock
    name: Unlock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Unlock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.TryUnlock*
  commentId: Overload:NMF.Models.ModelElement.TryUnlock
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_TryUnlock
  name: TryUnlock
  nameWithType: ModelElement.TryUnlock
  fullName: NMF.Models.ModelElement.TryUnlock
- uid: NMF.Models.IModelElement.TryUnlock
  commentId: M:NMF.Models.IModelElement.TryUnlock
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_TryUnlock
  name: TryUnlock()
  nameWithType: IModelElement.TryUnlock()
  fullName: NMF.Models.IModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_TryUnlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.TryUnlock
    name: TryUnlock
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_TryUnlock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.GetContainerReference*
  commentId: Overload:NMF.Models.ModelElement.GetContainerReference
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetContainerReference_NMF_Models_IModelElement_System_Int32__
  name: GetContainerReference
  nameWithType: ModelElement.GetContainerReference
  fullName: NMF.Models.ModelElement.GetContainerReference
- uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetContainerReference_NMF_Models_IModelElement_System_Int32__
  name: GetContainerReference(IModelElement, out int)
  nameWithType: IModelElement.GetContainerReference(IModelElement, out int)
  fullName: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, out int)
  nameWithType.vb: IModelElement.GetContainerReference(IModelElement, Integer)
  fullName.vb: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement, Integer)
  name.vb: GetContainerReference(IModelElement, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetContainerReference_NMF_Models_IModelElement_System_Int32__
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetContainerReference_NMF_Models_IModelElement_System_Int32__
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Models.Meta.IReference
  commentId: T:NMF.Models.Meta.IReference
  parent: NMF.Models.Meta
  href: NMF.Models.Meta.IReference.html
  name: IReference
  nameWithType: IReference
  fullName: NMF.Models.Meta.IReference
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  href: NMF.html
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
    href: NMF.Models.Meta.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
    href: NMF.Models.Meta.html
- uid: NMF.Models.ModelElement.PropagateNewModel*
  commentId: Overload:NMF.Models.ModelElement.PropagateNewModel
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_PropagateNewModel_NMF_Models_Model_NMF_Models_Model_NMF_Models_IModelElement_
  name: PropagateNewModel
  nameWithType: ModelElement.PropagateNewModel
  fullName: NMF.Models.ModelElement.PropagateNewModel
- uid: NMF.Models.ModelElement.OnChildCreated*
  commentId: Overload:NMF.Models.ModelElement.OnChildCreated
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnChildCreated_NMF_Models_IModelElement_
  name: OnChildCreated
  nameWithType: ModelElement.OnChildCreated
  fullName: NMF.Models.ModelElement.OnChildCreated
- uid: NMF.Models.ModelElement.OnParentChanging*
  commentId: Overload:NMF.Models.ModelElement.OnParentChanging
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnParentChanging_NMF_Models_IModelElement_NMF_Models_IModelElement_
  name: OnParentChanging
  nameWithType: ModelElement.OnParentChanging
  fullName: NMF.Models.ModelElement.OnParentChanging
- uid: NMF.Models.ModelElement.OnParentChanged*
  commentId: Overload:NMF.Models.ModelElement.OnParentChanged
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnParentChanged_NMF_Models_IModelElement_NMF_Models_IModelElement_
  name: OnParentChanged
  nameWithType: ModelElement.OnParentChanged
  fullName: NMF.Models.ModelElement.OnParentChanged
- uid: NMF.Models.ModelElement.Parent*
  commentId: Overload:NMF.Models.ModelElement.Parent
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Parent
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.IModelElement.Parent
  commentId: P:NMF.Models.IModelElement.Parent
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Parent
  name: Parent
  nameWithType: IModelElement.Parent
  fullName: NMF.Models.IModelElement.Parent
- uid: NMF.Models.ModelElement.Children*
  commentId: Overload:NMF.Models.ModelElement.Children
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Children
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.IModelElement.Children
  commentId: P:NMF.Models.IModelElement.Children
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Children
  name: Children
  nameWithType: IModelElement.Children
  fullName: NMF.Models.IModelElement.Children
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  href: NMF.Models.IModelElement.html
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Models.ModelElement.RelativeUri*
  commentId: Overload:NMF.Models.ModelElement.RelativeUri
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_RelativeUri
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.IModelElement.RelativeUri
  commentId: P:NMF.Models.IModelElement.RelativeUri
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_RelativeUri
  name: RelativeUri
  nameWithType: IModelElement.RelativeUri
  fullName: NMF.Models.IModelElement.RelativeUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.ModelElement.AbsoluteUri*
  commentId: Overload:NMF.Models.ModelElement.AbsoluteUri
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_AbsoluteUri
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.IModelElement.AbsoluteUri
  commentId: P:NMF.Models.IModelElement.AbsoluteUri
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_AbsoluteUri
  name: AbsoluteUri
  nameWithType: IModelElement.AbsoluteUri
  fullName: NMF.Models.IModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment*
  commentId: Overload:NMF.Models.ModelElement.CreateUriWithFragment
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_CreateUriWithFragment_System_String_System_Boolean_NMF_Models_IModelElement_
  name: CreateUriWithFragment
  nameWithType: ModelElement.CreateUriWithFragment
  fullName: NMF.Models.ModelElement.CreateUriWithFragment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier*
  commentId: Overload:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_CreateUriFromGlobalIdentifier_System_String_System_Boolean_
  name: CreateUriFromGlobalIdentifier
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier
- uid: NMF.Models.ModelElement.PropagateNewId*
  commentId: Overload:NMF.Models.ModelElement.PropagateNewId
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_PropagateNewId_NMF_Expressions_ValueChangedEventArgs_
  name: PropagateNewId
  nameWithType: ModelElement.PropagateNewId
  fullName: NMF.Models.ModelElement.PropagateNewId
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Models.ModelElement.EnforceModels*
  commentId: Overload:NMF.Models.ModelElement.EnforceModels
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_EnforceModels
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers*
  commentId: Overload:NMF.Models.ModelElement.PreferIdentifiers
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_PreferIdentifiers
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.IsIdentified*
  commentId: Overload:NMF.Models.ModelElement.IsIdentified
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_IsIdentified
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_IsIdentified
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.ModelElement.ToIdentifierString*
  commentId: Overload:NMF.Models.ModelElement.ToIdentifierString
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_ToIdentifierString
  name: ToIdentifierString
  nameWithType: ModelElement.ToIdentifierString
  fullName: NMF.Models.ModelElement.ToIdentifierString
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_ToIdentifierString
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_ToIdentifierString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_ToIdentifierString
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.ToString*
  commentId: Overload:NMF.Models.ModelElement.ToString
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_ToString
  name: ToString
  nameWithType: ModelElement.ToString
  fullName: NMF.Models.ModelElement.ToString
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_KeyChanged
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged*
  commentId: Overload:NMF.Models.ModelElement.OnKeyChanged
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnKeyChanged_System_EventArgs_
  name: OnKeyChanged
  nameWithType: ModelElement.OnKeyChanged
  fullName: NMF.Models.ModelElement.OnKeyChanged
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  href: NMF.Models.ModelElement.html
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.ModelElement.Resolve*
  commentId: Overload:NMF.Models.ModelElement.Resolve
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Resolve_System_Uri_
  name: Resolve
  nameWithType: ModelElement.Resolve
  fullName: NMF.Models.ModelElement.Resolve
- uid: NMF.Models.IModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.IModelElement.Resolve(System.Uri)
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Resolve_System_Uri_
  name: Resolve(Uri)
  nameWithType: IModelElement.Resolve(Uri)
  fullName: NMF.Models.IModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Resolve_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Resolve(System.Uri)
    name: Resolve
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Resolve_System_Uri_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild*
  commentId: Overload:NMF.Models.ModelElement.GetRelativePathForChild
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetRelativePathForChild_NMF_Models_IModelElement_
  name: GetRelativePathForChild
  nameWithType: ModelElement.GetRelativePathForChild
  fullName: NMF.Models.ModelElement.GetRelativePathForChild
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild*
  commentId: Overload:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetRelativePathForNonIdentifiedChild_NMF_Models_IModelElement_
  name: GetRelativePathForNonIdentifiedChild
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild
- uid: NMF.Models.ModelElement.GetCompositionName*
  commentId: Overload:NMF.Models.ModelElement.GetCompositionName
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetCompositionName_System_Object_
  name: GetCompositionName
  nameWithType: ModelElement.GetCompositionName
  fullName: NMF.Models.ModelElement.GetCompositionName
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment*
  commentId: Overload:NMF.Models.ModelElement.GetModelElementForPathSegment
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetModelElementForPathSegment_System_String_
  name: GetModelElementForPathSegment
  nameWithType: ModelElement.GetModelElementForPathSegment
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment
- uid: NMF.Models.ModelElement.GetModelElementForReference*
  commentId: Overload:NMF.Models.ModelElement.GetModelElementForReference
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetModelElementForReference_System_String_System_Int32_
  name: GetModelElementForReference
  nameWithType: ModelElement.GetModelElementForReference
  fullName: NMF.Models.ModelElement.GetModelElementForReference
- uid: NMF.Models.ModelElement.GetCollectionForFeature*
  commentId: Overload:NMF.Models.ModelElement.GetCollectionForFeature
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetCollectionForFeature_System_String_
  name: GetCollectionForFeature
  nameWithType: ModelElement.GetCollectionForFeature
  fullName: NMF.Models.ModelElement.GetCollectionForFeature
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Models.ModelElement.GetAttributeValue*
  commentId: Overload:NMF.Models.ModelElement.GetAttributeValue
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetAttributeValue_System_String_System_Int32_
  name: GetAttributeValue
  nameWithType: ModelElement.GetAttributeValue
  fullName: NMF.Models.ModelElement.GetAttributeValue
- uid: NMF.Models.ModelElement.SetFeature*
  commentId: Overload:NMF.Models.ModelElement.SetFeature
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_SetFeature_System_String_System_Object_
  name: SetFeature
  nameWithType: ModelElement.SetFeature
  fullName: NMF.Models.ModelElement.SetFeature
- uid: NMF.Models.ModelElement.CallOperation*
  commentId: Overload:NMF.Models.ModelElement.CallOperation
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_CallOperation_NMF_Models_Meta_IOperation_System_Object___
  name: CallOperation
  nameWithType: ModelElement.CallOperation
  fullName: NMF.Models.ModelElement.CallOperation
- uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_CallOperation_NMF_Models_Meta_IOperation_System_Object___
  name: CallOperation(IOperation, params object[])
  nameWithType: IModelElement.CallOperation(IOperation, params object[])
  fullName: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, params object[])
  nameWithType.vb: IModelElement.CallOperation(IOperation, ParamArray Object())
  fullName.vb: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation, ParamArray Object())
  name.vb: CallOperation(IOperation, ParamArray Object())
  spec.csharp:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_CallOperation_NMF_Models_Meta_IOperation_System_Object___
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    href: NMF.Models.Meta.IOperation.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_CallOperation_NMF_Models_Meta_IOperation_System_Object___
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
    href: NMF.Models.Meta.IOperation.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: NMF.Models.Meta.IOperation
  commentId: T:NMF.Models.Meta.IOperation
  parent: NMF.Models.Meta
  href: NMF.Models.Meta.IOperation.html
  name: IOperation
  nameWithType: IOperation
  fullName: NMF.Models.Meta.IOperation
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.GetExpressionForReference*
  commentId: Overload:NMF.Models.ModelElement.GetExpressionForReference
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetExpressionForReference_System_String_
  name: GetExpressionForReference
  nameWithType: ModelElement.GetExpressionForReference
  fullName: NMF.Models.ModelElement.GetExpressionForReference
- uid: NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.INotifyExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  href: NMF.Models.IModelElement.html
  name: INotifyExpression<IModelElement>
  nameWithType: INotifyExpression<IModelElement>
  fullName: NMF.Expressions.INotifyExpression<NMF.Models.IModelElement>
  nameWithType.vb: INotifyExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.INotifyExpression(Of NMF.Models.IModelElement)
  name.vb: INotifyExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Expressions.INotifyExpression`1
  commentId: T:NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Models.ModelElement.GetExpressionForAttribute*
  commentId: Overload:NMF.Models.ModelElement.GetExpressionForAttribute
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetExpressionForAttribute_System_String_
  name: GetExpressionForAttribute
  nameWithType: ModelElement.GetExpressionForAttribute
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute
- uid: NMF.Expressions.INotifyExpression{System.Object}
  commentId: T:NMF.Expressions.INotifyExpression{System.Object}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: INotifyExpression<object>
  nameWithType: INotifyExpression<object>
  fullName: NMF.Expressions.INotifyExpression<object>
  nameWithType.vb: INotifyExpression(Of Object)
  fullName.vb: NMF.Expressions.INotifyExpression(Of Object)
  name.vb: INotifyExpression(Of Object)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Models.ModelElement.Extensions*
  commentId: Overload:NMF.Models.ModelElement.Extensions
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Extensions
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.IModelElement.Extensions
  commentId: P:NMF.Models.IModelElement.Extensions
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Extensions
  name: Extensions
  nameWithType: IModelElement.Extensions
  fullName: NMF.Models.IModelElement.Extensions
- uid: NMF.Expressions.ICollectionExpression{NMF.Models.ModelElementExtension}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Models.ModelElementExtension}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  href: NMF.Models.ModelElementExtension.html
  name: ICollectionExpression<ModelElementExtension>
  nameWithType: ICollectionExpression<ModelElementExtension>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Models.ModelElementExtension>
  nameWithType.vb: ICollectionExpression(Of ModelElementExtension)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Models.ModelElementExtension)
  name.vb: ICollectionExpression(Of ModelElementExtension)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - uid: NMF.Models.ModelElementExtension
    name: ModelElementExtension
    href: NMF.Models.ModelElementExtension.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.ModelElementExtension
    name: ModelElementExtension
    href: NMF.Models.ModelElementExtension.html
  - name: )
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Models.ModelElement.GetExtension*
  commentId: Overload:NMF.Models.ModelElement.GetExtension
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetExtension__1
  name: GetExtension
  nameWithType: ModelElement.GetExtension
  fullName: NMF.Models.ModelElement.GetExtension
- uid: NMF.Models.IModelElement.GetExtension``1
  commentId: M:NMF.Models.IModelElement.GetExtension``1
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetExtension__1
  name: GetExtension<T>()
  nameWithType: IModelElement.GetExtension<T>()
  fullName: NMF.Models.IModelElement.GetExtension<T>()
  nameWithType.vb: IModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.IModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetExtension__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetExtension``1
    name: GetExtension
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetExtension__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NMF.Models.ModelElement.ReferencedElements*
  commentId: Overload:NMF.Models.ModelElement.ReferencedElements
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_ReferencedElements
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
- uid: NMF.Models.IModelElement.ReferencedElements
  commentId: P:NMF.Models.IModelElement.ReferencedElements
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_ReferencedElements
  name: ReferencedElements
  nameWithType: IModelElement.ReferencedElements
  fullName: NMF.Models.IModelElement.ReferencedElements
- uid: NMF.Models.ModelElement.OnPropertyChanged*
  commentId: Overload:NMF.Models.ModelElement.OnPropertyChanged
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnPropertyChanged_System_String_NMF_Expressions_ValueChangedEventArgs_System_Lazy_NMF_Models_Meta_ITypedElement__
  name: OnPropertyChanged
  nameWithType: ModelElement.OnPropertyChanged
  fullName: NMF.Models.ModelElement.OnPropertyChanged
- uid: System.Lazy{NMF.Models.Meta.ITypedElement}
  commentId: T:System.Lazy{NMF.Models.Meta.ITypedElement}
  parent: System
  definition: System.Lazy`1
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<ITypedElement>
  nameWithType: Lazy<ITypedElement>
  fullName: System.Lazy<NMF.Models.Meta.ITypedElement>
  nameWithType.vb: Lazy(Of ITypedElement)
  fullName.vb: System.Lazy(Of NMF.Models.Meta.ITypedElement)
  name.vb: Lazy(Of ITypedElement)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    href: NMF.Models.Meta.ITypedElement.html
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
    href: NMF.Models.Meta.ITypedElement.html
  - name: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Models.ModelElement.OnPropertyChanging*
  commentId: Overload:NMF.Models.ModelElement.OnPropertyChanging
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnPropertyChanging_System_String_NMF_Expressions_ValueChangedEventArgs_System_Lazy_NMF_Models_Meta_ITypedElement__
  name: OnPropertyChanging
  nameWithType: ModelElement.OnPropertyChanging
  fullName: NMF.Models.ModelElement.OnPropertyChanging
- uid: NMF.Models.ModelElement.Delete*
  commentId: Overload:NMF.Models.ModelElement.Delete
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_Delete
  name: Delete
  nameWithType: ModelElement.Delete
  fullName: NMF.Models.ModelElement.Delete
- uid: NMF.Models.IModelElement.Delete
  commentId: M:NMF.Models.IModelElement.Delete
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Delete
  name: Delete()
  nameWithType: IModelElement.Delete()
  fullName: NMF.Models.IModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Delete
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.Delete
    name: Delete
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Delete
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.OnDeleting*
  commentId: Overload:NMF.Models.ModelElement.OnDeleting
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnDeleting_NMF_Models_UriChangedEventArgs_
  name: OnDeleting
  nameWithType: ModelElement.OnDeleting
  fullName: NMF.Models.ModelElement.OnDeleting
- uid: NMF.Models.UriChangedEventArgs
  commentId: T:NMF.Models.UriChangedEventArgs
  parent: NMF.Models
  href: NMF.Models.UriChangedEventArgs.html
  name: UriChangedEventArgs
  nameWithType: UriChangedEventArgs
  fullName: NMF.Models.UriChangedEventArgs
- uid: NMF.Models.ModelElement.OnDeleted*
  commentId: Overload:NMF.Models.ModelElement.OnDeleted
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnDeleted_NMF_Models_UriChangedEventArgs_
  name: OnDeleted
  nameWithType: ModelElement.OnDeleted
  fullName: NMF.Models.ModelElement.OnDeleted
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanged.propertychanged
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangedeventhandler
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  commentId: E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging
  parent: System.ComponentModel.INotifyPropertyChanging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.inotifypropertychanging.propertychanging
  name: PropertyChanging
  nameWithType: INotifyPropertyChanging.PropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging.PropertyChanging
- uid: System.ComponentModel.PropertyChangingEventHandler
  commentId: T:System.ComponentModel.PropertyChangingEventHandler
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.propertychangingeventhandler
  name: PropertyChangingEventHandler
  nameWithType: PropertyChangingEventHandler
  fullName: System.ComponentModel.PropertyChangingEventHandler
- uid: NMF.Models.IModelElement.Deleted
  commentId: E:NMF.Models.IModelElement.Deleted
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Deleted
  name: Deleted
  nameWithType: IModelElement.Deleted
  fullName: NMF.Models.IModelElement.Deleted
- uid: System.EventHandler{NMF.Models.UriChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Models.UriChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<UriChangedEventArgs>
  nameWithType: EventHandler<UriChangedEventArgs>
  fullName: System.EventHandler<NMF.Models.UriChangedEventArgs>
  nameWithType.vb: EventHandler(Of UriChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Models.UriChangedEventArgs)
  name.vb: EventHandler(Of UriChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    href: NMF.Models.UriChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
    href: NMF.Models.UriChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NMF.Models.IModelElement.Deleting
  commentId: E:NMF.Models.IModelElement.Deleting
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_Deleting
  name: Deleting
  nameWithType: IModelElement.Deleting
  fullName: NMF.Models.IModelElement.Deleting
- uid: NMF.Models.ModelElement.GetClass*
  commentId: Overload:NMF.Models.ModelElement.GetClass
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetClass
  name: GetClass
  nameWithType: ModelElement.GetClass
  fullName: NMF.Models.ModelElement.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetClass
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetClass
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetClass
  - name: (
  - name: )
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  href: NMF.Models.Meta.IClass.html
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.ModelElement.ClassInstance*
  commentId: Overload:NMF.Models.ModelElement.ClassInstance
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_ClassInstance
  name: ClassInstance
  nameWithType: ModelElement.ClassInstance
  fullName: NMF.Models.ModelElement.ClassInstance
- uid: NMF.Models.ModelElement.GetReferencedElement*
  commentId: Overload:NMF.Models.ModelElement.GetReferencedElement
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetReferencedElement_NMF_Models_Meta_IReference_System_Int32_
  name: GetReferencedElement
  nameWithType: ModelElement.GetReferencedElement
  fullName: NMF.Models.ModelElement.GetReferencedElement
- uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElement_NMF_Models_Meta_IReference_System_Int32_
  name: GetReferencedElement(IReference, int)
  nameWithType: IModelElement.GetReferencedElement(IReference, int)
  fullName: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, int)
  nameWithType.vb: IModelElement.GetReferencedElement(IReference, Integer)
  fullName.vb: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference, Integer)
  name.vb: GetReferencedElement(IReference, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElement_NMF_Models_Meta_IReference_System_Int32_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElement_NMF_Models_Meta_IReference_System_Int32_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Models.ModelElement.SetReferencedElement*
  commentId: Overload:NMF.Models.ModelElement.SetReferencedElement
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_SetReferencedElement_NMF_Models_Meta_IReference_NMF_Models_IModelElement_
  name: SetReferencedElement
  nameWithType: ModelElement.SetReferencedElement
  fullName: NMF.Models.ModelElement.SetReferencedElement
- uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetReferencedElement_NMF_Models_Meta_IReference_NMF_Models_IModelElement_
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: IModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetReferencedElement_NMF_Models_Meta_IReference_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetReferencedElement_NMF_Models_Meta_IReference_NMF_Models_IModelElement_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
    href: NMF.Models.IModelElement.html
  - name: )
- uid: NMF.Models.ModelElement.GetReferencedElements*
  commentId: Overload:NMF.Models.ModelElement.GetReferencedElements
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetReferencedElements_NMF_Models_Meta_IReference_
  name: GetReferencedElements
  nameWithType: ModelElement.GetReferencedElements
  fullName: NMF.Models.ModelElement.GetReferencedElements
- uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElements_NMF_Models_Meta_IReference_
  name: GetReferencedElements(IReference)
  nameWithType: IModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElements_NMF_Models_Meta_IReference_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetReferencedElements_NMF_Models_Meta_IReference_
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
    href: NMF.Models.Meta.IReference.html
  - name: )
- uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValue_NMF_Models_Meta_IAttribute_System_Int32_
  name: GetAttributeValue(IAttribute, int)
  nameWithType: IModelElement.GetAttributeValue(IAttribute, int)
  fullName: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, int)
  nameWithType.vb: IModelElement.GetAttributeValue(IAttribute, Integer)
  fullName.vb: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, Integer)
  name.vb: GetAttributeValue(IAttribute, Integer)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValue_NMF_Models_Meta_IAttribute_System_Int32_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValue_NMF_Models_Meta_IAttribute_System_Int32_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Models.Meta.IAttribute
  commentId: T:NMF.Models.Meta.IAttribute
  parent: NMF.Models.Meta
  href: NMF.Models.Meta.IAttribute.html
  name: IAttribute
  nameWithType: IAttribute
  fullName: NMF.Models.Meta.IAttribute
- uid: NMF.Models.ModelElement.SetAttributeValue*
  commentId: Overload:NMF.Models.ModelElement.SetAttributeValue
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_SetAttributeValue_NMF_Models_Meta_IAttribute_System_Object_
  name: SetAttributeValue
  nameWithType: ModelElement.SetAttributeValue
  fullName: NMF.Models.ModelElement.SetAttributeValue
- uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.IModelElement
  isExternal: true
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetAttributeValue_NMF_Models_Meta_IAttribute_System_Object_
  name: SetAttributeValue(IAttribute, object)
  nameWithType: IModelElement.SetAttributeValue(IAttribute, object)
  fullName: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, object)
  nameWithType.vb: IModelElement.SetAttributeValue(IAttribute, Object)
  fullName.vb: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, Object)
  name.vb: SetAttributeValue(IAttribute, Object)
  spec.csharp:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetAttributeValue_NMF_Models_Meta_IAttribute_System_Object_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_SetAttributeValue_NMF_Models_Meta_IAttribute_System_Object_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Models.ModelElement.GetAttributeValues*
  commentId: Overload:NMF.Models.ModelElement.GetAttributeValues
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_GetAttributeValues_NMF_Models_Meta_IAttribute_
  name: GetAttributeValues
  nameWithType: ModelElement.GetAttributeValues
  fullName: NMF.Models.ModelElement.GetAttributeValues
- uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValues_NMF_Models_Meta_IAttribute_
  name: GetAttributeValues(IAttribute)
  nameWithType: IModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValues_NMF_Models_Meta_IAttribute_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
    href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_GetAttributeValues_NMF_Models_Meta_IAttribute_
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
    href: NMF.Models.Meta.IAttribute.html
  - name: )
- uid: NMF.Models.ModelElement.OnCollectionChanged*
  commentId: Overload:NMF.Models.ModelElement.OnCollectionChanged
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnCollectionChanged_System_String_System_Collections_Specialized_NotifyCollectionChangedEventArgs_System_Lazy_NMF_Models_Meta_ITypedElement__
  name: OnCollectionChanged
  nameWithType: ModelElement.OnCollectionChanged
  fullName: NMF.Models.ModelElement.OnCollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: NMF.Models.ModelElement.OnCollectionChanging*
  commentId: Overload:NMF.Models.ModelElement.OnCollectionChanging
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnCollectionChanging_System_String_System_Collections_Specialized_NotifyCollectionChangedEventArgs_System_Lazy_NMF_Models_Meta_ITypedElement__
  name: OnCollectionChanging
  nameWithType: ModelElement.OnCollectionChanging
  fullName: NMF.Models.ModelElement.OnCollectionChanging
- uid: NMF.Models.ModelElement.OnBubbledChange*
  commentId: Overload:NMF.Models.ModelElement.OnBubbledChange
  href: NMF.Models.ModelElement.html#NMF_Models_ModelElement_OnBubbledChange_NMF_Models_BubbledChangeEventArgs_
  name: OnBubbledChange
  nameWithType: ModelElement.OnBubbledChange
  fullName: NMF.Models.ModelElement.OnBubbledChange
- uid: NMF.Models.BubbledChangeEventArgs
  commentId: T:NMF.Models.BubbledChangeEventArgs
  parent: NMF.Models
  href: NMF.Models.BubbledChangeEventArgs.html
  name: BubbledChangeEventArgs
  nameWithType: BubbledChangeEventArgs
  fullName: NMF.Models.BubbledChangeEventArgs
- uid: NMF.Models.IModelElement.BubbledChange
  commentId: E:NMF.Models.IModelElement.BubbledChange
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_BubbledChange
  name: BubbledChange
  nameWithType: IModelElement.BubbledChange
  fullName: NMF.Models.IModelElement.BubbledChange
- uid: System.EventHandler{NMF.Models.BubbledChangeEventArgs}
  commentId: T:System.EventHandler{NMF.Models.BubbledChangeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<BubbledChangeEventArgs>
  nameWithType: EventHandler<BubbledChangeEventArgs>
  fullName: System.EventHandler<NMF.Models.BubbledChangeEventArgs>
  nameWithType.vb: EventHandler(Of BubbledChangeEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Models.BubbledChangeEventArgs)
  name.vb: EventHandler(Of BubbledChangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    href: NMF.Models.BubbledChangeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
    href: NMF.Models.BubbledChangeEventArgs.html
  - name: )
- uid: NMF.Models.IModelElement.ParentChanged
  commentId: E:NMF.Models.IModelElement.ParentChanged
  parent: NMF.Models.IModelElement
  href: NMF.Models.IModelElement.html#NMF_Models_IModelElement_ParentChanged
  name: ParentChanged
  nameWithType: IModelElement.ParentChanged
  fullName: NMF.Models.IModelElement.ParentChanged
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
