### YamlMime:ManagedReference
items:
- uid: NMF.Models.Repository.ModelCollection
  commentId: T:NMF.Models.Repository.ModelCollection
  id: ModelCollection
  parent: NMF.Models.Repository
  children:
  - NMF.Models.Repository.ModelCollection.#ctor(NMF.Models.Repository.IModelRepository)
  - NMF.Models.Repository.ModelCollection.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  - NMF.Models.Repository.ModelCollection.Add(System.Uri,NMF.Models.Model)
  - NMF.Models.Repository.ModelCollection.Clear
  - NMF.Models.Repository.ModelCollection.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  - NMF.Models.Repository.ModelCollection.ContainsKey(System.Uri)
  - NMF.Models.Repository.ModelCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  - NMF.Models.Repository.ModelCollection.Count
  - NMF.Models.Repository.ModelCollection.GetEnumerator
  - NMF.Models.Repository.ModelCollection.IsReadOnly
  - NMF.Models.Repository.ModelCollection.Item(System.Uri)
  - NMF.Models.Repository.ModelCollection.Keys
  - NMF.Models.Repository.ModelCollection.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  - NMF.Models.Repository.ModelCollection.Remove(System.Uri)
  - NMF.Models.Repository.ModelCollection.Repository
  - NMF.Models.Repository.ModelCollection.TryGetValue(System.Uri,NMF.Models.Model@)
  - NMF.Models.Repository.ModelCollection.Values
  langs:
  - csharp
  - vb
  name: ModelCollection
  nameWithType: ModelCollection
  fullName: NMF.Models.Repository.ModelCollection
  type: Class
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ModelCollection
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 8
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: 'public class ModelCollection : IDictionary<Uri, Model>, ICollection<KeyValuePair<Uri, Model>>, IEnumerable<KeyValuePair<Uri, Model>>, IEnumerable'
    content.vb: Public Class ModelCollection Implements IDictionary(Of Uri, Model), ICollection(Of KeyValuePair(Of Uri, Model)), IEnumerable(Of KeyValuePair(Of Uri, Model)), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Models.Repository.ModelRepository.ModelRepositoryModelCollection
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Models.Repository.ModelCollection.#ctor(NMF.Models.Repository.IModelRepository)
  commentId: M:NMF.Models.Repository.ModelCollection.#ctor(NMF.Models.Repository.IModelRepository)
  id: '#ctor(NMF.Models.Repository.IModelRepository)'
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: ModelCollection(IModelRepository)
  nameWithType: ModelCollection.ModelCollection(IModelRepository)
  fullName: NMF.Models.Repository.ModelCollection.ModelCollection(NMF.Models.Repository.IModelRepository)
  type: Constructor
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 13
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: public ModelCollection(IModelRepository repo)
    parameters:
    - id: repo
      type: NMF.Models.Repository.IModelRepository
    content.vb: Public Sub New(repo As IModelRepository)
  overload: NMF.Models.Repository.ModelCollection.#ctor*
  nameWithType.vb: ModelCollection.New(IModelRepository)
  fullName.vb: NMF.Models.Repository.ModelCollection.New(NMF.Models.Repository.IModelRepository)
  name.vb: New(IModelRepository)
- uid: NMF.Models.Repository.ModelCollection.Repository
  commentId: P:NMF.Models.Repository.ModelCollection.Repository
  id: Repository
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Repository
  nameWithType: ModelCollection.Repository
  fullName: NMF.Models.Repository.ModelCollection.Repository
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Repository
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 18
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  syntax:
    content: public IModelRepository Repository { get; }
    parameters: []
    return:
      type: NMF.Models.Repository.IModelRepository
    content.vb: Public ReadOnly Property Repository As IModelRepository
  overload: NMF.Models.Repository.ModelCollection.Repository*
- uid: NMF.Models.Repository.ModelCollection.Item(System.Uri)
  commentId: P:NMF.Models.Repository.ModelCollection.Item(System.Uri)
  id: Item(System.Uri)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: this[Uri]
  nameWithType: ModelCollection.this[Uri]
  fullName: NMF.Models.Repository.ModelCollection.this[System.Uri]
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: this[]
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 26
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public Model this[Uri key] { get; set; }
    parameters:
    - id: key
      type: System.Uri
    return:
      type: NMF.Models.Model
    content.vb: Public Default Property this[](key As Uri) As Model
  overload: NMF.Models.Repository.ModelCollection.Item*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Item(System.Uri)
  nameWithType.vb: ModelCollection.this[](Uri)
  fullName.vb: NMF.Models.Repository.ModelCollection.this[](System.Uri)
  name.vb: this[](Uri)
- uid: NMF.Models.Repository.ModelCollection.Count
  commentId: P:NMF.Models.Repository.ModelCollection.Count
  id: Count
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ModelCollection.Count
  fullName: NMF.Models.Repository.ModelCollection.Count
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Count
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 39
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: NMF.Models.Repository.ModelCollection.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Count
- uid: NMF.Models.Repository.ModelCollection.IsReadOnly
  commentId: P:NMF.Models.Repository.ModelCollection.IsReadOnly
  id: IsReadOnly
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ModelCollection.IsReadOnly
  fullName: NMF.Models.Repository.ModelCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsReadOnly
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 47
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: NMF.Models.Repository.ModelCollection.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.IsReadOnly
- uid: NMF.Models.Repository.ModelCollection.Keys
  commentId: P:NMF.Models.Repository.ModelCollection.Keys
  id: Keys
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: ModelCollection.Keys
  fullName: NMF.Models.Repository.ModelCollection.Keys
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Keys
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 55
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public ICollection<Uri> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Uri}
    content.vb: Public ReadOnly Property Keys As ICollection(Of Uri)
  overload: NMF.Models.Repository.ModelCollection.Keys*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Keys
- uid: NMF.Models.Repository.ModelCollection.Values
  commentId: P:NMF.Models.Repository.ModelCollection.Values
  id: Values
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ModelCollection.Values
  fullName: NMF.Models.Repository.ModelCollection.Values
  type: Property
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Values
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 63
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public ICollection<Model> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{NMF.Models.Model}
    content.vb: Public ReadOnly Property Values As ICollection(Of Model)
  overload: NMF.Models.Repository.ModelCollection.Values*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Values
- uid: NMF.Models.Repository.ModelCollection.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:NMF.Models.Repository.ModelCollection.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  id: Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<Uri, Model>)
  nameWithType: ModelCollection.Add(KeyValuePair<Uri, Model>)
  fullName: NMF.Models.Repository.ModelCollection.Add(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Add
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 71
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public void Add(KeyValuePair<Uri, Model> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}
    content.vb: Public Sub Add(item As KeyValuePair(Of Uri, Model))
  overload: NMF.Models.Repository.ModelCollection.Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  nameWithType.vb: ModelCollection.Add(KeyValuePair(Of Uri, Model))
  fullName.vb: NMF.Models.Repository.ModelCollection.Add(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Add(KeyValuePair(Of Uri, Model))
- uid: NMF.Models.Repository.ModelCollection.Add(System.Uri,NMF.Models.Model)
  commentId: M:NMF.Models.Repository.ModelCollection.Add(System.Uri,NMF.Models.Model)
  id: Add(System.Uri,NMF.Models.Model)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Add(Uri, Model)
  nameWithType: ModelCollection.Add(Uri, Model)
  fullName: NMF.Models.Repository.ModelCollection.Add(System.Uri, NMF.Models.Model)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Add
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 76
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public virtual void Add(Uri key, Model value)
    parameters:
    - id: key
      type: System.Uri
    - id: value
      type: NMF.Models.Model
    content.vb: Public Overridable Sub Add(key As Uri, value As Model)
  overload: NMF.Models.Repository.ModelCollection.Add*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Add(System.Uri,NMF.Models.Model)
- uid: NMF.Models.Repository.ModelCollection.Clear
  commentId: M:NMF.Models.Repository.ModelCollection.Clear
  id: Clear
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ModelCollection.Clear()
  fullName: NMF.Models.Repository.ModelCollection.Clear()
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Clear
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 82
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: NMF.Models.Repository.ModelCollection.Clear*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Clear
- uid: NMF.Models.Repository.ModelCollection.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:NMF.Models.Repository.ModelCollection.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  id: Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<Uri, Model>)
  nameWithType: ModelCollection.Contains(KeyValuePair<Uri, Model>)
  fullName: NMF.Models.Repository.ModelCollection.Contains(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Contains
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 87
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<Uri, Model> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As KeyValuePair(Of Uri, Model)) As Boolean
  overload: NMF.Models.Repository.ModelCollection.Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  nameWithType.vb: ModelCollection.Contains(KeyValuePair(Of Uri, Model))
  fullName.vb: NMF.Models.Repository.ModelCollection.Contains(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Contains(KeyValuePair(Of Uri, Model))
- uid: NMF.Models.Repository.ModelCollection.ContainsKey(System.Uri)
  commentId: M:NMF.Models.Repository.ModelCollection.ContainsKey(System.Uri)
  id: ContainsKey(System.Uri)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: ContainsKey(Uri)
  nameWithType: ModelCollection.ContainsKey(Uri)
  fullName: NMF.Models.Repository.ModelCollection.ContainsKey(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ContainsKey
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 92
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool ContainsKey(Uri key)
    parameters:
    - id: key
      type: System.Uri
    return:
      type: System.Boolean
    content.vb: Public Function ContainsKey(key As Uri) As Boolean
  overload: NMF.Models.Repository.ModelCollection.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.ContainsKey(System.Uri)
- uid: NMF.Models.Repository.ModelCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  commentId: M:NMF.Models.Repository.ModelCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<Uri, Model>[], int)
  nameWithType: ModelCollection.CopyTo(KeyValuePair<Uri, Model>[], int)
  fullName: NMF.Models.Repository.ModelCollection.CopyTo(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>[], int)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CopyTo
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 97
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public void CopyTo(KeyValuePair<Uri, Model>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of Uri, Model)(), arrayIndex As Integer)
  overload: NMF.Models.Repository.ModelCollection.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  nameWithType.vb: ModelCollection.CopyTo(KeyValuePair(Of Uri, Model)(), Integer)
  fullName.vb: NMF.Models.Repository.ModelCollection.CopyTo(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of Uri, Model)(), Integer)
- uid: NMF.Models.Repository.ModelCollection.GetEnumerator
  commentId: M:NMF.Models.Repository.ModelCollection.GetEnumerator
  id: GetEnumerator
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ModelCollection.GetEnumerator()
  fullName: NMF.Models.Repository.ModelCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetEnumerator
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 102
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public IEnumerator<KeyValuePair<Uri, Model>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of Uri, Model))
  overload: NMF.Models.Repository.ModelCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.GetEnumerator
- uid: NMF.Models.Repository.ModelCollection.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:NMF.Models.Repository.ModelCollection.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  id: Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<Uri, Model>)
  nameWithType: ModelCollection.Remove(KeyValuePair<Uri, Model>)
  fullName: NMF.Models.Repository.ModelCollection.Remove(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Remove
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 107
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool Remove(KeyValuePair<Uri, Model> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As KeyValuePair(Of Uri, Model)) As Boolean
  overload: NMF.Models.Repository.ModelCollection.Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  nameWithType.vb: ModelCollection.Remove(KeyValuePair(Of Uri, Model))
  fullName.vb: NMF.Models.Repository.ModelCollection.Remove(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Remove(KeyValuePair(Of Uri, Model))
- uid: NMF.Models.Repository.ModelCollection.Remove(System.Uri)
  commentId: M:NMF.Models.Repository.ModelCollection.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: Remove(Uri)
  nameWithType: ModelCollection.Remove(Uri)
  fullName: NMF.Models.Repository.ModelCollection.Remove(System.Uri)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Remove
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 112
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool Remove(Uri key)
    parameters:
    - id: key
      type: System.Uri
    return:
      type: System.Boolean
    content.vb: Public Function Remove(key As Uri) As Boolean
  overload: NMF.Models.Repository.ModelCollection.Remove*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Remove(System.Uri)
- uid: NMF.Models.Repository.ModelCollection.TryGetValue(System.Uri,NMF.Models.Model@)
  commentId: M:NMF.Models.Repository.ModelCollection.TryGetValue(System.Uri,NMF.Models.Model@)
  id: TryGetValue(System.Uri,NMF.Models.Model@)
  parent: NMF.Models.Repository.ModelCollection
  langs:
  - csharp
  - vb
  name: TryGetValue(Uri, out Model)
  nameWithType: ModelCollection.TryGetValue(Uri, out Model)
  fullName: NMF.Models.Repository.ModelCollection.TryGetValue(System.Uri, out NMF.Models.Model)
  type: Method
  source:
    remote:
      path: src/Models/Models/Repository/ModelCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: TryGetValue
    path: src/Models/Models/Repository/ModelCollection.cs
    startLine: 117
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Repository
  example: []
  syntax:
    content: public bool TryGetValue(Uri key, out Model value)
    parameters:
    - id: key
      type: System.Uri
    - id: value
      type: NMF.Models.Model
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As Uri, value As Model) As Boolean
  overload: NMF.Models.Repository.ModelCollection.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.TryGetValue(System.Uri,NMF.Models.Model@)
  nameWithType.vb: ModelCollection.TryGetValue(Uri, Model)
  fullName.vb: NMF.Models.Repository.ModelCollection.TryGetValue(System.Uri, NMF.Models.Model)
  name.vb: TryGetValue(Uri, Model)
references:
- uid: NMF.Models.Repository
  commentId: N:NMF.Models.Repository
  href: NMF.html
  name: NMF.Models.Repository
  nameWithType: NMF.Models.Repository
  fullName: NMF.Models.Repository
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  - name: .
  - uid: NMF.Models.Repository
    name: Repository
    href: NMF.Models.Repository.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  commentId: T:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<Uri, Model>
  nameWithType: IDictionary<Uri, Model>
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>
  nameWithType.vb: IDictionary(Of Uri, Model)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model)
  name.vb: IDictionary(Of Uri, Model)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<Uri, Model>>
  nameWithType: ICollection<KeyValuePair<Uri, Model>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: ICollection(Of KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<Uri, Model>>
  nameWithType: IEnumerable<KeyValuePair<Uri, Model>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: IEnumerable(Of KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Models.Repository.ModelCollection.#ctor*
  commentId: Overload:NMF.Models.Repository.ModelCollection.#ctor
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection__ctor_NMF_Models_Repository_IModelRepository_
  name: ModelCollection
  nameWithType: ModelCollection.ModelCollection
  fullName: NMF.Models.Repository.ModelCollection.ModelCollection
  nameWithType.vb: ModelCollection.New
  fullName.vb: NMF.Models.Repository.ModelCollection.New
  name.vb: New
- uid: NMF.Models.Repository.IModelRepository
  commentId: T:NMF.Models.Repository.IModelRepository
  parent: NMF.Models.Repository
  href: NMF.Models.Repository.IModelRepository.html
  name: IModelRepository
  nameWithType: IModelRepository
  fullName: NMF.Models.Repository.IModelRepository
- uid: NMF.Models.Repository.ModelCollection.Repository*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Repository
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Repository
  name: Repository
  nameWithType: ModelCollection.Repository
  fullName: NMF.Models.Repository.ModelCollection.Repository
- uid: NMF.Models.Repository.ModelCollection.Item*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Item
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Item_System_Uri_
  name: this
  nameWithType: ModelCollection.this
  fullName: NMF.Models.Repository.ModelCollection.this
  nameWithType.vb: ModelCollection.this[]
  fullName.vb: NMF.Models.Repository.ModelCollection.this[]
  name.vb: this[]
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Item(System.Uri)
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Item(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: this[Uri]
  nameWithType: IDictionary<Uri, Model>.this[Uri]
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.this[System.Uri]
  nameWithType.vb: IDictionary(Of Uri, Model).this[](Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).this[](System.Uri)
  name.vb: this[](Uri)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Item(System.Uri)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: NMF.Models.Model
  commentId: T:NMF.Models.Model
  parent: NMF.Models
  href: NMF.Models.Model.html
  name: Model
  nameWithType: Model
  fullName: NMF.Models.Model
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  name: this[TKey]
  nameWithType: IDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: NMF.Models
  commentId: N:NMF.Models
  href: NMF.html
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Models
    name: Models
    href: NMF.Models.html
- uid: NMF.Models.Repository.ModelCollection.Count*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Count
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Count
  name: Count
  nameWithType: ModelCollection.Count
  fullName: NMF.Models.Repository.ModelCollection.Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: NMF.Models.Repository.ModelCollection.IsReadOnly*
  commentId: Overload:NMF.Models.Repository.ModelCollection.IsReadOnly
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_IsReadOnly
  name: IsReadOnly
  nameWithType: ModelCollection.IsReadOnly
  fullName: NMF.Models.Repository.ModelCollection.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: NMF.Models.Repository.ModelCollection.Keys*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Keys
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Keys
  name: Keys
  nameWithType: ModelCollection.Keys
  fullName: NMF.Models.Repository.ModelCollection.Keys
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Keys
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<Uri, Model>.Keys
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.Keys
  nameWithType.vb: IDictionary(Of Uri, Model).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).Keys
- uid: System.Collections.Generic.ICollection{System.Uri}
  commentId: T:System.Collections.Generic.ICollection{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Uri>
  nameWithType: ICollection<Uri>
  fullName: System.Collections.Generic.ICollection<System.Uri>
  nameWithType.vb: ICollection(Of Uri)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Uri)
  name.vb: ICollection(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.keys
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: NMF.Models.Repository.ModelCollection.Values*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Values
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Values
  name: Values
  nameWithType: ModelCollection.Values
  fullName: NMF.Models.Repository.ModelCollection.Values
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Values
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<Uri, Model>.Values
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.Values
  nameWithType.vb: IDictionary(Of Uri, Model).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).Values
- uid: System.Collections.Generic.ICollection{NMF.Models.Model}
  commentId: T:System.Collections.Generic.ICollection{NMF.Models.Model}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Model>
  nameWithType: ICollection<Model>
  fullName: System.Collections.Generic.ICollection<NMF.Models.Model>
  nameWithType.vb: ICollection(Of Model)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Models.Model)
  name.vb: ICollection(Of Model)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.values
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: NMF.Models.Repository.ModelCollection.Add*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Add
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Add_System_Collections_Generic_KeyValuePair_System_Uri_NMF_Models_Model__
  name: Add
  nameWithType: ModelCollection.Add
  fullName: NMF.Models.Repository.ModelCollection.Add
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(KeyValuePair<Uri, Model>)
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.Add(KeyValuePair<Uri, Model>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.Add(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).Add(KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).Add(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Add(KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}
  commentId: T:System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<Uri, Model>
  nameWithType: KeyValuePair<Uri, Model>
  fullName: System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>
  nameWithType.vb: KeyValuePair(Of Uri, Model)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)
  name.vb: KeyValuePair(Of Uri, Model)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Add(System.Uri,NMF.Models.Model)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Add(System.Uri,NMF.Models.Model)
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(Uri, Model)
  nameWithType: IDictionary<Uri, Model>.Add(Uri, Model)
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.Add(System.Uri, NMF.Models.Model)
  nameWithType.vb: IDictionary(Of Uri, Model).Add(Uri, Model)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).Add(System.Uri, NMF.Models.Model)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Add(System.Uri,NMF.Models.Model)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Add(System.Uri,NMF.Models.Model)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NMF.Models.Repository.ModelCollection.Clear*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Clear
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Clear
  name: Clear
  nameWithType: ModelCollection.Clear
  fullName: NMF.Models.Repository.ModelCollection.Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: NMF.Models.Repository.ModelCollection.Contains*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Contains
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Contains_System_Collections_Generic_KeyValuePair_System_Uri_NMF_Models_Model__
  name: Contains
  nameWithType: ModelCollection.Contains
  fullName: NMF.Models.Repository.ModelCollection.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(KeyValuePair<Uri, Model>)
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.Contains(KeyValuePair<Uri, Model>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.Contains(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).Contains(KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).Contains(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Contains(KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: NMF.Models.Repository.ModelCollection.ContainsKey*
  commentId: Overload:NMF.Models.Repository.ModelCollection.ContainsKey
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_ContainsKey_System_Uri_
  name: ContainsKey
  nameWithType: ModelCollection.ContainsKey
  fullName: NMF.Models.Repository.ModelCollection.ContainsKey
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.ContainsKey(System.Uri)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.ContainsKey(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(Uri)
  nameWithType: IDictionary<Uri, Model>.ContainsKey(Uri)
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.ContainsKey(System.Uri)
  nameWithType.vb: IDictionary(Of Uri, Model).ContainsKey(Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).ContainsKey(System.Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.ContainsKey(System.Uri)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.ContainsKey(System.Uri)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: NMF.Models.Repository.ModelCollection.CopyTo*
  commentId: Overload:NMF.Models.Repository.ModelCollection.CopyTo
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_CopyTo_System_Collections_Generic_KeyValuePair_System_Uri_NMF_Models_Model____System_Int32_
  name: CopyTo
  nameWithType: ModelCollection.CopyTo
  fullName: NMF.Models.Repository.ModelCollection.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(KeyValuePair<Uri, Model>[], int)
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.CopyTo(KeyValuePair<Uri, Model>[], int)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>[], int)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).CopyTo(KeyValuePair(Of Uri, Model)(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of Uri, Model)(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<Uri, Model>[]
  nameWithType: KeyValuePair<Uri, Model>[]
  fullName: System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>[]
  nameWithType.vb: KeyValuePair(Of Uri, Model)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)()
  name.vb: KeyValuePair(Of Uri, Model)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Models.Repository.ModelCollection.GetEnumerator*
  commentId: Overload:NMF.Models.Repository.ModelCollection.GetEnumerator
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: ModelCollection.GetEnumerator
  fullName: NMF.Models.Repository.ModelCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Uri, Model>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Uri, Model)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<Uri, Model>>
  nameWithType: IEnumerator<KeyValuePair<Uri, Model>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: IEnumerator(Of KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Models.Repository.ModelCollection.Remove*
  commentId: Overload:NMF.Models.Repository.ModelCollection.Remove
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_Remove_System_Collections_Generic_KeyValuePair_System_Uri_NMF_Models_Model__
  name: Remove
  nameWithType: ModelCollection.Remove
  fullName: NMF.Models.Repository.ModelCollection.Remove
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(KeyValuePair<Uri, Model>)
  nameWithType: ICollection<KeyValuePair<Uri, Model>>.Remove(KeyValuePair<Uri, Model>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>>.Remove(System.Collections.Generic.KeyValuePair<System.Uri, NMF.Models.Model>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Model)).Remove(KeyValuePair(Of Uri, Model))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model)).Remove(System.Collections.Generic.KeyValuePair(Of System.Uri, NMF.Models.Model))
  name.vb: Remove(KeyValuePair(Of Uri, Model))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,NMF.Models.Model})
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Remove(System.Uri)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Remove(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(Uri)
  nameWithType: IDictionary<Uri, Model>.Remove(Uri)
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.Remove(System.Uri)
  nameWithType.vb: IDictionary(Of Uri, Model).Remove(Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).Remove(System.Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Remove(System.Uri)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.Remove(System.Uri)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: NMF.Models.Repository.ModelCollection.TryGetValue*
  commentId: Overload:NMF.Models.Repository.ModelCollection.TryGetValue
  href: NMF.Models.Repository.ModelCollection.html#NMF_Models_Repository_ModelCollection_TryGetValue_System_Uri_NMF_Models_Model__
  name: TryGetValue
  nameWithType: ModelCollection.TryGetValue
  fullName: NMF.Models.Repository.ModelCollection.TryGetValue
- uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.TryGetValue(System.Uri,NMF.Models.Model@)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.TryGetValue(System.Uri,NMF.Models.Model@)
  parent: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(Uri, out Model)
  nameWithType: IDictionary<Uri, Model>.TryGetValue(Uri, out Model)
  fullName: System.Collections.Generic.IDictionary<System.Uri, NMF.Models.Model>.TryGetValue(System.Uri, out NMF.Models.Model)
  nameWithType.vb: IDictionary(Of Uri, Model).TryGetValue(Uri, Model)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, NMF.Models.Model).TryGetValue(System.Uri, NMF.Models.Model)
  name.vb: TryGetValue(Uri, Model)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.TryGetValue(System.Uri,NMF.Models.Model@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary{System.Uri,NMF.Models.Model}.TryGetValue(System.Uri,NMF.Models.Model@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
    href: NMF.Models.Model.html
  - name: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
