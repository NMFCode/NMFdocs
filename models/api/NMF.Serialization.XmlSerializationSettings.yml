### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  id: XmlSerializationSettings
  parent: NMF.Serialization
  children:
  - NMF.Serialization.XmlSerializationSettings.CaseSensitive
  - NMF.Serialization.XmlSerializationSettings.Default
  - NMF.Serialization.XmlSerializationSettings.DefaultNamespace
  - NMF.Serialization.XmlSerializationSettings.Encoding
  - NMF.Serialization.XmlSerializationSettings.Indent
  - NMF.Serialization.XmlSerializationSettings.NameCase
  langs:
  - csharp
  - vb
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
  type: Class
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmlSerializationSettings
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 10
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nClass to represent the serialization settings for a XmlSerializer\n"
  example: []
  syntax:
    content: public class XmlSerializationSettings
    content.vb: Public Class XmlSerializationSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.XmlSerializationSettings.Default
  commentId: P:NMF.Serialization.XmlSerializationSettings.Default
  id: Default
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: XmlSerializationSettings.Default
  fullName: NMF.Serialization.XmlSerializationSettings.Default
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Default
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 24
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nDefault settings used for the XmlSerializer\n"
  example: []
  syntax:
    content: public static XmlSerializationSettings Default { get; }
    parameters: []
    return:
      type: NMF.Serialization.XmlSerializationSettings
    content.vb: Public Shared ReadOnly Property Default As XmlSerializationSettings
  overload: NMF.Serialization.XmlSerializationSettings.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Serialization.XmlSerializationSettings.Encoding
  commentId: P:NMF.Serialization.XmlSerializationSettings.Encoding
  id: Encoding
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: XmlSerializationSettings.Encoding
  fullName: NMF.Serialization.XmlSerializationSettings.Encoding
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Encoding
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 37
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nGets or sets the encoding of the Xml file\n"
  example: []
  syntax:
    content: public Encoding Encoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
    content.vb: Public Property Encoding As Encoding
  overload: NMF.Serialization.XmlSerializationSettings.Encoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializationSettings.DefaultNamespace
  commentId: P:NMF.Serialization.XmlSerializationSettings.DefaultNamespace
  id: DefaultNamespace
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: DefaultNamespace
  nameWithType: XmlSerializationSettings.DefaultNamespace
  fullName: NMF.Serialization.XmlSerializationSettings.DefaultNamespace
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultNamespace
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 46
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nGets or sets the default location\n"
  example: []
  syntax:
    content: public string DefaultNamespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultNamespace As String
  overload: NMF.Serialization.XmlSerializationSettings.DefaultNamespace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializationSettings.Indent
  commentId: P:NMF.Serialization.XmlSerializationSettings.Indent
  id: Indent
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: Indent
  nameWithType: XmlSerializationSettings.Indent
  fullName: NMF.Serialization.XmlSerializationSettings.Indent
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Indent
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 55
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nIndicates whether the XmlSerializer should indent new Xml elements for more readable formatting\n"
  example: []
  syntax:
    content: public bool Indent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Indent As Boolean
  overload: NMF.Serialization.XmlSerializationSettings.Indent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializationSettings.CaseSensitive
  commentId: P:NMF.Serialization.XmlSerializationSettings.CaseSensitive
  id: CaseSensitive
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: CaseSensitive
  nameWithType: XmlSerializationSettings.CaseSensitive
  fullName: NMF.Serialization.XmlSerializationSettings.CaseSensitive
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CaseSensitive
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 64
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nIndicates whether the deserialization is case sensitive\n"
  example: []
  syntax:
    content: public bool CaseSensitive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CaseSensitive As Boolean
  overload: NMF.Serialization.XmlSerializationSettings.CaseSensitive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Serialization.XmlSerializationSettings.NameCase
  commentId: P:NMF.Serialization.XmlSerializationSettings.NameCase
  id: NameCase
  parent: NMF.Serialization.XmlSerializationSettings
  langs:
  - csharp
  - vb
  name: NameCase
  nameWithType: XmlSerializationSettings.NameCase
  fullName: NMF.Serialization.XmlSerializationSettings.NameCase
  type: Property
  source:
    remote:
      path: Models/Serialization/XML/XmlSerializationSettings.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NameCase
    path: src/Models/Serialization/XML/XmlSerializationSettings.cs
    startLine: 73
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization
  summary: "\nThe strategy for converting character cases for serialization\n"
  example: []
  syntax:
    content: public XmlCaseType NameCase { get; set; }
    parameters: []
    return:
      type: NMF.Serialization.XmlCaseType
    content.vb: Public Property NameCase As XmlCaseType
  overload: NMF.Serialization.XmlSerializationSettings.NameCase*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization.XmlSerializationSettings.Default*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.Default
  name: Default
  nameWithType: XmlSerializationSettings.Default
  fullName: NMF.Serialization.XmlSerializationSettings.Default
- uid: NMF.Serialization.XmlSerializationSettings
  commentId: T:NMF.Serialization.XmlSerializationSettings
  parent: NMF.Serialization
  name: XmlSerializationSettings
  nameWithType: XmlSerializationSettings
  fullName: NMF.Serialization.XmlSerializationSettings
- uid: NMF.Serialization.XmlSerializationSettings.Encoding*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.Encoding
  name: Encoding
  nameWithType: XmlSerializationSettings.Encoding
  fullName: NMF.Serialization.XmlSerializationSettings.Encoding
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: NMF.Serialization.XmlSerializationSettings.DefaultNamespace*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.DefaultNamespace
  name: DefaultNamespace
  nameWithType: XmlSerializationSettings.DefaultNamespace
  fullName: NMF.Serialization.XmlSerializationSettings.DefaultNamespace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.XmlSerializationSettings.Indent*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.Indent
  name: Indent
  nameWithType: XmlSerializationSettings.Indent
  fullName: NMF.Serialization.XmlSerializationSettings.Indent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Serialization.XmlSerializationSettings.CaseSensitive*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.CaseSensitive
  name: CaseSensitive
  nameWithType: XmlSerializationSettings.CaseSensitive
  fullName: NMF.Serialization.XmlSerializationSettings.CaseSensitive
- uid: NMF.Serialization.XmlSerializationSettings.NameCase*
  commentId: Overload:NMF.Serialization.XmlSerializationSettings.NameCase
  name: NameCase
  nameWithType: XmlSerializationSettings.NameCase
  fullName: NMF.Serialization.XmlSerializationSettings.NameCase
- uid: NMF.Serialization.XmlCaseType
  commentId: T:NMF.Serialization.XmlCaseType
  parent: NMF.Serialization
  name: XmlCaseType
  nameWithType: XmlCaseType
  fullName: NMF.Serialization.XmlCaseType
