### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.MetaElement
  commentId: T:NMF.Models.Meta.MetaElement
  id: MetaElement
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.MetaElement.ClassInstance
  - NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  - NMF.Models.Meta.MetaElement.GetClass
  - NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  - NMF.Models.Meta.MetaElement.IsIdentified
  - NMF.Models.Meta.MetaElement.Name
  - NMF.Models.Meta.MetaElement.NameChanged
  - NMF.Models.Meta.MetaElement.NameChanging
  - NMF.Models.Meta.MetaElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnRemarksChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.OnSummaryChanging(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Meta.MetaElement.Remarks
  - NMF.Models.Meta.MetaElement.RemarksChanged
  - NMF.Models.Meta.MetaElement.RemarksChanging
  - NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  - NMF.Models.Meta.MetaElement.Summary
  - NMF.Models.Meta.MetaElement.SummaryChanged
  - NMF.Models.Meta.MetaElement.SummaryChanging
  - NMF.Models.Meta.MetaElement.ToIdentifierString
  langs:
  - csharp
  - vb
  name: MetaElement
  nameWithType: MetaElement
  fullName: NMF.Models.Meta.MetaElement
  type: Class
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MetaElement
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe default implementation of the MetaElement class\n"
  example: []
  syntax:
    content: >-
      [XmlIdentifier("Name")]

      [XmlNamespace("http://nmf.codeplex.com/nmeta/")]

      [XmlNamespacePrefix("nmeta")]

      [ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//MetaElement")]

      public abstract class MetaElement : ModelElement, IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
    content.vb: >-
      <XmlIdentifier("Name")>

      <XmlNamespace("http://nmf.codeplex.com/nmeta/")>

      <XmlNamespacePrefix("nmeta")>

      <ModelRepresentationClass("http://nmf.codeplex.com/nmeta/#//MetaElement")>

      Public MustInherit Class MetaElement Inherits ModelElement Implements IMetaElement, IModelElement, INotifyPropertyChanged, INotifyPropertyChanging
  inheritance:
  - System.Object
  - NMF.Models.ModelElement
  derivedClasses:
  - NMF.Models.Meta.Event
  - NMF.Models.Meta.Literal
  - NMF.Models.Meta.Namespace
  - NMF.Models.Meta.Reference
  - NMF.Models.Meta.Type
  - NMF.Models.Meta.TypedElement
  implements:
  - NMF.Models.Meta.IMetaElement
  - NMF.Models.IModelElement
  - System.ComponentModel.INotifyPropertyChanged
  - System.ComponentModel.INotifyPropertyChanging
  inheritedMembers:
  - NMF.Models.ModelElement.Model
  - NMF.Models.ModelElement.Freeze
  - NMF.Models.ModelElement.Lock
  - NMF.Models.ModelElement.IsFrozen
  - NMF.Models.ModelElement.IsLocked
  - NMF.Models.ModelElement.Unlock
  - NMF.Models.ModelElement.TryUnlock
  - NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  - NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.Parent
  - NMF.Models.ModelElement.Children
  - NMF.Models.ModelElement.RelativeUri
  - NMF.Models.ModelElement.AbsoluteUri
  - NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  - NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.ModelElement.EnforceModels
  - NMF.Models.ModelElement.PreferIdentifiers
  - NMF.Models.ModelElement.ToString
  - NMF.Models.ModelElement.KeyChanged
  - NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  - NMF.Models.ModelElement.Resolve(System.Uri)
  - NMF.Models.ModelElement.Resolve(System.String)
  - NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetCompositionName(System.Object)
  - NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  - NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  - NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  - NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  - NMF.Models.ModelElement.GetExpressionForReference(System.String)
  - NMF.Models.ModelElement.Extensions
  - NMF.Models.ModelElement.GetExtension``1
  - NMF.Models.ModelElement.ReferencedElements
  - NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.Delete
  - NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  - NMF.Models.ModelElement.PropertyChanged
  - NMF.Models.ModelElement.PropertyChanging
  - NMF.Models.ModelElement.Deleted
  - NMF.Models.ModelElement.Deleting
  - NMF.Models.ModelElement.UriChanged
  - NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  - NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  - NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  - NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  - NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  - NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  - NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  - NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  - NMF.Models.ModelElement.BubbledChange
  - NMF.Models.ModelElement.ParentChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  - NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  attributes:
  - type: NMF.Serialization.XmlIdentifierAttribute
    ctor: NMF.Serialization.XmlIdentifierAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Name
  - type: NMF.Serialization.XmlNamespaceAttribute
    ctor: NMF.Serialization.XmlNamespaceAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/
  - type: NMF.Serialization.XmlNamespacePrefixAttribute
    ctor: NMF.Serialization.XmlNamespacePrefixAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nmeta
  - type: NMF.Models.ModelRepresentationClassAttribute
    ctor: NMF.Models.ModelRepresentationClassAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: http://nmf.codeplex.com/nmeta/#//MetaElement
- uid: NMF.Models.Meta.MetaElement.Name
  commentId: P:NMF.Models.Meta.MetaElement.Name
  id: Name
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MetaElement.Name
  fullName: NMF.Models.Meta.MetaElement.Name
  type: Property
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Name
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 71
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe Name property\n"
  example: []
  syntax:
    content: >-
      [Id]

      [XmlAttribute(true)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Id>

      <XmlAttribute(True)>

      Public Property Name As String
  overload: NMF.Models.Meta.MetaElement.Name*
  implements:
  - NMF.Models.Meta.IMetaElement.Name
  attributes:
  - type: NMF.Models.IdAttribute
    ctor: NMF.Models.IdAttribute.#ctor
    arguments: []
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.MetaElement.Summary
  commentId: P:NMF.Models.Meta.MetaElement.Summary
  id: Summary
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: MetaElement.Summary
  fullName: NMF.Models.Meta.MetaElement.Summary
  type: Property
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Summary
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 98
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe Summary property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <XmlAttribute(True)>

      Public Property Summary As String
  overload: NMF.Models.Meta.MetaElement.Summary*
  implements:
  - NMF.Models.Meta.IMetaElement.Summary
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.MetaElement.Remarks
  commentId: P:NMF.Models.Meta.MetaElement.Remarks
  id: Remarks
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: Remarks
  nameWithType: MetaElement.Remarks
  fullName: NMF.Models.Meta.MetaElement.Remarks
  type: Property
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Remarks
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 124
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nThe Remarks property\n"
  example: []
  syntax:
    content: >-
      [XmlAttribute(true)]

      public string Remarks { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <XmlAttribute(True)>

      Public Property Remarks As String
  overload: NMF.Models.Meta.MetaElement.Remarks*
  implements:
  - NMF.Models.Meta.IMetaElement.Remarks
  attributes:
  - type: NMF.Serialization.XmlAttributeAttribute
    ctor: NMF.Serialization.XmlAttributeAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: NMF.Models.Meta.MetaElement.ClassInstance
  commentId: P:NMF.Models.Meta.MetaElement.ClassInstance
  id: ClassInstance
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: ClassInstance
  nameWithType: MetaElement.ClassInstance
  fullName: NMF.Models.Meta.MetaElement.ClassInstance
  type: Property
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassInstance
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 150
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class model for this type\n"
  example: []
  syntax:
    content: public static IClass ClassInstance { get; }
    parameters: []
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Shared ReadOnly Property ClassInstance As IClass
  overload: NMF.Models.Meta.MetaElement.ClassInstance*
- uid: NMF.Models.Meta.MetaElement.IsIdentified
  commentId: P:NMF.Models.Meta.MetaElement.IsIdentified
  id: IsIdentified
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: IsIdentified
  nameWithType: MetaElement.IsIdentified
  fullName: NMF.Models.Meta.MetaElement.IsIdentified
  type: Property
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsIdentified
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 165
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets a value indicating whether the current model element can be identified by an attribute value\n"
  example: []
  syntax:
    content: public override bool IsIdentified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsIdentified As Boolean
  overridden: NMF.Models.ModelElement.IsIdentified
  overload: NMF.Models.Meta.MetaElement.IsIdentified*
  implements:
  - NMF.Models.IModelElement.IsIdentified
- uid: NMF.Models.Meta.MetaElement.NameChanging
  commentId: E:NMF.Models.Meta.MetaElement.NameChanging
  id: NameChanging
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: NameChanging
  nameWithType: MetaElement.NameChanging
  fullName: NMF.Models.Meta.MetaElement.NameChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NameChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 176
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Name property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NameChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NameChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.NameChanging
- uid: NMF.Models.Meta.MetaElement.NameChanged
  commentId: E:NMF.Models.Meta.MetaElement.NameChanged
  id: NameChanged
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: NameChanged
  nameWithType: MetaElement.NameChanged
  fullName: NMF.Models.Meta.MetaElement.NameChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NameChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 181
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Name property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> NameChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event NameChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.NameChanged
- uid: NMF.Models.Meta.MetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanging
  id: SummaryChanging
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: SummaryChanging
  nameWithType: MetaElement.SummaryChanging
  fullName: NMF.Models.Meta.MetaElement.SummaryChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SummaryChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 186
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Summary property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> SummaryChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event SummaryChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.SummaryChanging
- uid: NMF.Models.Meta.MetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.MetaElement.SummaryChanged
  id: SummaryChanged
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: SummaryChanged
  nameWithType: MetaElement.SummaryChanged
  fullName: NMF.Models.Meta.MetaElement.SummaryChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SummaryChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 191
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Summary property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> SummaryChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event SummaryChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.SummaryChanged
- uid: NMF.Models.Meta.MetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanging
  id: RemarksChanging
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: RemarksChanging
  nameWithType: MetaElement.RemarksChanging
  fullName: NMF.Models.Meta.MetaElement.RemarksChanging
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RemarksChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 196
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired before the Remarks property changes its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> RemarksChanging
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event RemarksChanging As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.RemarksChanging
- uid: NMF.Models.Meta.MetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.MetaElement.RemarksChanged
  id: RemarksChanged
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: RemarksChanged
  nameWithType: MetaElement.RemarksChanged
  fullName: NMF.Models.Meta.MetaElement.RemarksChanged
  type: Event
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RemarksChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 201
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets fired when the Remarks property changed its value\n"
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> RemarksChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event RemarksChanged As EventHandler(Of ValueChangedEventArgs)
  implements:
  - NMF.Models.Meta.IMetaElement.RemarksChanged
- uid: NMF.Models.Meta.MetaElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnNameChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNameChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 212
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the NameChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnNameChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNameChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnNameChanging*
- uid: NMF.Models.Meta.MetaElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnNameChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnNameChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnNameChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnNameChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 225
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the NameChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnNameChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnNameChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnNameChanged*
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnSummaryChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnSummaryChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnSummaryChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 243
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the SummaryChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnSummaryChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnSummaryChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnSummaryChanging*
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnSummaryChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnSummaryChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnSummaryChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnSummaryChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnSummaryChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 256
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the SummaryChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnSummaryChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnSummaryChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnSummaryChanged*
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanging(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanging(NMF.Expressions.ValueChangedEventArgs)
  id: OnRemarksChanging(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnRemarksChanging(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanging(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnRemarksChanging
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 274
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the RemarksChanging event\n"
  example: []
  syntax:
    content: protected virtual void OnRemarksChanging(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnRemarksChanging(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnRemarksChanging*
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Meta.MetaElement.OnRemarksChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnRemarksChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: OnRemarksChanged(ValueChangedEventArgs)
  nameWithType: MetaElement.OnRemarksChanged(ValueChangedEventArgs)
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnRemarksChanged
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 287
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nRaises the RemarksChanged event\n"
  example: []
  syntax:
    content: protected virtual void OnRemarksChanged(ValueChangedEventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: NMF.Expressions.ValueChangedEventArgs
      description: The event data
    content.vb: Protected Overridable Sub OnRemarksChanged(eventArgs As ValueChangedEventArgs)
  overload: NMF.Models.Meta.MetaElement.OnRemarksChanged*
- uid: NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.Meta.MetaElement.GetAttributeValue(System.String,System.Int32)
  id: GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: GetAttributeValue(string, int)
  nameWithType: MetaElement.GetAttributeValue(string, int)
  fullName: NMF.Models.Meta.MetaElement.GetAttributeValue(string, int)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetAttributeValue
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 302
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nResolves the given attribute name\n"
  example: []
  syntax:
    content: protected override object GetAttributeValue(string attribute, int index)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute name
    - id: index
      type: System.Int32
      description: The index of this attribute
    return:
      type: System.Object
      description: The attribute value or null if it could not be found
    content.vb: Protected Overrides Function GetAttributeValue(attribute As String, index As Integer) As Object
  overridden: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  overload: NMF.Models.Meta.MetaElement.GetAttributeValue*
  nameWithType.vb: MetaElement.GetAttributeValue(String, Integer)
  fullName.vb: NMF.Models.Meta.MetaElement.GetAttributeValue(String, Integer)
  name.vb: GetAttributeValue(String, Integer)
- uid: NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.Meta.MetaElement.SetFeature(System.String,System.Object)
  id: SetFeature(System.String,System.Object)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: SetFeature(string, object)
  nameWithType: MetaElement.SetFeature(string, object)
  fullName: NMF.Models.Meta.MetaElement.SetFeature(string, object)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetFeature
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 324
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nSets a value to the given feature\n"
  example: []
  syntax:
    content: protected override void SetFeature(string feature, object value)
    parameters:
    - id: feature
      type: System.String
      description: The requested feature
    - id: value
      type: System.Object
      description: The value that should be set to that feature
    content.vb: Protected Overrides Sub SetFeature(feature As String, value As Object)
  overridden: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  overload: NMF.Models.Meta.MetaElement.SetFeature*
  nameWithType.vb: MetaElement.SetFeature(String, Object)
  fullName.vb: NMF.Models.Meta.MetaElement.SetFeature(String, Object)
  name.vb: SetFeature(String, Object)
- uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.Meta.MetaElement.GetExpressionForAttribute(System.String)
  id: GetExpressionForAttribute(System.String)
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: GetExpressionForAttribute(string)
  nameWithType: MetaElement.GetExpressionForAttribute(string)
  fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(string)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetExpressionForAttribute
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 349
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the property expression for the given attribute\n"
  example: []
  syntax:
    content: protected override INotifyExpression<object> GetExpressionForAttribute(string attribute)
    parameters:
    - id: attribute
      type: System.String
      description: The requested attribute in upper case
    return:
      type: NMF.Expressions.INotifyExpression{System.Object}
      description: An incremental property expression
    content.vb: Protected Overrides Function GetExpressionForAttribute(attribute As String) As INotifyExpression(Of Object)
  overridden: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  overload: NMF.Models.Meta.MetaElement.GetExpressionForAttribute*
  nameWithType.vb: MetaElement.GetExpressionForAttribute(String)
  fullName.vb: NMF.Models.Meta.MetaElement.GetExpressionForAttribute(String)
  name.vb: GetExpressionForAttribute(String)
- uid: NMF.Models.Meta.MetaElement.GetClass
  commentId: M:NMF.Models.Meta.MetaElement.GetClass
  id: GetClass
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: GetClass()
  nameWithType: MetaElement.GetClass()
  fullName: NMF.Models.Meta.MetaElement.GetClass()
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetClass
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 369
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the Class for this model element\n"
  example: []
  syntax:
    content: public override IClass GetClass()
    return:
      type: NMF.Models.Meta.IClass
    content.vb: Public Overrides Function GetClass() As IClass
  overridden: NMF.Models.ModelElement.GetClass
  overload: NMF.Models.Meta.MetaElement.GetClass*
  implements:
  - NMF.Models.IModelElement.GetClass
- uid: NMF.Models.Meta.MetaElement.ToIdentifierString
  commentId: M:NMF.Models.Meta.MetaElement.ToIdentifierString
  id: ToIdentifierString
  parent: NMF.Models.Meta.MetaElement
  langs:
  - csharp
  - vb
  name: ToIdentifierString()
  nameWithType: MetaElement.ToIdentifierString()
  fullName: NMF.Models.Meta.MetaElement.ToIdentifierString()
  type: Method
  source:
    remote:
      path: Models/Models/Meta/MetaElement.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ToIdentifierString
    path: src/Models/Models/Meta/MetaElement.cs
    startLine: 382
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  summary: "\nGets the identifier string for this model element\n"
  example: []
  syntax:
    content: public override string ToIdentifierString()
    return:
      type: System.String
      description: The identifier string
    content.vb: Public Overrides Function ToIdentifierString() As String
  overridden: NMF.Models.ModelElement.ToIdentifierString
  overload: NMF.Models.Meta.MetaElement.ToIdentifierString*
  implements:
  - NMF.Models.IModelElement.ToIdentifierString
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  - name: .
  - uid: NMF.Models.Meta
    name: Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Models.ModelElement
  commentId: T:NMF.Models.ModelElement
  parent: NMF.Models
  name: ModelElement
  nameWithType: ModelElement
  fullName: NMF.Models.ModelElement
- uid: NMF.Models.Meta.IMetaElement
  commentId: T:NMF.Models.Meta.IMetaElement
  parent: NMF.Models.Meta
  name: IMetaElement
  nameWithType: IMetaElement
  fullName: NMF.Models.Meta.IMetaElement
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.INotifyPropertyChanging
  commentId: T:System.ComponentModel.INotifyPropertyChanging
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanging
  nameWithType: INotifyPropertyChanging
  fullName: System.ComponentModel.INotifyPropertyChanging
- uid: NMF.Models.ModelElement.Model
  commentId: P:NMF.Models.ModelElement.Model
  parent: NMF.Models.ModelElement
  name: Model
  nameWithType: ModelElement.Model
  fullName: NMF.Models.ModelElement.Model
- uid: NMF.Models.ModelElement.Freeze
  commentId: M:NMF.Models.ModelElement.Freeze
  parent: NMF.Models.ModelElement
  name: Freeze()
  nameWithType: ModelElement.Freeze()
  fullName: NMF.Models.ModelElement.Freeze()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Freeze
    name: Freeze
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.Lock
  commentId: M:NMF.Models.ModelElement.Lock
  parent: NMF.Models.ModelElement
  name: Lock()
  nameWithType: ModelElement.Lock()
  fullName: NMF.Models.ModelElement.Lock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Lock
    name: Lock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.IsFrozen
  commentId: P:NMF.Models.ModelElement.IsFrozen
  parent: NMF.Models.ModelElement
  name: IsFrozen
  nameWithType: ModelElement.IsFrozen
  fullName: NMF.Models.ModelElement.IsFrozen
- uid: NMF.Models.ModelElement.IsLocked
  commentId: P:NMF.Models.ModelElement.IsLocked
  parent: NMF.Models.ModelElement
  name: IsLocked
  nameWithType: ModelElement.IsLocked
  fullName: NMF.Models.ModelElement.IsLocked
- uid: NMF.Models.ModelElement.Unlock
  commentId: M:NMF.Models.ModelElement.Unlock
  parent: NMF.Models.ModelElement
  name: Unlock()
  nameWithType: ModelElement.Unlock()
  fullName: NMF.Models.ModelElement.Unlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Unlock
    name: Unlock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.TryUnlock
  commentId: M:NMF.Models.ModelElement.TryUnlock
  parent: NMF.Models.ModelElement
  name: TryUnlock()
  nameWithType: ModelElement.TryUnlock()
  fullName: NMF.Models.ModelElement.TryUnlock()
  spec.csharp:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.TryUnlock
    name: TryUnlock
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  commentId: M:NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetContainerReference(IModelElement, out int)
  nameWithType: ModelElement.GetContainerReference(IModelElement, out int)
  fullName: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, out int)
  nameWithType.vb: ModelElement.GetContainerReference(IModelElement, Integer)
  fullName.vb: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement, Integer)
  name.vb: GetContainerReference(IModelElement, Integer)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetContainerReference(NMF.Models.IModelElement,System.Int32@)
    name: GetContainerReference
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: PropagateNewModel(Model, Model, IModelElement)
  nameWithType: ModelElement.PropagateNewModel(Model, Model, IModelElement)
  fullName: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model, NMF.Models.Model, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
  - name: (
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewModel(NMF.Models.Model,NMF.Models.Model,NMF.Models.IModelElement)
    name: PropagateNewModel
  - name: (
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: NMF.Models.Model
    name: Model
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnChildCreated(IModelElement)
  nameWithType: ModelElement.OnChildCreated(IModelElement)
  fullName: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnChildCreated(NMF.Models.IModelElement)
    name: OnChildCreated
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanging(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanging(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanging(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanging
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: OnParentChanged(IModelElement, IModelElement)
  nameWithType: ModelElement.OnParentChanged(IModelElement, IModelElement)
  fullName: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnParentChanged(NMF.Models.IModelElement,NMF.Models.IModelElement)
    name: OnParentChanged
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.Parent
  commentId: P:NMF.Models.ModelElement.Parent
  parent: NMF.Models.ModelElement
  name: Parent
  nameWithType: ModelElement.Parent
  fullName: NMF.Models.ModelElement.Parent
- uid: NMF.Models.ModelElement.Children
  commentId: P:NMF.Models.ModelElement.Children
  parent: NMF.Models.ModelElement
  name: Children
  nameWithType: ModelElement.Children
  fullName: NMF.Models.ModelElement.Children
- uid: NMF.Models.ModelElement.RelativeUri
  commentId: P:NMF.Models.ModelElement.RelativeUri
  parent: NMF.Models.ModelElement
  name: RelativeUri
  nameWithType: ModelElement.RelativeUri
  fullName: NMF.Models.ModelElement.RelativeUri
- uid: NMF.Models.ModelElement.AbsoluteUri
  commentId: P:NMF.Models.ModelElement.AbsoluteUri
  parent: NMF.Models.ModelElement
  name: AbsoluteUri
  nameWithType: ModelElement.AbsoluteUri
  fullName: NMF.Models.ModelElement.AbsoluteUri
- uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriWithFragment(string, bool, IModelElement)
  nameWithType: ModelElement.CreateUriWithFragment(string, bool, IModelElement)
  fullName: NMF.Models.ModelElement.CreateUriWithFragment(string, bool, NMF.Models.IModelElement)
  nameWithType.vb: ModelElement.CreateUriWithFragment(String, Boolean, IModelElement)
  fullName.vb: NMF.Models.ModelElement.CreateUriWithFragment(String, Boolean, NMF.Models.IModelElement)
  name.vb: CreateUriWithFragment(String, Boolean, IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriWithFragment(System.String,System.Boolean,NMF.Models.IModelElement)
    name: CreateUriWithFragment
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  commentId: M:NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CreateUriFromGlobalIdentifier(string, bool)
  nameWithType: ModelElement.CreateUriFromGlobalIdentifier(string, bool)
  fullName: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(string, bool)
  nameWithType.vb: ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  fullName.vb: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(String, Boolean)
  name.vb: CreateUriFromGlobalIdentifier(String, Boolean)
  spec.csharp:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CreateUriFromGlobalIdentifier(System.String,System.Boolean)
    name: CreateUriFromGlobalIdentifier
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: PropagateNewId(ValueChangedEventArgs)
  nameWithType: ModelElement.PropagateNewId(ValueChangedEventArgs)
  fullName: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.PropagateNewId(NMF.Expressions.ValueChangedEventArgs)
    name: PropagateNewId
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
- uid: NMF.Models.ModelElement.EnforceModels
  commentId: P:NMF.Models.ModelElement.EnforceModels
  parent: NMF.Models.ModelElement
  name: EnforceModels
  nameWithType: ModelElement.EnforceModels
  fullName: NMF.Models.ModelElement.EnforceModels
- uid: NMF.Models.ModelElement.PreferIdentifiers
  commentId: P:NMF.Models.ModelElement.PreferIdentifiers
  parent: NMF.Models.ModelElement
  name: PreferIdentifiers
  nameWithType: ModelElement.PreferIdentifiers
  fullName: NMF.Models.ModelElement.PreferIdentifiers
- uid: NMF.Models.ModelElement.ToString
  commentId: M:NMF.Models.ModelElement.ToString
  parent: NMF.Models.ModelElement
  name: ToString()
  nameWithType: ModelElement.ToString()
  fullName: NMF.Models.ModelElement.ToString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToString
    name: ToString
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.KeyChanged
  commentId: E:NMF.Models.ModelElement.KeyChanged
  parent: NMF.Models.ModelElement
  name: KeyChanged
  nameWithType: ModelElement.KeyChanged
  fullName: NMF.Models.ModelElement.KeyChanged
- uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  commentId: M:NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnKeyChanged(EventArgs)
  nameWithType: ModelElement.OnKeyChanged(EventArgs)
  fullName: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnKeyChanged(System.EventArgs)
    name: OnKeyChanged
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.Resolve(System.Uri)
  commentId: M:NMF.Models.ModelElement.Resolve(System.Uri)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(Uri)
  nameWithType: ModelElement.Resolve(Uri)
  fullName: NMF.Models.ModelElement.Resolve(System.Uri)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.Uri)
    name: Resolve
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.Resolve(System.String)
  commentId: M:NMF.Models.ModelElement.Resolve(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: Resolve(string)
  nameWithType: ModelElement.Resolve(string)
  fullName: NMF.Models.ModelElement.Resolve(string)
  nameWithType.vb: ModelElement.Resolve(String)
  fullName.vb: NMF.Models.ModelElement.Resolve(String)
  name.vb: Resolve(String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Resolve(System.String)
    name: Resolve
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForChild(NMF.Models.IModelElement)
    name: GetRelativePathForChild
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: GetRelativePathForNonIdentifiedChild(IModelElement)
  nameWithType: ModelElement.GetRelativePathForNonIdentifiedChild(IModelElement)
  fullName: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetRelativePathForNonIdentifiedChild(NMF.Models.IModelElement)
    name: GetRelativePathForNonIdentifiedChild
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
  commentId: M:NMF.Models.ModelElement.GetCompositionName(System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCompositionName(object)
  nameWithType: ModelElement.GetCompositionName(object)
  fullName: NMF.Models.ModelElement.GetCompositionName(object)
  nameWithType.vb: ModelElement.GetCompositionName(Object)
  fullName.vb: NMF.Models.ModelElement.GetCompositionName(Object)
  name.vb: GetCompositionName(Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCompositionName(System.Object)
    name: GetCompositionName
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  commentId: M:NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForPathSegment(string)
  nameWithType: ModelElement.GetModelElementForPathSegment(string)
  fullName: NMF.Models.ModelElement.GetModelElementForPathSegment(string)
  nameWithType.vb: ModelElement.GetModelElementForPathSegment(String)
  fullName.vb: NMF.Models.ModelElement.GetModelElementForPathSegment(String)
  name.vb: GetModelElementForPathSegment(String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForPathSegment(System.String)
    name: GetModelElementForPathSegment
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetModelElementForReference(string, int)
  nameWithType: ModelElement.GetModelElementForReference(string, int)
  fullName: NMF.Models.ModelElement.GetModelElementForReference(string, int)
  nameWithType.vb: ModelElement.GetModelElementForReference(String, Integer)
  fullName.vb: NMF.Models.ModelElement.GetModelElementForReference(String, Integer)
  name.vb: GetModelElementForReference(String, Integer)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetModelElementForReference(System.String,System.Int32)
    name: GetModelElementForReference
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  commentId: M:NMF.Models.ModelElement.GetCollectionForFeature(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetCollectionForFeature(string)
  nameWithType: ModelElement.GetCollectionForFeature(string)
  fullName: NMF.Models.ModelElement.GetCollectionForFeature(string)
  nameWithType.vb: ModelElement.GetCollectionForFeature(String)
  fullName.vb: NMF.Models.ModelElement.GetCollectionForFeature(String)
  name.vb: GetCollectionForFeature(String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetCollectionForFeature(System.String)
    name: GetCollectionForFeature
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  commentId: M:NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
  parent: NMF.Models.ModelElement
  isExternal: true
  name: CallOperation(IOperation, object[])
  nameWithType: ModelElement.CallOperation(IOperation, object[])
  fullName: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, object[])
  nameWithType.vb: ModelElement.CallOperation(IOperation, Object())
  fullName.vb: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation, Object())
  name.vb: CallOperation(IOperation, Object())
  spec.csharp:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.CallOperation(NMF.Models.Meta.IOperation,System.Object[])
    name: CallOperation
  - name: (
  - uid: NMF.Models.Meta.IOperation
    name: IOperation
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForReference(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForReference(string)
  nameWithType: ModelElement.GetExpressionForReference(string)
  fullName: NMF.Models.ModelElement.GetExpressionForReference(string)
  nameWithType.vb: ModelElement.GetExpressionForReference(String)
  fullName.vb: NMF.Models.ModelElement.GetExpressionForReference(String)
  name.vb: GetExpressionForReference(String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForReference(System.String)
    name: GetExpressionForReference
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.Extensions
  commentId: P:NMF.Models.ModelElement.Extensions
  parent: NMF.Models.ModelElement
  name: Extensions
  nameWithType: ModelElement.Extensions
  fullName: NMF.Models.ModelElement.Extensions
- uid: NMF.Models.ModelElement.GetExtension``1
  commentId: M:NMF.Models.ModelElement.GetExtension``1
  parent: NMF.Models.ModelElement
  name: GetExtension<T>()
  nameWithType: ModelElement.GetExtension<T>()
  fullName: NMF.Models.ModelElement.GetExtension<T>()
  nameWithType.vb: ModelElement.GetExtension(Of T)()
  fullName.vb: NMF.Models.ModelElement.GetExtension(Of T)()
  name.vb: GetExtension(Of T)()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExtension``1
    name: GetExtension
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.ReferencedElements
  commentId: P:NMF.Models.ModelElement.ReferencedElements
  parent: NMF.Models.ModelElement
  name: ReferencedElements
  nameWithType: ModelElement.ReferencedElements
  fullName: NMF.Models.ModelElement.ReferencedElements
- uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanged(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanged(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanged(string, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanged(String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanged(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanged(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: )
  - name: )
- uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnPropertyChanging(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnPropertyChanging(string, ValueChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnPropertyChanging(string, NMF.Expressions.ValueChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnPropertyChanging(String, NMF.Expressions.ValueChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnPropertyChanging(String, ValueChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnPropertyChanging(System.String,NMF.Expressions.ValueChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnPropertyChanging
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: )
  - name: )
- uid: NMF.Models.ModelElement.Delete
  commentId: M:NMF.Models.ModelElement.Delete
  parent: NMF.Models.ModelElement
  name: Delete()
  nameWithType: ModelElement.Delete()
  fullName: NMF.Models.ModelElement.Delete()
  spec.csharp:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.Delete
    name: Delete
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleting(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleting(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
  - name: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleting(NMF.Models.UriChangedEventArgs)
    name: OnDeleting
  - name: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
  - name: )
- uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  commentId: M:NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  parent: NMF.Models.ModelElement
  name: OnDeleted(UriChangedEventArgs)
  nameWithType: ModelElement.OnDeleted(UriChangedEventArgs)
  fullName: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
  - name: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnDeleted(NMF.Models.UriChangedEventArgs)
    name: OnDeleted
  - name: (
  - uid: NMF.Models.UriChangedEventArgs
    name: UriChangedEventArgs
  - name: )
- uid: NMF.Models.ModelElement.PropertyChanged
  commentId: E:NMF.Models.ModelElement.PropertyChanged
  parent: NMF.Models.ModelElement
  name: PropertyChanged
  nameWithType: ModelElement.PropertyChanged
  fullName: NMF.Models.ModelElement.PropertyChanged
- uid: NMF.Models.ModelElement.PropertyChanging
  commentId: E:NMF.Models.ModelElement.PropertyChanging
  parent: NMF.Models.ModelElement
  name: PropertyChanging
  nameWithType: ModelElement.PropertyChanging
  fullName: NMF.Models.ModelElement.PropertyChanging
- uid: NMF.Models.ModelElement.Deleted
  commentId: E:NMF.Models.ModelElement.Deleted
  parent: NMF.Models.ModelElement
  name: Deleted
  nameWithType: ModelElement.Deleted
  fullName: NMF.Models.ModelElement.Deleted
- uid: NMF.Models.ModelElement.Deleting
  commentId: E:NMF.Models.ModelElement.Deleting
  parent: NMF.Models.ModelElement
  name: Deleting
  nameWithType: ModelElement.Deleting
  fullName: NMF.Models.ModelElement.Deleting
- uid: NMF.Models.ModelElement.UriChanged
  commentId: E:NMF.Models.ModelElement.UriChanged
  parent: NMF.Models.ModelElement
  name: UriChanged
  nameWithType: ModelElement.UriChanged
  fullName: NMF.Models.ModelElement.UriChanged
- uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetReferencedElement(IReference, int)
  nameWithType: ModelElement.GetReferencedElement(IReference, int)
  fullName: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, int)
  nameWithType.vb: ModelElement.GetReferencedElement(IReference, Integer)
  fullName.vb: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference, Integer)
  name.vb: GetReferencedElement(IReference, Integer)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElement(NMF.Models.Meta.IReference,System.Int32)
    name: GetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
  parent: NMF.Models.ModelElement
  name: SetReferencedElement(IReference, IModelElement)
  nameWithType: ModelElement.SetReferencedElement(IReference, IModelElement)
  fullName: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference, NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetReferencedElement(NMF.Models.Meta.IReference,NMF.Models.IModelElement)
    name: SetReferencedElement
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: ','
  - name: " "
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  commentId: M:NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  parent: NMF.Models.ModelElement
  name: GetReferencedElements(IReference)
  nameWithType: ModelElement.GetReferencedElements(IReference)
  fullName: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetReferencedElements(NMF.Models.Meta.IReference)
    name: GetReferencedElements
  - name: (
  - uid: NMF.Models.Meta.IReference
    name: IReference
  - name: )
- uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(IAttribute, int)
  nameWithType: ModelElement.GetAttributeValue(IAttribute, int)
  fullName: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, int)
  nameWithType.vb: ModelElement.GetAttributeValue(IAttribute, Integer)
  fullName.vb: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute, Integer)
  name.vb: GetAttributeValue(IAttribute, Integer)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(NMF.Models.Meta.IAttribute,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  commentId: M:NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetAttributeValue(IAttribute, object)
  nameWithType: ModelElement.SetAttributeValue(IAttribute, object)
  fullName: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, object)
  nameWithType.vb: ModelElement.SetAttributeValue(IAttribute, Object)
  fullName.vb: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute, Object)
  name.vb: SetAttributeValue(IAttribute, Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetAttributeValue(NMF.Models.Meta.IAttribute,System.Object)
    name: SetAttributeValue
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  commentId: M:NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  parent: NMF.Models.ModelElement
  name: GetAttributeValues(IAttribute)
  nameWithType: ModelElement.GetAttributeValues(IAttribute)
  fullName: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValues(NMF.Models.Meta.IAttribute)
    name: GetAttributeValues
  - name: (
  - uid: NMF.Models.Meta.IAttribute
    name: IAttribute
  - name: )
- uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanged(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanged(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanged(string, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanged(String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanged(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanged(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanged
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: )
  - name: )
- uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  commentId: M:NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
  parent: NMF.Models.ModelElement
  isExternal: true
  name: OnCollectionChanging(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  nameWithType: ModelElement.OnCollectionChanging(string, NotifyCollectionChangedEventArgs, Lazy<ITypedElement>)
  fullName: NMF.Models.ModelElement.OnCollectionChanging(string, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy<NMF.Models.Meta.ITypedElement>)
  nameWithType.vb: ModelElement.OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  fullName.vb: NMF.Models.ModelElement.OnCollectionChanging(String, System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Lazy(Of NMF.Models.Meta.ITypedElement))
  name.vb: OnCollectionChanging(String, NotifyCollectionChangedEventArgs, Lazy(Of ITypedElement))
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: <
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnCollectionChanging(System.String,System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Lazy{NMF.Models.Meta.ITypedElement})
    name: OnCollectionChanging
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Models.Meta.ITypedElement
    name: ITypedElement
  - name: )
  - name: )
- uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  commentId: M:NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  parent: NMF.Models.ModelElement
  name: OnBubbledChange(BubbledChangeEventArgs)
  nameWithType: ModelElement.OnBubbledChange(BubbledChangeEventArgs)
  fullName: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
  spec.csharp:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
  - name: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.OnBubbledChange(NMF.Models.BubbledChangeEventArgs)
    name: OnBubbledChange
  - name: (
  - uid: NMF.Models.BubbledChangeEventArgs
    name: BubbledChangeEventArgs
  - name: )
- uid: NMF.Models.ModelElement.BubbledChange
  commentId: E:NMF.Models.ModelElement.BubbledChange
  parent: NMF.Models.ModelElement
  name: BubbledChange
  nameWithType: ModelElement.BubbledChange
  fullName: NMF.Models.ModelElement.BubbledChange
- uid: NMF.Models.ModelElement.ParentChanged
  commentId: E:NMF.Models.ModelElement.ParentChanged
  parent: NMF.Models.ModelElement
  name: ParentChanged
  nameWithType: ModelElement.ParentChanged
  fullName: NMF.Models.ModelElement.ParentChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Ancestors
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.AncestorTree
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.IModelElement.NMF.Models.ModelExtensions.Descendants
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  parent: NMF.Models.ModelExtensions
  definition: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Models
    name: Models
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
- uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  name: Ancestors(IModelElement)
  nameWithType: ModelExtensions.Ancestors(IModelElement)
  fullName: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Ancestors(NMF.Models.IModelElement)
    name: Ancestors
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelExtensions
  commentId: T:NMF.Models.ModelExtensions
  parent: NMF.Models
  name: ModelExtensions
  nameWithType: ModelExtensions
  fullName: NMF.Models.ModelExtensions
- uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  name: AncestorTree(IModelElement)
  nameWithType: ModelExtensions.AncestorTree(IModelElement)
  fullName: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.AncestorTree(NMF.Models.IModelElement)
    name: AncestorTree
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  commentId: M:NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  name: Descendants(IModelElement)
  nameWithType: ModelExtensions.Descendants(IModelElement)
  fullName: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelExtensions.Descendants(NMF.Models.IModelElement)
    name: Descendants
  - name: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
  - name: )
- uid: NMF.Models.Meta.MetaElement.Name*
  commentId: Overload:NMF.Models.Meta.MetaElement.Name
  name: Name
  nameWithType: MetaElement.Name
  fullName: NMF.Models.Meta.MetaElement.Name
- uid: NMF.Models.Meta.IMetaElement.Name
  commentId: P:NMF.Models.Meta.IMetaElement.Name
  parent: NMF.Models.Meta.IMetaElement
  name: Name
  nameWithType: IMetaElement.Name
  fullName: NMF.Models.Meta.IMetaElement.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Models.Meta.MetaElement.Summary*
  commentId: Overload:NMF.Models.Meta.MetaElement.Summary
  name: Summary
  nameWithType: MetaElement.Summary
  fullName: NMF.Models.Meta.MetaElement.Summary
- uid: NMF.Models.Meta.IMetaElement.Summary
  commentId: P:NMF.Models.Meta.IMetaElement.Summary
  parent: NMF.Models.Meta.IMetaElement
  name: Summary
  nameWithType: IMetaElement.Summary
  fullName: NMF.Models.Meta.IMetaElement.Summary
- uid: NMF.Models.Meta.MetaElement.Remarks*
  commentId: Overload:NMF.Models.Meta.MetaElement.Remarks
  name: Remarks
  nameWithType: MetaElement.Remarks
  fullName: NMF.Models.Meta.MetaElement.Remarks
- uid: NMF.Models.Meta.IMetaElement.Remarks
  commentId: P:NMF.Models.Meta.IMetaElement.Remarks
  parent: NMF.Models.Meta.IMetaElement
  name: Remarks
  nameWithType: IMetaElement.Remarks
  fullName: NMF.Models.Meta.IMetaElement.Remarks
- uid: NMF.Models.Meta.MetaElement.ClassInstance*
  commentId: Overload:NMF.Models.Meta.MetaElement.ClassInstance
  name: ClassInstance
  nameWithType: MetaElement.ClassInstance
  fullName: NMF.Models.Meta.MetaElement.ClassInstance
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.ModelElement.IsIdentified
  commentId: P:NMF.Models.ModelElement.IsIdentified
  parent: NMF.Models.ModelElement
  name: IsIdentified
  nameWithType: ModelElement.IsIdentified
  fullName: NMF.Models.ModelElement.IsIdentified
- uid: NMF.Models.Meta.MetaElement.IsIdentified*
  commentId: Overload:NMF.Models.Meta.MetaElement.IsIdentified
  name: IsIdentified
  nameWithType: MetaElement.IsIdentified
  fullName: NMF.Models.Meta.MetaElement.IsIdentified
- uid: NMF.Models.IModelElement.IsIdentified
  commentId: P:NMF.Models.IModelElement.IsIdentified
  parent: NMF.Models.IModelElement
  name: IsIdentified
  nameWithType: IModelElement.IsIdentified
  fullName: NMF.Models.IModelElement.IsIdentified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Models.Meta.IMetaElement.NameChanging
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanging
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanging
  nameWithType: IMetaElement.NameChanging
  fullName: NMF.Models.Meta.IMetaElement.NameChanging
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NMF.Models.Meta.IMetaElement.NameChanged
  commentId: E:NMF.Models.Meta.IMetaElement.NameChanged
  parent: NMF.Models.Meta.IMetaElement
  name: NameChanged
  nameWithType: IMetaElement.NameChanged
  fullName: NMF.Models.Meta.IMetaElement.NameChanged
- uid: NMF.Models.Meta.IMetaElement.SummaryChanging
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanging
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanging
  nameWithType: IMetaElement.SummaryChanging
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanging
- uid: NMF.Models.Meta.IMetaElement.SummaryChanged
  commentId: E:NMF.Models.Meta.IMetaElement.SummaryChanged
  parent: NMF.Models.Meta.IMetaElement
  name: SummaryChanged
  nameWithType: IMetaElement.SummaryChanged
  fullName: NMF.Models.Meta.IMetaElement.SummaryChanged
- uid: NMF.Models.Meta.IMetaElement.RemarksChanging
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanging
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanging
  nameWithType: IMetaElement.RemarksChanging
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanging
- uid: NMF.Models.Meta.IMetaElement.RemarksChanged
  commentId: E:NMF.Models.Meta.IMetaElement.RemarksChanged
  parent: NMF.Models.Meta.IMetaElement
  name: RemarksChanged
  nameWithType: IMetaElement.RemarksChanged
  fullName: NMF.Models.Meta.IMetaElement.RemarksChanged
- uid: NMF.Models.Meta.MetaElement.OnNameChanging*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnNameChanging
  name: OnNameChanging
  nameWithType: MetaElement.OnNameChanging
  fullName: NMF.Models.Meta.MetaElement.OnNameChanging
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Models.Meta.MetaElement.OnNameChanged*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnNameChanged
  name: OnNameChanged
  nameWithType: MetaElement.OnNameChanged
  fullName: NMF.Models.Meta.MetaElement.OnNameChanged
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanging*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnSummaryChanging
  name: OnSummaryChanging
  nameWithType: MetaElement.OnSummaryChanging
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanging
- uid: NMF.Models.Meta.MetaElement.OnSummaryChanged*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnSummaryChanged
  name: OnSummaryChanged
  nameWithType: MetaElement.OnSummaryChanged
  fullName: NMF.Models.Meta.MetaElement.OnSummaryChanged
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanging*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnRemarksChanging
  name: OnRemarksChanging
  nameWithType: MetaElement.OnRemarksChanging
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanging
- uid: NMF.Models.Meta.MetaElement.OnRemarksChanged*
  commentId: Overload:NMF.Models.Meta.MetaElement.OnRemarksChanged
  name: OnRemarksChanged
  nameWithType: MetaElement.OnRemarksChanged
  fullName: NMF.Models.Meta.MetaElement.OnRemarksChanged
- uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  commentId: M:NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetAttributeValue(string, int)
  nameWithType: ModelElement.GetAttributeValue(string, int)
  fullName: NMF.Models.ModelElement.GetAttributeValue(string, int)
  nameWithType.vb: ModelElement.GetAttributeValue(String, Integer)
  fullName.vb: NMF.Models.ModelElement.GetAttributeValue(String, Integer)
  name.vb: GetAttributeValue(String, Integer)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetAttributeValue(System.String,System.Int32)
    name: GetAttributeValue
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Models.Meta.MetaElement.GetAttributeValue*
  commentId: Overload:NMF.Models.Meta.MetaElement.GetAttributeValue
  name: GetAttributeValue
  nameWithType: MetaElement.GetAttributeValue
  fullName: NMF.Models.Meta.MetaElement.GetAttributeValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  commentId: M:NMF.Models.ModelElement.SetFeature(System.String,System.Object)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: SetFeature(string, object)
  nameWithType: ModelElement.SetFeature(string, object)
  fullName: NMF.Models.ModelElement.SetFeature(string, object)
  nameWithType.vb: ModelElement.SetFeature(String, Object)
  fullName.vb: NMF.Models.ModelElement.SetFeature(String, Object)
  name.vb: SetFeature(String, Object)
  spec.csharp:
  - uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
    name: SetFeature
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.SetFeature(System.String,System.Object)
    name: SetFeature
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Models.Meta.MetaElement.SetFeature*
  commentId: Overload:NMF.Models.Meta.MetaElement.SetFeature
  name: SetFeature
  nameWithType: MetaElement.SetFeature
  fullName: NMF.Models.Meta.MetaElement.SetFeature
- uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  commentId: M:NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
  parent: NMF.Models.ModelElement
  isExternal: true
  name: GetExpressionForAttribute(string)
  nameWithType: ModelElement.GetExpressionForAttribute(string)
  fullName: NMF.Models.ModelElement.GetExpressionForAttribute(string)
  nameWithType.vb: ModelElement.GetExpressionForAttribute(String)
  fullName.vb: NMF.Models.ModelElement.GetExpressionForAttribute(String)
  name.vb: GetExpressionForAttribute(String)
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetExpressionForAttribute(System.String)
    name: GetExpressionForAttribute
  - name: (
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Models.Meta.MetaElement.GetExpressionForAttribute*
  commentId: Overload:NMF.Models.Meta.MetaElement.GetExpressionForAttribute
  name: GetExpressionForAttribute
  nameWithType: MetaElement.GetExpressionForAttribute
  fullName: NMF.Models.Meta.MetaElement.GetExpressionForAttribute
- uid: NMF.Expressions.INotifyExpression{System.Object}
  commentId: T:NMF.Expressions.INotifyExpression{System.Object}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<object>
  nameWithType: INotifyExpression<object>
  fullName: NMF.Expressions.INotifyExpression<object>
  nameWithType.vb: INotifyExpression(Of Object)
  fullName.vb: NMF.Expressions.INotifyExpression(Of Object)
  name.vb: INotifyExpression(Of Object)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: NMF.Expressions.INotifyExpression`1
  commentId: T:NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Models.ModelElement.GetClass
  commentId: M:NMF.Models.ModelElement.GetClass
  parent: NMF.Models.ModelElement
  name: GetClass()
  nameWithType: ModelElement.GetClass()
  fullName: NMF.Models.ModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.ModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
- uid: NMF.Models.Meta.MetaElement.GetClass*
  commentId: Overload:NMF.Models.Meta.MetaElement.GetClass
  name: GetClass
  nameWithType: MetaElement.GetClass
  fullName: NMF.Models.Meta.MetaElement.GetClass
- uid: NMF.Models.IModelElement.GetClass
  commentId: M:NMF.Models.IModelElement.GetClass
  parent: NMF.Models.IModelElement
  name: GetClass()
  nameWithType: IModelElement.GetClass()
  fullName: NMF.Models.IModelElement.GetClass()
  spec.csharp:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.GetClass
    name: GetClass
  - name: (
  - name: )
- uid: NMF.Models.ModelElement.ToIdentifierString
  commentId: M:NMF.Models.ModelElement.ToIdentifierString
  parent: NMF.Models.ModelElement
  name: ToIdentifierString()
  nameWithType: ModelElement.ToIdentifierString()
  fullName: NMF.Models.ModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.ModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
- uid: NMF.Models.Meta.MetaElement.ToIdentifierString*
  commentId: Overload:NMF.Models.Meta.MetaElement.ToIdentifierString
  name: ToIdentifierString
  nameWithType: MetaElement.ToIdentifierString
  fullName: NMF.Models.Meta.MetaElement.ToIdentifierString
- uid: NMF.Models.IModelElement.ToIdentifierString
  commentId: M:NMF.Models.IModelElement.ToIdentifierString
  parent: NMF.Models.IModelElement
  name: ToIdentifierString()
  nameWithType: IModelElement.ToIdentifierString()
  fullName: NMF.Models.IModelElement.ToIdentifierString()
  spec.csharp:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Models.IModelElement.ToIdentifierString
    name: ToIdentifierString
  - name: (
  - name: )
