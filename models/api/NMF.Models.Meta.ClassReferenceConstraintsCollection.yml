### YamlMime:ManagedReference
items:
- uid: NMF.Models.Meta.ClassReferenceConstraintsCollection
  commentId: T:NMF.Models.Meta.ClassReferenceConstraintsCollection
  id: ClassReferenceConstraintsCollection
  parent: NMF.Models.Meta
  children:
  - NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor(NMF.Models.Meta.IClass)
  - NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  langs:
  - csharp
  - vb
  name: ClassReferenceConstraintsCollection
  nameWithType: ClassReferenceConstraintsCollection
  fullName: NMF.Models.Meta.ClassReferenceConstraintsCollection
  type: Class
  source:
    remote:
      path: Models/Models/Meta/ClassReferenceConstraintsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClassReferenceConstraintsCollection
    path: src/Models/Models/Meta/ClassReferenceConstraintsCollection.cs
    startLine: 34
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: 'public class ClassReferenceConstraintsCollection : ObservableOppositeList<IClass, IReferenceConstraint>, IList<IReferenceConstraint>, ICollection<IReferenceConstraint>, IList, ICollection, IReadOnlyList<IReferenceConstraint>, IReadOnlyCollection<IReferenceConstraint>, IEnumerable<IReferenceConstraint>, IEnumerable, INotifyCollectionChanging, INotifyPropertyChanged, INotifyCollectionChanged, IListExpression<IReferenceConstraint>'
    content.vb: >-
      Public Class ClassReferenceConstraintsCollection

          Inherits ObservableOppositeList(Of IClass, IReferenceConstraint)

          Implements IList(Of IReferenceConstraint), ICollection(Of IReferenceConstraint), IList, ICollection, IReadOnlyList(Of IReferenceConstraint), IReadOnlyCollection(Of IReferenceConstraint), IEnumerable(Of IReferenceConstraint), IEnumerable, INotifyCollectionChanging, INotifyPropertyChanged, INotifyCollectionChanged, IListExpression(Of IReferenceConstraint)
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  implements:
  - System.Collections.Generic.IList{NMF.Models.Meta.IReferenceConstraint}
  - System.Collections.Generic.ICollection{NMF.Models.Meta.IReferenceConstraint}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.IReferenceConstraint}
  - System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.IReferenceConstraint}
  - System.Collections.Generic.IEnumerable{NMF.Models.Meta.IReferenceConstraint}
  - System.Collections.IEnumerable
  - NMF.Collections.ObjectModel.INotifyCollectionChanging
  - System.ComponentModel.INotifyPropertyChanged
  - System.Collections.Specialized.INotifyCollectionChanged
  - IListExpression{NMF.Models.Meta.IReferenceConstraint}
  inheritedMembers:
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.Parent
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.ClearItems
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  - NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  - NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}.AsNotifiable
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanging
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanged
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.PropertyChanged
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RequireEvents
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.ClearItems
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.MoveItem(System.Int32,System.Int32)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  - NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Add(NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Clear
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.CopyTo(NMF.Models.Meta.IReferenceConstraint[],System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Contains(NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.IndexOf(NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Insert(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Remove(NMF.Models.Meta.IReferenceConstraint)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Count
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Items
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsFixedSize
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor(NMF.Models.Meta.IClass)
  commentId: M:NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor(NMF.Models.Meta.IClass)
  id: '#ctor(NMF.Models.Meta.IClass)'
  parent: NMF.Models.Meta.ClassReferenceConstraintsCollection
  langs:
  - csharp
  - vb
  name: ClassReferenceConstraintsCollection(IClass)
  nameWithType: ClassReferenceConstraintsCollection.ClassReferenceConstraintsCollection(IClass)
  fullName: NMF.Models.Meta.ClassReferenceConstraintsCollection.ClassReferenceConstraintsCollection(NMF.Models.Meta.IClass)
  type: Constructor
  source:
    remote:
      path: Models/Models/Meta/ClassReferenceConstraintsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Models/Models/Meta/ClassReferenceConstraintsCollection.cs
    startLine: 37
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: public ClassReferenceConstraintsCollection(IClass parent)
    parameters:
    - id: parent
      type: NMF.Models.Meta.IClass
    content.vb: Public Sub New(parent As IClass)
  overload: NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  commentId: M:NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  id: SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  parent: NMF.Models.Meta.ClassReferenceConstraintsCollection
  langs:
  - csharp
  - vb
  name: SetOpposite(IReferenceConstraint, IClass)
  nameWithType: ClassReferenceConstraintsCollection.SetOpposite(IReferenceConstraint, IClass)
  fullName: NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite(NMF.Models.Meta.IReferenceConstraint, NMF.Models.Meta.IClass)
  type: Method
  source:
    remote:
      path: Models/Models/Meta/ClassReferenceConstraintsCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetOpposite
    path: src/Models/Models/Meta/ClassReferenceConstraintsCollection.cs
    startLine: 50
  assemblies:
  - NMF.Models
  namespace: NMF.Models.Meta
  syntax:
    content: protected override void SetOpposite(IReferenceConstraint item, IClass parent)
    parameters:
    - id: item
      type: NMF.Models.Meta.IReferenceConstraint
    - id: parent
      type: NMF.Models.Meta.IClass
    content.vb: Protected Overrides Sub SetOpposite(item As IReferenceConstraint, parent As IClass)
  overridden: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  overload: NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Models.Meta
  commentId: N:NMF.Models.Meta
  name: NMF.Models.Meta
  nameWithType: NMF.Models.Meta
  fullName: NMF.Models.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<IReferenceConstraint>
  nameWithType: Collection<IReferenceConstraint>
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: Collection(Of IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: Collection(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  name: ObservableCollectionExtended<IReferenceConstraint>
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: ObservableCollectionExtended(Of IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableList`1
  name: ObservableList<IReferenceConstraint>
  nameWithType: ObservableList<IReferenceConstraint>
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: ObservableList(Of IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: ObservableList(Of IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  parent: NMF.Collections.ObjectModel
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2
  name: ObservableOppositeList<IClass, IReferenceConstraint>
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint)
  name.vb: ObservableOppositeList(Of IClass, IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.Generic.IList{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IReferenceConstraint>
  nameWithType: IList<IReferenceConstraint>
  fullName: System.Collections.Generic.IList<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: IList(Of IReferenceConstraint)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: IList(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.Generic.ICollection{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IReferenceConstraint>
  nameWithType: ICollection<IReferenceConstraint>
  fullName: System.Collections.Generic.ICollection<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: ICollection(Of IReferenceConstraint)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: ICollection(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.Generic.IReadOnlyList{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IReferenceConstraint>
  nameWithType: IReadOnlyList<IReferenceConstraint>
  fullName: System.Collections.Generic.IReadOnlyList<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: IReadOnlyList(Of IReferenceConstraint)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: IReadOnlyList(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IReferenceConstraint>
  nameWithType: IReadOnlyCollection<IReferenceConstraint>
  fullName: System.Collections.Generic.IReadOnlyCollection<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: IReadOnlyCollection(Of IReferenceConstraint)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: IReadOnlyCollection(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Models.Meta.IReferenceConstraint}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Models.Meta.IReferenceConstraint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IReferenceConstraint>
  nameWithType: IEnumerable<IReferenceConstraint>
  fullName: System.Collections.Generic.IEnumerable<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: IEnumerable(Of IReferenceConstraint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: IEnumerable(Of IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
  commentId: T:NMF.Collections.ObjectModel.INotifyCollectionChanging
  parent: NMF.Collections.ObjectModel
  name: INotifyCollectionChanging
  nameWithType: INotifyCollectionChanging
  fullName: NMF.Collections.ObjectModel.INotifyCollectionChanging
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: IListExpression{NMF.Models.Meta.IReferenceConstraint}
  commentId: '!:IListExpression{NMF.Models.Meta.IReferenceConstraint}'
  definition: IListExpression`1
  name: IListExpression<IReferenceConstraint>
  nameWithType: IListExpression<IReferenceConstraint>
  fullName: IListExpression<NMF.Models.Meta.IReferenceConstraint>
  nameWithType.vb: IListExpression(Of IReferenceConstraint)
  fullName.vb: IListExpression(Of NMF.Models.Meta.IReferenceConstraint)
  name.vb: IListExpression(Of IReferenceConstraint)
  spec.csharp:
  - uid: IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: IListExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: IListExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.Parent
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  name: Parent
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.Parent
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetOpposite(NMF.Models.Meta.IReferenceConstraint,NMF.Models.Meta.IClass)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  name: SetOpposite(IReferenceConstraint, IClass)
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.SetOpposite(IReferenceConstraint, IClass)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.SetOpposite(NMF.Models.Meta.IReferenceConstraint, NMF.Models.Meta.IClass)
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).SetOpposite(IReferenceConstraint, IClass)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).SetOpposite(NMF.Models.Meta.IReferenceConstraint, NMF.Models.Meta.IClass)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList(Of IClass, IReferenceConstraint).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IClass
    name: IClass
    nameWithType: IClass
    fullName: NMF.Models.Meta.IClass
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.ClearItems
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  name: ClearItems()
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.ClearItems()
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList(Of IClass, IReferenceConstraint).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  name: InsertItem(Int32, IReferenceConstraint)
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.InsertItem(Int32, IReferenceConstraint)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.InsertItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).InsertItem(Int32, IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).InsertItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList(Of IClass, IReferenceConstraint).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList(Of IClass, IReferenceConstraint).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  parent: NMF.Collections.ObjectModel.ObservableOppositeList{NMF.Models.Meta.IClass,NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  name: SetItem(Int32, IReferenceConstraint)
  nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.SetItem(Int32, IReferenceConstraint)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.SetItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: ObservableOppositeList(Of IClass, IReferenceConstraint).SetItem(Int32, IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).SetItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList<IClass, IReferenceConstraint>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList(Of IClass, IReferenceConstraint).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of NMF.Models.Meta.IClass, NMF.Models.Meta.IReferenceConstraint).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}.AsNotifiable
  parent: NMF.Collections.ObjectModel.ObservableList{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableList<IReferenceConstraint>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.IReferenceConstraint>.AsNotifiable()
  nameWithType.vb: ObservableList(Of IReferenceConstraint).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.IReferenceConstraint).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList<IReferenceConstraint>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<NMF.Models.Meta.IReferenceConstraint>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList(Of IReferenceConstraint).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of NMF.Models.Meta.IReferenceConstraint).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanging
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.CollectionChanging
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.CollectionChanged
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.CollectionChanged
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.PropertyChanged
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.PropertyChanged
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RequireEvents
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.RequireEvents()
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.ClearItems
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.ClearItems()
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.InsertItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, IReferenceConstraint)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.InsertItem(Int32, IReferenceConstraint)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.InsertItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).InsertItem(Int32, IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).InsertItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.MoveItem(System.Int32,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.MoveItem(System.Int32,System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.MoveItem(Int32, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).MoveItem(Int32, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.RemoveItem(System.Int32)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}.SetItem(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  parent: NMF.Collections.ObjectModel.ObservableCollectionExtended{NMF.Models.Meta.IReferenceConstraint}
  definition: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, IReferenceConstraint)
  nameWithType: ObservableCollectionExtended<IReferenceConstraint>.SetItem(Int32, IReferenceConstraint)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.SetItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: ObservableCollectionExtended(Of IReferenceConstraint).SetItem(Int32, IReferenceConstraint)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).SetItem(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended<IReferenceConstraint>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<NMF.Models.Meta.IReferenceConstraint>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended(Of IReferenceConstraint).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of NMF.Models.Meta.IReferenceConstraint).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Add(NMF.Models.Meta.IReferenceConstraint)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Add(NMF.Models.Meta.IReferenceConstraint)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(IReferenceConstraint)
  nameWithType: Collection<IReferenceConstraint>.Add(IReferenceConstraint)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Add(NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: Collection(Of IReferenceConstraint).Add(IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Add(NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<IReferenceConstraint>.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of IReferenceConstraint).Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Clear
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<IReferenceConstraint>.Clear()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Clear()
  nameWithType.vb: Collection(Of IReferenceConstraint).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<IReferenceConstraint>.Clear
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of IReferenceConstraint).Clear
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.CopyTo(NMF.Models.Meta.IReferenceConstraint[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.CopyTo(NMF.Models.Meta.IReferenceConstraint[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IReferenceConstraint[], Int32)
  nameWithType: Collection<IReferenceConstraint>.CopyTo(IReferenceConstraint[], Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.CopyTo(NMF.Models.Meta.IReferenceConstraint[], System.Int32)
  nameWithType.vb: Collection(Of IReferenceConstraint).CopyTo(IReferenceConstraint(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).CopyTo(NMF.Models.Meta.IReferenceConstraint(), System.Int32)
  name.vb: CopyTo(IReferenceConstraint(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<IReferenceConstraint>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of IReferenceConstraint).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Contains(NMF.Models.Meta.IReferenceConstraint)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Contains(NMF.Models.Meta.IReferenceConstraint)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(IReferenceConstraint)
  nameWithType: Collection<IReferenceConstraint>.Contains(IReferenceConstraint)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Contains(NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: Collection(Of IReferenceConstraint).Contains(IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Contains(NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<IReferenceConstraint>.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of IReferenceConstraint).Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<IReferenceConstraint>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.GetEnumerator()
  nameWithType.vb: Collection(Of IReferenceConstraint).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<IReferenceConstraint>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of IReferenceConstraint).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.IndexOf(NMF.Models.Meta.IReferenceConstraint)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.IndexOf(NMF.Models.Meta.IReferenceConstraint)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(IReferenceConstraint)
  nameWithType: Collection<IReferenceConstraint>.IndexOf(IReferenceConstraint)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.IndexOf(NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: Collection(Of IReferenceConstraint).IndexOf(IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).IndexOf(NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<IReferenceConstraint>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of IReferenceConstraint).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Insert(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Insert(System.Int32,NMF.Models.Meta.IReferenceConstraint)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, IReferenceConstraint)
  nameWithType: Collection<IReferenceConstraint>.Insert(Int32, IReferenceConstraint)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Insert(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: Collection(Of IReferenceConstraint).Insert(Int32, IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Insert(System.Int32, NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<IReferenceConstraint>.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of IReferenceConstraint).Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Remove(NMF.Models.Meta.IReferenceConstraint)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Remove(NMF.Models.Meta.IReferenceConstraint)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(IReferenceConstraint)
  nameWithType: Collection<IReferenceConstraint>.Remove(IReferenceConstraint)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Remove(NMF.Models.Meta.IReferenceConstraint)
  nameWithType.vb: Collection(Of IReferenceConstraint).Remove(IReferenceConstraint)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Remove(NMF.Models.Meta.IReferenceConstraint)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<IReferenceConstraint>.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of IReferenceConstraint).Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.Meta.IReferenceConstraint
    name: IReferenceConstraint
    nameWithType: IReferenceConstraint
    fullName: NMF.Models.Meta.IReferenceConstraint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<IReferenceConstraint>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of IReferenceConstraint).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<IReferenceConstraint>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of IReferenceConstraint).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<IReferenceConstraint>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<IReferenceConstraint>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<IReferenceConstraint>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<IReferenceConstraint>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<IReferenceConstraint>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<IReferenceConstraint>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<IReferenceConstraint>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<IReferenceConstraint>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<IReferenceConstraint>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<IReferenceConstraint>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<IReferenceConstraint>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<IReferenceConstraint>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<IReferenceConstraint>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<IReferenceConstraint>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<IReferenceConstraint>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<IReferenceConstraint>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<IReferenceConstraint>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<IReferenceConstraint>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Count
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Count
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<IReferenceConstraint>.Count
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Count
  nameWithType.vb: Collection(Of IReferenceConstraint).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Count
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Items
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Items
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<IReferenceConstraint>.Items
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Items
  nameWithType.vb: Collection(Of IReferenceConstraint).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Items
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<IReferenceConstraint>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Item[System.Int32]
  nameWithType.vb: Collection(Of IReferenceConstraint).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<IReferenceConstraint>.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of IReferenceConstraint).Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<IReferenceConstraint>.IsReadOnly
  nameWithType: Collection<IReferenceConstraint>.ICollection<IReferenceConstraint>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.Generic.ICollection<NMF.Models.Meta.IReferenceConstraint>.IsReadOnly
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<IReferenceConstraint>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<IReferenceConstraint>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<IReferenceConstraint>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<IReferenceConstraint>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of IReferenceConstraint).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<IReferenceConstraint>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{NMF.Models.Meta.IReferenceConstraint}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<IReferenceConstraint>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<NMF.Models.Meta.IReferenceConstraint>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of IReferenceConstraint).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Models.Meta.IReferenceConstraint).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  commentId: T:NMF.Collections.ObjectModel.ObservableCollectionExtended`1
  name: ObservableCollectionExtended<T>
  nameWithType: ObservableCollectionExtended<T>
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>
  nameWithType.vb: ObservableCollectionExtended(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T)
  name.vb: ObservableCollectionExtended(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended
    nameWithType: ObservableCollectionExtended
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
- uid: NMF.Collections.ObjectModel.ObservableList`1
  commentId: T:NMF.Collections.ObjectModel.ObservableList`1
  name: ObservableList<T>
  nameWithType: ObservableList<T>
  fullName: NMF.Collections.ObjectModel.ObservableList<T>
  nameWithType.vb: ObservableList(Of T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T)
  name.vb: ObservableList(Of T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList
    nameWithType: ObservableList
    fullName: NMF.Collections.ObjectModel.ObservableList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
  commentId: T:NMF.Collections.ObjectModel.ObservableOppositeList`2
  name: ObservableOppositeList<TParent, TCollected>
  nameWithType: ObservableOppositeList<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected)
  name.vb: ObservableOppositeList(Of TParent, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: <
    nameWithType: <
    fullName: <
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList
    nameWithType: ObservableOppositeList
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: IListExpression`1
  isExternal: true
  name: IListExpression<>
  nameWithType: IListExpression<>
  fullName: IListExpression<>
  nameWithType.vb: IListExpression(Of )
  fullName.vb: IListExpression(Of )
  name.vb: IListExpression(Of )
  spec.csharp:
  - uid: IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: IListExpression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IListExpression`1
    name: IListExpression
    nameWithType: IListExpression
    fullName: IListExpression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  commentId: P:NMF.Collections.ObjectModel.ObservableOppositeList`2.Parent
  name: Parent
  nameWithType: ObservableOppositeList<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.Parent
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
  name: SetOpposite(TCollected, TParent)
  nameWithType: ObservableOppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList<TParent, TCollected>.SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetOpposite(`1,`0)
    name: SetOpposite
    nameWithType: ObservableOppositeList(Of TParent, TCollected).SetOpposite
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetOpposite
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParent
    nameWithType: TParent
    fullName: TParent
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
  name: ClearItems()
  nameWithType: ObservableOppositeList<TParent, TCollected>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.ClearItems()
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList<TParent, TCollected>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.ClearItems
    name: ClearItems
    nameWithType: ObservableOppositeList(Of TParent, TCollected).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
  isExternal: true
  name: InsertItem(Int32, TCollected)
  nameWithType: ObservableOppositeList<TParent, TCollected>.InsertItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.InsertItem(System.Int32, TCollected)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).InsertItem(Int32, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).InsertItem(System.Int32, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableOppositeList<TParent, TCollected>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
  isExternal: true
  name: SetItem(Int32, TCollected)
  nameWithType: ObservableOppositeList<TParent, TCollected>.SetItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetItem(System.Int32, TCollected)
  nameWithType.vb: ObservableOppositeList(Of TParent, TCollected).SetItem(Int32, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetItem(System.Int32, TCollected)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList<TParent, TCollected>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList<TParent, TCollected>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: ObservableOppositeList(Of TParent, TCollected).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableOppositeList(Of TParent, TCollected).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  commentId: M:NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ObservableList<T>.AsNotifiable()
  fullName: NMF.Collections.ObjectModel.ObservableList<T>.AsNotifiable()
  nameWithType.vb: ObservableList(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.ObjectModel.ObservableList(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList<T>.AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList<T>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableList`1.AsNotifiable
    name: AsNotifiable
    nameWithType: ObservableList(Of T).AsNotifiable
    fullName: NMF.Collections.ObjectModel.ObservableList(Of T).AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanging
  name: CollectionChanging
  nameWithType: ObservableCollectionExtended<T>.CollectionChanging
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.CollectionChanging
  nameWithType.vb: ObservableCollectionExtended(Of T).CollectionChanging
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).CollectionChanging
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollectionExtended<T>.CollectionChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.CollectionChanged
  nameWithType.vb: ObservableCollectionExtended(Of T).CollectionChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).CollectionChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  commentId: E:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollectionExtended<T>.PropertyChanged
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.PropertyChanged
  nameWithType.vb: ObservableCollectionExtended(Of T).PropertyChanged
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).PropertyChanged
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanging(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollectionExtended<T>.OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollectionExtended(Of T).OnCollectionChanging(NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended<T>.OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanging
    nameWithType: ObservableCollectionExtended(Of T).OnCollectionChanging
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  nameWithType: ObservableCollectionExtended<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  nameWithType.vb: ObservableCollectionExtended(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs, Boolean)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs, System.Boolean)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended<T>.OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)
    name: OnCollectionChanged
    nameWithType: ObservableCollectionExtended(Of T).OnCollectionChanged
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
  name: RequireEvents()
  nameWithType: ObservableCollectionExtended<T>.RequireEvents()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RequireEvents()
  nameWithType.vb: ObservableCollectionExtended(Of T).RequireEvents()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RequireEvents()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended<T>.RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RequireEvents
    name: RequireEvents
    nameWithType: ObservableCollectionExtended(Of T).RequireEvents
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RequireEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollectionExtended<T>.ClearItems()
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.ClearItems()
  nameWithType.vb: ObservableCollectionExtended(Of T).ClearItems()
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).ClearItems()
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended<T>.ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollectionExtended(Of T).ClearItems
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: ObservableCollectionExtended<T>.InsertItem(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.InsertItem(System.Int32, T)
  nameWithType.vb: ObservableCollectionExtended(Of T).InsertItem(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended<T>.InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollectionExtended(Of T).InsertItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).InsertItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
  isExternal: true
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollectionExtended<T>.MoveItem(Int32, Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of T).MoveItem(Int32, Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended<T>.MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollectionExtended(Of T).MoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).MoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableCollectionExtended<T>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollectionExtended(Of T).RemoveItem(Int32)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended<T>.RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollectionExtended(Of T).RemoveItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  commentId: M:NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: ObservableCollectionExtended<T>.SetItem(Int32, T)
  fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.SetItem(System.Int32, T)
  nameWithType.vb: ObservableCollectionExtended(Of T).SetItem(Int32, T)
  fullName.vb: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended<T>.SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended<T>.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollectionExtended(Of T).SetItem
    fullName: NMF.Collections.ObjectModel.ObservableCollectionExtended(Of T).SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor*
  commentId: Overload:NMF.Models.Meta.ClassReferenceConstraintsCollection.#ctor
  name: ClassReferenceConstraintsCollection
  nameWithType: ClassReferenceConstraintsCollection.ClassReferenceConstraintsCollection
  fullName: NMF.Models.Meta.ClassReferenceConstraintsCollection.ClassReferenceConstraintsCollection
- uid: NMF.Models.Meta.IClass
  commentId: T:NMF.Models.Meta.IClass
  parent: NMF.Models.Meta
  name: IClass
  nameWithType: IClass
  fullName: NMF.Models.Meta.IClass
- uid: NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite*
  commentId: Overload:NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite
  name: SetOpposite
  nameWithType: ClassReferenceConstraintsCollection.SetOpposite
  fullName: NMF.Models.Meta.ClassReferenceConstraintsCollection.SetOpposite
- uid: NMF.Models.Meta.IReferenceConstraint
  commentId: T:NMF.Models.Meta.IReferenceConstraint
  parent: NMF.Models.Meta
  name: IReferenceConstraint
  nameWithType: IReferenceConstraint
  fullName: NMF.Models.Meta.IReferenceConstraint
