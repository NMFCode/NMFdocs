### YamlMime:ManagedReference
items:
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo
  commentId: T:NMF.Serialization.Xmi.XmiStringSerializationInfo
  id: XmiStringSerializationInfo
  parent: NMF.Serialization.Xmi
  children:
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection(System.Object,System.Object)
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString(System.String)
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString(System.Object)
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset
  - NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
  langs:
  - csharp
  - vb
  name: XmiStringSerializationInfo
  nameWithType: XmiStringSerializationInfo
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo
  type: Class
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: XmiStringSerializationInfo
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 8
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: 'public class XmiStringSerializationInfo : ITypeSerializationInfo'
    content.vb: >-
      Public Class XmiStringSerializationInfo

          Implements ITypeSerializationInfo
  inheritance:
  - System.Object
  implements:
  - NMF.Serialization.ITypeSerializationInfo
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
  id: Instance
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: XmiStringSerializationInfo.Instance
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Instance
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 13
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public static XmiStringSerializationInfo Instance { get; }
    parameters: []
    return:
      type: NMF.Serialization.Xmi.XmiStringSerializationInfo
    content.vb: Public Shared ReadOnly Property Instance As XmiStringSerializationInfo
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
  id: AttributeProperties
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: AttributeProperties
  nameWithType: XmiStringSerializationInfo.AttributeProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttributeProperties
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 15
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IEnumerable<IPropertySerializationInfo> AttributeProperties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
    content.vb: Public ReadOnly Property AttributeProperties As IEnumerable(Of IPropertySerializationInfo)
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
  id: ElementProperties
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: ElementProperties
  nameWithType: XmiStringSerializationInfo.ElementProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementProperties
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 20
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IEnumerable<IPropertySerializationInfo> ElementProperties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
    content.vb: Public ReadOnly Property ElementProperties As IEnumerable(Of IPropertySerializationInfo)
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.ElementProperties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
  id: Type
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: XmiStringSerializationInfo.Type
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Type
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 25
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public Type Type { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property Type As Type
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.Type*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
  id: ConstructorProperties
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: ConstructorProperties
  nameWithType: XmiStringSerializationInfo.ConstructorProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConstructorProperties
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 30
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IPropertySerializationInfo[] ConstructorProperties { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo[]
    content.vb: Public ReadOnly Property ConstructorProperties As IPropertySerializationInfo()
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
  id: Constructor
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: Constructor
  nameWithType: XmiStringSerializationInfo.Constructor
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Constructor
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 35
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public ConstructorInfo Constructor { get; }
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo
    content.vb: Public ReadOnly Property Constructor As ConstructorInfo
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.Constructor
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
  id: IsIdentified
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: IsIdentified
  nameWithType: XmiStringSerializationInfo.IsIdentified
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsIdentified
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 40
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public bool IsIdentified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIdentified As Boolean
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.IsIdentified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
  id: IdentifierProperty
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: IdentifierProperty
  nameWithType: XmiStringSerializationInfo.IdentifierProperty
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IdentifierProperty
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 45
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IPropertySerializationInfo IdentifierProperty { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Public ReadOnly Property IdentifierProperty As IPropertySerializationInfo
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset
  commentId: M:NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset
  id: Reset
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: XmiStringSerializationInfo.Reset()
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset()
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Reset
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 50
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
  id: IsCollection
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: IsCollection
  nameWithType: XmiStringSerializationInfo.IsCollection
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsCollection
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 54
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public bool IsCollection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCollection As Boolean
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.IsCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
  id: CollectionItemType
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: CollectionItemType
  nameWithType: XmiStringSerializationInfo.CollectionItemType
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CollectionItemType
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 59
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public ITypeSerializationInfo CollectionItemType { get; }
    parameters: []
    return:
      type: NMF.Serialization.ITypeSerializationInfo
    content.vb: Public ReadOnly Property CollectionItemType As ITypeSerializationInfo
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection(System.Object,System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: AddToCollection(Object, Object)
  nameWithType: XmiStringSerializationInfo.AddToCollection(Object, Object)
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AddToCollection
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 64
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public void AddToCollection(object collection, object item)
    parameters:
    - id: collection
      type: System.Object
    - id: item
      type: System.Object
    content.vb: Public Sub AddToCollection(collection As Object, item As Object)
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
  id: ElementName
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: XmiStringSerializationInfo.ElementName
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ElementName
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 69
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public string ElementName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ElementName As String
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.ElementName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
  id: Namespace
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: XmiStringSerializationInfo.Namespace
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Namespace
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 74
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Namespace As String
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.Namespace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
  id: NamespacePrefix
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: NamespacePrefix
  nameWithType: XmiStringSerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NamespacePrefix
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 79
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public string NamespacePrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NamespacePrefix As String
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
  id: IsStringConvertible
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: IsStringConvertible
  nameWithType: XmiStringSerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsStringConvertible
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 84
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public bool IsStringConvertible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStringConvertible As Boolean
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertFromString(String)
  nameWithType: XmiStringSerializationInfo.ConvertFromString(String)
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString(System.String)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertFromString
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 89
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public object ConvertFromString(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function ConvertFromString(text As String) As Object
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: ConvertToString(Object)
  nameWithType: XmiStringSerializationInfo.ConvertToString(Object)
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString(System.Object)
  type: Method
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ConvertToString
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 94
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public string ConvertToString(object input)
    parameters:
    - id: input
      type: System.Object
    return:
      type: System.String
    content.vb: Public Function ConvertToString(input As Object) As String
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
  id: BaseTypes
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: BaseTypes
  nameWithType: XmiStringSerializationInfo.BaseTypes
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: BaseTypes
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 99
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IEnumerable<ITypeSerializationInfo> BaseTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Serialization.ITypeSerializationInfo}
    content.vb: Public ReadOnly Property BaseTypes As IEnumerable(Of ITypeSerializationInfo)
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.BaseTypes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
  commentId: P:NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
  id: DefaultProperty
  parent: NMF.Serialization.Xmi.XmiStringSerializationInfo
  langs:
  - csharp
  - vb
  name: DefaultProperty
  nameWithType: XmiStringSerializationInfo.DefaultProperty
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
  type: Property
  source:
    remote:
      path: Models/Serialization/XMI/XmiStringSerializationInfo.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DefaultProperty
    path: src/Models/Serialization/XMI/XmiStringSerializationInfo.cs
    startLine: 104
  assemblies:
  - NMF.Serialization
  namespace: NMF.Serialization.Xmi
  syntax:
    content: public IPropertySerializationInfo DefaultProperty { get; }
    parameters: []
    return:
      type: NMF.Serialization.IPropertySerializationInfo
    content.vb: Public ReadOnly Property DefaultProperty As IPropertySerializationInfo
  overload: NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty*
  implements:
  - NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NMF.Serialization.Xmi
  commentId: N:NMF.Serialization.Xmi
  name: NMF.Serialization.Xmi
  nameWithType: NMF.Serialization.Xmi
  fullName: NMF.Serialization.Xmi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Serialization.ITypeSerializationInfo
  commentId: T:NMF.Serialization.ITypeSerializationInfo
  parent: NMF.Serialization
  name: ITypeSerializationInfo
  nameWithType: ITypeSerializationInfo
  fullName: NMF.Serialization.ITypeSerializationInfo
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Serialization
  commentId: N:NMF.Serialization
  name: NMF.Serialization
  nameWithType: NMF.Serialization
  fullName: NMF.Serialization
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
  name: Instance
  nameWithType: XmiStringSerializationInfo.Instance
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Instance
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo
  commentId: T:NMF.Serialization.Xmi.XmiStringSerializationInfo
  parent: NMF.Serialization.Xmi
  name: XmiStringSerializationInfo
  nameWithType: XmiStringSerializationInfo
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
  name: AttributeProperties
  nameWithType: XmiStringSerializationInfo.AttributeProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.AttributeProperties
- uid: NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.AttributeProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  name: AttributeProperties
  nameWithType: ITypeSerializationInfo.AttributeProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.AttributeProperties
- uid: System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Serialization.IPropertySerializationInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPropertySerializationInfo>
  nameWithType: IEnumerable<IPropertySerializationInfo>
  fullName: System.Collections.Generic.IEnumerable<NMF.Serialization.IPropertySerializationInfo>
  nameWithType.vb: IEnumerable(Of IPropertySerializationInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Serialization.IPropertySerializationInfo)
  name.vb: IEnumerable(Of IPropertySerializationInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
  name: ElementProperties
  nameWithType: XmiStringSerializationInfo.ElementProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementProperties
- uid: NMF.Serialization.ITypeSerializationInfo.ElementProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ElementProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  name: ElementProperties
  nameWithType: ITypeSerializationInfo.ElementProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementProperties
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Type*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
  name: Type
  nameWithType: XmiStringSerializationInfo.Type
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Type
- uid: NMF.Serialization.ITypeSerializationInfo.Type
  commentId: P:NMF.Serialization.ITypeSerializationInfo.Type
  parent: NMF.Serialization.ITypeSerializationInfo
  name: Type
  nameWithType: ITypeSerializationInfo.Type
  fullName: NMF.Serialization.ITypeSerializationInfo.Type
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
  name: ConstructorProperties
  nameWithType: XmiStringSerializationInfo.ConstructorProperties
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConstructorProperties
- uid: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
  parent: NMF.Serialization.ITypeSerializationInfo
  name: ConstructorProperties
  nameWithType: ITypeSerializationInfo.ConstructorProperties
  fullName: NMF.Serialization.ITypeSerializationInfo.ConstructorProperties
- uid: NMF.Serialization.IPropertySerializationInfo[]
  isExternal: true
  name: IPropertySerializationInfo[]
  nameWithType: IPropertySerializationInfo[]
  fullName: NMF.Serialization.IPropertySerializationInfo[]
  nameWithType.vb: IPropertySerializationInfo()
  fullName.vb: NMF.Serialization.IPropertySerializationInfo()
  name.vb: IPropertySerializationInfo()
  spec.csharp:
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: NMF.Serialization.IPropertySerializationInfo
    name: IPropertySerializationInfo
    nameWithType: IPropertySerializationInfo
    fullName: NMF.Serialization.IPropertySerializationInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
  name: Constructor
  nameWithType: XmiStringSerializationInfo.Constructor
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Constructor
- uid: NMF.Serialization.ITypeSerializationInfo.Constructor
  commentId: P:NMF.Serialization.ITypeSerializationInfo.Constructor
  parent: NMF.Serialization.ITypeSerializationInfo
  name: Constructor
  nameWithType: ITypeSerializationInfo.Constructor
  fullName: NMF.Serialization.ITypeSerializationInfo.Constructor
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
  name: IsIdentified
  nameWithType: XmiStringSerializationInfo.IsIdentified
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsIdentified
- uid: NMF.Serialization.ITypeSerializationInfo.IsIdentified
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsIdentified
  parent: NMF.Serialization.ITypeSerializationInfo
  name: IsIdentified
  nameWithType: ITypeSerializationInfo.IsIdentified
  fullName: NMF.Serialization.ITypeSerializationInfo.IsIdentified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
  name: IdentifierProperty
  nameWithType: XmiStringSerializationInfo.IdentifierProperty
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IdentifierProperty
- uid: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
  parent: NMF.Serialization.ITypeSerializationInfo
  name: IdentifierProperty
  nameWithType: ITypeSerializationInfo.IdentifierProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.IdentifierProperty
- uid: NMF.Serialization.IPropertySerializationInfo
  commentId: T:NMF.Serialization.IPropertySerializationInfo
  parent: NMF.Serialization
  name: IPropertySerializationInfo
  nameWithType: IPropertySerializationInfo
  fullName: NMF.Serialization.IPropertySerializationInfo
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset
  name: Reset
  nameWithType: XmiStringSerializationInfo.Reset
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Reset
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
  name: IsCollection
  nameWithType: XmiStringSerializationInfo.IsCollection
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsCollection
- uid: NMF.Serialization.ITypeSerializationInfo.IsCollection
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsCollection
  parent: NMF.Serialization.ITypeSerializationInfo
  name: IsCollection
  nameWithType: ITypeSerializationInfo.IsCollection
  fullName: NMF.Serialization.ITypeSerializationInfo.IsCollection
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
  name: CollectionItemType
  nameWithType: XmiStringSerializationInfo.CollectionItemType
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.CollectionItemType
- uid: NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  commentId: P:NMF.Serialization.ITypeSerializationInfo.CollectionItemType
  parent: NMF.Serialization.ITypeSerializationInfo
  name: CollectionItemType
  nameWithType: ITypeSerializationInfo.CollectionItemType
  fullName: NMF.Serialization.ITypeSerializationInfo.CollectionItemType
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection
  name: AddToCollection
  nameWithType: XmiStringSerializationInfo.AddToCollection
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.AddToCollection
- uid: NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
  parent: NMF.Serialization.ITypeSerializationInfo
  isExternal: true
  name: AddToCollection(Object, Object)
  nameWithType: ITypeSerializationInfo.AddToCollection(Object, Object)
  fullName: NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object, System.Object)
  spec.csharp:
  - uid: NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
    name: AddToCollection
    nameWithType: ITypeSerializationInfo.AddToCollection
    fullName: NMF.Serialization.ITypeSerializationInfo.AddToCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.ITypeSerializationInfo.AddToCollection(System.Object,System.Object)
    name: AddToCollection
    nameWithType: ITypeSerializationInfo.AddToCollection
    fullName: NMF.Serialization.ITypeSerializationInfo.AddToCollection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
  name: ElementName
  nameWithType: XmiStringSerializationInfo.ElementName
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ElementName
- uid: NMF.Serialization.ITypeSerializationInfo.ElementName
  commentId: P:NMF.Serialization.ITypeSerializationInfo.ElementName
  parent: NMF.Serialization.ITypeSerializationInfo
  name: ElementName
  nameWithType: ITypeSerializationInfo.ElementName
  fullName: NMF.Serialization.ITypeSerializationInfo.ElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
  name: Namespace
  nameWithType: XmiStringSerializationInfo.Namespace
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.Namespace
- uid: NMF.Serialization.ITypeSerializationInfo.Namespace
  commentId: P:NMF.Serialization.ITypeSerializationInfo.Namespace
  parent: NMF.Serialization.ITypeSerializationInfo
  name: Namespace
  nameWithType: ITypeSerializationInfo.Namespace
  fullName: NMF.Serialization.ITypeSerializationInfo.Namespace
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
  name: NamespacePrefix
  nameWithType: XmiStringSerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.NamespacePrefix
- uid: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  commentId: P:NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
  parent: NMF.Serialization.ITypeSerializationInfo
  name: NamespacePrefix
  nameWithType: ITypeSerializationInfo.NamespacePrefix
  fullName: NMF.Serialization.ITypeSerializationInfo.NamespacePrefix
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
  name: IsStringConvertible
  nameWithType: XmiStringSerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.IsStringConvertible
- uid: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  commentId: P:NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
  parent: NMF.Serialization.ITypeSerializationInfo
  name: IsStringConvertible
  nameWithType: ITypeSerializationInfo.IsStringConvertible
  fullName: NMF.Serialization.ITypeSerializationInfo.IsStringConvertible
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString
  name: ConvertFromString
  nameWithType: XmiStringSerializationInfo.ConvertFromString
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertFromString
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  parent: NMF.Serialization.ITypeSerializationInfo
  isExternal: true
  name: ConvertFromString(String)
  nameWithType: ITypeSerializationInfo.ConvertFromString(String)
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
  spec.csharp:
  - uid: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
    name: ConvertFromString
    nameWithType: ITypeSerializationInfo.ConvertFromString
    fullName: NMF.Serialization.ITypeSerializationInfo.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.ITypeSerializationInfo.ConvertFromString(System.String)
    name: ConvertFromString
    nameWithType: ITypeSerializationInfo.ConvertFromString
    fullName: NMF.Serialization.ITypeSerializationInfo.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString
  name: ConvertToString
  nameWithType: XmiStringSerializationInfo.ConvertToString
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.ConvertToString
- uid: NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  commentId: M:NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  parent: NMF.Serialization.ITypeSerializationInfo
  isExternal: true
  name: ConvertToString(Object)
  nameWithType: ITypeSerializationInfo.ConvertToString(Object)
  fullName: NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
  spec.csharp:
  - uid: NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
    name: ConvertToString
    nameWithType: ITypeSerializationInfo.ConvertToString
    fullName: NMF.Serialization.ITypeSerializationInfo.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Serialization.ITypeSerializationInfo.ConvertToString(System.Object)
    name: ConvertToString
    nameWithType: ITypeSerializationInfo.ConvertToString
    fullName: NMF.Serialization.ITypeSerializationInfo.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
  name: BaseTypes
  nameWithType: XmiStringSerializationInfo.BaseTypes
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.BaseTypes
- uid: NMF.Serialization.ITypeSerializationInfo.BaseTypes
  commentId: P:NMF.Serialization.ITypeSerializationInfo.BaseTypes
  parent: NMF.Serialization.ITypeSerializationInfo
  name: BaseTypes
  nameWithType: ITypeSerializationInfo.BaseTypes
  fullName: NMF.Serialization.ITypeSerializationInfo.BaseTypes
- uid: System.Collections.Generic.IEnumerable{NMF.Serialization.ITypeSerializationInfo}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Serialization.ITypeSerializationInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITypeSerializationInfo>
  nameWithType: IEnumerable<ITypeSerializationInfo>
  fullName: System.Collections.Generic.IEnumerable<NMF.Serialization.ITypeSerializationInfo>
  nameWithType.vb: IEnumerable(Of ITypeSerializationInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Serialization.ITypeSerializationInfo)
  name.vb: IEnumerable(Of ITypeSerializationInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Serialization.ITypeSerializationInfo
    name: ITypeSerializationInfo
    nameWithType: ITypeSerializationInfo
    fullName: NMF.Serialization.ITypeSerializationInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty*
  commentId: Overload:NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
  name: DefaultProperty
  nameWithType: XmiStringSerializationInfo.DefaultProperty
  fullName: NMF.Serialization.Xmi.XmiStringSerializationInfo.DefaultProperty
- uid: NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  commentId: P:NMF.Serialization.ITypeSerializationInfo.DefaultProperty
  parent: NMF.Serialization.ITypeSerializationInfo
  name: DefaultProperty
  nameWithType: ITypeSerializationInfo.DefaultProperty
  fullName: NMF.Serialization.ITypeSerializationInfo.DefaultProperty
