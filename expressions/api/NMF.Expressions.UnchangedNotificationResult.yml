### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.UnchangedNotificationResult
  commentId: T:NMF.Expressions.UnchangedNotificationResult
  id: UnchangedNotificationResult
  parent: NMF.Expressions
  children:
  - NMF.Expressions.UnchangedNotificationResult.Changed
  - NMF.Expressions.UnchangedNotificationResult.FreeReference
  - NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  - NMF.Expressions.UnchangedNotificationResult.Instance
  - NMF.Expressions.UnchangedNotificationResult.Source
  langs:
  - csharp
  - vb
  name: UnchangedNotificationResult
  nameWithType: UnchangedNotificationResult
  fullName: NMF.Expressions.UnchangedNotificationResult
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnchangedNotificationResult
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 10
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nDenotes a notification result that represents the fact that the value did not change\n"
  example: []
  syntax:
    content: 'public class UnchangedNotificationResult : INotificationResult'
    content.vb: >-
      Public Class UnchangedNotificationResult
          Implements INotificationResult
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.INotificationResult
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Expressions.UnchangedNotificationResult.Instance
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Instance
  id: Instance
  parent: NMF.Expressions.UnchangedNotificationResult
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: UnchangedNotificationResult.Instance
  fullName: NMF.Expressions.UnchangedNotificationResult.Instance
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Instance
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 17
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nGets the default instance\n"
  example: []
  syntax:
    content: public static UnchangedNotificationResult Instance { get; }
    parameters: []
    return:
      type: NMF.Expressions.UnchangedNotificationResult
    content.vb: Public Shared ReadOnly Property Instance As UnchangedNotificationResult
  overload: NMF.Expressions.UnchangedNotificationResult.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NMF.Expressions.UnchangedNotificationResult.Changed
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Changed
  id: Changed
  parent: NMF.Expressions.UnchangedNotificationResult
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: UnchangedNotificationResult.Changed
  fullName: NMF.Expressions.UnchangedNotificationResult.Changed
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Changed
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 20
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public bool Changed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Changed As Boolean
  overload: NMF.Expressions.UnchangedNotificationResult.Changed*
  implements:
  - NMF.Expressions.INotificationResult.Changed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Expressions.UnchangedNotificationResult.Source
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Source
  id: Source
  parent: NMF.Expressions.UnchangedNotificationResult
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: UnchangedNotificationResult.Source
  fullName: NMF.Expressions.UnchangedNotificationResult.Source
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Source
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 23
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public INotifiable Source { get; }
    parameters: []
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public ReadOnly Property Source As INotifiable
  overload: NMF.Expressions.UnchangedNotificationResult.Source*
  implements:
  - NMF.Expressions.INotificationResult.Source
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  commentId: M:NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  id: IncreaseReferences(System.Int32)
  parent: NMF.Expressions.UnchangedNotificationResult
  langs:
  - csharp
  - vb
  name: IncreaseReferences(Int32)
  nameWithType: UnchangedNotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IncreaseReferences
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 28
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void IncreaseReferences(int references)
    parameters:
    - id: references
      type: System.Int32
    content.vb: Public Sub IncreaseReferences(references As Integer)
  overload: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences*
  implements:
  - NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Expressions.UnchangedNotificationResult.FreeReference
  commentId: M:NMF.Expressions.UnchangedNotificationResult.FreeReference
  id: FreeReference
  parent: NMF.Expressions.UnchangedNotificationResult
  langs:
  - csharp
  - vb
  name: FreeReference()
  nameWithType: UnchangedNotificationResult.FreeReference()
  fullName: NMF.Expressions.UnchangedNotificationResult.FreeReference()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/UnchangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: FreeReference
    path: src/Expressions/Expressions/Execution/UnchangedNotificationResult.cs
    startLine: 31
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void FreeReference()
    content.vb: Public Sub FreeReference
  overload: NMF.Expressions.UnchangedNotificationResult.FreeReference*
  implements:
  - NMF.Expressions.INotificationResult.FreeReference
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.UnchangedNotificationResult.Instance*
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Instance
  name: Instance
  nameWithType: UnchangedNotificationResult.Instance
  fullName: NMF.Expressions.UnchangedNotificationResult.Instance
- uid: NMF.Expressions.UnchangedNotificationResult
  commentId: T:NMF.Expressions.UnchangedNotificationResult
  parent: NMF.Expressions
  name: UnchangedNotificationResult
  nameWithType: UnchangedNotificationResult
  fullName: NMF.Expressions.UnchangedNotificationResult
- uid: NMF.Expressions.UnchangedNotificationResult.Changed*
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Changed
  name: Changed
  nameWithType: UnchangedNotificationResult.Changed
  fullName: NMF.Expressions.UnchangedNotificationResult.Changed
- uid: NMF.Expressions.INotificationResult.Changed
  commentId: P:NMF.Expressions.INotificationResult.Changed
  parent: NMF.Expressions.INotificationResult
  name: Changed
  nameWithType: INotificationResult.Changed
  fullName: NMF.Expressions.INotificationResult.Changed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Expressions.UnchangedNotificationResult.Source*
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Source
  name: Source
  nameWithType: UnchangedNotificationResult.Source
  fullName: NMF.Expressions.UnchangedNotificationResult.Source
- uid: NMF.Expressions.INotificationResult.Source
  commentId: P:NMF.Expressions.INotificationResult.Source
  parent: NMF.Expressions.INotificationResult
  name: Source
  nameWithType: INotificationResult.Source
  fullName: NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences*
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.IncreaseReferences
  name: IncreaseReferences
  nameWithType: UnchangedNotificationResult.IncreaseReferences
  fullName: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences
- uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  commentId: M:NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  parent: NMF.Expressions.INotificationResult
  isExternal: true
  name: IncreaseReferences(Int32)
  nameWithType: INotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
    nameWithType: INotificationResult.IncreaseReferences
    fullName: NMF.Expressions.INotificationResult.IncreaseReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
    nameWithType: INotificationResult.IncreaseReferences
    fullName: NMF.Expressions.INotificationResult.IncreaseReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Expressions.UnchangedNotificationResult.FreeReference*
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.FreeReference
  name: FreeReference
  nameWithType: UnchangedNotificationResult.FreeReference
  fullName: NMF.Expressions.UnchangedNotificationResult.FreeReference
- uid: NMF.Expressions.INotificationResult.FreeReference
  commentId: M:NMF.Expressions.INotificationResult.FreeReference
  parent: NMF.Expressions.INotificationResult
  name: FreeReference()
  nameWithType: INotificationResult.FreeReference()
  fullName: NMF.Expressions.INotificationResult.FreeReference()
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
    nameWithType: INotificationResult.FreeReference
    fullName: NMF.Expressions.INotificationResult.FreeReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
    nameWithType: INotificationResult.FreeReference
    fullName: NMF.Expressions.INotificationResult.FreeReference
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
