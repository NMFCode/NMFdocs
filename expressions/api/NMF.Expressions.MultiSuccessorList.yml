### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.MultiSuccessorList
  commentId: T:NMF.Expressions.MultiSuccessorList
  id: MultiSuccessorList
  parent: NMF.Expressions
  children:
  - NMF.Expressions.MultiSuccessorList.AllSuccessors
  - NMF.Expressions.MultiSuccessorList.Attached
  - NMF.Expressions.MultiSuccessorList.Count
  - NMF.Expressions.MultiSuccessorList.Detached
  - NMF.Expressions.MultiSuccessorList.GetSuccessor(System.Int32)
  - NMF.Expressions.MultiSuccessorList.HasSuccessors
  - NMF.Expressions.MultiSuccessorList.IsAttached
  - NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  - NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  - NMF.Expressions.MultiSuccessorList.SetDummy
  - NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  - NMF.Expressions.MultiSuccessorList.UnsetAll
  langs:
  - csharp
  - vb
  name: MultiSuccessorList
  nameWithType: MultiSuccessorList
  fullName: NMF.Expressions.MultiSuccessorList
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MultiSuccessorList
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 12
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nDenotes a default implementation of a successor list\n"
  example: []
  syntax:
    content: 'public class MultiSuccessorList : ISuccessorList'
    content.vb: Public Class MultiSuccessorList Implements ISuccessorList
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.ISuccessorList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Expressions.MultiSuccessorList.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  commentId: P:NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  id: Item(System.Int32)
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: MultiSuccessorList.this[int]
  fullName: NMF.Expressions.MultiSuccessorList.this[int]
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: this[]
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 18
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public INotifiable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public ReadOnly Default Property this[](index As Integer) As INotifiable
  overload: NMF.Expressions.MultiSuccessorList.Item*
  nameWithType.vb: MultiSuccessorList.this[](Integer)
  fullName.vb: NMF.Expressions.MultiSuccessorList.this[](Integer)
  name.vb: this[](Integer)
- uid: NMF.Expressions.MultiSuccessorList.HasSuccessors
  commentId: P:NMF.Expressions.MultiSuccessorList.HasSuccessors
  id: HasSuccessors
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: HasSuccessors
  nameWithType: MultiSuccessorList.HasSuccessors
  fullName: NMF.Expressions.MultiSuccessorList.HasSuccessors
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HasSuccessors
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 21
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public bool HasSuccessors { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasSuccessors As Boolean
  overload: NMF.Expressions.MultiSuccessorList.HasSuccessors*
  implements:
  - NMF.Expressions.ISuccessorList.HasSuccessors
- uid: NMF.Expressions.MultiSuccessorList.IsAttached
  commentId: P:NMF.Expressions.MultiSuccessorList.IsAttached
  id: IsAttached
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: IsAttached
  nameWithType: MultiSuccessorList.IsAttached
  fullName: NMF.Expressions.MultiSuccessorList.IsAttached
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsAttached
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 24
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public bool IsAttached { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttached As Boolean
  overload: NMF.Expressions.MultiSuccessorList.IsAttached*
  implements:
  - NMF.Expressions.ISuccessorList.IsAttached
- uid: NMF.Expressions.MultiSuccessorList.Count
  commentId: P:NMF.Expressions.MultiSuccessorList.Count
  id: Count
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MultiSuccessorList.Count
  fullName: NMF.Expressions.MultiSuccessorList.Count
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Count
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 27
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: NMF.Expressions.MultiSuccessorList.Count*
  implements:
  - NMF.Expressions.ISuccessorList.Count
- uid: NMF.Expressions.MultiSuccessorList.AllSuccessors
  commentId: P:NMF.Expressions.MultiSuccessorList.AllSuccessors
  id: AllSuccessors
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: AllSuccessors
  nameWithType: MultiSuccessorList.AllSuccessors
  fullName: NMF.Expressions.MultiSuccessorList.AllSuccessors
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AllSuccessors
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 30
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public IEnumerable<INotifiable> AllSuccessors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
    content.vb: Public ReadOnly Property AllSuccessors As IEnumerable(Of INotifiable)
  overload: NMF.Expressions.MultiSuccessorList.AllSuccessors*
- uid: NMF.Expressions.MultiSuccessorList.Attached
  commentId: E:NMF.Expressions.MultiSuccessorList.Attached
  id: Attached
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: Attached
  nameWithType: MultiSuccessorList.Attached
  fullName: NMF.Expressions.MultiSuccessorList.Attached
  type: Event
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Attached
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 33
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public event EventHandler Attached
    return:
      type: System.EventHandler
    content.vb: Public Event Attached As EventHandler
- uid: NMF.Expressions.MultiSuccessorList.Detached
  commentId: E:NMF.Expressions.MultiSuccessorList.Detached
  id: Detached
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: Detached
  nameWithType: MultiSuccessorList.Detached
  fullName: NMF.Expressions.MultiSuccessorList.Detached
  type: Event
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Detached
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 36
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public event EventHandler Detached
    return:
      type: System.EventHandler
    content.vb: Public Event Detached As EventHandler
- uid: NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  id: Set(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: Set(INotifiable)
  nameWithType: MultiSuccessorList.Set(INotifiable)
  fullName: NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Set
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 40
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void Set(INotifiable node)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    content.vb: Public Sub [Set](node As INotifiable)
  overload: NMF.Expressions.MultiSuccessorList.Set*
  implements:
  - NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
- uid: NMF.Expressions.MultiSuccessorList.SetDummy
  commentId: M:NMF.Expressions.MultiSuccessorList.SetDummy
  id: SetDummy
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: SetDummy()
  nameWithType: MultiSuccessorList.SetDummy()
  fullName: NMF.Expressions.MultiSuccessorList.SetDummy()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetDummy
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 60
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void SetDummy()
    content.vb: Public Sub SetDummy()
  overload: NMF.Expressions.MultiSuccessorList.SetDummy*
  implements:
  - NMF.Expressions.ISuccessorList.SetDummy
- uid: NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  id: Unset(NMF.Expressions.INotifiable,System.Boolean)
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: Unset(INotifiable, bool)
  nameWithType: MultiSuccessorList.Unset(INotifiable, bool)
  fullName: NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable, bool)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Unset
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 70
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void Unset(INotifiable node, bool leaveDummy = false)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    - id: leaveDummy
      type: System.Boolean
    content.vb: Public Sub Unset(node As INotifiable, leaveDummy As Boolean = False)
  overload: NMF.Expressions.MultiSuccessorList.Unset*
  implements:
  - NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  nameWithType.vb: MultiSuccessorList.Unset(INotifiable, Boolean)
  fullName.vb: NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
- uid: NMF.Expressions.MultiSuccessorList.UnsetAll
  commentId: M:NMF.Expressions.MultiSuccessorList.UnsetAll
  id: UnsetAll
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: UnsetAll()
  nameWithType: MultiSuccessorList.UnsetAll()
  fullName: NMF.Expressions.MultiSuccessorList.UnsetAll()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: UnsetAll
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 82
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: public void UnsetAll()
    content.vb: Public Sub UnsetAll()
  overload: NMF.Expressions.MultiSuccessorList.UnsetAll*
  implements:
  - NMF.Expressions.ISuccessorList.UnsetAll
- uid: NMF.Expressions.MultiSuccessorList.GetSuccessor(System.Int32)
  commentId: M:NMF.Expressions.MultiSuccessorList.GetSuccessor(System.Int32)
  id: GetSuccessor(System.Int32)
  parent: NMF.Expressions.MultiSuccessorList
  langs:
  - csharp
  - vb
  name: GetSuccessor(int)
  nameWithType: MultiSuccessorList.GetSuccessor(int)
  fullName: NMF.Expressions.MultiSuccessorList.GetSuccessor(int)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/MultiSuccessorList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetSuccessor
    path: src/Expressions/Expressions/Public/MultiSuccessorList.cs
    startLine: 92
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public INotifiable GetSuccessor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public Function GetSuccessor(index As Integer) As INotifiable
  overload: NMF.Expressions.MultiSuccessorList.GetSuccessor*
  implements:
  - NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  nameWithType.vb: MultiSuccessorList.GetSuccessor(Integer)
  fullName.vb: NMF.Expressions.MultiSuccessorList.GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.ISuccessorList
  commentId: T:NMF.Expressions.ISuccessorList
  parent: NMF.Expressions
  name: ISuccessorList
  nameWithType: ISuccessorList
  fullName: NMF.Expressions.ISuccessorList
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: NMF.Expressions.MultiSuccessorList.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<MultiSuccessorList>(MultiSuccessorList)
  nameWithType: ExpressionExtensions.AsOne<MultiSuccessorList>(MultiSuccessorList)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.MultiSuccessorList>(NMF.Expressions.MultiSuccessorList)
  nameWithType.vb: ExpressionExtensions.AsOne(Of MultiSuccessorList)(MultiSuccessorList)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.MultiSuccessorList)(NMF.Expressions.MultiSuccessorList)
  name.vb: AsOne(Of MultiSuccessorList)(MultiSuccessorList)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.MultiSuccessorList)
    name: AsOne
  - name: <
  - uid: NMF.Expressions.MultiSuccessorList
    name: MultiSuccessorList
  - name: '>'
  - name: (
  - uid: NMF.Expressions.MultiSuccessorList
    name: MultiSuccessorList
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.MultiSuccessorList)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.MultiSuccessorList
    name: MultiSuccessorList
  - name: )
  - name: (
  - uid: NMF.Expressions.MultiSuccessorList
    name: MultiSuccessorList
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
- uid: NMF.Expressions.MultiSuccessorList.Item*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Item
  name: this
  nameWithType: MultiSuccessorList.this
  fullName: NMF.Expressions.MultiSuccessorList.this
  nameWithType.vb: MultiSuccessorList.this[]
  fullName.vb: NMF.Expressions.MultiSuccessorList.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: NMF.Expressions.MultiSuccessorList.HasSuccessors*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.HasSuccessors
  name: HasSuccessors
  nameWithType: MultiSuccessorList.HasSuccessors
  fullName: NMF.Expressions.MultiSuccessorList.HasSuccessors
- uid: NMF.Expressions.ISuccessorList.HasSuccessors
  commentId: P:NMF.Expressions.ISuccessorList.HasSuccessors
  parent: NMF.Expressions.ISuccessorList
  name: HasSuccessors
  nameWithType: ISuccessorList.HasSuccessors
  fullName: NMF.Expressions.ISuccessorList.HasSuccessors
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Expressions.MultiSuccessorList.IsAttached*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.IsAttached
  name: IsAttached
  nameWithType: MultiSuccessorList.IsAttached
  fullName: NMF.Expressions.MultiSuccessorList.IsAttached
- uid: NMF.Expressions.ISuccessorList.IsAttached
  commentId: P:NMF.Expressions.ISuccessorList.IsAttached
  parent: NMF.Expressions.ISuccessorList
  name: IsAttached
  nameWithType: ISuccessorList.IsAttached
  fullName: NMF.Expressions.ISuccessorList.IsAttached
- uid: NMF.Expressions.MultiSuccessorList.Count*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Count
  name: Count
  nameWithType: MultiSuccessorList.Count
  fullName: NMF.Expressions.MultiSuccessorList.Count
- uid: NMF.Expressions.ISuccessorList.Count
  commentId: P:NMF.Expressions.ISuccessorList.Count
  parent: NMF.Expressions.ISuccessorList
  name: Count
  nameWithType: ISuccessorList.Count
  fullName: NMF.Expressions.ISuccessorList.Count
- uid: NMF.Expressions.MultiSuccessorList.AllSuccessors*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.AllSuccessors
  name: AllSuccessors
  nameWithType: MultiSuccessorList.AllSuccessors
  fullName: NMF.Expressions.MultiSuccessorList.AllSuccessors
- uid: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INotifiable>
  nameWithType: IEnumerable<INotifiable>
  fullName: System.Collections.Generic.IEnumerable<NMF.Expressions.INotifiable>
  nameWithType.vb: IEnumerable(Of INotifiable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Expressions.INotifiable)
  name.vb: IEnumerable(Of INotifiable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: NMF.Expressions.MultiSuccessorList.Set*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Set
  name: Set
  nameWithType: MultiSuccessorList.Set
  fullName: NMF.Expressions.MultiSuccessorList.Set
- uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.ISuccessorList
  name: Set(INotifiable)
  nameWithType: ISuccessorList.Set(INotifiable)
  fullName: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
    name: Set
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
    name: Set
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: NMF.Expressions.MultiSuccessorList.SetDummy*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.SetDummy
  name: SetDummy
  nameWithType: MultiSuccessorList.SetDummy
  fullName: NMF.Expressions.MultiSuccessorList.SetDummy
- uid: NMF.Expressions.ISuccessorList.SetDummy
  commentId: M:NMF.Expressions.ISuccessorList.SetDummy
  parent: NMF.Expressions.ISuccessorList
  name: SetDummy()
  nameWithType: ISuccessorList.SetDummy()
  fullName: NMF.Expressions.ISuccessorList.SetDummy()
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.SetDummy
    name: SetDummy
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.SetDummy
    name: SetDummy
  - name: (
  - name: )
- uid: NMF.Expressions.MultiSuccessorList.Unset*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Unset
  name: Unset
  nameWithType: MultiSuccessorList.Unset
  fullName: NMF.Expressions.MultiSuccessorList.Unset
- uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  parent: NMF.Expressions.ISuccessorList
  isExternal: true
  name: Unset(INotifiable, bool)
  nameWithType: ISuccessorList.Unset(INotifiable, bool)
  fullName: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable, bool)
  nameWithType.vb: ISuccessorList.Unset(INotifiable, Boolean)
  fullName.vb: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Expressions.MultiSuccessorList.UnsetAll*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.UnsetAll
  name: UnsetAll
  nameWithType: MultiSuccessorList.UnsetAll
  fullName: NMF.Expressions.MultiSuccessorList.UnsetAll
- uid: NMF.Expressions.ISuccessorList.UnsetAll
  commentId: M:NMF.Expressions.ISuccessorList.UnsetAll
  parent: NMF.Expressions.ISuccessorList
  name: UnsetAll()
  nameWithType: ISuccessorList.UnsetAll()
  fullName: NMF.Expressions.ISuccessorList.UnsetAll()
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.UnsetAll
    name: UnsetAll
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.UnsetAll
    name: UnsetAll
  - name: (
  - name: )
- uid: NMF.Expressions.MultiSuccessorList.GetSuccessor*
  commentId: Overload:NMF.Expressions.MultiSuccessorList.GetSuccessor
  name: GetSuccessor
  nameWithType: MultiSuccessorList.GetSuccessor
  fullName: NMF.Expressions.MultiSuccessorList.GetSuccessor
- uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  commentId: M:NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  parent: NMF.Expressions.ISuccessorList
  isExternal: true
  name: GetSuccessor(int)
  nameWithType: ISuccessorList.GetSuccessor(int)
  fullName: NMF.Expressions.ISuccessorList.GetSuccessor(int)
  nameWithType.vb: ISuccessorList.GetSuccessor(Integer)
  fullName.vb: NMF.Expressions.ISuccessorList.GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
    name: GetSuccessor
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
    name: GetSuccessor
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
