### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.IBinding`1
  commentId: T:NMF.Expressions.IBinding`1
  id: IBinding`1
  parent: NMF.Expressions
  children:
  - NMF.Expressions.IBinding`1.Bind(`0)
  langs:
  - csharp
  - vb
  name: IBinding<T>
  nameWithType: IBinding<T>
  fullName: NMF.Expressions.IBinding<T>
  type: Interface
  source:
    remote:
      path: Expressions/Expressions.Utilities/Binding.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IBinding
    path: src/Expressions/Expressions.Utilities/Binding.cs
    startLine: 43
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Denotes a binding of type T
  example: []
  syntax:
    content: public interface IBinding<T>
    typeParameters:
    - id: T
      description: The type of the object that is bound
    content.vb: Public Interface IBinding(Of T)
  extensionMethods:
  - NMF.Expressions.IBinding`1.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  nameWithType.vb: IBinding(Of T)
  fullName.vb: NMF.Expressions.IBinding(Of T)
  name.vb: IBinding(Of T)
- uid: NMF.Expressions.IBinding`1.Bind(`0)
  commentId: M:NMF.Expressions.IBinding`1.Bind(`0)
  id: Bind(`0)
  parent: NMF.Expressions.IBinding`1
  langs:
  - csharp
  - vb
  name: Bind(T)
  nameWithType: IBinding<T>.Bind(T)
  fullName: NMF.Expressions.IBinding<T>.Bind(T)
  type: Method
  source:
    remote:
      path: Expressions/Expressions.Utilities/Binding.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Bind
    path: src/Expressions/Expressions.Utilities/Binding.cs
    startLine: 50
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Executes the binding for the given element
  example: []
  syntax:
    content: IDisposable Bind(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The element that should be bound
    return:
      type: System.IDisposable
      description: A disposable instance. When disposed, the binding for the provided element ends.
    content.vb: Function Bind(item As T) As IDisposable
  overload: NMF.Expressions.IBinding`1.Bind*
  nameWithType.vb: IBinding(Of T).Bind(T)
  fullName.vb: NMF.Expressions.IBinding(Of T).Bind(T)
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: NMF.Expressions.IBinding`1.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<IBinding<T>>(IBinding<T>)
  nameWithType: ExpressionExtensions.AsOne<IBinding<T>>(IBinding<T>)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.IBinding<T>>(NMF.Expressions.IBinding<T>)
  nameWithType.vb: ExpressionExtensions.AsOne(Of IBinding(Of T))(IBinding(Of T))
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.IBinding(Of T))(NMF.Expressions.IBinding(Of T))
  name.vb: AsOne(Of IBinding(Of T))(IBinding(Of T))
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IBinding{`0})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IBinding{`0})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: NMF.Expressions.IBinding`1.Bind*
  commentId: Overload:NMF.Expressions.IBinding`1.Bind
  href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  name: Bind
  nameWithType: IBinding<T>.Bind
  fullName: NMF.Expressions.IBinding<T>.Bind
  nameWithType.vb: IBinding(Of T).Bind
  fullName.vb: NMF.Expressions.IBinding(Of T).Bind
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
