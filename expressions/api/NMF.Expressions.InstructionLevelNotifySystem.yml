### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.InstructionLevelNotifySystem
  commentId: T:NMF.Expressions.InstructionLevelNotifySystem
  id: InstructionLevelNotifySystem
  parent: NMF.Expressions
  children:
  - NMF.Expressions.InstructionLevelNotifySystem.#ctor
  - NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  - NMF.Expressions.InstructionLevelNotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  - NMF.Expressions.InstructionLevelNotifySystem.CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  - NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  - NMF.Expressions.InstructionLevelNotifySystem.Instance
  langs:
  - csharp
  - vb
  name: InstructionLevelNotifySystem
  nameWithType: InstructionLevelNotifySystem
  fullName: NMF.Expressions.InstructionLevelNotifySystem
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InstructionLevelNotifySystem
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 10
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Represents an implementation of an incremental computation system on instruction level
  example: []
  syntax:
    content: 'public class InstructionLevelNotifySystem : INotifySystem'
    content.vb: Public Class InstructionLevelNotifySystem Implements INotifySystem
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Expressions.ModelNotifySystem
  implements:
  - NMF.Expressions.INotifySystem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Expressions.InstructionLevelNotifySystem.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.InstructionLevelNotifySystem.#ctor
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.#ctor
  id: '#ctor'
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: InstructionLevelNotifySystem()
  nameWithType: InstructionLevelNotifySystem.InstructionLevelNotifySystem()
  fullName: NMF.Expressions.InstructionLevelNotifySystem.InstructionLevelNotifySystem()
  type: Constructor
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 19
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Creates a new instance
  example: []
  syntax:
    content: public InstructionLevelNotifySystem()
    content.vb: Public Sub New()
  overload: NMF.Expressions.InstructionLevelNotifySystem.#ctor*
  nameWithType.vb: InstructionLevelNotifySystem.New()
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.New()
  name.vb: New()
- uid: NMF.Expressions.InstructionLevelNotifySystem.Instance
  commentId: P:NMF.Expressions.InstructionLevelNotifySystem.Instance
  id: Instance
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: InstructionLevelNotifySystem.Instance
  fullName: NMF.Expressions.InstructionLevelNotifySystem.Instance
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Instance
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 34
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Gets the default instruction-level-incremental system
  example: []
  syntax:
    content: public static InstructionLevelNotifySystem Instance { get; }
    parameters: []
    return:
      type: NMF.Expressions.InstructionLevelNotifySystem
    content.vb: Public Shared ReadOnly Property Instance As InstructionLevelNotifySystem
  overload: NMF.Expressions.InstructionLevelNotifySystem.Instance*
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  id: CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: CreateLocal<T, TVar>(INotifyExpression<T>, INotifyExpression<TVar>, out string)
  nameWithType: InstructionLevelNotifySystem.CreateLocal<T, TVar>(INotifyExpression<T>, INotifyExpression<TVar>, out string)
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal<T, TVar>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<TVar>, out string)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateLocal
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 51
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Creates a local variable expression for the given expression and the given local variable
  example: []
  syntax:
    content: public INotifyExpression<T> CreateLocal<T, TVar>(INotifyExpression<T> inner, INotifyExpression<TVar> localVariable, out string paramName)
    parameters:
    - id: inner
      type: NMF.Expressions.INotifyExpression{{T}}
      description: The expression for which the local variable should be created
    - id: localVariable
      type: NMF.Expressions.INotifyExpression{{TVar}}
      description: The local variable
    - id: paramName
      type: System.String
      description: Returns a parameter name under which the local variable can be referenced
    typeParameters:
    - id: T
      description: The type of the expression whose scope should be used to create the local variable
    - id: TVar
      description: The type of the variable
    return:
      type: NMF.Expressions.INotifyExpression{{T}}
      description: The inner expression withthe local variable attached to it
    content.vb: Public Function CreateLocal(Of T, TVar)(inner As INotifyExpression(Of T), localVariable As INotifyExpression(Of TVar), paramName As String) As INotifyExpression(Of T)
  overload: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal*
  nameWithType.vb: InstructionLevelNotifySystem.CreateLocal(Of T, TVar)(INotifyExpression(Of T), INotifyExpression(Of TVar), String)
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal(Of T, TVar)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of TVar), String)
  name.vb: CreateLocal(Of T, TVar)(INotifyExpression(Of T), INotifyExpression(Of TVar), String)
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: InstructionLevelNotifySystem.CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateExpression
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 67
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Creates an incremental expression for the given code expression
  example: []
  syntax:
    content: public INotifyExpression<T> CreateExpression<T>(Expression expression, IEnumerable<ParameterExpression> parameters, IDictionary<string, object> parameterMappings)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The expression from which to create an incremental expression
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: The parameters of the expression
    - id: parameterMappings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: A given mapping of parameters
    typeParameters:
    - id: T
      description: The type of the expression
    return:
      type: NMF.Expressions.INotifyExpression{{T}}
      description: An incremental expression object
    content.vb: Public Function CreateExpression(Of T)(expression As Expression, parameters As IEnumerable(Of ParameterExpression), parameterMappings As IDictionary(Of String, Object)) As INotifyExpression(Of T)
  overload: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression*
  implements:
  - NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: InstructionLevelNotifySystem.CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: InstructionLevelNotifySystem.CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateReversableExpression
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 91
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Creates an incremental expression for the given code expression
  example: []
  syntax:
    content: public INotifyReversableExpression<T> CreateReversableExpression<T>(Expression expression, IEnumerable<ParameterExpression> parameters, IDictionary<string, object> parameterMappings)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The expression from which to create an incremental expression
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: The parameters of the expression
    - id: parameterMappings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: A given mapping of parameters
    typeParameters:
    - id: T
      description: The type of the expression
    return:
      type: NMF.Expressions.INotifyReversableExpression{{T}}
      description: An incremental expression object
    content.vb: Public Function CreateReversableExpression(Of T)(expression As Expression, parameters As IEnumerable(Of ParameterExpression), parameterMappings As IDictionary(Of String, Object)) As INotifyReversableExpression(Of T)
  overload: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression*
  implements:
  - NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: InstructionLevelNotifySystem.CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.InstructionLevelNotifySystem
  langs:
  - csharp
  - vb
  name: CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: InstructionLevelNotifySystem.CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateExpression
    path: src/Expressions/Expressions/Public/InstructionLevelNotifySystem.cs
    startLine: 117
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: Creates an incremental expression for the given code expression
  example: []
  syntax:
    content: public INotifyExpression CreateExpression(Expression expression, IEnumerable<ParameterExpression> parameters, IDictionary<string, object> parameterMappings)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The expression from which to create an incremental expression
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: The parameters of the expression
    - id: parameterMappings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: A given mapping of parameters
    return:
      type: NMF.Expressions.INotifyExpression
      description: An incremental expression object
    content.vb: Public Function CreateExpression(expression As Expression, parameters As IEnumerable(Of ParameterExpression), parameterMappings As IDictionary(Of String, Object)) As INotifyExpression
  overload: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression*
  implements:
  - NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: InstructionLevelNotifySystem.CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.INotifySystem
  commentId: T:NMF.Expressions.INotifySystem
  parent: NMF.Expressions
  href: NMF.Expressions.INotifySystem.html
  name: INotifySystem
  nameWithType: INotifySystem
  fullName: NMF.Expressions.INotifySystem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Expressions.InstructionLevelNotifySystem.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<InstructionLevelNotifySystem>(InstructionLevelNotifySystem)
  nameWithType: ExpressionExtensions.AsOne<InstructionLevelNotifySystem>(InstructionLevelNotifySystem)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.InstructionLevelNotifySystem>(NMF.Expressions.InstructionLevelNotifySystem)
  nameWithType.vb: ExpressionExtensions.AsOne(Of InstructionLevelNotifySystem)(InstructionLevelNotifySystem)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.InstructionLevelNotifySystem)(NMF.Expressions.InstructionLevelNotifySystem)
  name.vb: AsOne(Of InstructionLevelNotifySystem)(InstructionLevelNotifySystem)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.InstructionLevelNotifySystem)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.InstructionLevelNotifySystem
    name: InstructionLevelNotifySystem
    href: NMF.Expressions.InstructionLevelNotifySystem.html
  - name: '>'
  - name: (
  - uid: NMF.Expressions.InstructionLevelNotifySystem
    name: InstructionLevelNotifySystem
    href: NMF.Expressions.InstructionLevelNotifySystem.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.InstructionLevelNotifySystem)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.InstructionLevelNotifySystem
    name: InstructionLevelNotifySystem
    href: NMF.Expressions.InstructionLevelNotifySystem.html
  - name: )
  - name: (
  - uid: NMF.Expressions.InstructionLevelNotifySystem
    name: InstructionLevelNotifySystem
    href: NMF.Expressions.InstructionLevelNotifySystem.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: NMF.Expressions.InstructionLevelNotifySystem.#ctor*
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.#ctor
  href: NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem__ctor
  name: InstructionLevelNotifySystem
  nameWithType: InstructionLevelNotifySystem.InstructionLevelNotifySystem
  fullName: NMF.Expressions.InstructionLevelNotifySystem.InstructionLevelNotifySystem
  nameWithType.vb: InstructionLevelNotifySystem.New
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.New
  name.vb: New
- uid: NMF.Expressions.InstructionLevelNotifySystem.Instance*
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.Instance
  href: NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_Instance
  name: Instance
  nameWithType: InstructionLevelNotifySystem.Instance
  fullName: NMF.Expressions.InstructionLevelNotifySystem.Instance
- uid: NMF.Expressions.InstructionLevelNotifySystem
  commentId: T:NMF.Expressions.InstructionLevelNotifySystem
  parent: NMF.Expressions
  href: NMF.Expressions.InstructionLevelNotifySystem.html
  name: InstructionLevelNotifySystem
  nameWithType: InstructionLevelNotifySystem
  fullName: NMF.Expressions.InstructionLevelNotifySystem
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal*
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateLocal
  href: NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateLocal__2_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___1__System_String__
  name: CreateLocal
  nameWithType: InstructionLevelNotifySystem.CreateLocal
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal
- uid: NMF.Expressions.INotifyExpression{{T}}
  commentId: T:NMF.Expressions.INotifyExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  href: NMF.Expressions.INotifyExpression-1.html
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.INotifyExpression{{TVar}}
  commentId: T:NMF.Expressions.INotifyExpression{``1}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyExpression`1
  href: NMF.Expressions.INotifyExpression-1.html
  name: INotifyExpression<TVar>
  nameWithType: INotifyExpression<TVar>
  fullName: NMF.Expressions.INotifyExpression<TVar>
  nameWithType.vb: INotifyExpression(Of TVar)
  fullName.vb: NMF.Expressions.INotifyExpression(Of TVar)
  name.vb: INotifyExpression(Of TVar)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: <
  - name: TVar
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TVar
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Expressions.INotifyExpression`1
  commentId: T:NMF.Expressions.INotifyExpression`1
  parent: NMF.Expressions
  href: NMF.Expressions.INotifyExpression-1.html
  name: INotifyExpression<T>
  nameWithType: INotifyExpression<T>
  fullName: NMF.Expressions.INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  name.vb: INotifyExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyExpression`1
    name: INotifyExpression
    href: NMF.Expressions.INotifyExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression*
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression
  href: NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  name: CreateExpression
  nameWithType: InstructionLevelNotifySystem.CreateExpression
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression
- uid: NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.INotifySystem
  isExternal: true
  href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  name: CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: INotifySystem.CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.INotifySystem.CreateExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  nameWithType.vb: INotifySystem.CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.INotifySystem.CreateExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  spec.csharp:
  - uid: NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ParameterExpression>
  nameWithType: IEnumerable<ParameterExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>
  nameWithType.vb: IEnumerable(Of ParameterExpression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression)
  name.vb: IEnumerable(Of ParameterExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression*
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression
  href: NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  name: CreateReversableExpression
  nameWithType: InstructionLevelNotifySystem.CreateReversableExpression
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression
- uid: NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.INotifySystem
  isExternal: true
  href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  name: CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: INotifySystem.CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.INotifySystem.CreateReversableExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  nameWithType.vb: INotifySystem.CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.INotifySystem.CreateReversableExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  spec.csharp:
  - uid: NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateReversableExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateReversableExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: NMF.Expressions.INotifyReversableExpression{{T}}
  commentId: T:NMF.Expressions.INotifyReversableExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyReversableExpression`1
  href: NMF.Expressions.INotifyReversableExpression-1.html
  name: INotifyReversableExpression<T>
  nameWithType: INotifyReversableExpression<T>
  fullName: NMF.Expressions.INotifyReversableExpression<T>
  nameWithType.vb: INotifyReversableExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyReversableExpression(Of T)
  name.vb: INotifyReversableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyReversableExpression`1
    name: INotifyReversableExpression
    href: NMF.Expressions.INotifyReversableExpression-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyReversableExpression`1
    name: INotifyReversableExpression
    href: NMF.Expressions.INotifyReversableExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.INotifyReversableExpression`1
  commentId: T:NMF.Expressions.INotifyReversableExpression`1
  href: NMF.Expressions.INotifyReversableExpression-1.html
  name: INotifyReversableExpression<T>
  nameWithType: INotifyReversableExpression<T>
  fullName: NMF.Expressions.INotifyReversableExpression<T>
  nameWithType.vb: INotifyReversableExpression(Of T)
  fullName.vb: NMF.Expressions.INotifyReversableExpression(Of T)
  name.vb: INotifyReversableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyReversableExpression`1
    name: INotifyReversableExpression
    href: NMF.Expressions.INotifyReversableExpression-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyReversableExpression`1
    name: INotifyReversableExpression
    href: NMF.Expressions.INotifyReversableExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: NMF.Expressions.INotifySystem
  isExternal: true
  href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  name: CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  nameWithType: INotifySystem.CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<string, object>)
  fullName: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<string, object>)
  nameWithType.vb: INotifySystem.CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName.vb: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of String, Object))
  name.vb: CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  spec.csharp:
  - uid: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CreateExpression
    href: NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  - name: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.parameterexpression
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: NMF.Expressions.INotifyExpression
  commentId: T:NMF.Expressions.INotifyExpression
  parent: NMF.Expressions
  href: NMF.Expressions.INotifyExpression.html
  name: INotifyExpression
  nameWithType: INotifyExpression
  fullName: NMF.Expressions.INotifyExpression
