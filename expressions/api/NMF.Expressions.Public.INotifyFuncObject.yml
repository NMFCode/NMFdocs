### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Public.INotifyFuncObject
  commentId: T:NMF.Expressions.Public.INotifyFuncObject
  id: INotifyFuncObject
  parent: NMF.Expressions.Public
  children:
  - NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction(System.Reflection.MethodInfo)
  langs:
  - csharp
  - vb
  name: INotifyFuncObject
  nameWithType: INotifyFuncObject
  fullName: NMF.Expressions.Public.INotifyFuncObject
  type: Interface
  source:
    remote:
      path: Expressions/Expressions/Public/INotifyFuncObject.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: INotifyFuncObject
    path: src/Expressions/Expressions/Public/INotifyFuncObject.cs
    startLine: 7
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions.Public
  syntax:
    content: public interface INotifyFuncObject
    content.vb: Public Interface INotifyFuncObject
  extensionMethods:
  - NMF.Expressions.Public.INotifyFuncObject.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction(System.Reflection.MethodInfo)
  commentId: M:NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction(System.Reflection.MethodInfo)
  id: GetProxyFunction(System.Reflection.MethodInfo)
  parent: NMF.Expressions.Public.INotifyFuncObject
  langs:
  - csharp
  - vb
  name: GetProxyFunction(MethodInfo)
  nameWithType: INotifyFuncObject.GetProxyFunction(MethodInfo)
  fullName: NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction(System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/INotifyFuncObject.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetProxyFunction
    path: src/Expressions/Expressions/Public/INotifyFuncObject.cs
    startLine: 9
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions.Public
  syntax:
    content: MethodInfo GetProxyFunction(MethodInfo method)
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
    return:
      type: System.Reflection.MethodInfo
    content.vb: Function GetProxyFunction(method As MethodInfo) As MethodInfo
  overload: NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction*
references:
- uid: NMF.Expressions.Public
  commentId: N:NMF.Expressions.Public
  name: NMF.Expressions.Public
  nameWithType: NMF.Expressions.Public
  fullName: NMF.Expressions.Public
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Public
    name: Public
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Public
    name: Public
- uid: NMF.Expressions.Public.INotifyFuncObject.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<INotifyFuncObject>(INotifyFuncObject)
  nameWithType: ExpressionExtensions.AsOne<INotifyFuncObject>(INotifyFuncObject)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.Public.INotifyFuncObject>(NMF.Expressions.Public.INotifyFuncObject)
  nameWithType.vb: ExpressionExtensions.AsOne(Of INotifyFuncObject)(INotifyFuncObject)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.Public.INotifyFuncObject)(NMF.Expressions.Public.INotifyFuncObject)
  name.vb: AsOne(Of INotifyFuncObject)(INotifyFuncObject)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Public.INotifyFuncObject)
    name: AsOne
  - name: <
  - uid: NMF.Expressions.Public.INotifyFuncObject
    name: INotifyFuncObject
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Public.INotifyFuncObject
    name: INotifyFuncObject
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Public.INotifyFuncObject)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.Public.INotifyFuncObject
    name: INotifyFuncObject
  - name: )
  - name: (
  - uid: NMF.Expressions.Public.INotifyFuncObject
    name: INotifyFuncObject
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
- uid: NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction*
  commentId: Overload:NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction
  name: GetProxyFunction
  nameWithType: INotifyFuncObject.GetProxyFunction
  fullName: NMF.Expressions.Public.INotifyFuncObject.GetProxyFunction
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
