### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Linq.ObservableAggregate`3
  commentId: T:NMF.Expressions.Linq.ObservableAggregate`3
  id: ObservableAggregate`3
  parent: NMF.Expressions.Linq
  children:
  - NMF.Expressions.Linq.ObservableAggregate`3.#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)
  - NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  - NMF.Expressions.Linq.ObservableAggregate`3.AddItem(`0)
  - NMF.Expressions.Linq.ObservableAggregate`3.Attach
  - NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  - NMF.Expressions.Linq.ObservableAggregate`3.Detach
  - NMF.Expressions.Linq.ObservableAggregate`3.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  - NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem(`0)
  - NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  - NMF.Expressions.Linq.ObservableAggregate`3.Source
  langs:
  - csharp
  - vb
  name: ObservableAggregate<TSource, TAccumulator, TResult>
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>
  type: Class
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ObservableAggregate
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 8
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: 'public abstract class ObservableAggregate<TSource, TAccumulator, TResult> : NotifyValue<TResult>, INotifyValue<TResult>, INotifiable, IDisposable, ISuccessorList, IValueChangedNotificationResult<TResult>, IValueChangedNotificationResult, INotificationResult'
    typeParameters:
    - id: TSource
    - id: TAccumulator
    - id: TResult
    content.vb: Public MustInherit Class ObservableAggregate(Of TSource, TAccumulator, TResult) Inherits NotifyValue(Of TResult) Implements INotifyValue(Of TResult), INotifiable, IDisposable, ISuccessorList, IValueChangedNotificationResult(Of TResult), IValueChangedNotificationResult, INotificationResult
  inheritance:
  - System.Object
  - NMF.Expressions.NotifyValue{{TResult}}
  implements:
  - NMF.Expressions.INotifyValue{{TResult}}
  - NMF.Expressions.INotifiable
  - System.IDisposable
  - NMF.Expressions.ISuccessorList
  - NMF.Expressions.IValueChangedNotificationResult{{TResult}}
  - NMF.Expressions.IValueChangedNotificationResult
  - NMF.Expressions.INotificationResult
  inheritedMembers:
  - NMF.Expressions.NotifyValue{{TResult}}.Value
  - NMF.Expressions.NotifyValue{{TResult}}.Successors
  - NMF.Expressions.NotifyValue{{TResult}}.ExecutionMetaData
  - NMF.Expressions.NotifyValue{{TResult}}.ValueChanged
  - NMF.Expressions.NotifyValue{{TResult}}.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Expressions.NotifyValue{{TResult}}.OnValueChanged({TResult},{TResult})
  - NMF.Expressions.NotifyValue{{TResult}}.Dispose
  - NMF.Expressions.NotifyValue{{TResult}}.HasSuccessors
  - NMF.Expressions.NotifyValue{{TResult}}.IsAttached
  - NMF.Expressions.NotifyValue{{TResult}}.Count
  - NMF.Expressions.NotifyValue{{TResult}}.AllSuccessors
  - NMF.Expressions.NotifyValue{{TResult}}.Set(NMF.Expressions.INotifiable)
  - NMF.Expressions.NotifyValue{{TResult}}.SetDummy
  - NMF.Expressions.NotifyValue{{TResult}}.Unset(NMF.Expressions.INotifiable,System.Boolean)
  - NMF.Expressions.NotifyValue{{TResult}}.UnsetAll
  - NMF.Expressions.NotifyValue{{TResult}}.GetSuccessor(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.ExportToDgml(System.String)
  - NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.Visualize
  - NMF.Expressions.INotifyValue{`2}.NMF.Expressions.ReversableExtensions.AsReversable``1(System.Action{{TResult}})
  - NMF.Expressions.Linq.ObservableAggregate`3.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult)
  name.vb: ObservableAggregate(Of TSource, TAccumulator, TResult)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  id: Accumulator
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Accumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  type: Property
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Accumulator
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 13
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected TAccumulator Accumulator { get; set; }
    parameters: []
    return:
      type: '{TAccumulator}'
    content.vb: Protected Property Accumulator As TAccumulator
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Accumulator*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)
  id: '#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)'
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: ObservableAggregate(INotifyEnumerable<TSource>, TAccumulator)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate(INotifyEnumerable<TSource>, TAccumulator)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate(NMF.Expressions.INotifyEnumerable<TSource>, TAccumulator)
  type: Constructor
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 15
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected ObservableAggregate(INotifyEnumerable<TSource> source, TAccumulator accumulator)
    parameters:
    - id: source
      type: NMF.Expressions.INotifyEnumerable{{TSource}}
    - id: accumulator
      type: '{TAccumulator}'
    content.vb: Protected Sub New(source As INotifyEnumerable(Of TSource), accumulator As TAccumulator)
  overload: NMF.Expressions.Linq.ObservableAggregate`3.#ctor*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).New(INotifyEnumerable(Of TSource), TAccumulator)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).New(NMF.Expressions.INotifyEnumerable(Of TSource), TAccumulator)
  name.vb: New(INotifyEnumerable(Of TSource), TAccumulator)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Source
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Source
  id: Source
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Source
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Source
  type: Property
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Source
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 22
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected INotifyEnumerable<TSource> Source { get; }
    parameters: []
    return:
      type: NMF.Expressions.INotifyEnumerable{{TSource}}
    content.vb: Protected ReadOnly Property Source As INotifyEnumerable(Of TSource)
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Source*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Source
- uid: NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  id: ResetAccumulator
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: ResetAccumulator()
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator()
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator()
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ResetAccumulator
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 27
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected abstract void ResetAccumulator()
    content.vb: Protected MustOverride Sub ResetAccumulator()
  overload: NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator()
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator()
- uid: NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem(`0)
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem(`0)
  id: RemoveItem(`0)
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: RemoveItem(TSource)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem(TSource)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem(TSource)
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: RemoveItem
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 29
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected abstract void RemoveItem(TSource item)
    parameters:
    - id: item
      type: '{TSource}'
    content.vb: Protected MustOverride Sub RemoveItem(item As TSource)
  overload: NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem(TSource)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem(TSource)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.AddItem(`0)
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.AddItem(`0)
  id: AddItem(`0)
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: AddItem(TSource)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.AddItem(TSource)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.AddItem(TSource)
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: AddItem
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 31
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  syntax:
    content: protected abstract void AddItem(TSource item)
    parameters:
    - id: item
      type: '{TSource}'
    content.vb: Protected MustOverride Sub AddItem(item As TSource)
  overload: NMF.Expressions.Linq.ObservableAggregate`3.AddItem*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem(TSource)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem(TSource)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Attach
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.Attach
  id: Attach
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Attach()
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Attach()
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Attach()
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Attach
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 33
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  example: []
  syntax:
    content: protected override void Attach()
    content.vb: Protected Overrides Sub Attach()
  overridden: NMF.Expressions.NotifyValue{{TResult}}.Attach
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Attach*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Attach()
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Attach()
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Detach
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.Detach
  id: Detach
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Detach()
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Detach()
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Detach()
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Detach
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 44
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  example: []
  syntax:
    content: protected override void Detach()
    content.vb: Protected Overrides Sub Detach()
  overridden: NMF.Expressions.NotifyValue{{TResult}}.Detach
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Detach*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Detach()
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Detach()
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  id: Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Notify(IList<INotificationResult>)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Notify(IList<INotificationResult>)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Notify
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 50
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  summary: Gets called when one of the dependencies signals a notification.
  example: []
  syntax:
    content: public override INotificationResult Notify(IList<INotificationResult> sources)
    parameters:
    - id: sources
      type: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
      description: Contains information about what triggered this notification.
    return:
      type: NMF.Expressions.INotificationResult
      description: An object describing the changes that happened in this notification.
    content.vb: Public Overrides Function Notify(sources As IList(Of INotificationResult)) As INotificationResult
  overridden: NMF.Expressions.NotifyValue{{TResult}}.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Notify*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  id: Dependencies
  parent: NMF.Expressions.Linq.ObservableAggregate`3
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  type: Property
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Dependencies
    path: src/Expressions/Expressions.Linq/Linq/ObservableAggregate.cs
    startLine: 90
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions.Linq
  summary: Nodes that notify this node.
  example: []
  syntax:
    content: public override IEnumerable<INotifiable> Dependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
    content.vb: Public Overrides ReadOnly Property Dependencies As IEnumerable(Of INotifiable)
  overridden: NMF.Expressions.NotifyValue{{TResult}}.Dependencies
  overload: NMF.Expressions.Linq.ObservableAggregate`3.Dependencies*
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
references:
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.NotifyValue{{TResult}}
  commentId: T:NMF.Expressions.NotifyValue{`2}
  parent: NMF.Expressions
  definition: NMF.Expressions.NotifyValue`1
  href: NMF.Expressions.NotifyValue-1.html
  name: NotifyValue<TResult>
  nameWithType: NotifyValue<TResult>
  fullName: NMF.Expressions.NotifyValue<TResult>
  nameWithType.vb: NotifyValue(Of TResult)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult)
  name.vb: NotifyValue(Of TResult)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1
    name: NotifyValue
    href: NMF.Expressions.NotifyValue-1.html
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1
    name: NotifyValue
    href: NMF.Expressions.NotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions.INotifyValue{{TResult}}
  commentId: T:NMF.Expressions.INotifyValue{`1}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyValue`1
  href: NMF.Expressions.INotifyValue-1.html
  name: INotifyValue<TResult>
  nameWithType: INotifyValue<TResult>
  fullName: NMF.Expressions.INotifyValue<TResult>
  nameWithType.vb: INotifyValue(Of TResult)
  fullName.vb: NMF.Expressions.INotifyValue(Of TResult)
  name.vb: INotifyValue(Of TResult)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  href: NMF.Expressions.INotifiable.html
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NMF.Expressions.ISuccessorList
  commentId: T:NMF.Expressions.ISuccessorList
  parent: NMF.Expressions
  href: NMF.Expressions.ISuccessorList.html
  name: ISuccessorList
  nameWithType: ISuccessorList
  fullName: NMF.Expressions.ISuccessorList
- uid: NMF.Expressions.IValueChangedNotificationResult{{TResult}}
  commentId: T:NMF.Expressions.IValueChangedNotificationResult{`2}
  parent: NMF.Expressions
  definition: NMF.Expressions.IValueChangedNotificationResult`1
  href: NMF.Expressions.IValueChangedNotificationResult-1.html
  name: IValueChangedNotificationResult<TResult>
  nameWithType: IValueChangedNotificationResult<TResult>
  fullName: NMF.Expressions.IValueChangedNotificationResult<TResult>
  nameWithType.vb: IValueChangedNotificationResult(Of TResult)
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of TResult)
  name.vb: IValueChangedNotificationResult(Of TResult)
  spec.csharp:
  - uid: NMF.Expressions.IValueChangedNotificationResult`1
    name: IValueChangedNotificationResult
    href: NMF.Expressions.IValueChangedNotificationResult-1.html
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IValueChangedNotificationResult`1
    name: IValueChangedNotificationResult
    href: NMF.Expressions.IValueChangedNotificationResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions.IValueChangedNotificationResult
  commentId: T:NMF.Expressions.IValueChangedNotificationResult
  parent: NMF.Expressions
  href: NMF.Expressions.IValueChangedNotificationResult.html
  name: IValueChangedNotificationResult
  nameWithType: IValueChangedNotificationResult
  fullName: NMF.Expressions.IValueChangedNotificationResult
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  href: NMF.Expressions.INotificationResult.html
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: NMF.Expressions.NotifyValue{{TResult}}.Value
  commentId: P:NMF.Expressions.NotifyValue{`2}.Value
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Value
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Value
  name: Value
  nameWithType: NotifyValue<TResult>.Value
  fullName: NMF.Expressions.NotifyValue<TResult>.Value
  nameWithType.vb: NotifyValue(Of TResult).Value
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Value
- uid: NMF.Expressions.NotifyValue{{TResult}}.Successors
  commentId: P:NMF.Expressions.NotifyValue{`2}.Successors
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Successors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Successors
  name: Successors
  nameWithType: NotifyValue<TResult>.Successors
  fullName: NMF.Expressions.NotifyValue<TResult>.Successors
  nameWithType.vb: NotifyValue(Of TResult).Successors
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Successors
- uid: NMF.Expressions.NotifyValue{{TResult}}.ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyValue{`2}.ExecutionMetaData
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.ExecutionMetaData
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ExecutionMetaData
  name: ExecutionMetaData
  nameWithType: NotifyValue<TResult>.ExecutionMetaData
  fullName: NMF.Expressions.NotifyValue<TResult>.ExecutionMetaData
  nameWithType.vb: NotifyValue(Of TResult).ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).ExecutionMetaData
- uid: NMF.Expressions.NotifyValue{{TResult}}.ValueChanged
  commentId: E:NMF.Expressions.NotifyValue{`2}.ValueChanged
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.ValueChanged
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ValueChanged
  name: ValueChanged
  nameWithType: NotifyValue<TResult>.ValueChanged
  fullName: NMF.Expressions.NotifyValue<TResult>.ValueChanged
  nameWithType.vb: NotifyValue(Of TResult).ValueChanged
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).ValueChanged
- uid: NMF.Expressions.NotifyValue{{TResult}}.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Expressions.NotifyValue{`2}.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  name: OnValueChanged(ValueChangedEventArgs)
  nameWithType: NotifyValue<TResult>.OnValueChanged(ValueChangedEventArgs)
  fullName: NMF.Expressions.NotifyValue<TResult>.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  nameWithType.vb: NotifyValue(Of TResult).OnValueChanged(ValueChangedEventArgs)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    href: NMF.Expressions.ValueChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    href: NMF.Expressions.ValueChangedEventArgs.html
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.OnValueChanged({TResult},{TResult})
  commentId: M:NMF.Expressions.NotifyValue{`2}.OnValueChanged(`2,`2)
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  name: OnValueChanged(TResult, TResult)
  nameWithType: NotifyValue<TResult>.OnValueChanged(TResult, TResult)
  fullName: NMF.Expressions.NotifyValue<TResult>.OnValueChanged(TResult, TResult)
  nameWithType.vb: NotifyValue(Of TResult).OnValueChanged(TResult, TResult)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).OnValueChanged(TResult, TResult)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.OnValueChanged(`2,`2)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  - name: (
  - name: TResult
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.OnValueChanged(`2,`2)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  - name: (
  - name: TResult
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.Dispose
  commentId: M:NMF.Expressions.NotifyValue{`2}.Dispose
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Dispose
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  name: Dispose()
  nameWithType: NotifyValue<TResult>.Dispose()
  fullName: NMF.Expressions.NotifyValue<TResult>.Dispose()
  nameWithType.vb: NotifyValue(Of TResult).Dispose()
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Dispose()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Dispose
    name: Dispose
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Dispose
    name: Dispose
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.HasSuccessors
  commentId: P:NMF.Expressions.NotifyValue{`2}.HasSuccessors
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.HasSuccessors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_HasSuccessors
  name: HasSuccessors
  nameWithType: NotifyValue<TResult>.HasSuccessors
  fullName: NMF.Expressions.NotifyValue<TResult>.HasSuccessors
  nameWithType.vb: NotifyValue(Of TResult).HasSuccessors
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).HasSuccessors
- uid: NMF.Expressions.NotifyValue{{TResult}}.IsAttached
  commentId: P:NMF.Expressions.NotifyValue{`2}.IsAttached
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.IsAttached
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_IsAttached
  name: IsAttached
  nameWithType: NotifyValue<TResult>.IsAttached
  fullName: NMF.Expressions.NotifyValue<TResult>.IsAttached
  nameWithType.vb: NotifyValue(Of TResult).IsAttached
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).IsAttached
- uid: NMF.Expressions.NotifyValue{{TResult}}.Count
  commentId: P:NMF.Expressions.NotifyValue{`2}.Count
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Count
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Count
  name: Count
  nameWithType: NotifyValue<TResult>.Count
  fullName: NMF.Expressions.NotifyValue<TResult>.Count
  nameWithType.vb: NotifyValue(Of TResult).Count
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Count
- uid: NMF.Expressions.NotifyValue{{TResult}}.AllSuccessors
  commentId: P:NMF.Expressions.NotifyValue{`2}.AllSuccessors
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.AllSuccessors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_AllSuccessors
  name: AllSuccessors
  nameWithType: NotifyValue<TResult>.AllSuccessors
  fullName: NMF.Expressions.NotifyValue<TResult>.AllSuccessors
  nameWithType.vb: NotifyValue(Of TResult).AllSuccessors
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).AllSuccessors
- uid: NMF.Expressions.NotifyValue{{TResult}}.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.NotifyValue{`2}.Set(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Set(NMF.Expressions.INotifiable)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  name: Set(INotifiable)
  nameWithType: NotifyValue<TResult>.Set(INotifiable)
  fullName: NMF.Expressions.NotifyValue<TResult>.Set(NMF.Expressions.INotifiable)
  nameWithType.vb: NotifyValue(Of TResult).Set(INotifiable)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Set(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Set(NMF.Expressions.INotifiable)
    name: Set
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Set(NMF.Expressions.INotifiable)
    name: Set
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.SetDummy
  commentId: M:NMF.Expressions.NotifyValue{`2}.SetDummy
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.SetDummy
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  name: SetDummy()
  nameWithType: NotifyValue<TResult>.SetDummy()
  fullName: NMF.Expressions.NotifyValue<TResult>.SetDummy()
  nameWithType.vb: NotifyValue(Of TResult).SetDummy()
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).SetDummy()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.SetDummy
    name: SetDummy
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.SetDummy
    name: SetDummy
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Expressions.NotifyValue{`2}.Unset(NMF.Expressions.INotifiable,System.Boolean)
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Unset(NMF.Expressions.INotifiable,System.Boolean)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  name: Unset(INotifiable, bool)
  nameWithType: NotifyValue<TResult>.Unset(INotifiable, bool)
  fullName: NMF.Expressions.NotifyValue<TResult>.Unset(NMF.Expressions.INotifiable, bool)
  nameWithType.vb: NotifyValue(Of TResult).Unset(INotifiable, Boolean)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.UnsetAll
  commentId: M:NMF.Expressions.NotifyValue{`2}.UnsetAll
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.UnsetAll
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  name: UnsetAll()
  nameWithType: NotifyValue<TResult>.UnsetAll()
  fullName: NMF.Expressions.NotifyValue<TResult>.UnsetAll()
  nameWithType.vb: NotifyValue(Of TResult).UnsetAll()
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).UnsetAll()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.UnsetAll
    name: UnsetAll
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.UnsetAll
    name: UnsetAll
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.GetSuccessor(System.Int32)
  commentId: M:NMF.Expressions.NotifyValue{`2}.GetSuccessor(System.Int32)
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.GetSuccessor(System.Int32)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  name: GetSuccessor(int)
  nameWithType: NotifyValue<TResult>.GetSuccessor(int)
  fullName: NMF.Expressions.NotifyValue<TResult>.GetSuccessor(int)
  nameWithType.vb: NotifyValue(Of TResult).GetSuccessor(Integer)
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.GetSuccessor(System.Int32)
    name: GetSuccessor
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.GetSuccessor(System.Int32)
    name: GetSuccessor
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.ExportToDgml(System.String)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  parent: NMF.Expressions.Debug.DebugExtensions
  definition: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  name: ExportToDgml(INotifiable, string)
  nameWithType: DebugExtensions.ExportToDgml(INotifiable, string)
  fullName: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, string)
  nameWithType.vb: DebugExtensions.ExportToDgml(INotifiable, String)
  fullName.vb: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, String)
  name.vb: ExportToDgml(INotifiable, String)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.Visualize
  commentId: M:NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.Debug.DebugExtensions
  definition: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  name: Visualize(INotifiable)
  nameWithType: DebugExtensions.Visualize(INotifiable)
  fullName: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
- uid: NMF.Expressions.INotifyValue{`2}.NMF.Expressions.ReversableExtensions.AsReversable``1(System.Action{{TResult}})
  commentId: M:NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  parent: NMF.Expressions.ReversableExtensions
  definition: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  name: AsReversable<TResult>(INotifyValue<TResult>, Action<TResult>)
  nameWithType: ReversableExtensions.AsReversable<TResult>(INotifyValue<TResult>, Action<TResult>)
  fullName: NMF.Expressions.ReversableExtensions.AsReversable<TResult>(NMF.Expressions.INotifyValue<TResult>, System.Action<TResult>)
  nameWithType.vb: ReversableExtensions.AsReversable(Of TResult)(INotifyValue(Of TResult), Action(Of TResult))
  fullName.vb: NMF.Expressions.ReversableExtensions.AsReversable(Of TResult)(NMF.Expressions.INotifyValue(Of TResult), System.Action(Of TResult))
  name.vb: AsReversable(Of TResult)(INotifyValue(Of TResult), Action(Of TResult))
  spec.csharp:
  - uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{`2},System.Action{`2})
    name: AsReversable
    href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: <
  - name: TResult
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TResult
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{`2},System.Action{`2})
    name: AsReversable
    href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<ObservableAggregate<TSource, TAccumulator, TResult>>(ObservableAggregate<TSource, TAccumulator, TResult>)
  nameWithType: ExpressionExtensions.AsOne<ObservableAggregate<TSource, TAccumulator, TResult>>(ObservableAggregate<TSource, TAccumulator, TResult>)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>>(NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>)
  nameWithType.vb: ExpressionExtensions.AsOne(Of ObservableAggregate(Of TSource, TAccumulator, TResult))(ObservableAggregate(Of TSource, TAccumulator, TResult))
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult))(NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult))
  name.vb: AsOne(Of ObservableAggregate(Of TSource, TAccumulator, TResult))(ObservableAggregate(Of TSource, TAccumulator, TResult))
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.ObservableAggregate{`0,`1,`2})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.Linq.ObservableAggregate`3
    name: ObservableAggregate
    href: NMF.Expressions.Linq.ObservableAggregate-3.html
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TAccumulator
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Linq.ObservableAggregate`3
    name: ObservableAggregate
    href: NMF.Expressions.Linq.ObservableAggregate-3.html
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TAccumulator
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.ObservableAggregate{`0,`1,`2})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.Linq.ObservableAggregate`3
    name: ObservableAggregate
    href: NMF.Expressions.Linq.ObservableAggregate-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TAccumulator
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: )
  - name: (
  - uid: NMF.Expressions.Linq.ObservableAggregate`3
    name: ObservableAggregate
    href: NMF.Expressions.Linq.ObservableAggregate-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TAccumulator
  - name: ','
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.NotifyValue`1
  commentId: T:NMF.Expressions.NotifyValue`1
  href: NMF.Expressions.NotifyValue-1.html
  name: NotifyValue<T>
  nameWithType: NotifyValue<T>
  fullName: NMF.Expressions.NotifyValue<T>
  nameWithType.vb: NotifyValue(Of T)
  fullName.vb: NMF.Expressions.NotifyValue(Of T)
  name.vb: NotifyValue(Of T)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1
    name: NotifyValue
    href: NMF.Expressions.NotifyValue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1
    name: NotifyValue
    href: NMF.Expressions.NotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: NMF.Expressions.INotifyValue`1
  commentId: T:NMF.Expressions.INotifyValue`1
  href: NMF.Expressions.INotifyValue-1.html
  name: INotifyValue<T>
  nameWithType: INotifyValue<T>
  fullName: NMF.Expressions.INotifyValue<T>
  nameWithType.vb: INotifyValue(Of T)
  fullName.vb: NMF.Expressions.INotifyValue(Of T)
  name.vb: INotifyValue(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IValueChangedNotificationResult`1
  commentId: T:NMF.Expressions.IValueChangedNotificationResult`1
  href: NMF.Expressions.IValueChangedNotificationResult-1.html
  name: IValueChangedNotificationResult<T>
  nameWithType: IValueChangedNotificationResult<T>
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>
  nameWithType.vb: IValueChangedNotificationResult(Of T)
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T)
  name.vb: IValueChangedNotificationResult(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IValueChangedNotificationResult`1
    name: IValueChangedNotificationResult
    href: NMF.Expressions.IValueChangedNotificationResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IValueChangedNotificationResult`1
    name: IValueChangedNotificationResult
    href: NMF.Expressions.IValueChangedNotificationResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.NotifyValue`1.Value
  commentId: P:NMF.Expressions.NotifyValue`1.Value
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Value
  name: Value
  nameWithType: NotifyValue<T>.Value
  fullName: NMF.Expressions.NotifyValue<T>.Value
  nameWithType.vb: NotifyValue(Of T).Value
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Value
- uid: NMF.Expressions.NotifyValue`1.Successors
  commentId: P:NMF.Expressions.NotifyValue`1.Successors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Successors
  name: Successors
  nameWithType: NotifyValue<T>.Successors
  fullName: NMF.Expressions.NotifyValue<T>.Successors
  nameWithType.vb: NotifyValue(Of T).Successors
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Successors
- uid: NMF.Expressions.NotifyValue`1.ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyValue`1.ExecutionMetaData
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ExecutionMetaData
  name: ExecutionMetaData
  nameWithType: NotifyValue<T>.ExecutionMetaData
  fullName: NMF.Expressions.NotifyValue<T>.ExecutionMetaData
  nameWithType.vb: NotifyValue(Of T).ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyValue`1.ValueChanged
  commentId: E:NMF.Expressions.NotifyValue`1.ValueChanged
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ValueChanged
  name: ValueChanged
  nameWithType: NotifyValue<T>.ValueChanged
  fullName: NMF.Expressions.NotifyValue<T>.ValueChanged
  nameWithType.vb: NotifyValue(Of T).ValueChanged
  fullName.vb: NMF.Expressions.NotifyValue(Of T).ValueChanged
- uid: NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  name: OnValueChanged(ValueChangedEventArgs)
  nameWithType: NotifyValue<T>.OnValueChanged(ValueChangedEventArgs)
  fullName: NMF.Expressions.NotifyValue<T>.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  nameWithType.vb: NotifyValue(Of T).OnValueChanged(ValueChangedEventArgs)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    href: NMF.Expressions.ValueChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  - name: (
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    href: NMF.Expressions.ValueChangedEventArgs.html
  - name: )
- uid: NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
  commentId: M:NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  name: OnValueChanged(T, T)
  nameWithType: NotifyValue<T>.OnValueChanged(T, T)
  fullName: NMF.Expressions.NotifyValue<T>.OnValueChanged(T, T)
  nameWithType.vb: NotifyValue(Of T).OnValueChanged(T, T)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).OnValueChanged(T, T)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
    name: OnValueChanged
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.NotifyValue`1.Dispose
  commentId: M:NMF.Expressions.NotifyValue`1.Dispose
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  name: Dispose()
  nameWithType: NotifyValue<T>.Dispose()
  fullName: NMF.Expressions.NotifyValue<T>.Dispose()
  nameWithType.vb: NotifyValue(Of T).Dispose()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dispose()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Dispose
    name: Dispose
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Dispose
    name: Dispose
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue`1.HasSuccessors
  commentId: P:NMF.Expressions.NotifyValue`1.HasSuccessors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_HasSuccessors
  name: HasSuccessors
  nameWithType: NotifyValue<T>.HasSuccessors
  fullName: NMF.Expressions.NotifyValue<T>.HasSuccessors
  nameWithType.vb: NotifyValue(Of T).HasSuccessors
  fullName.vb: NMF.Expressions.NotifyValue(Of T).HasSuccessors
- uid: NMF.Expressions.NotifyValue`1.IsAttached
  commentId: P:NMF.Expressions.NotifyValue`1.IsAttached
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_IsAttached
  name: IsAttached
  nameWithType: NotifyValue<T>.IsAttached
  fullName: NMF.Expressions.NotifyValue<T>.IsAttached
  nameWithType.vb: NotifyValue(Of T).IsAttached
  fullName.vb: NMF.Expressions.NotifyValue(Of T).IsAttached
- uid: NMF.Expressions.NotifyValue`1.Count
  commentId: P:NMF.Expressions.NotifyValue`1.Count
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Count
  name: Count
  nameWithType: NotifyValue<T>.Count
  fullName: NMF.Expressions.NotifyValue<T>.Count
  nameWithType.vb: NotifyValue(Of T).Count
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Count
- uid: NMF.Expressions.NotifyValue`1.AllSuccessors
  commentId: P:NMF.Expressions.NotifyValue`1.AllSuccessors
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_AllSuccessors
  name: AllSuccessors
  nameWithType: NotifyValue<T>.AllSuccessors
  fullName: NMF.Expressions.NotifyValue<T>.AllSuccessors
  nameWithType.vb: NotifyValue(Of T).AllSuccessors
  fullName.vb: NMF.Expressions.NotifyValue(Of T).AllSuccessors
- uid: NMF.Expressions.NotifyValue`1.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.NotifyValue`1.Set(NMF.Expressions.INotifiable)
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  name: Set(INotifiable)
  nameWithType: NotifyValue<T>.Set(INotifiable)
  fullName: NMF.Expressions.NotifyValue<T>.Set(NMF.Expressions.INotifiable)
  nameWithType.vb: NotifyValue(Of T).Set(INotifiable)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Set(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Set(NMF.Expressions.INotifiable)
    name: Set
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Set(NMF.Expressions.INotifiable)
    name: Set
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Set_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
- uid: NMF.Expressions.NotifyValue`1.SetDummy
  commentId: M:NMF.Expressions.NotifyValue`1.SetDummy
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  name: SetDummy()
  nameWithType: NotifyValue<T>.SetDummy()
  fullName: NMF.Expressions.NotifyValue<T>.SetDummy()
  nameWithType.vb: NotifyValue(Of T).SetDummy()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).SetDummy()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.SetDummy
    name: SetDummy
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.SetDummy
    name: SetDummy
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_SetDummy
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue`1.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Expressions.NotifyValue`1.Unset(NMF.Expressions.INotifiable,System.Boolean)
  isExternal: true
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  name: Unset(INotifiable, bool)
  nameWithType: NotifyValue<T>.Unset(INotifiable, bool)
  fullName: NMF.Expressions.NotifyValue<T>.Unset(NMF.Expressions.INotifiable, bool)
  nameWithType.vb: NotifyValue(Of T).Unset(INotifiable, Boolean)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Unset_NMF_Expressions_INotifiable_System_Boolean_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: NMF.Expressions.NotifyValue`1.UnsetAll
  commentId: M:NMF.Expressions.NotifyValue`1.UnsetAll
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  name: UnsetAll()
  nameWithType: NotifyValue<T>.UnsetAll()
  fullName: NMF.Expressions.NotifyValue<T>.UnsetAll()
  nameWithType.vb: NotifyValue(Of T).UnsetAll()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).UnsetAll()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.UnsetAll
    name: UnsetAll
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.UnsetAll
    name: UnsetAll
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_UnsetAll
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue`1.GetSuccessor(System.Int32)
  commentId: M:NMF.Expressions.NotifyValue`1.GetSuccessor(System.Int32)
  isExternal: true
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  name: GetSuccessor(int)
  nameWithType: NotifyValue<T>.GetSuccessor(int)
  fullName: NMF.Expressions.NotifyValue<T>.GetSuccessor(int)
  nameWithType.vb: NotifyValue(Of T).GetSuccessor(Integer)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.GetSuccessor(System.Int32)
    name: GetSuccessor
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.GetSuccessor(System.Int32)
    name: GetSuccessor
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_GetSuccessor_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  isExternal: true
  href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  name: ExportToDgml(INotifiable, string)
  nameWithType: DebugExtensions.ExportToDgml(INotifiable, string)
  fullName: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, string)
  nameWithType.vb: DebugExtensions.ExportToDgml(INotifiable, String)
  fullName.vb: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, String)
  name.vb: ExportToDgml(INotifiable, String)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_ExportToDgml_NMF_Expressions_INotifiable_System_String_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Expressions.Debug.DebugExtensions
  commentId: T:NMF.Expressions.Debug.DebugExtensions
  parent: NMF.Expressions.Debug
  href: NMF.Expressions.Debug.DebugExtensions.html
  name: DebugExtensions
  nameWithType: DebugExtensions
  fullName: NMF.Expressions.Debug.DebugExtensions
- uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  name: Visualize(INotifiable)
  nameWithType: DebugExtensions.Visualize(INotifiable)
  fullName: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
    href: NMF.Expressions.Debug.DebugExtensions.html#NMF_Expressions_Debug_DebugExtensions_Visualize_NMF_Expressions_INotifiable_
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
- uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  commentId: M:NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  isExternal: true
  href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  name: AsReversable<T>(INotifyValue<T>, Action<T>)
  nameWithType: ReversableExtensions.AsReversable<T>(INotifyValue<T>, Action<T>)
  fullName: NMF.Expressions.ReversableExtensions.AsReversable<T>(NMF.Expressions.INotifyValue<T>, System.Action<T>)
  nameWithType.vb: ReversableExtensions.AsReversable(Of T)(INotifyValue(Of T), Action(Of T))
  fullName.vb: NMF.Expressions.ReversableExtensions.AsReversable(Of T)(NMF.Expressions.INotifyValue(Of T), System.Action(Of T))
  name.vb: AsReversable(Of T)(INotifyValue(Of T), Action(Of T))
  spec.csharp:
  - uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
    name: AsReversable
    href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
    name: AsReversable
    href: NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
    href: NMF.Expressions.INotifyValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Expressions.ReversableExtensions
  commentId: T:NMF.Expressions.ReversableExtensions
  parent: NMF.Expressions
  href: NMF.Expressions.ReversableExtensions.html
  name: ReversableExtensions
  nameWithType: ReversableExtensions
  fullName: NMF.Expressions.ReversableExtensions
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Debug
  commentId: N:NMF.Expressions.Debug
  href: NMF.html
  name: NMF.Expressions.Debug
  nameWithType: NMF.Expressions.Debug
  fullName: NMF.Expressions.Debug
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Debug
    name: Debug
    href: NMF.Expressions.Debug.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Debug
    name: Debug
    href: NMF.Expressions.Debug.html
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Accumulator*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Accumulator
  name: Accumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
- uid: '{TAccumulator}'
  commentId: '!:TAccumulator'
  definition: TAccumulator
  name: TAccumulator
  nameWithType: TAccumulator
  fullName: TAccumulator
- uid: TAccumulator
  name: TAccumulator
  nameWithType: TAccumulator
  fullName: TAccumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.#ctor*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.#ctor
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3__ctor_NMF_Expressions_INotifyEnumerable__0___1_
  name: ObservableAggregate
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).New
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).New
  name.vb: New
- uid: NMF.Expressions.INotifyEnumerable{{TSource}}
  commentId: T:NMF.Expressions.INotifyEnumerable{``0}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyEnumerable`1
  href: NMF.Expressions.INotifyEnumerable-1.html
  name: INotifyEnumerable<TSource>
  nameWithType: INotifyEnumerable<TSource>
  fullName: NMF.Expressions.INotifyEnumerable<TSource>
  nameWithType.vb: INotifyEnumerable(Of TSource)
  fullName.vb: NMF.Expressions.INotifyEnumerable(Of TSource)
  name.vb: INotifyEnumerable(Of TSource)
  spec.csharp:
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
    href: NMF.Expressions.INotifyEnumerable-1.html
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
    href: NMF.Expressions.INotifyEnumerable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: NMF.Expressions.INotifyEnumerable`1
  commentId: T:NMF.Expressions.INotifyEnumerable`1
  href: NMF.Expressions.INotifyEnumerable-1.html
  name: INotifyEnumerable<T>
  nameWithType: INotifyEnumerable<T>
  fullName: NMF.Expressions.INotifyEnumerable<T>
  nameWithType.vb: INotifyEnumerable(Of T)
  fullName.vb: NMF.Expressions.INotifyEnumerable(Of T)
  name.vb: INotifyEnumerable(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
    href: NMF.Expressions.INotifyEnumerable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
    href: NMF.Expressions.INotifyEnumerable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Source*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Source
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Source
  name: Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Source
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Source
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Source
- uid: NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_ResetAccumulator
  name: ResetAccumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_RemoveItem__0_
  name: RemoveItem
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: NMF.Expressions.Linq.ObservableAggregate`3.AddItem*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.AddItem
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_AddItem__0_
  name: AddItem
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.AddItem
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.AddItem
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem
- uid: NMF.Expressions.NotifyValue{{TResult}}.Attach
  commentId: M:NMF.Expressions.NotifyValue{`2}.Attach
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Attach
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  name: Attach()
  nameWithType: NotifyValue<TResult>.Attach()
  fullName: NMF.Expressions.NotifyValue<TResult>.Attach()
  nameWithType.vb: NotifyValue(Of TResult).Attach()
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Attach()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Attach
    name: Attach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Attach
    name: Attach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  - name: (
  - name: )
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Attach*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Attach
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Attach
  name: Attach
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Attach
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Attach
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Attach
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Attach
- uid: NMF.Expressions.NotifyValue`1.Attach
  commentId: M:NMF.Expressions.NotifyValue`1.Attach
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  name: Attach()
  nameWithType: NotifyValue<T>.Attach()
  fullName: NMF.Expressions.NotifyValue<T>.Attach()
  nameWithType.vb: NotifyValue(Of T).Attach()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Attach()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Attach
    name: Attach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Attach
    name: Attach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Attach
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.Detach
  commentId: M:NMF.Expressions.NotifyValue{`2}.Detach
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Detach
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  name: Detach()
  nameWithType: NotifyValue<TResult>.Detach()
  fullName: NMF.Expressions.NotifyValue<TResult>.Detach()
  nameWithType.vb: NotifyValue(Of TResult).Detach()
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Detach()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Detach
    name: Detach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Detach
    name: Detach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  - name: (
  - name: )
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Detach*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Detach
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Detach
  name: Detach
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Detach
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Detach
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Detach
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Detach
- uid: NMF.Expressions.NotifyValue`1.Detach
  commentId: M:NMF.Expressions.NotifyValue`1.Detach
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  name: Detach()
  nameWithType: NotifyValue<T>.Detach()
  fullName: NMF.Expressions.NotifyValue<T>.Detach()
  nameWithType.vb: NotifyValue(Of T).Detach()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Detach()
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Detach
    name: Detach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Detach
    name: Detach
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Detach
  - name: (
  - name: )
- uid: NMF.Expressions.NotifyValue{{TResult}}.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Expressions.NotifyValue{`2}.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  name: Notify(IList<INotificationResult>)
  nameWithType: NotifyValue<TResult>.Notify(IList<INotificationResult>)
  fullName: NMF.Expressions.NotifyValue<TResult>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  nameWithType.vb: NotifyValue(Of TResult).Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue{`2}.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue{`2}.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Notify*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Notify
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  name: Notify
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Notify
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Notify
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Notify
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Notify
- uid: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  commentId: T:System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<INotificationResult>
  nameWithType: IList<INotificationResult>
  fullName: System.Collections.Generic.IList<NMF.Expressions.INotificationResult>
  nameWithType.vb: IList(Of INotificationResult)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult)
  name.vb: IList(Of INotificationResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: )
- uid: NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  isExternal: true
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  name: Notify(IList<INotificationResult>)
  nameWithType: NotifyValue<T>.Notify(IList<INotificationResult>)
  fullName: NMF.Expressions.NotifyValue<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  nameWithType.vb: NotifyValue(Of T).Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
  spec.csharp:
  - uid: NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
    href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
    href: NMF.Expressions.INotificationResult.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Expressions.NotifyValue{{TResult}}.Dependencies
  commentId: P:NMF.Expressions.NotifyValue{`2}.Dependencies
  parent: NMF.Expressions.NotifyValue{{TResult}}
  definition: NMF.Expressions.NotifyValue`1.Dependencies
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dependencies
  name: Dependencies
  nameWithType: NotifyValue<TResult>.Dependencies
  fullName: NMF.Expressions.NotifyValue<TResult>.Dependencies
  nameWithType.vb: NotifyValue(Of TResult).Dependencies
  fullName.vb: NMF.Expressions.NotifyValue(Of TResult).Dependencies
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Dependencies*
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  href: NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Dependencies
  name: Dependencies
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
- uid: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<INotifiable>
  nameWithType: IEnumerable<INotifiable>
  fullName: System.Collections.Generic.IEnumerable<NMF.Expressions.INotifiable>
  nameWithType.vb: IEnumerable(Of INotifiable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Expressions.INotifiable)
  name.vb: IEnumerable(Of INotifiable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    href: NMF.Expressions.INotifiable.html
  - name: )
- uid: NMF.Expressions.NotifyValue`1.Dependencies
  commentId: P:NMF.Expressions.NotifyValue`1.Dependencies
  href: NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dependencies
  name: Dependencies
  nameWithType: NotifyValue<T>.Dependencies
  fullName: NMF.Expressions.NotifyValue<T>.Dependencies
  nameWithType.vb: NotifyValue(Of T).Dependencies
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dependencies
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
