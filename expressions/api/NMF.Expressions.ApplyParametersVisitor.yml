### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.ApplyParametersVisitor
  commentId: T:NMF.Expressions.ApplyParametersVisitor
  id: ApplyParametersVisitor
  parent: NMF.Expressions
  children:
  - NMF.Expressions.ApplyParametersVisitor.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  - NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  langs:
  - csharp
  - vb
  name: ApplyParametersVisitor
  nameWithType: ApplyParametersVisitor
  fullName: NMF.Expressions.ApplyParametersVisitor
  type: Class
  source:
    remote:
      path: Expressions/Expressions/ApplyParametersVisitor.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ApplyParametersVisitor
    path: src/Expressions/Expressions/ApplyParametersVisitor.cs
    startLine: 11
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nDenotes a vistor implementation that applies values to an expression tree\n"
  example: []
  syntax:
    content: 'public class ApplyParametersVisitor : ExpressionVisitorBase'
    content.vb: >-
      Public Class ApplyParametersVisitor
          Inherits ExpressionVisitorBase
  inheritance:
  - System.Object
  - System.Linq.Expressions.ExpressionVisitor
  - NMF.Expressions.ExpressionVisitorBase
  inheritedMembers:
  - NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  - NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  - NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  - NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Expressions.ApplyParametersVisitor.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:NMF.Expressions.ApplyParametersVisitor.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: NMF.Expressions.ApplyParametersVisitor
  langs:
  - csharp
  - vb
  name: ApplyParametersVisitor(IDictionary<String, Object>)
  nameWithType: ApplyParametersVisitor.ApplyParametersVisitor(IDictionary<String, Object>)
  fullName: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: Expressions/Expressions/ApplyParametersVisitor.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Expressions/Expressions/ApplyParametersVisitor.cs
    startLine: 19
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public ApplyParametersVisitor(IDictionary<string, object> parameterMappings)
    parameters:
    - id: parameterMappings
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: A dictionary with mappings for parameters based on parameter names
    content.vb: Public Sub New(parameterMappings As IDictionary(Of String, Object))
  overload: NMF.Expressions.ApplyParametersVisitor.#ctor*
  nameWithType.vb: ApplyParametersVisitor.ApplyParametersVisitor(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ApplyParametersVisitor(IDictionary(Of String, Object))
- uid: NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  id: VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: NMF.Expressions.ApplyParametersVisitor
  langs:
  - csharp
  - vb
  name: VisitParameter(ParameterExpression)
  nameWithType: ApplyParametersVisitor.VisitParameter(ParameterExpression)
  fullName: NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/ApplyParametersVisitor.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: VisitParameter
    path: src/Expressions/Expressions/ApplyParametersVisitor.cs
    startLine: 25
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  example: []
  syntax:
    content: protected override Expression VisitParameter(ParameterExpression node)
    parameters:
    - id: node
      type: System.Linq.Expressions.ParameterExpression
    return:
      type: System.Linq.Expressions.Expression
    content.vb: Protected Overrides Function VisitParameter(node As ParameterExpression) As Expression
  overridden: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  overload: NMF.Expressions.ApplyParametersVisitor.VisitParameter*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.ExpressionVisitor
  commentId: T:System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: true
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: NMF.Expressions.ExpressionVisitorBase
  commentId: T:NMF.Expressions.ExpressionVisitorBase
  parent: NMF.Expressions
  name: ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
  fullName: NMF.Expressions.ExpressionVisitorBase
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitBinary(BinaryExpression)
  nameWithType: ExpressionVisitorBase.VisitBinary(BinaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: ExpressionVisitorBase.VisitBinary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
    name: VisitBinary
    nameWithType: ExpressionVisitorBase.VisitBinary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BinaryExpression
    name: BinaryExpression
    nameWithType: BinaryExpression
    fullName: System.Linq.Expressions.BinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitBlock(BlockExpression)
  nameWithType: ExpressionVisitorBase.VisitBlock(BlockExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ExpressionVisitorBase.VisitBlock
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
    name: VisitBlock
    nameWithType: ExpressionVisitorBase.VisitBlock
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.BlockExpression
    name: BlockExpression
    nameWithType: BlockExpression
    fullName: System.Linq.Expressions.BlockExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitCatchBlock(CatchBlock)
  nameWithType: ExpressionVisitorBase.VisitCatchBlock(CatchBlock)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ExpressionVisitorBase.VisitCatchBlock
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
    name: VisitCatchBlock
    nameWithType: ExpressionVisitorBase.VisitCatchBlock
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    nameWithType: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitConditional(ConditionalExpression)
  nameWithType: ExpressionVisitorBase.VisitConditional(ConditionalExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: ExpressionVisitorBase.VisitConditional
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitConditional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
    name: VisitConditional
    nameWithType: ExpressionVisitorBase.VisitConditional
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitConditional
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConditionalExpression
    name: ConditionalExpression
    nameWithType: ConditionalExpression
    fullName: System.Linq.Expressions.ConditionalExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitConstant(ConstantExpression)
  nameWithType: ExpressionVisitorBase.VisitConstant(ConstantExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: ExpressionVisitorBase.VisitConstant
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitConstant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
    name: VisitConstant
    nameWithType: ExpressionVisitorBase.VisitConstant
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitConstant
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ConstantExpression
    name: ConstantExpression
    nameWithType: ConstantExpression
    fullName: System.Linq.Expressions.ConstantExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitDebugInfo(DebugInfoExpression)
  nameWithType: ExpressionVisitorBase.VisitDebugInfo(DebugInfoExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ExpressionVisitorBase.VisitDebugInfo
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
    name: VisitDebugInfo
    nameWithType: ExpressionVisitorBase.VisitDebugInfo
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DebugInfoExpression
    name: DebugInfoExpression
    nameWithType: DebugInfoExpression
    fullName: System.Linq.Expressions.DebugInfoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitDefault(DefaultExpression)
  nameWithType: ExpressionVisitorBase.VisitDefault(DefaultExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ExpressionVisitorBase.VisitDefault
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
    name: VisitDefault
    nameWithType: ExpressionVisitorBase.VisitDefault
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitDefault
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DefaultExpression
    name: DefaultExpression
    nameWithType: DefaultExpression
    fullName: System.Linq.Expressions.DefaultExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitElementInit(ElementInit)
  nameWithType: ExpressionVisitorBase.VisitElementInit(ElementInit)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ExpressionVisitorBase.VisitElementInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitElementInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
    name: VisitElementInit
    nameWithType: ExpressionVisitorBase.VisitElementInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitElementInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    nameWithType: ElementInit
    fullName: System.Linq.Expressions.ElementInit
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitGoto(GotoExpression)
  nameWithType: ExpressionVisitorBase.VisitGoto(GotoExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ExpressionVisitorBase.VisitGoto
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitGoto
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
    name: VisitGoto
    nameWithType: ExpressionVisitorBase.VisitGoto
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitGoto
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpression
    name: GotoExpression
    nameWithType: GotoExpression
    fullName: System.Linq.Expressions.GotoExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitIndex(IndexExpression)
  nameWithType: ExpressionVisitorBase.VisitIndex(IndexExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ExpressionVisitorBase.VisitIndex
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
    name: VisitIndex
    nameWithType: ExpressionVisitorBase.VisitIndex
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.IndexExpression
    name: IndexExpression
    nameWithType: IndexExpression
    fullName: System.Linq.Expressions.IndexExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitExtension(Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
    name: VisitExtension
    nameWithType: ExpressionVisitorBase.VisitExtension
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitInvocation(InvocationExpression)
  nameWithType: ExpressionVisitorBase.VisitInvocation(InvocationExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ExpressionVisitorBase.VisitInvocation
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitInvocation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
    name: VisitInvocation
    nameWithType: ExpressionVisitorBase.VisitInvocation
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitInvocation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.InvocationExpression
    name: InvocationExpression
    nameWithType: InvocationExpression
    fullName: System.Linq.Expressions.InvocationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitLabel(LabelExpression)
  nameWithType: ExpressionVisitorBase.VisitLabel(LabelExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ExpressionVisitorBase.VisitLabel
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
    name: VisitLabel
    nameWithType: ExpressionVisitorBase.VisitLabel
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelExpression
    name: LabelExpression
    nameWithType: LabelExpression
    fullName: System.Linq.Expressions.LabelExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitLabelTarget(LabelTarget)
  nameWithType: ExpressionVisitorBase.VisitLabelTarget(LabelTarget)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ExpressionVisitorBase.VisitLabelTarget
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
    name: VisitLabelTarget
    nameWithType: ExpressionVisitorBase.VisitLabelTarget
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    nameWithType: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{{T}})
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: NMF.Expressions.ExpressionVisitorBase
  definition: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ExpressionVisitorBase.VisitLambda<T>(Expression<T>)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ExpressionVisitorBase.VisitLambda(Of T)(Expression(Of T))
  fullName.vb: NMF.Expressions.ExpressionVisitorBase.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ExpressionVisitorBase.VisitLambda<T>
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ExpressionVisitorBase.VisitLambda(Of T)
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitListInit(ListInitExpression)
  nameWithType: ExpressionVisitorBase.VisitListInit(ListInitExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ExpressionVisitorBase.VisitListInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitListInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
    name: VisitListInit
    nameWithType: ExpressionVisitorBase.VisitListInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitListInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ListInitExpression
    name: ListInitExpression
    nameWithType: ListInitExpression
    fullName: System.Linq.Expressions.ListInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitLoop(LoopExpression)
  nameWithType: ExpressionVisitorBase.VisitLoop(LoopExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ExpressionVisitorBase.VisitLoop
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLoop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
    name: VisitLoop
    nameWithType: ExpressionVisitorBase.VisitLoop
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLoop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.LoopExpression
    name: LoopExpression
    nameWithType: LoopExpression
    fullName: System.Linq.Expressions.LoopExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMember(MemberExpression)
  nameWithType: ExpressionVisitorBase.VisitMember(MemberExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ExpressionVisitorBase.VisitMember
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
    name: VisitMember
    nameWithType: ExpressionVisitorBase.VisitMember
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMember
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberExpression
    name: MemberExpression
    nameWithType: MemberExpression
    fullName: System.Linq.Expressions.MemberExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMemberAssignment(MemberAssignment)
  nameWithType: ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ExpressionVisitorBase.VisitMemberAssignment
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
    name: VisitMemberAssignment
    nameWithType: ExpressionVisitorBase.VisitMemberAssignment
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberAssignment
    name: MemberAssignment
    nameWithType: MemberAssignment
    fullName: System.Linq.Expressions.MemberAssignment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMemberInit(MemberInitExpression)
  nameWithType: ExpressionVisitorBase.VisitMemberInit(MemberInitExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ExpressionVisitorBase.VisitMemberInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
    name: VisitMemberInit
    nameWithType: ExpressionVisitorBase.VisitMemberInit
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberInitExpression
    name: MemberInitExpression
    nameWithType: MemberInitExpression
    fullName: System.Linq.Expressions.MemberInitExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMemberListBinding(MemberListBinding)
  nameWithType: ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ExpressionVisitorBase.VisitMemberListBinding
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
    name: VisitMemberListBinding
    nameWithType: ExpressionVisitorBase.VisitMemberListBinding
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberListBinding
    name: MemberListBinding
    nameWithType: MemberListBinding
    fullName: System.Linq.Expressions.MemberListBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMemberMemberBinding(MemberMemberBinding)
  nameWithType: ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ExpressionVisitorBase.VisitMemberMemberBinding
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
    name: VisitMemberMemberBinding
    nameWithType: ExpressionVisitorBase.VisitMemberMemberBinding
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberMemberBinding
    name: MemberMemberBinding
    nameWithType: MemberMemberBinding
    fullName: System.Linq.Expressions.MemberMemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitMethodCall(MethodCallExpression)
  nameWithType: ExpressionVisitorBase.VisitMethodCall(MethodCallExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ExpressionVisitorBase.VisitMethodCall
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
    name: VisitMethodCall
    nameWithType: ExpressionVisitorBase.VisitMethodCall
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MethodCallExpression
    name: MethodCallExpression
    nameWithType: MethodCallExpression
    fullName: System.Linq.Expressions.MethodCallExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitNew(NewExpression)
  nameWithType: ExpressionVisitorBase.VisitNew(NewExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ExpressionVisitorBase.VisitNew
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitNew
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
    name: VisitNew
    nameWithType: ExpressionVisitorBase.VisitNew
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitNew
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    nameWithType: NewExpression
    fullName: System.Linq.Expressions.NewExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitNewArray(NewArrayExpression)
  nameWithType: ExpressionVisitorBase.VisitNewArray(NewArrayExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ExpressionVisitorBase.VisitNewArray
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitNewArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
    name: VisitNewArray
    nameWithType: ExpressionVisitorBase.VisitNewArray
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitNewArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.NewArrayExpression
    name: NewArrayExpression
    nameWithType: NewArrayExpression
    fullName: System.Linq.Expressions.NewArrayExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  nameWithType: ExpressionVisitorBase.VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ExpressionVisitorBase.VisitRuntimeVariables
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
    name: VisitRuntimeVariables
    nameWithType: ExpressionVisitorBase.VisitRuntimeVariables
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.RuntimeVariablesExpression
    name: RuntimeVariablesExpression
    nameWithType: RuntimeVariablesExpression
    fullName: System.Linq.Expressions.RuntimeVariablesExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitSwitch(SwitchExpression)
  nameWithType: ExpressionVisitorBase.VisitSwitch(SwitchExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ExpressionVisitorBase.VisitSwitch
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
    name: VisitSwitch
    nameWithType: ExpressionVisitorBase.VisitSwitch
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchExpression
    name: SwitchExpression
    nameWithType: SwitchExpression
    fullName: System.Linq.Expressions.SwitchExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitSwitchCase(SwitchCase)
  nameWithType: ExpressionVisitorBase.VisitSwitchCase(SwitchCase)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ExpressionVisitorBase.VisitSwitchCase
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
    name: VisitSwitchCase
    nameWithType: ExpressionVisitorBase.VisitSwitchCase
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    nameWithType: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitTry(TryExpression)
  nameWithType: ExpressionVisitorBase.VisitTry(TryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ExpressionVisitorBase.VisitTry
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitTry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
    name: VisitTry
    nameWithType: ExpressionVisitorBase.VisitTry
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitTry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TryExpression
    name: TryExpression
    nameWithType: TryExpression
    fullName: System.Linq.Expressions.TryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitTypeBinary(TypeBinaryExpression)
  nameWithType: ExpressionVisitorBase.VisitTypeBinary(TypeBinaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ExpressionVisitorBase.VisitTypeBinary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
    name: VisitTypeBinary
    nameWithType: ExpressionVisitorBase.VisitTypeBinary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.TypeBinaryExpression
    name: TypeBinaryExpression
    nameWithType: TypeBinaryExpression
    fullName: System.Linq.Expressions.TypeBinaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitUnary(UnaryExpression)
  nameWithType: ExpressionVisitorBase.VisitUnary(UnaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: ExpressionVisitorBase.VisitUnary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitUnary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
    name: VisitUnary
    nameWithType: ExpressionVisitorBase.VisitUnary
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitUnary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.UnaryExpression
    name: UnaryExpression
    nameWithType: UnaryExpression
    fullName: System.Linq.Expressions.UnaryExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: Visit(ReadOnlyCollection<Expression>)
  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  nameWithType.vb: ExpressionVisitor.Visit(ReadOnlyCollection(Of Expression))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression))
  name.vb: Visit(ReadOnlyCollection(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: Visit(Expression)
  nameWithType: ExpressionVisitor.Visit(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
    name: Visit
    nameWithType: ExpressionVisitor.Visit
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.Func{{T},{T}})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1({T},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{{T}},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  definition: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitDynamic(DynamicExpression)
  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
    name: VisitDynamic
    nameWithType: ExpressionVisitor.VisitDynamic
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.DynamicExpression
    name: DynamicExpression
    nameWithType: DynamicExpression
    fullName: System.Linq.Expressions.DynamicExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  isExternal: true
  name: VisitMemberBinding(MemberBinding)
  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
    name: VisitMemberBinding
    nameWithType: ExpressionVisitor.VisitMemberBinding
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    nameWithType: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  isExternal: true
  name: VisitLambda<T>(Expression<T>)
  nameWithType: ExpressionVisitorBase.VisitLambda<T>(Expression<T>)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  nameWithType.vb: ExpressionVisitorBase.VisitLambda(Of T)(Expression(Of T))
  fullName.vb: NMF.Expressions.ExpressionVisitorBase.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  name.vb: VisitLambda(Of T)(Expression(Of T))
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda<T>
    nameWithType: ExpressionVisitorBase.VisitLambda<T>
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
    name: VisitLambda(Of T)
    nameWithType: ExpressionVisitorBase.VisitLambda(Of T)
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  commentId: M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  isExternal: true
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  nameWithType.vb: ExpressionVisitor.Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit<T>
    nameWithType: ExpressionVisitor.Visit<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
    name: Visit(Of T)
    nameWithType: ExpressionVisitor.Visit(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  isExternal: true
  name: VisitAndConvert<T>(T, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(T, String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  name.vb: VisitAndConvert(Of T)(T, String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  commentId: M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  isExternal: true
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  nameWithType.vb: ExpressionVisitor.VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  spec.csharp:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert<T>
    nameWithType: ExpressionVisitor.VisitAndConvert<T>
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
    name: VisitAndConvert(Of T)
    nameWithType: ExpressionVisitor.VisitAndConvert(Of T)
    fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ApplyParametersVisitor.#ctor*
  commentId: Overload:NMF.Expressions.ApplyParametersVisitor.#ctor
  name: ApplyParametersVisitor
  nameWithType: ApplyParametersVisitor.ApplyParametersVisitor
  fullName: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: NMF.Expressions.ExpressionVisitorBase
  isExternal: true
  name: VisitParameter(ParameterExpression)
  nameWithType: ExpressionVisitorBase.VisitParameter(ParameterExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  spec.csharp:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: ExpressionVisitorBase.VisitParameter
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
    name: VisitParameter
    nameWithType: ExpressionVisitorBase.VisitParameter
    fullName: NMF.Expressions.ExpressionVisitorBase.VisitParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    nameWithType: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ApplyParametersVisitor.VisitParameter*
  commentId: Overload:NMF.Expressions.ApplyParametersVisitor.VisitParameter
  name: VisitParameter
  nameWithType: ApplyParametersVisitor.VisitParameter
  fullName: NMF.Expressions.ApplyParametersVisitor.VisitParameter
- uid: System.Linq.Expressions.ParameterExpression
  commentId: T:System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: true
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
