### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.IValueChangedNotificationResult
  commentId: T:NMF.Expressions.IValueChangedNotificationResult
  id: IValueChangedNotificationResult
  parent: NMF.Expressions
  children:
  - NMF.Expressions.IValueChangedNotificationResult.NewValue
  - NMF.Expressions.IValueChangedNotificationResult.OldValue
  langs:
  - csharp
  - vb
  name: IValueChangedNotificationResult
  nameWithType: IValueChangedNotificationResult
  fullName: NMF.Expressions.IValueChangedNotificationResult
  type: Interface
  source:
    remote:
      path: Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IValueChangedNotificationResult
    path: src/Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
    startLine: 10
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nDenotes the notification that a value was changed\n"
  example: []
  syntax:
    content: 'public interface IValueChangedNotificationResult : INotificationResult'
    content.vb: Public Interface IValueChangedNotificationResult Inherits INotificationResult
  inheritedMembers:
  - NMF.Expressions.INotificationResult.Source
  - NMF.Expressions.INotificationResult.Changed
  - NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  - NMF.Expressions.INotificationResult.FreeReference
  extensionMethods:
  - NMF.Expressions.IValueChangedNotificationResult.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.IValueChangedNotificationResult.OldValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult.OldValue
  id: OldValue
  parent: NMF.Expressions.IValueChangedNotificationResult
  langs:
  - csharp
  - vb
  name: OldValue
  nameWithType: IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.OldValue
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OldValue
    path: src/Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
    startLine: 15
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nGets the old value\n"
  example: []
  syntax:
    content: object OldValue { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property OldValue As Object
  overload: NMF.Expressions.IValueChangedNotificationResult.OldValue*
- uid: NMF.Expressions.IValueChangedNotificationResult.NewValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult.NewValue
  id: NewValue
  parent: NMF.Expressions.IValueChangedNotificationResult
  langs:
  - csharp
  - vb
  name: NewValue
  nameWithType: IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.NewValue
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NewValue
    path: src/Expressions/Expressions/Execution/ValueChangedNotificationResult.cs
    startLine: 20
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nGets the new value\n"
  example: []
  syntax:
    content: object NewValue { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property NewValue As Object
  overload: NMF.Expressions.IValueChangedNotificationResult.NewValue*
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Expressions.INotificationResult.Source
  commentId: P:NMF.Expressions.INotificationResult.Source
  parent: NMF.Expressions.INotificationResult
  name: Source
  nameWithType: INotificationResult.Source
  fullName: NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.INotificationResult.Changed
  commentId: P:NMF.Expressions.INotificationResult.Changed
  parent: NMF.Expressions.INotificationResult
  name: Changed
  nameWithType: INotificationResult.Changed
  fullName: NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  commentId: M:NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  parent: NMF.Expressions.INotificationResult
  isExternal: true
  name: IncreaseReferences(int)
  nameWithType: INotificationResult.IncreaseReferences(int)
  fullName: NMF.Expressions.INotificationResult.IncreaseReferences(int)
  nameWithType.vb: INotificationResult.IncreaseReferences(Integer)
  fullName.vb: NMF.Expressions.INotificationResult.IncreaseReferences(Integer)
  name.vb: IncreaseReferences(Integer)
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
    name: IncreaseReferences
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: NMF.Expressions.INotificationResult.FreeReference
  commentId: M:NMF.Expressions.INotificationResult.FreeReference
  parent: NMF.Expressions.INotificationResult
  name: FreeReference()
  nameWithType: INotificationResult.FreeReference()
  fullName: NMF.Expressions.INotificationResult.FreeReference()
  spec.csharp:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotificationResult.FreeReference
    name: FreeReference
  - name: (
  - name: )
- uid: NMF.Expressions.IValueChangedNotificationResult.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<IValueChangedNotificationResult>(IValueChangedNotificationResult)
  nameWithType: ExpressionExtensions.AsOne<IValueChangedNotificationResult>(IValueChangedNotificationResult)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.IValueChangedNotificationResult>(NMF.Expressions.IValueChangedNotificationResult)
  nameWithType.vb: ExpressionExtensions.AsOne(Of IValueChangedNotificationResult)(IValueChangedNotificationResult)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.IValueChangedNotificationResult)(NMF.Expressions.IValueChangedNotificationResult)
  name.vb: AsOne(Of IValueChangedNotificationResult)(IValueChangedNotificationResult)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IValueChangedNotificationResult)
    name: AsOne
  - name: <
  - uid: NMF.Expressions.IValueChangedNotificationResult
    name: IValueChangedNotificationResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IValueChangedNotificationResult
    name: IValueChangedNotificationResult
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IValueChangedNotificationResult)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.IValueChangedNotificationResult
    name: IValueChangedNotificationResult
  - name: )
  - name: (
  - uid: NMF.Expressions.IValueChangedNotificationResult
    name: IValueChangedNotificationResult
  - name: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
- uid: NMF.Expressions.IValueChangedNotificationResult.OldValue*
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult.OldValue
  name: OldValue
  nameWithType: IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.IValueChangedNotificationResult.NewValue*
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult.NewValue
  name: NewValue
  nameWithType: IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.NewValue
