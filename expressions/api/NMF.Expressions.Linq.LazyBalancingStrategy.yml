### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Linq.LazyBalancingStrategy
  commentId: T:NMF.Expressions.Linq.LazyBalancingStrategy
  id: LazyBalancingStrategy
  parent: NMF.Expressions.Linq
  children:
  - NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  - NMF.Expressions.Linq.LazyBalancingStrategy.Instance
  langs:
  - csharp
  - vb
  name: LazyBalancingStrategy
  nameWithType: LazyBalancingStrategy
  fullName: NMF.Expressions.Linq.LazyBalancingStrategy
  type: Class
  source:
    id: LazyBalancingStrategy
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\LazyBalancingStrategy.cs
    startLine: 10
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: Denotes the strategy to lazily balance a chunk collection
  remarks: Lazy in this context means that elements are only reassigned to chunks when a chunk can be saved
  example: []
  syntax:
    content: 'public sealed class LazyBalancingStrategy : IChunkBalancingStrategyProvider'
    content.vb: Public NotInheritable Class LazyBalancingStrategy Implements IChunkBalancingStrategyProvider
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.Linq.IChunkBalancingStrategyProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Expressions.Linq.LazyBalancingStrategy.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.Linq.LazyBalancingStrategy.Instance
  commentId: F:NMF.Expressions.Linq.LazyBalancingStrategy.Instance
  id: Instance
  parent: NMF.Expressions.Linq.LazyBalancingStrategy
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: LazyBalancingStrategy.Instance
  fullName: NMF.Expressions.Linq.LazyBalancingStrategy.Instance
  type: Field
  source:
    id: Instance
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\LazyBalancingStrategy.cs
    startLine: 15
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: The static instance
  example: []
  syntax:
    content: public static readonly LazyBalancingStrategy Instance
    return:
      type: NMF.Expressions.Linq.LazyBalancingStrategy
    content.vb: Public Shared ReadOnly Instance As LazyBalancingStrategy
- uid: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  commentId: M:NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  id: CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  parent: NMF.Expressions.Linq.LazyBalancingStrategy
  langs:
  - csharp
  - vb
  name: CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  nameWithType: LazyBalancingStrategy.CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  fullName: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy<T, TChunk>(NMF.Expressions.Linq.IObservableChunk<T, TChunk>)
  type: Method
  source:
    id: CreateStrategy
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\LazyBalancingStrategy.cs
    startLine: 18
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: Create a strategy for the given observable chunk collection
  example: []
  syntax:
    content: public IChunkBalancingStrategy<T, TChunk> CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk> observableChunk)
    parameters:
    - id: observableChunk
      type: NMF.Expressions.Linq.IObservableChunk{{T},{TChunk}}
      description: The observable chunk collection
    typeParameters:
    - id: T
      description: The type of items
    - id: TChunk
      description: The type of the chunks
    return:
      type: NMF.Expressions.Linq.IChunkBalancingStrategy{{T},{TChunk}}
      description: A chunk balancing strategy
    content.vb: Public Function CreateStrategy(Of T, TChunk)(observableChunk As IObservableChunk(Of T, TChunk)) As IChunkBalancingStrategy(Of T, TChunk)
  overload: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy*
  implements:
  - NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{{T},{TChunk}})
  nameWithType.vb: LazyBalancingStrategy.CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
  fullName.vb: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy(Of T, TChunk)(NMF.Expressions.Linq.IObservableChunk(Of T, TChunk))
  name.vb: CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
references:
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider
  commentId: T:NMF.Expressions.Linq.IChunkBalancingStrategyProvider
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html
  name: IChunkBalancingStrategyProvider
  nameWithType: IChunkBalancingStrategyProvider
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategyProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Expressions.Linq.LazyBalancingStrategy.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<LazyBalancingStrategy>(LazyBalancingStrategy)
  nameWithType: ExpressionExtensions.AsOne<LazyBalancingStrategy>(LazyBalancingStrategy)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.Linq.LazyBalancingStrategy>(NMF.Expressions.Linq.LazyBalancingStrategy)
  nameWithType.vb: ExpressionExtensions.AsOne(Of LazyBalancingStrategy)(LazyBalancingStrategy)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.Linq.LazyBalancingStrategy)(NMF.Expressions.Linq.LazyBalancingStrategy)
  name.vb: AsOne(Of LazyBalancingStrategy)(LazyBalancingStrategy)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.LazyBalancingStrategy)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.Linq.LazyBalancingStrategy
    name: LazyBalancingStrategy
    href: NMF.Expressions.Linq.LazyBalancingStrategy.html
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Linq.LazyBalancingStrategy
    name: LazyBalancingStrategy
    href: NMF.Expressions.Linq.LazyBalancingStrategy.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.LazyBalancingStrategy)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.Linq.LazyBalancingStrategy
    name: LazyBalancingStrategy
    href: NMF.Expressions.Linq.LazyBalancingStrategy.html
  - name: )
  - name: (
  - uid: NMF.Expressions.Linq.LazyBalancingStrategy
    name: LazyBalancingStrategy
    href: NMF.Expressions.Linq.LazyBalancingStrategy.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq.LazyBalancingStrategy
  commentId: T:NMF.Expressions.Linq.LazyBalancingStrategy
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.LazyBalancingStrategy.html
  name: LazyBalancingStrategy
  nameWithType: LazyBalancingStrategy
  fullName: NMF.Expressions.Linq.LazyBalancingStrategy
- uid: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy*
  commentId: Overload:NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy
  href: NMF.Expressions.Linq.LazyBalancingStrategy.html#NMF_Expressions_Linq_LazyBalancingStrategy_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  name: CreateStrategy
  nameWithType: LazyBalancingStrategy.CreateStrategy
  fullName: NMF.Expressions.Linq.LazyBalancingStrategy.CreateStrategy
- uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{{T},{TChunk}})
  commentId: M:NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  parent: NMF.Expressions.Linq.IChunkBalancingStrategyProvider
  definition: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  name: CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  nameWithType: IChunkBalancingStrategyProvider.CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy<T, TChunk>(NMF.Expressions.Linq.IObservableChunk<T, TChunk>)
  nameWithType.vb: IChunkBalancingStrategyProvider.CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy(Of T, TChunk)(NMF.Expressions.Linq.IObservableChunk(Of T, TChunk))
  name.vb: CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
  spec.csharp:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
    name: CreateStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
    name: CreateStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: (
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.IObservableChunk{{T},{TChunk}}
  commentId: T:NMF.Expressions.Linq.IObservableChunk{``0,``1}
  parent: NMF.Expressions.Linq
  definition: NMF.Expressions.Linq.IObservableChunk`2
  href: NMF.Expressions.Linq.IObservableChunk-2.html
  name: IObservableChunk<T, TChunk>
  nameWithType: IObservableChunk<T, TChunk>
  fullName: NMF.Expressions.Linq.IObservableChunk<T, TChunk>
  nameWithType.vb: IObservableChunk(Of T, TChunk)
  fullName.vb: NMF.Expressions.Linq.IObservableChunk(Of T, TChunk)
  name.vb: IObservableChunk(Of T, TChunk)
  spec.csharp:
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy{{T},{TChunk}}
  commentId: T:NMF.Expressions.Linq.IChunkBalancingStrategy{``0,``1}
  parent: NMF.Expressions.Linq
  definition: NMF.Expressions.Linq.IChunkBalancingStrategy`2
  href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  name: IChunkBalancingStrategy<T, TChunk>
  nameWithType: IChunkBalancingStrategy<T, TChunk>
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk)
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk)
  name.vb: IChunkBalancingStrategy(Of T, TChunk)
  spec.csharp:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
- uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  commentId: M:NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
  href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  name: CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  nameWithType: IChunkBalancingStrategyProvider.CreateStrategy<T, TChunk>(IObservableChunk<T, TChunk>)
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy<T, TChunk>(NMF.Expressions.Linq.IObservableChunk<T, TChunk>)
  nameWithType.vb: IChunkBalancingStrategyProvider.CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy(Of T, TChunk)(NMF.Expressions.Linq.IObservableChunk(Of T, TChunk))
  name.vb: CreateStrategy(Of T, TChunk)(IObservableChunk(Of T, TChunk))
  spec.csharp:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
    name: CreateStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.CreateStrategy``2(NMF.Expressions.Linq.IObservableChunk{``0,``1})
    name: CreateStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategyProvider.html#NMF_Expressions_Linq_IChunkBalancingStrategyProvider_CreateStrategy__2_NMF_Expressions_Linq_IObservableChunk___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: (
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.IObservableChunk`2
  commentId: T:NMF.Expressions.Linq.IObservableChunk`2
  href: NMF.Expressions.Linq.IObservableChunk-2.html
  name: IObservableChunk<T, TChunk>
  nameWithType: IObservableChunk<T, TChunk>
  fullName: NMF.Expressions.Linq.IObservableChunk<T, TChunk>
  nameWithType.vb: IObservableChunk(Of T, TChunk)
  fullName.vb: NMF.Expressions.Linq.IObservableChunk(Of T, TChunk)
  name.vb: IObservableChunk(Of T, TChunk)
  spec.csharp:
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.Linq.IObservableChunk`2
    name: IObservableChunk
    href: NMF.Expressions.Linq.IObservableChunk-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
  commentId: T:NMF.Expressions.Linq.IChunkBalancingStrategy`2
  href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  name: IChunkBalancingStrategy<T, TChunk>
  nameWithType: IChunkBalancingStrategy<T, TChunk>
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk)
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk)
  name.vb: IChunkBalancingStrategy(Of T, TChunk)
  spec.csharp:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
