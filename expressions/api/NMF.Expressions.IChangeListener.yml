### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.IChangeListener
  commentId: T:NMF.Expressions.IChangeListener
  id: IChangeListener
  parent: NMF.Expressions
  children:
  - NMF.Expressions.IChangeListener.AggregateChanges
  - NMF.Expressions.IChangeListener.Node
  langs:
  - csharp
  - vb
  name: IChangeListener
  nameWithType: IChangeListener
  fullName: NMF.Expressions.IChangeListener
  type: Interface
  source:
    remote:
      path: Expressions/Expressions/Execution/IChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IChangeListener
    path: src/Expressions/Expressions/Execution/IChangeListener.cs
    startLine: 7
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public interface IChangeListener
    content.vb: Public Interface IChangeListener
  extensionMethods:
  - NMF.Expressions.IChangeListener.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.IChangeListener.Node
  commentId: P:NMF.Expressions.IChangeListener.Node
  id: Node
  parent: NMF.Expressions.IChangeListener
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: IChangeListener.Node
  fullName: NMF.Expressions.IChangeListener.Node
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/IChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Node
    path: src/Expressions/Expressions/Execution/IChangeListener.cs
    startLine: 9
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: INotifiable Node { get; }
    parameters: []
    return:
      type: NMF.Expressions.INotifiable
    content.vb: ReadOnly Property Node As INotifiable
  overload: NMF.Expressions.IChangeListener.Node*
- uid: NMF.Expressions.IChangeListener.AggregateChanges
  commentId: M:NMF.Expressions.IChangeListener.AggregateChanges
  id: AggregateChanges
  parent: NMF.Expressions.IChangeListener
  langs:
  - csharp
  - vb
  name: AggregateChanges()
  nameWithType: IChangeListener.AggregateChanges()
  fullName: NMF.Expressions.IChangeListener.AggregateChanges()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/IChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AggregateChanges
    path: src/Expressions/Expressions/Execution/IChangeListener.cs
    startLine: 11
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: INotificationResult AggregateChanges()
    return:
      type: NMF.Expressions.INotificationResult
    content.vb: Function AggregateChanges() As INotificationResult
  overload: NMF.Expressions.IChangeListener.AggregateChanges*
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Expressions.IChangeListener.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<IChangeListener>(IChangeListener)
  nameWithType: ExpressionExtensions.AsOne<IChangeListener>(IChangeListener)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.IChangeListener>(NMF.Expressions.IChangeListener)
  nameWithType.vb: ExpressionExtensions.AsOne(Of IChangeListener)(IChangeListener)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.IChangeListener)(NMF.Expressions.IChangeListener)
  name.vb: AsOne(Of IChangeListener)(IChangeListener)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IChangeListener)
    name: AsOne
  - name: <
  - uid: NMF.Expressions.IChangeListener
    name: IChangeListener
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IChangeListener
    name: IChangeListener
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IChangeListener)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.IChangeListener
    name: IChangeListener
  - name: )
  - name: (
  - uid: NMF.Expressions.IChangeListener
    name: IChangeListener
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
- uid: NMF.Expressions.IChangeListener.Node*
  commentId: Overload:NMF.Expressions.IChangeListener.Node
  name: Node
  nameWithType: IChangeListener.Node
  fullName: NMF.Expressions.IChangeListener.Node
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: NMF.Expressions.IChangeListener.AggregateChanges*
  commentId: Overload:NMF.Expressions.IChangeListener.AggregateChanges
  name: AggregateChanges
  nameWithType: IChangeListener.AggregateChanges
  fullName: NMF.Expressions.IChangeListener.AggregateChanges
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
