### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  id: IEnumerableExpression
  parent: NMF.Expressions
  children:
  - NMF.Expressions.IEnumerableExpression.AsNotifiable
  langs:
  - csharp
  - vb
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
  type: Interface
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Facade/IEnumerableExpression.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IEnumerableExpression
    path: src/Expressions/Expressions.Linq/Facade/IEnumerableExpression.cs
    startLine: 24
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions
  summary: Represents a (non-generoc) collection that can be accessed incrementally, i.e. with change notifications
  example: []
  syntax:
    content: 'public interface IEnumerableExpression : IEnumerable'
    content.vb: Public Interface IEnumerableExpression Inherits IEnumerable
  inheritedMembers:
  - System.Collections.IEnumerable.GetEnumerator
  extensionMethods:
  - NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  - NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.Cast``1
  - NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.OfType``1
- uid: NMF.Expressions.IEnumerableExpression.AsNotifiable
  commentId: M:NMF.Expressions.IEnumerableExpression.AsNotifiable
  id: AsNotifiable
  parent: NMF.Expressions.IEnumerableExpression
  langs:
  - csharp
  - vb
  name: AsNotifiable()
  nameWithType: IEnumerableExpression.AsNotifiable()
  fullName: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  type: Method
  source:
    remote:
      path: src/Expressions/Expressions.Linq/Facade/IEnumerableExpression.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: AsNotifiable
    path: src/Expressions/Expressions.Linq/Facade/IEnumerableExpression.cs
    startLine: 30
  assemblies:
  - NMF.Expressions.Linq
  namespace: NMF.Expressions
  summary: Gets notifications for this collection
  example: []
  syntax:
    content: INotifyEnumerable AsNotifiable()
    return:
      type: NMF.Expressions.INotifyEnumerable
      description: A collection that will notify clients as new elements change
    content.vb: Function AsNotifiable() As INotifyEnumerable
  overload: NMF.Expressions.IEnumerableExpression.AsNotifiable*
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable.getenumerator
  - name: (
  - name: )
- uid: NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<IEnumerableExpression>(IEnumerableExpression)
  nameWithType: ExpressionExtensions.AsOne<IEnumerableExpression>(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.IEnumerableExpression>(NMF.Expressions.IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.AsOne(Of IEnumerableExpression)(IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.IEnumerableExpression)(NMF.Expressions.IEnumerableExpression)
  name.vb: AsOne(Of IEnumerableExpression)(IEnumerableExpression)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IEnumerableExpression)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.IEnumerableExpression)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
- uid: NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.Cast``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  name: Cast<TResult>(IEnumerableExpression)
  nameWithType: ExpressionExtensions.Cast<TResult>(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Cast<TResult>(NMF.Expressions.IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.Cast(Of TResult)(IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Cast(Of TResult)(NMF.Expressions.IEnumerableExpression)
  name.vb: Cast(Of TResult)(IEnumerableExpression)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
    name: Cast
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
    name: Cast
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
- uid: NMF.Expressions.IEnumerableExpression.NMF.Expressions.Linq.ExpressionExtensions.OfType``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  name: OfType<TResult>(IEnumerableExpression)
  nameWithType: ExpressionExtensions.OfType<TResult>(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType<TResult>(NMF.Expressions.IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.OfType(Of TResult)(IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OfType(Of TResult)(NMF.Expressions.IEnumerableExpression)
  name.vb: OfType(Of TResult)(IEnumerableExpression)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
    name: OfType
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
    name: OfType
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  name: Cast<TResult>(IEnumerableExpression)
  nameWithType: ExpressionExtensions.Cast<TResult>(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Cast<TResult>(NMF.Expressions.IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.Cast(Of TResult)(IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Cast(Of TResult)(NMF.Expressions.IEnumerableExpression)
  name.vb: Cast(Of TResult)(IEnumerableExpression)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
    name: Cast
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
    name: Cast
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  name: OfType<TResult>(IEnumerableExpression)
  nameWithType: ExpressionExtensions.OfType<TResult>(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType<TResult>(NMF.Expressions.IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.OfType(Of TResult)(IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OfType(Of TResult)(NMF.Expressions.IEnumerableExpression)
  name.vb: OfType(Of TResult)(IEnumerableExpression)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
    name: OfType
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
    name: OfType
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - uid: NMF.Expressions.IEnumerableExpression
    name: IEnumerableExpression
    href: NMF.Expressions.IEnumerableExpression.html
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: NMF.Expressions.IEnumerableExpression.AsNotifiable*
  commentId: Overload:NMF.Expressions.IEnumerableExpression.AsNotifiable
  href: NMF.Expressions.IEnumerableExpression.html#NMF_Expressions_IEnumerableExpression_AsNotifiable
  name: AsNotifiable
  nameWithType: IEnumerableExpression.AsNotifiable
  fullName: NMF.Expressions.IEnumerableExpression.AsNotifiable
- uid: NMF.Expressions.INotifyEnumerable
  commentId: T:NMF.Expressions.INotifyEnumerable
  parent: NMF.Expressions
  href: NMF.Expressions.INotifyEnumerable.html
  name: INotifyEnumerable
  nameWithType: INotifyEnumerable
  fullName: NMF.Expressions.INotifyEnumerable
