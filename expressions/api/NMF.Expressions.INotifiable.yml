### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  id: INotifiable
  parent: NMF.Expressions
  children:
  - NMF.Expressions.INotifiable.Dependencies
  - NMF.Expressions.INotifiable.ExecutionMetaData
  - NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  - NMF.Expressions.INotifiable.Successors
  langs:
  - csharp
  - vb
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
  type: Interface
  source:
    remote:
      path: Expressions/Expressions/Public/INotifiable.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: INotifiable
    path: src/Expressions/Expressions/Public/INotifiable.cs
    startLine: 12
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nRepresents a node in a graph which can notify its successors\nand gets notified by its dependencies.\n"
  example: []
  syntax:
    content: 'public interface INotifiable : IDisposable'
    content.vb: Public Interface INotifiable Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.ExportToDgml(System.String)
  - NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.Visualize
  - NMF.Expressions.INotifiable.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
- uid: NMF.Expressions.INotifiable.Successors
  commentId: P:NMF.Expressions.INotifiable.Successors
  id: Successors
  parent: NMF.Expressions.INotifiable
  langs:
  - csharp
  - vb
  name: Successors
  nameWithType: INotifiable.Successors
  fullName: NMF.Expressions.INotifiable.Successors
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/INotifiable.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Successors
    path: src/Expressions/Expressions/Public/INotifiable.cs
    startLine: 17
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nThe nodes that will get notified by this node.\n"
  example: []
  syntax:
    content: ISuccessorList Successors { get; }
    parameters: []
    return:
      type: NMF.Expressions.ISuccessorList
    content.vb: ReadOnly Property Successors As ISuccessorList
  overload: NMF.Expressions.INotifiable.Successors*
- uid: NMF.Expressions.INotifiable.Dependencies
  commentId: P:NMF.Expressions.INotifiable.Dependencies
  id: Dependencies
  parent: NMF.Expressions.INotifiable
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: INotifiable.Dependencies
  fullName: NMF.Expressions.INotifiable.Dependencies
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/INotifiable.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Dependencies
    path: src/Expressions/Expressions/Public/INotifiable.cs
    startLine: 22
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nNodes that notify this node.\n"
  example: []
  syntax:
    content: IEnumerable<INotifiable> Dependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
    content.vb: ReadOnly Property Dependencies As IEnumerable(Of INotifiable)
  overload: NMF.Expressions.INotifiable.Dependencies*
- uid: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  id: Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  parent: NMF.Expressions.INotifiable
  langs:
  - csharp
  - vb
  name: Notify(IList<INotificationResult>)
  nameWithType: INotifiable.Notify(IList<INotificationResult>)
  fullName: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Public/INotifiable.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Notify
    path: src/Expressions/Expressions/Public/INotifiable.cs
    startLine: 29
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nGets called when one of the dependencies signals a notification.\n"
  example: []
  syntax:
    content: INotificationResult Notify(IList<INotificationResult> sources)
    parameters:
    - id: sources
      type: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
      description: Contains information about what triggered this notification.
    return:
      type: NMF.Expressions.INotificationResult
      description: An object describing the changes that happened in this notification.
    content.vb: Function Notify(sources As IList(Of INotificationResult)) As INotificationResult
  overload: NMF.Expressions.INotifiable.Notify*
  nameWithType.vb: INotifiable.Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.INotifiable.ExecutionMetaData
  commentId: P:NMF.Expressions.INotifiable.ExecutionMetaData
  id: ExecutionMetaData
  parent: NMF.Expressions.INotifiable
  langs:
  - csharp
  - vb
  name: ExecutionMetaData
  nameWithType: INotifiable.ExecutionMetaData
  fullName: NMF.Expressions.INotifiable.ExecutionMetaData
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Public/INotifiable.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ExecutionMetaData
    path: src/Expressions/Expressions/Public/INotifiable.cs
    startLine: 34
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  summary: "\nUsed by the execution engine during incremental execution.\n"
  example: []
  syntax:
    content: ExecutionMetaData ExecutionMetaData { get; }
    parameters: []
    return:
      type: NMF.Expressions.ExecutionMetaData
    content.vb: ReadOnly Property ExecutionMetaData As ExecutionMetaData
  overload: NMF.Expressions.INotifiable.ExecutionMetaData*
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.ExportToDgml(System.String)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  parent: NMF.Expressions.Debug.DebugExtensions
  definition: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  name: ExportToDgml(INotifiable, string)
  nameWithType: DebugExtensions.ExportToDgml(INotifiable, string)
  fullName: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, string)
  nameWithType.vb: DebugExtensions.ExportToDgml(INotifiable, String)
  fullName.vb: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, String)
  name.vb: ExportToDgml(INotifiable, String)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Expressions.INotifiable.NMF.Expressions.Debug.DebugExtensions.Visualize
  commentId: M:NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.Debug.DebugExtensions
  definition: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  name: Visualize(INotifiable)
  nameWithType: DebugExtensions.Visualize(INotifiable)
  fullName: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: NMF.Expressions.INotifiable.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<INotifiable>(INotifiable)
  nameWithType: ExpressionExtensions.AsOne<INotifiable>(INotifiable)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.INotifiable>(NMF.Expressions.INotifiable)
  nameWithType.vb: ExpressionExtensions.AsOne(Of INotifiable)(INotifiable)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.INotifiable)(NMF.Expressions.INotifiable)
  name.vb: AsOne(Of INotifiable)(INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.INotifiable)
    name: AsOne
  - name: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: '>'
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.INotifiable)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
  isExternal: true
  name: ExportToDgml(INotifiable, string)
  nameWithType: DebugExtensions.ExportToDgml(INotifiable, string)
  fullName: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, string)
  nameWithType.vb: DebugExtensions.ExportToDgml(INotifiable, String)
  fullName.vb: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable, String)
  name.vb: ExportToDgml(INotifiable, String)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.ExportToDgml(NMF.Expressions.INotifiable,System.String)
    name: ExportToDgml
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: NMF.Expressions.Debug.DebugExtensions
  commentId: T:NMF.Expressions.Debug.DebugExtensions
  parent: NMF.Expressions.Debug
  name: DebugExtensions
  nameWithType: DebugExtensions
  fullName: NMF.Expressions.Debug.DebugExtensions
- uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  name: Visualize(INotifiable)
  nameWithType: DebugExtensions.Visualize(INotifiable)
  fullName: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Debug.DebugExtensions.Visualize(NMF.Expressions.INotifiable)
    name: Visualize
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Debug
  commentId: N:NMF.Expressions.Debug
  name: NMF.Expressions.Debug
  nameWithType: NMF.Expressions.Debug
  fullName: NMF.Expressions.Debug
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Debug
    name: Debug
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Debug
    name: Debug
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
- uid: NMF.Expressions.INotifiable.Successors*
  commentId: Overload:NMF.Expressions.INotifiable.Successors
  name: Successors
  nameWithType: INotifiable.Successors
  fullName: NMF.Expressions.INotifiable.Successors
- uid: NMF.Expressions.ISuccessorList
  commentId: T:NMF.Expressions.ISuccessorList
  parent: NMF.Expressions
  name: ISuccessorList
  nameWithType: ISuccessorList
  fullName: NMF.Expressions.ISuccessorList
- uid: NMF.Expressions.INotifiable.Dependencies*
  commentId: Overload:NMF.Expressions.INotifiable.Dependencies
  name: Dependencies
  nameWithType: INotifiable.Dependencies
  fullName: NMF.Expressions.INotifiable.Dependencies
- uid: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INotifiable>
  nameWithType: IEnumerable<INotifiable>
  fullName: System.Collections.Generic.IEnumerable<NMF.Expressions.INotifiable>
  nameWithType.vb: IEnumerable(Of INotifiable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Expressions.INotifiable)
  name.vb: IEnumerable(Of INotifiable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: NMF.Expressions.INotifiable.Notify*
  commentId: Overload:NMF.Expressions.INotifiable.Notify
  name: Notify
  nameWithType: INotifiable.Notify
  fullName: NMF.Expressions.INotifiable.Notify
- uid: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  commentId: T:System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INotificationResult>
  nameWithType: IList<INotificationResult>
  fullName: System.Collections.Generic.IList<NMF.Expressions.INotificationResult>
  nameWithType.vb: IList(Of INotificationResult)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult)
  name.vb: IList(Of INotificationResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.INotifiable.ExecutionMetaData*
  commentId: Overload:NMF.Expressions.INotifiable.ExecutionMetaData
  name: ExecutionMetaData
  nameWithType: INotifiable.ExecutionMetaData
  fullName: NMF.Expressions.INotifiable.ExecutionMetaData
- uid: NMF.Expressions.ExecutionMetaData
  commentId: T:NMF.Expressions.ExecutionMetaData
  parent: NMF.Expressions
  name: ExecutionMetaData
  nameWithType: ExecutionMetaData
  fullName: NMF.Expressions.ExecutionMetaData
