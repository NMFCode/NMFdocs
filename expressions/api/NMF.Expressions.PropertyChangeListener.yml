### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.PropertyChangeListener
  commentId: T:NMF.Expressions.PropertyChangeListener
  id: PropertyChangeListener
  parent: NMF.Expressions
  children:
  - NMF.Expressions.PropertyChangeListener.#ctor(NMF.Expressions.INotifiable)
  - NMF.Expressions.PropertyChangeListener.AggregateChanges
  - NMF.Expressions.PropertyChangeListener.Node
  - NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  - NMF.Expressions.PropertyChangeListener.Unsubscribe
  langs:
  - csharp
  - vb
  name: PropertyChangeListener
  nameWithType: PropertyChangeListener
  fullName: NMF.Expressions.PropertyChangeListener
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PropertyChangeListener
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 8
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: 'public class PropertyChangeListener : IChangeListener'
    content.vb: >-
      Public Class PropertyChangeListener
          Implements IChangeListener
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.IChangeListener
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Expressions.PropertyChangeListener.Node
  commentId: P:NMF.Expressions.PropertyChangeListener.Node
  id: Node
  parent: NMF.Expressions.PropertyChangeListener
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: PropertyChangeListener.Node
  fullName: NMF.Expressions.PropertyChangeListener.Node
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Node
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 14
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public INotifiable Node { get; }
    parameters: []
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public ReadOnly Property Node As INotifiable
  overload: NMF.Expressions.PropertyChangeListener.Node*
  implements:
  - NMF.Expressions.IChangeListener.Node
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Expressions.PropertyChangeListener.#ctor(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.PropertyChangeListener.#ctor(NMF.Expressions.INotifiable)
  id: '#ctor(NMF.Expressions.INotifiable)'
  parent: NMF.Expressions.PropertyChangeListener
  langs:
  - csharp
  - vb
  name: PropertyChangeListener(INotifiable)
  nameWithType: PropertyChangeListener.PropertyChangeListener(INotifiable)
  fullName: NMF.Expressions.PropertyChangeListener.PropertyChangeListener(NMF.Expressions.INotifiable)
  type: Constructor
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 16
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public PropertyChangeListener(INotifiable node)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    content.vb: Public Sub New(node As INotifiable)
  overload: NMF.Expressions.PropertyChangeListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  commentId: M:NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  id: Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  parent: NMF.Expressions.PropertyChangeListener
  langs:
  - csharp
  - vb
  name: Subscribe(INotifyPropertyChanged, String)
  nameWithType: PropertyChangeListener.Subscribe(INotifyPropertyChanged, String)
  fullName: NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged, System.String)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Subscribe
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 21
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public void Subscribe(INotifyPropertyChanged element, string propertyName)
    parameters:
    - id: element
      type: System.ComponentModel.INotifyPropertyChanged
    - id: propertyName
      type: System.String
    content.vb: Public Sub Subscribe(element As INotifyPropertyChanged, propertyName As String)
  overload: NMF.Expressions.PropertyChangeListener.Subscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Expressions.PropertyChangeListener.Unsubscribe
  commentId: M:NMF.Expressions.PropertyChangeListener.Unsubscribe
  id: Unsubscribe
  parent: NMF.Expressions.PropertyChangeListener
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: PropertyChangeListener.Unsubscribe()
  fullName: NMF.Expressions.PropertyChangeListener.Unsubscribe()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Unsubscribe
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 32
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe
  overload: NMF.Expressions.PropertyChangeListener.Unsubscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Expressions.PropertyChangeListener.AggregateChanges
  commentId: M:NMF.Expressions.PropertyChangeListener.AggregateChanges
  id: AggregateChanges
  parent: NMF.Expressions.PropertyChangeListener
  langs:
  - csharp
  - vb
  name: AggregateChanges()
  nameWithType: PropertyChangeListener.AggregateChanges()
  fullName: NMF.Expressions.PropertyChangeListener.AggregateChanges()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/PropertyChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AggregateChanges
    path: src/Expressions/Expressions/Execution/PropertyChangeListener.cs
    startLine: 43
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public INotificationResult AggregateChanges()
    return:
      type: NMF.Expressions.INotificationResult
    content.vb: Public Function AggregateChanges As INotificationResult
  overload: NMF.Expressions.PropertyChangeListener.AggregateChanges*
  implements:
  - NMF.Expressions.IChangeListener.AggregateChanges
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Expressions.IChangeListener
  commentId: T:NMF.Expressions.IChangeListener
  parent: NMF.Expressions
  name: IChangeListener
  nameWithType: IChangeListener
  fullName: NMF.Expressions.IChangeListener
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.PropertyChangeListener.Node*
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Node
  name: Node
  nameWithType: PropertyChangeListener.Node
  fullName: NMF.Expressions.PropertyChangeListener.Node
- uid: NMF.Expressions.IChangeListener.Node
  commentId: P:NMF.Expressions.IChangeListener.Node
  parent: NMF.Expressions.IChangeListener
  name: Node
  nameWithType: IChangeListener.Node
  fullName: NMF.Expressions.IChangeListener.Node
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: NMF.Expressions.PropertyChangeListener.#ctor*
  commentId: Overload:NMF.Expressions.PropertyChangeListener.#ctor
  name: PropertyChangeListener
  nameWithType: PropertyChangeListener.PropertyChangeListener
  fullName: NMF.Expressions.PropertyChangeListener.PropertyChangeListener
- uid: NMF.Expressions.PropertyChangeListener.Subscribe*
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Subscribe
  name: Subscribe
  nameWithType: PropertyChangeListener.Subscribe
  fullName: NMF.Expressions.PropertyChangeListener.Subscribe
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: NMF.Expressions.PropertyChangeListener.Unsubscribe*
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Unsubscribe
  name: Unsubscribe
  nameWithType: PropertyChangeListener.Unsubscribe
  fullName: NMF.Expressions.PropertyChangeListener.Unsubscribe
- uid: NMF.Expressions.PropertyChangeListener.AggregateChanges*
  commentId: Overload:NMF.Expressions.PropertyChangeListener.AggregateChanges
  name: AggregateChanges
  nameWithType: PropertyChangeListener.AggregateChanges
  fullName: NMF.Expressions.PropertyChangeListener.AggregateChanges
- uid: NMF.Expressions.IChangeListener.AggregateChanges
  commentId: M:NMF.Expressions.IChangeListener.AggregateChanges
  parent: NMF.Expressions.IChangeListener
  name: AggregateChanges()
  nameWithType: IChangeListener.AggregateChanges()
  fullName: NMF.Expressions.IChangeListener.AggregateChanges()
  spec.csharp:
  - uid: NMF.Expressions.IChangeListener.AggregateChanges
    name: AggregateChanges
    nameWithType: IChangeListener.AggregateChanges
    fullName: NMF.Expressions.IChangeListener.AggregateChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.IChangeListener.AggregateChanges
    name: AggregateChanges
    nameWithType: IChangeListener.AggregateChanges
    fullName: NMF.Expressions.IChangeListener.AggregateChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
