### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.CollectionChangeListener`1
  commentId: T:NMF.Expressions.CollectionChangeListener`1
  id: CollectionChangeListener`1
  parent: NMF.Expressions
  children:
  - NMF.Expressions.CollectionChangeListener`1.#ctor(NMF.Expressions.INotifiable)
  - NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  - NMF.Expressions.CollectionChangeListener`1.Node
  - NMF.Expressions.CollectionChangeListener`1.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  - NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  langs:
  - csharp
  - vb
  name: CollectionChangeListener<T>
  nameWithType: CollectionChangeListener<T>
  fullName: NMF.Expressions.CollectionChangeListener<T>
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CollectionChangeListener
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 9
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: 'public class CollectionChangeListener<T> : IChangeListener'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class CollectionChangeListener(Of T)

          Implements IChangeListener
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.IChangeListener
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: CollectionChangeListener(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T)
  name.vb: CollectionChangeListener(Of T)
- uid: NMF.Expressions.CollectionChangeListener`1.Node
  commentId: P:NMF.Expressions.CollectionChangeListener`1.Node
  id: Node
  parent: NMF.Expressions.CollectionChangeListener`1
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: CollectionChangeListener<T>.Node
  fullName: NMF.Expressions.CollectionChangeListener<T>.Node
  type: Property
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Node
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 16
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public INotifiable Node { get; }
    parameters: []
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public ReadOnly Property Node As INotifiable
  overload: NMF.Expressions.CollectionChangeListener`1.Node*
  implements:
  - NMF.Expressions.IChangeListener.Node
  nameWithType.vb: CollectionChangeListener(Of T).Node
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Node
- uid: NMF.Expressions.CollectionChangeListener`1.#ctor(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.CollectionChangeListener`1.#ctor(NMF.Expressions.INotifiable)
  id: '#ctor(NMF.Expressions.INotifiable)'
  parent: NMF.Expressions.CollectionChangeListener`1
  langs:
  - csharp
  - vb
  name: CollectionChangeListener(INotifiable)
  nameWithType: CollectionChangeListener<T>.CollectionChangeListener(INotifiable)
  fullName: NMF.Expressions.CollectionChangeListener<T>.CollectionChangeListener(NMF.Expressions.INotifiable)
  type: Constructor
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 18
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public CollectionChangeListener(INotifiable node)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    content.vb: Public Sub New(node As INotifiable)
  overload: NMF.Expressions.CollectionChangeListener`1.#ctor*
  nameWithType.vb: CollectionChangeListener(Of T).CollectionChangeListener(INotifiable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).CollectionChangeListener(NMF.Expressions.INotifiable)
- uid: NMF.Expressions.CollectionChangeListener`1.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  commentId: M:NMF.Expressions.CollectionChangeListener`1.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  id: Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  parent: NMF.Expressions.CollectionChangeListener`1
  langs:
  - csharp
  - vb
  name: Subscribe(INotifyCollectionChanged)
  nameWithType: CollectionChangeListener<T>.Subscribe(INotifyCollectionChanged)
  fullName: NMF.Expressions.CollectionChangeListener<T>.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Subscribe
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 23
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public void Subscribe(INotifyCollectionChanged collection)
    parameters:
    - id: collection
      type: System.Collections.Specialized.INotifyCollectionChanged
    content.vb: Public Sub Subscribe(collection As INotifyCollectionChanged)
  overload: NMF.Expressions.CollectionChangeListener`1.Subscribe*
  nameWithType.vb: CollectionChangeListener(Of T).Subscribe(INotifyCollectionChanged)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
- uid: NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  commentId: M:NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  id: Unsubscribe
  parent: NMF.Expressions.CollectionChangeListener`1
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: CollectionChangeListener<T>.Unsubscribe()
  fullName: NMF.Expressions.CollectionChangeListener<T>.Unsubscribe()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Unsubscribe
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 33
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe
  overload: NMF.Expressions.CollectionChangeListener`1.Unsubscribe*
  nameWithType.vb: CollectionChangeListener(Of T).Unsubscribe()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Unsubscribe()
- uid: NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  commentId: M:NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  id: AggregateChanges
  parent: NMF.Expressions.CollectionChangeListener`1
  langs:
  - csharp
  - vb
  name: AggregateChanges()
  nameWithType: CollectionChangeListener<T>.AggregateChanges()
  fullName: NMF.Expressions.CollectionChangeListener<T>.AggregateChanges()
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/CollectionChangeListener.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AggregateChanges
    path: src/Expressions/Expressions/Execution/CollectionChangeListener.cs
    startLine: 43
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: public INotificationResult AggregateChanges()
    return:
      type: NMF.Expressions.INotificationResult
    content.vb: Public Function AggregateChanges As INotificationResult
  overload: NMF.Expressions.CollectionChangeListener`1.AggregateChanges*
  implements:
  - NMF.Expressions.IChangeListener.AggregateChanges
  nameWithType.vb: CollectionChangeListener(Of T).AggregateChanges()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).AggregateChanges()
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Expressions.IChangeListener
  commentId: T:NMF.Expressions.IChangeListener
  parent: NMF.Expressions
  name: IChangeListener
  nameWithType: IChangeListener
  fullName: NMF.Expressions.IChangeListener
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.CollectionChangeListener`1.Node*
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Node
  name: Node
  nameWithType: CollectionChangeListener<T>.Node
  fullName: NMF.Expressions.CollectionChangeListener<T>.Node
  nameWithType.vb: CollectionChangeListener(Of T).Node
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Node
- uid: NMF.Expressions.IChangeListener.Node
  commentId: P:NMF.Expressions.IChangeListener.Node
  parent: NMF.Expressions.IChangeListener
  name: Node
  nameWithType: IChangeListener.Node
  fullName: NMF.Expressions.IChangeListener.Node
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: NMF.Expressions.CollectionChangeListener`1.#ctor*
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.#ctor
  name: CollectionChangeListener
  nameWithType: CollectionChangeListener<T>.CollectionChangeListener
  fullName: NMF.Expressions.CollectionChangeListener<T>.CollectionChangeListener
  nameWithType.vb: CollectionChangeListener(Of T).CollectionChangeListener
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).CollectionChangeListener
- uid: NMF.Expressions.CollectionChangeListener`1.Subscribe*
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Subscribe
  name: Subscribe
  nameWithType: CollectionChangeListener<T>.Subscribe
  fullName: NMF.Expressions.CollectionChangeListener<T>.Subscribe
  nameWithType.vb: CollectionChangeListener(Of T).Subscribe
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Subscribe
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: NMF.Expressions.CollectionChangeListener`1.Unsubscribe*
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  name: Unsubscribe
  nameWithType: CollectionChangeListener<T>.Unsubscribe
  fullName: NMF.Expressions.CollectionChangeListener<T>.Unsubscribe
  nameWithType.vb: CollectionChangeListener(Of T).Unsubscribe
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Unsubscribe
- uid: NMF.Expressions.CollectionChangeListener`1.AggregateChanges*
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  name: AggregateChanges
  nameWithType: CollectionChangeListener<T>.AggregateChanges
  fullName: NMF.Expressions.CollectionChangeListener<T>.AggregateChanges
  nameWithType.vb: CollectionChangeListener(Of T).AggregateChanges
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).AggregateChanges
- uid: NMF.Expressions.IChangeListener.AggregateChanges
  commentId: M:NMF.Expressions.IChangeListener.AggregateChanges
  parent: NMF.Expressions.IChangeListener
  name: AggregateChanges()
  nameWithType: IChangeListener.AggregateChanges()
  fullName: NMF.Expressions.IChangeListener.AggregateChanges()
  spec.csharp:
  - uid: NMF.Expressions.IChangeListener.AggregateChanges
    name: AggregateChanges
    nameWithType: IChangeListener.AggregateChanges
    fullName: NMF.Expressions.IChangeListener.AggregateChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.IChangeListener.AggregateChanges
    name: AggregateChanges
    nameWithType: IChangeListener.AggregateChanges
    fullName: NMF.Expressions.IChangeListener.AggregateChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
