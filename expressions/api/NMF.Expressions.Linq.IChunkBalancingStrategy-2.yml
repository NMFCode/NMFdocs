### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
  commentId: T:NMF.Expressions.Linq.IChunkBalancingStrategy`2
  id: IChunkBalancingStrategy`2
  parent: NMF.Expressions.Linq
  children:
  - NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance(System.Collections.Generic.List{`1}@,System.Collections.Generic.List{`1}@)
  - NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk(`0,System.Int32)
  langs:
  - csharp
  - vb
  name: IChunkBalancingStrategy<T, TChunk>
  nameWithType: IChunkBalancingStrategy<T, TChunk>
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>
  type: Interface
  source:
    id: IChunkBalancingStrategy
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\IChunkBalancingStrategy.cs
    startLine: 11
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: Denotes a balancing strategy when items are added or deleted dynamically
  example: []
  syntax:
    content: public interface IChunkBalancingStrategy<T, TChunk>
    typeParameters:
    - id: T
      description: ''
    - id: TChunk
      description: ''
    content.vb: Public Interface IChunkBalancingStrategy(Of T, TChunk)
  extensionMethods:
  - NMF.Expressions.Linq.IChunkBalancingStrategy`2.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk)
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk)
  name.vb: IChunkBalancingStrategy(Of T, TChunk)
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk(`0,System.Int32)
  commentId: M:NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk(`0,System.Int32)
  id: TryAddToExistingChunk(`0,System.Int32)
  parent: NMF.Expressions.Linq.IChunkBalancingStrategy`2
  langs:
  - csharp
  - vb
  name: TryAddToExistingChunk(T, int)
  nameWithType: IChunkBalancingStrategy<T, TChunk>.TryAddToExistingChunk(T, int)
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>.TryAddToExistingChunk(T, int)
  type: Method
  source:
    id: TryAddToExistingChunk
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\IChunkBalancingStrategy.cs
    startLine: 19
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: Tries to add the given item to an existing chunk
  example: []
  syntax:
    content: bool TryAddToExistingChunk(T item, int startingIndex)
    parameters:
    - id: item
      type: '{T}'
      description: The item that should be added
    - id: startingIndex
      type: System.Int32
      description: The starting index
    return:
      type: System.Boolean
      description: True, if the item could be added to an existing chunk, otherwise False
    content.vb: Function TryAddToExistingChunk(item As T, startingIndex As Integer) As Boolean
  overload: NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk*
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk).TryAddToExistingChunk(T, Integer)
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk).TryAddToExistingChunk(T, Integer)
  name.vb: TryAddToExistingChunk(T, Integer)
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance(System.Collections.Generic.List{`1}@,System.Collections.Generic.List{`1}@)
  commentId: M:NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance(System.Collections.Generic.List{`1}@,System.Collections.Generic.List{`1}@)
  id: Balance(System.Collections.Generic.List{`1}@,System.Collections.Generic.List{`1}@)
  parent: NMF.Expressions.Linq.IChunkBalancingStrategy`2
  langs:
  - csharp
  - vb
  name: Balance(ref List<TChunk>, ref List<TChunk>)
  nameWithType: IChunkBalancingStrategy<T, TChunk>.Balance(ref List<TChunk>, ref List<TChunk>)
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>.Balance(ref System.Collections.Generic.List<TChunk>, ref System.Collections.Generic.List<TChunk>)
  type: Method
  source:
    id: Balance
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Chunk\IChunkBalancingStrategy.cs
    startLine: 26
  assemblies:
  - NMF.Expressions.Chunk
  namespace: NMF.Expressions.Linq
  summary: Balances the chunk collection after items have been removed
  example: []
  syntax:
    content: void Balance(ref List<TChunk> addedChunks, ref List<TChunk> removedChunks)
    parameters:
    - id: addedChunks
      type: System.Collections.Generic.List{{TChunk}}
      description: A reference to a collection with added chunks
    - id: removedChunks
      type: System.Collections.Generic.List{{TChunk}}
      description: A reference to a collection with removed chunks
    content.vb: Sub Balance(addedChunks As List(Of TChunk), removedChunks As List(Of TChunk))
  overload: NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance*
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk).Balance(List(Of TChunk), List(Of TChunk))
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk).Balance(System.Collections.Generic.List(Of TChunk), System.Collections.Generic.List(Of TChunk))
  name.vb: Balance(List(Of TChunk), List(Of TChunk))
references:
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<IChunkBalancingStrategy<T, TChunk>>(IChunkBalancingStrategy<T, TChunk>)
  nameWithType: ExpressionExtensions.AsOne<IChunkBalancingStrategy<T, TChunk>>(IChunkBalancingStrategy<T, TChunk>)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>>(NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>)
  nameWithType.vb: ExpressionExtensions.AsOne(Of IChunkBalancingStrategy(Of T, TChunk))(IChunkBalancingStrategy(Of T, TChunk))
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk))(NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk))
  name.vb: AsOne(Of IChunkBalancingStrategy(Of T, TChunk))(IChunkBalancingStrategy(Of T, TChunk))
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.IChunkBalancingStrategy{`0,`1})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Linq.IChunkBalancingStrategy{`0,`1})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: )
  - name: (
  - uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2
    name: IChunkBalancingStrategy
    href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TChunk
  - name: )
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk*
  commentId: Overload:NMF.Expressions.Linq.IChunkBalancingStrategy`2.TryAddToExistingChunk
  href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html#NMF_Expressions_Linq_IChunkBalancingStrategy_2_TryAddToExistingChunk__0_System_Int32_
  name: TryAddToExistingChunk
  nameWithType: IChunkBalancingStrategy<T, TChunk>.TryAddToExistingChunk
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>.TryAddToExistingChunk
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk).TryAddToExistingChunk
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk).TryAddToExistingChunk
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance*
  commentId: Overload:NMF.Expressions.Linq.IChunkBalancingStrategy`2.Balance
  href: NMF.Expressions.Linq.IChunkBalancingStrategy-2.html#NMF_Expressions_Linq_IChunkBalancingStrategy_2_Balance_System_Collections_Generic_List__1___System_Collections_Generic_List__1___
  name: Balance
  nameWithType: IChunkBalancingStrategy<T, TChunk>.Balance
  fullName: NMF.Expressions.Linq.IChunkBalancingStrategy<T, TChunk>.Balance
  nameWithType.vb: IChunkBalancingStrategy(Of T, TChunk).Balance
  fullName.vb: NMF.Expressions.Linq.IChunkBalancingStrategy(Of T, TChunk).Balance
- uid: System.Collections.Generic.List{{TChunk}}
  commentId: T:System.Collections.Generic.List{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TChunk>
  nameWithType: List<TChunk>
  fullName: System.Collections.Generic.List<TChunk>
  nameWithType.vb: List(Of TChunk)
  fullName.vb: System.Collections.Generic.List(Of TChunk)
  name.vb: List(Of TChunk)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: TChunk
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: TChunk
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
