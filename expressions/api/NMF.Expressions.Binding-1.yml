### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Binding`1
  commentId: T:NMF.Expressions.Binding`1
  id: Binding`1
  parent: NMF.Expressions
  children:
  - NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  - NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  langs:
  - csharp
  - vb
  name: Binding<T>
  nameWithType: Binding<T>
  fullName: NMF.Expressions.Binding<T>
  type: Class
  source:
    id: Binding
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 11
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Helper class to create bindings
  example: []
  syntax:
    content: public static class Binding<T>
    typeParameters:
    - id: T
      description: The type of bindings
    content.vb: Public Module Binding(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Binding(Of T)
  fullName.vb: NMF.Expressions.Binding(Of T)
  name.vb: Binding(Of T)
- uid: NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  id: Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: NMF.Expressions.Binding`1
  langs:
  - csharp
  - vb
  name: Create<TMember>(Expression<Func<T, TMember>>, Expression<Func<T, TMember>>)
  nameWithType: Binding<T>.Create<TMember>(Expression<Func<T, TMember>>, Expression<Func<T, TMember>>)
  fullName: NMF.Expressions.Binding<T>.Create<TMember>(System.Linq.Expressions.Expression<System.Func<T, TMember>>, System.Linq.Expressions.Expression<System.Func<T, TMember>>)
  type: Method
  source:
    id: Create
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 20
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Creates a new binding for the type T
  example: []
  syntax:
    content: public static IBinding<T> Create<TMember>(Expression<Func<T, TMember>> func, Expression<Func<T, TMember>> member)
    parameters:
    - id: func
      type: System.Linq.Expressions.Expression{System.Func{{T},{TMember}}}
      description: The function the member should be bound to
    - id: member
      type: System.Linq.Expressions.Expression{System.Func{{T},{TMember}}}
      description: The member that should be bound
    typeParameters:
    - id: TMember
      description: The type of the member that should be bound
    return:
      type: NMF.Expressions.IBinding{{T}}
      description: A binding
    content.vb: Public Shared Function Create(Of TMember)(func As Expression(Of Func(Of T, TMember)), member As Expression(Of Func(Of T, TMember))) As IBinding(Of T)
  overload: NMF.Expressions.Binding`1.Create*
  nameWithType.vb: Binding(Of T).Create(Of TMember)(Expression(Of Func(Of T, TMember)), Expression(Of Func(Of T, TMember)))
  fullName.vb: NMF.Expressions.Binding(Of T).Create(Of TMember)(System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)), System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)))
  name.vb: Create(Of TMember)(Expression(Of Func(Of T, TMember)), Expression(Of Func(Of T, TMember)))
- uid: NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  commentId: M:NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  id: Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  parent: NMF.Expressions.Binding`1
  langs:
  - csharp
  - vb
  name: Create<TMember>(Expression<Func<T, TMember>>, Action<T, TMember>)
  nameWithType: Binding<T>.Create<TMember>(Expression<Func<T, TMember>>, Action<T, TMember>)
  fullName: NMF.Expressions.Binding<T>.Create<TMember>(System.Linq.Expressions.Expression<System.Func<T, TMember>>, System.Action<T, TMember>)
  type: Method
  source:
    id: Create
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 33
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Creates a new binding for the type T
  example: []
  syntax:
    content: public static IBinding<T> Create<TMember>(Expression<Func<T, TMember>> func, Action<T, TMember> setter)
    parameters:
    - id: func
      type: System.Linq.Expressions.Expression{System.Func{{T},{TMember}}}
      description: The function the member should be bound to
    - id: setter
      type: System.Action{{T},{TMember}}
      description: The setter function for the member
    typeParameters:
    - id: TMember
      description: The type of the member that should be bound
    return:
      type: NMF.Expressions.IBinding{{T}}
      description: A binding
    content.vb: Public Shared Function Create(Of TMember)(func As Expression(Of Func(Of T, TMember)), setter As Action(Of T, TMember)) As IBinding(Of T)
  overload: NMF.Expressions.Binding`1.Create*
  nameWithType.vb: Binding(Of T).Create(Of TMember)(Expression(Of Func(Of T, TMember)), Action(Of T, TMember))
  fullName.vb: NMF.Expressions.Binding(Of T).Create(Of TMember)(System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)), System.Action(Of T, TMember))
  name.vb: Create(Of TMember)(Expression(Of Func(Of T, TMember)), Action(Of T, TMember))
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.Binding`1.Create*
  commentId: Overload:NMF.Expressions.Binding`1.Create
  href: NMF.Expressions.Binding-1.html#NMF_Expressions_Binding_1_Create__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__0___0___
  name: Create
  nameWithType: Binding<T>.Create
  fullName: NMF.Expressions.Binding<T>.Create
  nameWithType.vb: Binding(Of T).Create
  fullName.vb: NMF.Expressions.Binding(Of T).Create
- uid: System.Linq.Expressions.Expression{System.Func{{T},{TMember}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,``0}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, TMember>>
  nameWithType: Expression<Func<T, TMember>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, TMember>>
  nameWithType.vb: Expression(Of Func(Of T, TMember))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, TMember))
  name.vb: Expression(Of Func(Of T, TMember))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
  - name: )
- uid: NMF.Expressions.IBinding{{T}}
  commentId: T:NMF.Expressions.IBinding{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IBinding`1
  href: NMF.Expressions.IBinding-1.html
  name: IBinding<T>
  nameWithType: IBinding<T>
  fullName: NMF.Expressions.IBinding<T>
  nameWithType.vb: IBinding(Of T)
  fullName.vb: NMF.Expressions.IBinding(Of T)
  name.vb: IBinding(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: NMF.Expressions.IBinding`1
  commentId: T:NMF.Expressions.IBinding`1
  href: NMF.Expressions.IBinding-1.html
  name: IBinding<T>
  nameWithType: IBinding<T>
  fullName: NMF.Expressions.IBinding<T>
  nameWithType.vb: IBinding(Of T)
  fullName.vb: NMF.Expressions.IBinding(Of T)
  name.vb: IBinding(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{{T},{TMember}}
  commentId: T:System.Action{`0,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T, TMember>
  nameWithType: Action<T, TMember>
  fullName: System.Action<T, TMember>
  nameWithType.vb: Action(Of T, TMember)
  fullName.vb: System.Action(Of T, TMember)
  name.vb: Action(Of T, TMember)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
