### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.Binding`2
  commentId: T:NMF.Expressions.Binding`2
  id: Binding`2
  parent: NMF.Expressions
  children:
  - NMF.Expressions.Binding`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})
  - NMF.Expressions.Binding`2.Bind(`0)
  langs:
  - csharp
  - vb
  name: Binding<T, TMember>
  nameWithType: Binding<T, TMember>
  fullName: NMF.Expressions.Binding<T, TMember>
  type: Class
  source:
    id: Binding
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 58
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Denotes a binding of type T
  example: []
  syntax:
    content: 'public class Binding<T, TMember> : IBinding<T>'
    typeParameters:
    - id: T
      description: The type of the object that is bound
    - id: TMember
      description: The value type of the binding
    content.vb: Public Class Binding(Of T, TMember) Implements IBinding(Of T)
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.IBinding{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Expressions.Binding`2.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  nameWithType.vb: Binding(Of T, TMember)
  fullName.vb: NMF.Expressions.Binding(Of T, TMember)
  name.vb: Binding(Of T, TMember)
- uid: NMF.Expressions.Binding`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})
  commentId: M:NMF.Expressions.Binding`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})
  id: '#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})'
  parent: NMF.Expressions.Binding`2
  langs:
  - csharp
  - vb
  name: Binding(ObservingFunc<T, TMember>, Action<T, TMember>)
  nameWithType: Binding<T, TMember>.Binding(ObservingFunc<T, TMember>, Action<T, TMember>)
  fullName: NMF.Expressions.Binding<T, TMember>.Binding(NMF.Expressions.ObservingFunc<T, TMember>, System.Action<T, TMember>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 68
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Creates a new binding
  example: []
  syntax:
    content: public Binding(ObservingFunc<T, TMember> func, Action<T, TMember> setter)
    parameters:
    - id: func
      type: NMF.Expressions.ObservingFunc{{T},{TMember}}
      description: The function that should be bound
    - id: setter
      type: System.Action{{T},{TMember}}
      description: The setter to which the function should be bound
    content.vb: Public Sub New(func As ObservingFunc(Of T, TMember), setter As Action(Of T, TMember))
  overload: NMF.Expressions.Binding`2.#ctor*
  nameWithType.vb: Binding(Of T, TMember).New(ObservingFunc(Of T, TMember), Action(Of T, TMember))
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).New(NMF.Expressions.ObservingFunc(Of T, TMember), System.Action(Of T, TMember))
  name.vb: New(ObservingFunc(Of T, TMember), Action(Of T, TMember))
- uid: NMF.Expressions.Binding`2.Bind(`0)
  commentId: M:NMF.Expressions.Binding`2.Bind(`0)
  id: Bind(`0)
  parent: NMF.Expressions.Binding`2
  langs:
  - csharp
  - vb
  name: Bind(T)
  nameWithType: Binding<T, TMember>.Bind(T)
  fullName: NMF.Expressions.Binding<T, TMember>.Bind(T)
  type: Method
  source:
    id: Bind
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Expressions\Expressions.Utilities\Binding.cs
    startLine: 75
  assemblies:
  - NMF.Expressions.Utilities
  namespace: NMF.Expressions
  summary: Executes the binding for the given element
  example: []
  syntax:
    content: public IDisposable Bind(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The element that should be bound
    return:
      type: System.IDisposable
      description: A disposable instance. When disposed, the binding for the provided element ends.
    content.vb: Public Function Bind(item As T) As IDisposable
  overload: NMF.Expressions.Binding`2.Bind*
  implements:
  - NMF.Expressions.IBinding{{T}}.Bind({T})
  nameWithType.vb: Binding(Of T, TMember).Bind(T)
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Bind(T)
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  href: NMF.html
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.IBinding{{T}}
  commentId: T:NMF.Expressions.IBinding{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IBinding`1
  href: NMF.Expressions.IBinding-1.html
  name: IBinding<T>
  nameWithType: IBinding<T>
  fullName: NMF.Expressions.IBinding<T>
  nameWithType.vb: IBinding(Of T)
  fullName.vb: NMF.Expressions.IBinding(Of T)
  name.vb: IBinding(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Expressions.Binding`2.NMF.Expressions.Linq.ExpressionExtensions.AsOne``1
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  parent: NMF.Expressions.Linq.ExpressionExtensions
  definition: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<Binding<T, TMember>>(Binding<T, TMember>)
  nameWithType: ExpressionExtensions.AsOne<Binding<T, TMember>>(Binding<T, TMember>)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<NMF.Expressions.Binding<T, TMember>>(NMF.Expressions.Binding<T, TMember>)
  nameWithType.vb: ExpressionExtensions.AsOne(Of Binding(Of T, TMember))(Binding(Of T, TMember))
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of NMF.Expressions.Binding(Of T, TMember))(NMF.Expressions.Binding(Of T, TMember))
  name.vb: AsOne(Of Binding(Of T, TMember))(Binding(Of T, TMember))
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Binding{`0,`1})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - uid: NMF.Expressions.Binding`2
    name: Binding
    href: NMF.Expressions.Binding-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  - name: '>'
  - name: (
  - uid: NMF.Expressions.Binding`2
    name: Binding
    href: NMF.Expressions.Binding-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(NMF.Expressions.Binding{`0,`1})
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.Binding`2
    name: Binding
    href: NMF.Expressions.Binding-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
  - name: )
  - name: (
  - uid: NMF.Expressions.Binding`2
    name: Binding
    href: NMF.Expressions.Binding-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.IBinding`1
  commentId: T:NMF.Expressions.IBinding`1
  href: NMF.Expressions.IBinding-1.html
  name: IBinding<T>
  nameWithType: IBinding<T>
  fullName: NMF.Expressions.IBinding<T>
  nameWithType.vb: IBinding(Of T)
  fullName.vb: NMF.Expressions.IBinding(Of T)
  name.vb: IBinding(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IBinding`1
    name: IBinding
    href: NMF.Expressions.IBinding-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
  href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  name: AsOne<T>(T)
  nameWithType: ExpressionExtensions.AsOne<T>(T)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.AsOne<T>(T)
  nameWithType.vb: ExpressionExtensions.AsOne(Of T)(T)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.AsOne(Of T)(T)
  name.vb: AsOne(Of T)(T)
  spec.csharp:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.Linq.ExpressionExtensions.AsOne``1(``0)
    name: AsOne
    href: NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_AsOne__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: NMF.Expressions.Linq.ExpressionExtensions
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  parent: NMF.Expressions.Linq
  href: NMF.Expressions.Linq.ExpressionExtensions.html
  name: ExpressionExtensions
  nameWithType: ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
- uid: NMF.Expressions.Linq
  commentId: N:NMF.Expressions.Linq
  href: NMF.html
  name: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Expressions
    name: Expressions
    href: NMF.Expressions.html
  - name: .
  - uid: NMF.Expressions.Linq
    name: Linq
    href: NMF.Expressions.Linq.html
- uid: NMF.Expressions.Binding`2.#ctor*
  commentId: Overload:NMF.Expressions.Binding`2.#ctor
  href: NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2__ctor_NMF_Expressions_ObservingFunc__0__1__System_Action__0__1__
  name: Binding
  nameWithType: Binding<T, TMember>.Binding
  fullName: NMF.Expressions.Binding<T, TMember>.Binding
  nameWithType.vb: Binding(Of T, TMember).New
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).New
  name.vb: New
- uid: NMF.Expressions.ObservingFunc{{T},{TMember}}
  commentId: T:NMF.Expressions.ObservingFunc{`0,`1}
  parent: NMF.Expressions
  definition: NMF.Expressions.ObservingFunc`2
  href: NMF.Expressions.ObservingFunc-2.html
  name: ObservingFunc<T, TMember>
  nameWithType: ObservingFunc<T, TMember>
  fullName: NMF.Expressions.ObservingFunc<T, TMember>
  nameWithType.vb: ObservingFunc(Of T, TMember)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T, TMember)
  name.vb: ObservingFunc(Of T, TMember)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
    href: NMF.Expressions.ObservingFunc-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
    href: NMF.Expressions.ObservingFunc-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
- uid: System.Action{{T},{TMember}}
  commentId: T:System.Action{`0,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T, TMember>
  nameWithType: Action<T, TMember>
  fullName: System.Action<T, TMember>
  nameWithType.vb: Action(Of T, TMember)
  fullName.vb: System.Action(Of T, TMember)
  name.vb: Action(Of T, TMember)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TMember
  - name: )
- uid: NMF.Expressions.ObservingFunc`2
  commentId: T:NMF.Expressions.ObservingFunc`2
  parent: NMF.Expressions
  href: NMF.Expressions.ObservingFunc-2.html
  name: ObservingFunc<T1, TResult>
  nameWithType: ObservingFunc<T1, TResult>
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>
  nameWithType.vb: ObservingFunc(Of T1, TResult)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult)
  name.vb: ObservingFunc(Of T1, TResult)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
    href: NMF.Expressions.ObservingFunc-2.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
    href: NMF.Expressions.ObservingFunc-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: NMF.Expressions.Binding`2.Bind*
  commentId: Overload:NMF.Expressions.Binding`2.Bind
  href: NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2_Bind__0_
  name: Bind
  nameWithType: Binding<T, TMember>.Bind
  fullName: NMF.Expressions.Binding<T, TMember>.Bind
  nameWithType.vb: Binding(Of T, TMember).Bind
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Bind
- uid: NMF.Expressions.IBinding{{T}}.Bind({T})
  commentId: M:NMF.Expressions.IBinding{`0}.Bind(`0)
  parent: NMF.Expressions.IBinding{{T}}
  definition: NMF.Expressions.IBinding`1.Bind(`0)
  href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  name: Bind(T)
  nameWithType: IBinding<T>.Bind(T)
  fullName: NMF.Expressions.IBinding<T>.Bind(T)
  nameWithType.vb: IBinding(Of T).Bind(T)
  fullName.vb: NMF.Expressions.IBinding(Of T).Bind(T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding{`0}.Bind(`0)
    name: Bind
    href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.IBinding{`0}.Bind(`0)
    name: Bind
    href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NMF.Expressions.IBinding`1.Bind(`0)
  commentId: M:NMF.Expressions.IBinding`1.Bind(`0)
  href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  name: Bind(T)
  nameWithType: IBinding<T>.Bind(T)
  fullName: NMF.Expressions.IBinding<T>.Bind(T)
  nameWithType.vb: IBinding(Of T).Bind(T)
  fullName.vb: NMF.Expressions.IBinding(Of T).Bind(T)
  spec.csharp:
  - uid: NMF.Expressions.IBinding`1.Bind(`0)
    name: Bind
    href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Expressions.IBinding`1.Bind(`0)
    name: Bind
    href: NMF.Expressions.IBinding-1.html#NMF_Expressions_IBinding_1_Bind__0_
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
