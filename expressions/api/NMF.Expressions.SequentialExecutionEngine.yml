### YamlMime:ManagedReference
items:
- uid: NMF.Expressions.SequentialExecutionEngine
  commentId: T:NMF.Expressions.SequentialExecutionEngine
  id: SequentialExecutionEngine
  parent: NMF.Expressions
  children:
  - NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  langs:
  - csharp
  - vb
  name: SequentialExecutionEngine
  nameWithType: SequentialExecutionEngine
  fullName: NMF.Expressions.SequentialExecutionEngine
  type: Class
  source:
    remote:
      path: Expressions/Expressions/Execution/SequentialExecutionEngine.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SequentialExecutionEngine
    path: src/Expressions/Expressions/Execution/SequentialExecutionEngine.cs
    startLine: 8
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: 'public class SequentialExecutionEngine : ExecutionEngine'
    content.vb: >-
      Public Class SequentialExecutionEngine
          Inherits ExecutionEngine
  inheritance:
  - System.Object
  - NMF.Expressions.ExecutionEngine
  inheritedMembers:
  - NMF.Expressions.ExecutionEngine.TransactionActive
  - NMF.Expressions.ExecutionEngine.BeginTransaction
  - NMF.Expressions.ExecutionEngine.CommitTransaction
  - NMF.Expressions.ExecutionEngine.RollbackTransaction
  - NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  - NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  - NMF.Expressions.ExecutionEngine.Current
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  commentId: M:NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  id: Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  parent: NMF.Expressions.SequentialExecutionEngine
  langs:
  - csharp
  - vb
  name: Execute(List<INotifiable>)
  nameWithType: SequentialExecutionEngine.Execute(List<INotifiable>)
  fullName: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List<NMF.Expressions.INotifiable>)
  type: Method
  source:
    remote:
      path: Expressions/Expressions/Execution/SequentialExecutionEngine.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Execute
    path: src/Expressions/Expressions/Execution/SequentialExecutionEngine.cs
    startLine: 10
  assemblies:
  - NMF.Expressions
  namespace: NMF.Expressions
  syntax:
    content: protected override void Execute(List<INotifiable> nodes)
    parameters:
    - id: nodes
      type: System.Collections.Generic.List{NMF.Expressions.INotifiable}
    content.vb: Protected Overrides Sub Execute(nodes As List(Of INotifiable))
  overridden: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  overload: NMF.Expressions.SequentialExecutionEngine.Execute*
  nameWithType.vb: SequentialExecutionEngine.Execute(List(Of INotifiable))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List(Of NMF.Expressions.INotifiable))
  name.vb: Execute(List(Of INotifiable))
references:
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Expressions.ExecutionEngine
  commentId: T:NMF.Expressions.ExecutionEngine
  parent: NMF.Expressions
  name: ExecutionEngine
  nameWithType: ExecutionEngine
  fullName: NMF.Expressions.ExecutionEngine
- uid: NMF.Expressions.ExecutionEngine.TransactionActive
  commentId: P:NMF.Expressions.ExecutionEngine.TransactionActive
  parent: NMF.Expressions.ExecutionEngine
  name: TransactionActive
  nameWithType: ExecutionEngine.TransactionActive
  fullName: NMF.Expressions.ExecutionEngine.TransactionActive
- uid: NMF.Expressions.ExecutionEngine.BeginTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.BeginTransaction
  parent: NMF.Expressions.ExecutionEngine
  name: BeginTransaction()
  nameWithType: ExecutionEngine.BeginTransaction()
  fullName: NMF.Expressions.ExecutionEngine.BeginTransaction()
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.BeginTransaction
    name: BeginTransaction
    nameWithType: ExecutionEngine.BeginTransaction
    fullName: NMF.Expressions.ExecutionEngine.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.BeginTransaction
    name: BeginTransaction
    nameWithType: ExecutionEngine.BeginTransaction
    fullName: NMF.Expressions.ExecutionEngine.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExecutionEngine.CommitTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.CommitTransaction
  parent: NMF.Expressions.ExecutionEngine
  name: CommitTransaction()
  nameWithType: ExecutionEngine.CommitTransaction()
  fullName: NMF.Expressions.ExecutionEngine.CommitTransaction()
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.CommitTransaction
    name: CommitTransaction
    nameWithType: ExecutionEngine.CommitTransaction
    fullName: NMF.Expressions.ExecutionEngine.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.CommitTransaction
    name: CommitTransaction
    nameWithType: ExecutionEngine.CommitTransaction
    fullName: NMF.Expressions.ExecutionEngine.CommitTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExecutionEngine.RollbackTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.RollbackTransaction
  parent: NMF.Expressions.ExecutionEngine
  name: RollbackTransaction()
  nameWithType: ExecutionEngine.RollbackTransaction()
  fullName: NMF.Expressions.ExecutionEngine.RollbackTransaction()
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.RollbackTransaction
    name: RollbackTransaction
    nameWithType: ExecutionEngine.RollbackTransaction
    fullName: NMF.Expressions.ExecutionEngine.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.RollbackTransaction
    name: RollbackTransaction
    nameWithType: ExecutionEngine.RollbackTransaction
    fullName: NMF.Expressions.ExecutionEngine.RollbackTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.ExecutionEngine
  name: InvalidateNode(INotifiable)
  nameWithType: ExecutionEngine.InvalidateNode(INotifiable)
  fullName: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
    name: InvalidateNode
    nameWithType: ExecutionEngine.InvalidateNode
    fullName: NMF.Expressions.ExecutionEngine.InvalidateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
    name: InvalidateNode
    nameWithType: ExecutionEngine.InvalidateNode
    fullName: NMF.Expressions.ExecutionEngine.InvalidateNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.ExecutionEngine
  name: ExecuteSingle(INotifiable)
  nameWithType: ExecutionEngine.ExecuteSingle(INotifiable)
  fullName: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
    name: ExecuteSingle
    nameWithType: ExecutionEngine.ExecuteSingle
    fullName: NMF.Expressions.ExecutionEngine.ExecuteSingle
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
    name: ExecuteSingle
    nameWithType: ExecutionEngine.ExecuteSingle
    fullName: NMF.Expressions.ExecutionEngine.ExecuteSingle
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.ExecutionEngine.Current
  commentId: P:NMF.Expressions.ExecutionEngine.Current
  parent: NMF.Expressions.ExecutionEngine
  name: Current
  nameWithType: ExecutionEngine.Current
  fullName: NMF.Expressions.ExecutionEngine.Current
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  commentId: M:NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  parent: NMF.Expressions.ExecutionEngine
  isExternal: true
  name: Execute(List<INotifiable>)
  nameWithType: ExecutionEngine.Execute(List<INotifiable>)
  fullName: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List<NMF.Expressions.INotifiable>)
  nameWithType.vb: ExecutionEngine.Execute(List(Of INotifiable))
  fullName.vb: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List(Of NMF.Expressions.INotifiable))
  name.vb: Execute(List(Of INotifiable))
  spec.csharp:
  - uid: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
    name: Execute
    nameWithType: ExecutionEngine.Execute
    fullName: NMF.Expressions.ExecutionEngine.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
    name: Execute
    nameWithType: ExecutionEngine.Execute
    fullName: NMF.Expressions.ExecutionEngine.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.SequentialExecutionEngine.Execute*
  commentId: Overload:NMF.Expressions.SequentialExecutionEngine.Execute
  name: Execute
  nameWithType: SequentialExecutionEngine.Execute
  fullName: NMF.Expressions.SequentialExecutionEngine.Execute
- uid: System.Collections.Generic.List{NMF.Expressions.INotifiable}
  commentId: T:System.Collections.Generic.List{NMF.Expressions.INotifiable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<INotifiable>
  nameWithType: List<INotifiable>
  fullName: System.Collections.Generic.List<NMF.Expressions.INotifiable>
  nameWithType.vb: List(Of INotifiable)
  fullName.vb: System.Collections.Generic.List(Of NMF.Expressions.INotifiable)
  name.vb: List(Of INotifiable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
    nameWithType: INotifiable
    fullName: NMF.Expressions.INotifiable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
