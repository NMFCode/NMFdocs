### YamlMime:ManagedReference
items:
- uid: NMF.CodeGen
  commentId: N:NMF.CodeGen
  id: NMF.CodeGen
  children:
  - NMF.CodeGen.ClassGenerator`1
  - NMF.CodeGen.CodeDomHelper
  - NMF.CodeGen.EnumGenerator`1
  - NMF.CodeGen.EnumGenerator`1.EnumMember
  - NMF.CodeGen.EventGenerator`1
  - NMF.CodeGen.NamespaceGenerator`1
  langs:
  - csharp
  - vb
  name: NMF.CodeGen
  nameWithType: NMF.CodeGen
  fullName: NMF.CodeGen
  type: Namespace
  assemblies:
  - NMF.CodeGen
references:
- uid: NMF.CodeGen.ClassGenerator`1
  commentId: T:NMF.CodeGen.ClassGenerator`1
  name: ClassGenerator<T>
  nameWithType: ClassGenerator<T>
  fullName: NMF.CodeGen.ClassGenerator<T>
  nameWithType.vb: ClassGenerator(Of T)
  fullName.vb: NMF.CodeGen.ClassGenerator(Of T)
  name.vb: ClassGenerator(Of T)
  spec.csharp:
  - uid: NMF.CodeGen.ClassGenerator`1
    name: ClassGenerator
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.CodeGen.ClassGenerator`1
    name: ClassGenerator
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.CodeGen.CodeDomHelper
  commentId: T:NMF.CodeGen.CodeDomHelper
  name: CodeDomHelper
  nameWithType: CodeDomHelper
  fullName: NMF.CodeGen.CodeDomHelper
- uid: NMF.CodeGen.EnumGenerator`1
  commentId: T:NMF.CodeGen.EnumGenerator`1
  name: EnumGenerator<T>
  nameWithType: EnumGenerator<T>
  fullName: NMF.CodeGen.EnumGenerator<T>
  nameWithType.vb: EnumGenerator(Of T)
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T)
  name.vb: EnumGenerator(Of T)
  spec.csharp:
  - uid: NMF.CodeGen.EnumGenerator`1
    name: EnumGenerator
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.CodeGen.EnumGenerator`1
    name: EnumGenerator
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember
  commentId: T:NMF.CodeGen.EnumGenerator`1.EnumMember
  name: EnumGenerator<T>.EnumMember
  nameWithType: EnumGenerator<T>.EnumMember
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember
  nameWithType.vb: EnumGenerator(Of T).EnumMember
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember
  name.vb: EnumGenerator(Of T).EnumMember
  spec.csharp:
  - uid: NMF.CodeGen.EnumGenerator`1
    name: EnumGenerator
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: NMF.CodeGen.EnumGenerator`1.EnumMember
    name: EnumMember
  spec.vb:
  - uid: NMF.CodeGen.EnumGenerator`1
    name: EnumGenerator
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: NMF.CodeGen.EnumGenerator`1.EnumMember
    name: EnumMember
- uid: NMF.CodeGen.EventGenerator`1
  commentId: T:NMF.CodeGen.EventGenerator`1
  name: EventGenerator<T>
  nameWithType: EventGenerator<T>
  fullName: NMF.CodeGen.EventGenerator<T>
  nameWithType.vb: EventGenerator(Of T)
  fullName.vb: NMF.CodeGen.EventGenerator(Of T)
  name.vb: EventGenerator(Of T)
  spec.csharp:
  - uid: NMF.CodeGen.EventGenerator`1
    name: EventGenerator
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.CodeGen.EventGenerator`1
    name: EventGenerator
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.CodeGen.NamespaceGenerator`1
  commentId: T:NMF.CodeGen.NamespaceGenerator`1
  name: NamespaceGenerator<T>
  nameWithType: NamespaceGenerator<T>
  fullName: NMF.CodeGen.NamespaceGenerator<T>
  nameWithType.vb: NamespaceGenerator(Of T)
  fullName.vb: NMF.CodeGen.NamespaceGenerator(Of T)
  name.vb: NamespaceGenerator(Of T)
  spec.csharp:
  - uid: NMF.CodeGen.NamespaceGenerator`1
    name: NamespaceGenerator
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.CodeGen.NamespaceGenerator`1
    name: NamespaceGenerator
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
