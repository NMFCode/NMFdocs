### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Parallel.ParallelComputationContext
  commentId: T:NMF.Transformations.Parallel.ParallelComputationContext
  id: ParallelComputationContext
  parent: NMF.Transformations.Parallel
  children:
  - NMF.Transformations.Parallel.ParallelComputationContext.#ctor(NMF.Transformations.Core.ITransformationContext)
  - NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  langs:
  - csharp
  - vb
  name: ParallelComputationContext
  nameWithType: ParallelComputationContext
  fullName: NMF.Transformations.Parallel.ParallelComputationContext
  type: Class
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelComputationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ParallelComputationContext
    path: src/Transformations/Transformations.Parallel/ParallelComputationContext.cs
    startLine: 15
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nDenotes a context of a computation in a parallel transformation\n"
  example: []
  syntax:
    content: 'public class ParallelComputationContext : ComputationContext, IComputationContext'
    content.vb: >-
      Public Class ParallelComputationContext
          Inherits ComputationContext
          Implements IComputationContext
  inheritance:
  - System.Object
  - NMF.Transformations.Core.ComputationContext
  implements:
  - NMF.Transformations.Core.IComputationContext
  inheritedMembers:
  - NMF.Transformations.Core.ComputationContext.TransformationContext
  - NMF.Transformations.Core.ComputationContext.IsDelayed
  - NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  - NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  - NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  - NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  - NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  - NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Transformations.Parallel.ParallelComputationContext.#ctor(NMF.Transformations.Core.ITransformationContext)
  commentId: M:NMF.Transformations.Parallel.ParallelComputationContext.#ctor(NMF.Transformations.Core.ITransformationContext)
  id: '#ctor(NMF.Transformations.Core.ITransformationContext)'
  parent: NMF.Transformations.Parallel.ParallelComputationContext
  langs:
  - csharp
  - vb
  name: ParallelComputationContext(ITransformationContext)
  nameWithType: ParallelComputationContext.ParallelComputationContext(ITransformationContext)
  fullName: NMF.Transformations.Parallel.ParallelComputationContext.ParallelComputationContext(NMF.Transformations.Core.ITransformationContext)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelComputationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations.Parallel/ParallelComputationContext.cs
    startLine: 24
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nCreates a new parallel execution context\n"
  example: []
  syntax:
    content: public ParallelComputationContext(ITransformationContext context)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: ''
    content.vb: Public Sub New(context As ITransformationContext)
  overload: NMF.Transformations.Parallel.ParallelComputationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  commentId: M:NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  id: MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  parent: NMF.Transformations.Parallel.ParallelComputationContext
  langs:
  - csharp
  - vb
  name: MarkRequire(Computation, Boolean)
  nameWithType: ParallelComputationContext.MarkRequire(Computation, Boolean)
  fullName: NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelComputationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MarkRequire
    path: src/Transformations/Transformations.Parallel/ParallelComputationContext.cs
    startLine: 27
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nMark that this computation context requires another computation context to be done\n"
  example: []
  syntax:
    content: public override void MarkRequire(Computation other, bool isRequired)
    parameters:
    - id: other
      type: NMF.Transformations.Core.Computation
      description: The other computation context
    - id: isRequired
      type: System.Boolean
      description: True, if the other context is a strict requirement
    content.vb: Public Overrides Sub MarkRequire(other As Computation, isRequired As Boolean)
  overridden: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  overload: NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NMF.Transformations.Parallel
  commentId: N:NMF.Transformations.Parallel
  name: NMF.Transformations.Parallel
  nameWithType: NMF.Transformations.Parallel
  fullName: NMF.Transformations.Parallel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Transformations.Core.ComputationContext
  commentId: T:NMF.Transformations.Core.ComputationContext
  parent: NMF.Transformations.Core
  name: ComputationContext
  nameWithType: ComputationContext
  fullName: NMF.Transformations.Core.ComputationContext
- uid: NMF.Transformations.Core.IComputationContext
  commentId: T:NMF.Transformations.Core.IComputationContext
  parent: NMF.Transformations.Core
  name: IComputationContext
  nameWithType: IComputationContext
  fullName: NMF.Transformations.Core.IComputationContext
- uid: NMF.Transformations.Core.ComputationContext.TransformationContext
  commentId: P:NMF.Transformations.Core.ComputationContext.TransformationContext
  parent: NMF.Transformations.Core.ComputationContext
  name: TransformationContext
  nameWithType: ComputationContext.TransformationContext
  fullName: NMF.Transformations.Core.ComputationContext.TransformationContext
- uid: NMF.Transformations.Core.ComputationContext.IsDelayed
  commentId: P:NMF.Transformations.Core.ComputationContext.IsDelayed
  parent: NMF.Transformations.Core.ComputationContext
  name: IsDelayed
  nameWithType: ComputationContext.IsDelayed
  fullName: NMF.Transformations.Core.ComputationContext.IsDelayed
- uid: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  parent: NMF.Transformations.Core.ComputationContext
  isExternal: true
  name: DelayOutputAtLeast(Byte)
  nameWithType: ComputationContext.DelayOutputAtLeast(Byte)
  fullName: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: ComputationContext.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: ComputationContext.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  parent: NMF.Transformations.Core.ComputationContext
  isExternal: true
  name: DelayTransformationAtLeast(Byte)
  nameWithType: ComputationContext.DelayTransformationAtLeast(Byte)
  fullName: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: ComputationContext.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: ComputationContext.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  commentId: P:NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  parent: NMF.Transformations.Core.ComputationContext
  name: MinOutputDelayLevel
  nameWithType: ComputationContext.MinOutputDelayLevel
  fullName: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  commentId: P:NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  parent: NMF.Transformations.Core.ComputationContext
  name: MinTransformDelayLevel
  nameWithType: ComputationContext.MinTransformDelayLevel
  fullName: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  commentId: M:NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  parent: NMF.Transformations.Core.ComputationContext
  isExternal: true
  name: InitializeOutput(Object)
  nameWithType: ComputationContext.InitializeOutput(Object)
  fullName: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: ComputationContext.InitializeOutput
    fullName: NMF.Transformations.Core.ComputationContext.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: ComputationContext.InitializeOutput
    fullName: NMF.Transformations.Core.ComputationContext.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.ComputationContext
  name: ConnectWith(Computation)
  nameWithType: ComputationContext.ConnectWith(Computation)
  fullName: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
    name: ConnectWith
    nameWithType: ComputationContext.ConnectWith
    fullName: NMF.Transformations.Core.ComputationContext.ConnectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
    name: ConnectWith
    nameWithType: ComputationContext.ConnectWith
    fullName: NMF.Transformations.Core.ComputationContext.ConnectWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: NMF.Transformations.Parallel.ParallelComputationContext.#ctor*
  commentId: Overload:NMF.Transformations.Parallel.ParallelComputationContext.#ctor
  name: ParallelComputationContext
  nameWithType: ParallelComputationContext.ParallelComputationContext
  fullName: NMF.Transformations.Parallel.ParallelComputationContext.ParallelComputationContext
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  commentId: M:NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  parent: NMF.Transformations.Core.ComputationContext
  isExternal: true
  name: MarkRequire(Computation, Boolean)
  nameWithType: ComputationContext.MarkRequire(Computation, Boolean)
  fullName: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean)
  spec.csharp:
  - uid: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
    name: MarkRequire
    nameWithType: ComputationContext.MarkRequire
    fullName: NMF.Transformations.Core.ComputationContext.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
    name: MarkRequire
    nameWithType: ComputationContext.MarkRequire
    fullName: NMF.Transformations.Core.ComputationContext.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire*
  commentId: Overload:NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire
  name: MarkRequire
  nameWithType: ParallelComputationContext.MarkRequire
  fullName: NMF.Transformations.Parallel.ParallelComputationContext.MarkRequire
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
