### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Tests.MockComputation
  commentId: T:NMF.Transformations.Tests.MockComputation
  id: MockComputation
  parent: NMF.Transformations.Tests
  children:
  - NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)
  - NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object)
  - NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext)
  - NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext,System.Object)
  - NMF.Transformations.Tests.MockComputation.CreateOutput(System.Collections.IEnumerable)
  - NMF.Transformations.Tests.MockComputation.GetInput(System.Int32)
  - NMF.Transformations.Tests.MockComputation.OnCreateOutput
  - NMF.Transformations.Tests.MockComputation.OnTransform
  - NMF.Transformations.Tests.MockComputation.Output
  - NMF.Transformations.Tests.MockComputation.OutputCore
  - NMF.Transformations.Tests.MockComputation.Transform
  langs:
  - csharp
  - vb
  name: MockComputation
  nameWithType: MockComputation
  fullName: NMF.Transformations.Tests.MockComputation
  type: Class
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MockComputation
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 12
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nMocks a computation\n"
  example: []
  syntax:
    content: 'public class MockComputation : Computation, IPersistor, ITraceEntry'
    content.vb: >-
      Public Class MockComputation
          Inherits Computation
          Implements IPersistor, ITraceEntry
  inheritance:
  - System.Object
  - NMF.Transformations.Core.Computation
  implements:
  - NMF.Transformations.Core.IPersistor
  - NMF.Transformations.Core.ITraceEntry
  inheritedMembers:
  - NMF.Transformations.Core.Computation.TransformationRule
  - NMF.Transformations.Core.Computation.TransformationContext
  - NMF.Transformations.Core.Computation.Context
  - NMF.Transformations.Core.Computation.InputArguments
  - NMF.Transformations.Core.Computation.CreateInputArray
  - NMF.Transformations.Core.Computation.ThrowDelayedException
  - NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  - NMF.Transformations.Core.Computation.OutputInitialized
  - NMF.Transformations.Core.Computation.Computed
  - NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  - NMF.Transformations.Core.Computation.IsDelayed
  - NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  - NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  - NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Transformations.Tests.MockComputation.OnTransform
  commentId: P:NMF.Transformations.Tests.MockComputation.OnTransform
  id: OnTransform
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: OnTransform
  nameWithType: MockComputation.OnTransform
  fullName: NMF.Transformations.Tests.MockComputation.OnTransform
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnTransform
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 19
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nGets or sets an action that should be called when the computation is asked to perform its Transform task\n"
  example: []
  syntax:
    content: public Action OnTransform { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnTransform As Action
  overload: NMF.Transformations.Tests.MockComputation.OnTransform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Tests.MockComputation.OnCreateOutput
  commentId: P:NMF.Transformations.Tests.MockComputation.OnCreateOutput
  id: OnCreateOutput
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: OnCreateOutput
  nameWithType: MockComputation.OnCreateOutput
  fullName: NMF.Transformations.Tests.MockComputation.OnCreateOutput
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OnCreateOutput
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 24
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nGets or sets a function that should be called when the computation is asked to create its output\n"
  example: []
  syntax:
    content: public Func<object> OnCreateOutput { get; set; }
    parameters: []
    return:
      type: System.Func{System.Object}
    content.vb: Public Property OnCreateOutput As Func(Of Object)
  overload: NMF.Transformations.Tests.MockComputation.OnCreateOutput*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext,System.Object)
  commentId: M:NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext,System.Object)
  id: '#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext,System.Object)'
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: MockComputation(Object[], GeneralTransformationRule, ITransformationContext, Object)
  nameWithType: MockComputation.MockComputation(Object[], GeneralTransformationRule, ITransformationContext, Object)
  fullName: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object[], NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationContext, System.Object)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 33
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a new mocked computation\n"
  example: []
  syntax:
    content: public MockComputation(object[] input, GeneralTransformationRule rule, ITransformationContext context, object output)
    parameters:
    - id: input
      type: System.Object[]
      description: The input for the mocked computation
    - id: rule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule for the mocked computation
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    - id: output
      type: System.Object
      description: The output for the transformation
    content.vb: Public Sub New(input As Object(), rule As GeneralTransformationRule, context As ITransformationContext, output As Object)
  overload: NMF.Transformations.Tests.MockComputation.#ctor*
  nameWithType.vb: MockComputation.MockComputation(Object(), GeneralTransformationRule, ITransformationContext, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object(), NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationContext, System.Object)
  name.vb: MockComputation(Object(), GeneralTransformationRule, ITransformationContext, Object)
- uid: NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object)
  commentId: M:NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object)
  id: '#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object)'
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: MockComputation(Object[], GeneralTransformationRule, IComputationContext, Object)
  nameWithType: MockComputation.MockComputation(Object[], GeneralTransformationRule, IComputationContext, Object)
  fullName: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object[], NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext, System.Object)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 43
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a new mocked computation\n"
  example: []
  syntax:
    content: public MockComputation(object[] input, GeneralTransformationRule rule, IComputationContext context, object output)
    parameters:
    - id: input
      type: System.Object[]
      description: The input for the mocked computation
    - id: rule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule for the mocked computation
    - id: context
      type: NMF.Transformations.Core.IComputationContext
      description: The transformation context
    - id: output
      type: System.Object
      description: The output for the transformation
    content.vb: Public Sub New(input As Object(), rule As GeneralTransformationRule, context As IComputationContext, output As Object)
  overload: NMF.Transformations.Tests.MockComputation.#ctor*
  nameWithType.vb: MockComputation.MockComputation(Object(), GeneralTransformationRule, IComputationContext, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object(), NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext, System.Object)
  name.vb: MockComputation(Object(), GeneralTransformationRule, IComputationContext, Object)
- uid: NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext)
  commentId: M:NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext)
  id: '#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationContext)'
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: MockComputation(Object[], GeneralTransformationRule, ITransformationContext)
  nameWithType: MockComputation.MockComputation(Object[], GeneralTransformationRule, ITransformationContext)
  fullName: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object[], NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationContext)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 56
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a new mocked computation\n"
  example: []
  syntax:
    content: public MockComputation(object[] input, GeneralTransformationRule rule, ITransformationContext context)
    parameters:
    - id: input
      type: System.Object[]
      description: The input for the mocked computation
    - id: rule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule for the mocked computation
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    content.vb: Public Sub New(input As Object(), rule As GeneralTransformationRule, context As ITransformationContext)
  overload: NMF.Transformations.Tests.MockComputation.#ctor*
  nameWithType.vb: MockComputation.MockComputation(Object(), GeneralTransformationRule, ITransformationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object(), NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationContext)
  name.vb: MockComputation(Object(), GeneralTransformationRule, ITransformationContext)
- uid: NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)
  commentId: M:NMF.Transformations.Tests.MockComputation.#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)
  id: '#ctor(System.Object[],NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)'
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: MockComputation(Object[], GeneralTransformationRule, IComputationContext)
  nameWithType: MockComputation.MockComputation(Object[], GeneralTransformationRule, IComputationContext)
  fullName: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object[], NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 64
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a new mocked computation\n"
  example: []
  syntax:
    content: public MockComputation(object[] input, GeneralTransformationRule rule, IComputationContext context)
    parameters:
    - id: input
      type: System.Object[]
      description: The input for the mocked computation
    - id: rule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule for the mocked computation
    - id: context
      type: NMF.Transformations.Core.IComputationContext
      description: The transformation context
    content.vb: Public Sub New(input As Object(), rule As GeneralTransformationRule, context As IComputationContext)
  overload: NMF.Transformations.Tests.MockComputation.#ctor*
  nameWithType.vb: MockComputation.MockComputation(Object(), GeneralTransformationRule, IComputationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputation.MockComputation(System.Object(), NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext)
  name.vb: MockComputation(Object(), GeneralTransformationRule, IComputationContext)
- uid: NMF.Transformations.Tests.MockComputation.Transform
  commentId: M:NMF.Transformations.Tests.MockComputation.Transform
  id: Transform
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: Transform()
  nameWithType: MockComputation.Transform()
  fullName: NMF.Transformations.Tests.MockComputation.Transform()
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Transform
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 69
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nPerforms the Transform operation\n"
  example: []
  syntax:
    content: public override void Transform()
    content.vb: Public Overrides Sub Transform
  overridden: NMF.Transformations.Core.Computation.Transform
  overload: NMF.Transformations.Tests.MockComputation.Transform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Transformations.Tests.MockComputation.CreateOutput(System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Tests.MockComputation.CreateOutput(System.Collections.IEnumerable)
  id: CreateOutput(System.Collections.IEnumerable)
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: CreateOutput(IEnumerable)
  nameWithType: MockComputation.CreateOutput(IEnumerable)
  fullName: NMF.Transformations.Tests.MockComputation.CreateOutput(System.Collections.IEnumerable)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateOutput
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 78
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates the output for the given transformation\n"
  example: []
  syntax:
    content: public override object CreateOutput(IEnumerable context)
    parameters:
    - id: context
      type: System.Collections.IEnumerable
    return:
      type: System.Object
      description: The output
    content.vb: Public Overrides Function CreateOutput(context As IEnumerable) As Object
  overridden: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  overload: NMF.Transformations.Tests.MockComputation.CreateOutput*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Transformations.Tests.MockComputation.Output
  commentId: P:NMF.Transformations.Tests.MockComputation.Output
  id: Output
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: MockComputation.Output
  fullName: NMF.Transformations.Tests.MockComputation.Output
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Output
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 94
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nGets or sets the output of the MockComputation\n"
  remarks: Unlike the version of the Computation base class, this version ignores the output delay and thus does not throw an exception when accessed when the computation is delayed
  example: []
  syntax:
    content: public object Output { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Output As Object
  overload: NMF.Transformations.Tests.MockComputation.Output*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Tests.MockComputation.GetInput(System.Int32)
  commentId: M:NMF.Transformations.Tests.MockComputation.GetInput(System.Int32)
  id: GetInput(System.Int32)
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: GetInput(Int32)
  nameWithType: MockComputation.GetInput(Int32)
  fullName: NMF.Transformations.Tests.MockComputation.GetInput(System.Int32)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetInput
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 111
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nGets the input at the i-th position\n"
  example: []
  syntax:
    content: public override object GetInput(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the desired input parameter
    return:
      type: System.Object
      description: The input parameter with the i-th position
    content.vb: Public Overrides Function GetInput(index As Integer) As Object
  overridden: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  overload: NMF.Transformations.Tests.MockComputation.GetInput*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: NMF.Transformations.Tests.MockComputation.OutputCore
  commentId: P:NMF.Transformations.Tests.MockComputation.OutputCore
  id: OutputCore
  parent: NMF.Transformations.Tests.MockComputation
  langs:
  - csharp
  - vb
  name: OutputCore
  nameWithType: MockComputation.OutputCore
  fullName: NMF.Transformations.Tests.MockComputation.OutputCore
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OutputCore
    path: src/Transformations/Transformations/Tests/MockComputation.cs
    startLine: 119
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nGets or sets the output internal\n"
  example: []
  syntax:
    content: protected override object OutputCore { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected Overrides Property OutputCore As Object
  overridden: NMF.Transformations.Core.Computation.OutputCore
  overload: NMF.Transformations.Tests.MockComputation.OutputCore*
  modifiers.csharp:
  - protected
  - override
  - get
  - set
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: NMF.Transformations.Tests
  commentId: N:NMF.Transformations.Tests
  name: NMF.Transformations.Tests
  nameWithType: NMF.Transformations.Tests
  fullName: NMF.Transformations.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: NMF.Transformations.Core.IPersistor
  commentId: T:NMF.Transformations.Core.IPersistor
  parent: NMF.Transformations.Core
  name: IPersistor
  nameWithType: IPersistor
  fullName: NMF.Transformations.Core.IPersistor
- uid: NMF.Transformations.Core.ITraceEntry
  commentId: T:NMF.Transformations.Core.ITraceEntry
  parent: NMF.Transformations.Core
  name: ITraceEntry
  nameWithType: ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
- uid: NMF.Transformations.Core.Computation.TransformationRule
  commentId: P:NMF.Transformations.Core.Computation.TransformationRule
  parent: NMF.Transformations.Core.Computation
  name: TransformationRule
  nameWithType: Computation.TransformationRule
  fullName: NMF.Transformations.Core.Computation.TransformationRule
- uid: NMF.Transformations.Core.Computation.TransformationContext
  commentId: P:NMF.Transformations.Core.Computation.TransformationContext
  parent: NMF.Transformations.Core.Computation
  name: TransformationContext
  nameWithType: Computation.TransformationContext
  fullName: NMF.Transformations.Core.Computation.TransformationContext
- uid: NMF.Transformations.Core.Computation.Context
  commentId: P:NMF.Transformations.Core.Computation.Context
  parent: NMF.Transformations.Core.Computation
  name: Context
  nameWithType: Computation.Context
  fullName: NMF.Transformations.Core.Computation.Context
- uid: NMF.Transformations.Core.Computation.InputArguments
  commentId: P:NMF.Transformations.Core.Computation.InputArguments
  parent: NMF.Transformations.Core.Computation
  name: InputArguments
  nameWithType: Computation.InputArguments
  fullName: NMF.Transformations.Core.Computation.InputArguments
- uid: NMF.Transformations.Core.Computation.CreateInputArray
  commentId: M:NMF.Transformations.Core.Computation.CreateInputArray
  parent: NMF.Transformations.Core.Computation
  name: CreateInputArray()
  nameWithType: Computation.CreateInputArray()
  fullName: NMF.Transformations.Core.Computation.CreateInputArray()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
    nameWithType: Computation.CreateInputArray
    fullName: NMF.Transformations.Core.Computation.CreateInputArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
    nameWithType: Computation.CreateInputArray
    fullName: NMF.Transformations.Core.Computation.CreateInputArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.ThrowDelayedException
  commentId: M:NMF.Transformations.Core.Computation.ThrowDelayedException
  parent: NMF.Transformations.Core.Computation
  name: ThrowDelayedException()
  nameWithType: Computation.ThrowDelayedException()
  fullName: NMF.Transformations.Core.Computation.ThrowDelayedException()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
    nameWithType: Computation.ThrowDelayedException
    fullName: NMF.Transformations.Core.Computation.ThrowDelayedException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
    nameWithType: Computation.ThrowDelayedException
    fullName: NMF.Transformations.Core.Computation.ThrowDelayedException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  commentId: M:NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  nameWithType: Computation.MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  fullName: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean, NMF.Transformations.Core.ITransformationRuleDependency)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
    nameWithType: Computation.MarkRequire
    fullName: NMF.Transformations.Core.Computation.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
    nameWithType: ITransformationRuleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
    nameWithType: Computation.MarkRequire
    fullName: NMF.Transformations.Core.Computation.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
    nameWithType: ITransformationRuleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.OutputInitialized
  commentId: E:NMF.Transformations.Core.Computation.OutputInitialized
  parent: NMF.Transformations.Core.Computation
  name: OutputInitialized
  nameWithType: Computation.OutputInitialized
  fullName: NMF.Transformations.Core.Computation.OutputInitialized
- uid: NMF.Transformations.Core.Computation.Computed
  commentId: E:NMF.Transformations.Core.Computation.Computed
  parent: NMF.Transformations.Core.Computation
  name: Computed
  nameWithType: Computation.Computed
  fullName: NMF.Transformations.Core.Computation.Computed
- uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: DelayOutputAtLeast(Byte)
  nameWithType: Computation.DelayOutputAtLeast(Byte)
  fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: Computation.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: Computation.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: DelayTransformationAtLeast(Byte)
  nameWithType: Computation.DelayTransformationAtLeast(Byte)
  fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: Computation.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: Computation.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: OnOutputInitialized(EventArgs)
  nameWithType: Computation.OnOutputInitialized(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
    nameWithType: Computation.OnOutputInitialized
    fullName: NMF.Transformations.Core.Computation.OnOutputInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
    nameWithType: Computation.OnOutputInitialized
    fullName: NMF.Transformations.Core.Computation.OnOutputInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.IsDelayed
  commentId: P:NMF.Transformations.Core.Computation.IsDelayed
  parent: NMF.Transformations.Core.Computation
  name: IsDelayed
  nameWithType: Computation.IsDelayed
  fullName: NMF.Transformations.Core.Computation.IsDelayed
- uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: OnComputed(EventArgs)
  nameWithType: Computation.OnComputed(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
    nameWithType: Computation.OnComputed
    fullName: NMF.Transformations.Core.Computation.OnComputed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
    nameWithType: Computation.OnComputed
    fullName: NMF.Transformations.Core.Computation.OnComputed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  commentId: M:NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: InitializeOutput(Object)
  nameWithType: Computation.InitializeOutput(Object)
  fullName: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: Computation.InitializeOutput
    fullName: NMF.Transformations.Core.Computation.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: Computation.InitializeOutput
    fullName: NMF.Transformations.Core.Computation.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.Computation
  name: SetBaseComputation(Computation)
  nameWithType: Computation.SetBaseComputation(Computation)
  fullName: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
    nameWithType: Computation.SetBaseComputation
    fullName: NMF.Transformations.Core.Computation.SetBaseComputation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
    nameWithType: Computation.SetBaseComputation
    fullName: NMF.Transformations.Core.Computation.SetBaseComputation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  commentId: M:NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: IPersistor.Persist(Object)
  nameWithType: Computation.IPersistor.Persist(Object)
  fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist(System.Object)
  nameWithType.vb: Computation.NMF.Transformations.Core.IPersistor.Persist(Object)
  name.vb: NMF.Transformations.Core.IPersistor.Persist(Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
    name: IPersistor.Persist
    nameWithType: Computation.IPersistor.Persist
    fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
    name: NMF.Transformations.Core.IPersistor.Persist
    nameWithType: Computation.NMF.Transformations.Core.IPersistor.Persist
    fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: NMF.Transformations.Tests.MockComputation.OnTransform*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.OnTransform
  name: OnTransform
  nameWithType: MockComputation.OnTransform
  fullName: NMF.Transformations.Tests.MockComputation.OnTransform
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: NMF.Transformations.Tests.MockComputation.OnCreateOutput*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.OnCreateOutput
  name: OnCreateOutput
  nameWithType: MockComputation.OnCreateOutput
  fullName: NMF.Transformations.Tests.MockComputation.OnCreateOutput
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  nameWithType.vb: Func(Of Object)
  fullName.vb: System.Func(Of System.Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Tests.MockComputation.#ctor*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.#ctor
  name: MockComputation
  nameWithType: MockComputation.MockComputation
  fullName: NMF.Transformations.Tests.MockComputation.MockComputation
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NMF.Transformations.Core.GeneralTransformationRule
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  parent: NMF.Transformations.Core
  name: GeneralTransformationRule
  nameWithType: GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Transformations.Core.IComputationContext
  commentId: T:NMF.Transformations.Core.IComputationContext
  parent: NMF.Transformations.Core
  name: IComputationContext
  nameWithType: IComputationContext
  fullName: NMF.Transformations.Core.IComputationContext
- uid: NMF.Transformations.Core.Computation.Transform
  commentId: M:NMF.Transformations.Core.Computation.Transform
  parent: NMF.Transformations.Core.Computation
  name: Transform()
  nameWithType: Computation.Transform()
  fullName: NMF.Transformations.Core.Computation.Transform()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
    nameWithType: Computation.Transform
    fullName: NMF.Transformations.Core.Computation.Transform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
    nameWithType: Computation.Transform
    fullName: NMF.Transformations.Core.Computation.Transform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Tests.MockComputation.Transform*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.Transform
  name: Transform
  nameWithType: MockComputation.Transform
  fullName: NMF.Transformations.Tests.MockComputation.Transform
- uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: CreateOutput(IEnumerable)
  nameWithType: Computation.CreateOutput(IEnumerable)
  fullName: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
    nameWithType: Computation.CreateOutput
    fullName: NMF.Transformations.Core.Computation.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
    nameWithType: Computation.CreateOutput
    fullName: NMF.Transformations.Core.Computation.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Tests.MockComputation.CreateOutput*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.CreateOutput
  name: CreateOutput
  nameWithType: MockComputation.CreateOutput
  fullName: NMF.Transformations.Tests.MockComputation.CreateOutput
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: NMF.Transformations.Tests.MockComputation.Output*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.Output
  name: Output
  nameWithType: MockComputation.Output
  fullName: NMF.Transformations.Tests.MockComputation.Output
- uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  commentId: M:NMF.Transformations.Core.Computation.GetInput(System.Int32)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: GetInput(Int32)
  nameWithType: Computation.GetInput(Int32)
  fullName: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
    nameWithType: Computation.GetInput
    fullName: NMF.Transformations.Core.Computation.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
    nameWithType: Computation.GetInput
    fullName: NMF.Transformations.Core.Computation.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Tests.MockComputation.GetInput*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.GetInput
  name: GetInput
  nameWithType: MockComputation.GetInput
  fullName: NMF.Transformations.Tests.MockComputation.GetInput
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Transformations.Core.Computation.OutputCore
  commentId: P:NMF.Transformations.Core.Computation.OutputCore
  parent: NMF.Transformations.Core.Computation
  name: OutputCore
  nameWithType: Computation.OutputCore
  fullName: NMF.Transformations.Core.Computation.OutputCore
- uid: NMF.Transformations.Tests.MockComputation.OutputCore*
  commentId: Overload:NMF.Transformations.Tests.MockComputation.OutputCore
  name: OutputCore
  nameWithType: MockComputation.OutputCore
  fullName: NMF.Transformations.Tests.MockComputation.OutputCore
