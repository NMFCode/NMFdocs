### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Tests.MockContext
  commentId: T:NMF.Transformations.Tests.MockContext
  id: MockContext
  parent: NMF.Transformations.Tests
  children:
  - NMF.Transformations.Tests.MockContext.#ctor(NMF.Transformations.Core.Transformation)
  - NMF.Transformations.Tests.MockContext.Bag
  - NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  - NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  - NMF.Transformations.Tests.MockContext.CallTransformation``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  - NMF.Transformations.Tests.MockContext.CallTransformation``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  - NMF.Transformations.Tests.MockContext.ComputationCompleted
  - NMF.Transformations.Tests.MockContext.Computations
  - NMF.Transformations.Tests.MockContext.Data
  - NMF.Transformations.Tests.MockContext.ExecuteDependencies(NMF.Transformations.Core.Computation,System.Boolean)
  - NMF.Transformations.Tests.MockContext.Input
  - NMF.Transformations.Tests.MockContext.Inputs
  - NMF.Transformations.Tests.MockContext.IsThreadSafe
  - NMF.Transformations.Tests.MockContext.Output
  - NMF.Transformations.Tests.MockContext.Outputs
  - NMF.Transformations.Tests.MockContext.RegisterComputationDependency(NMF.Transformations.Core.Computation,NMF.Transformations.Core.Computation,System.Boolean)
  - NMF.Transformations.Tests.MockContext.Trace
  - NMF.Transformations.Tests.MockContext.Transformation
  langs:
  - csharp
  - vb
  name: MockContext
  nameWithType: MockContext
  fullName: NMF.Transformations.Tests.MockContext
  type: Class
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MockContext
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 14
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Represents a mock for the transformation context that does not execute any dependencies
  example: []
  syntax:
    content: 'public class MockContext : ITransformationContext'
    content.vb: Public Class MockContext Implements ITransformationContext
  inheritance:
  - System.Object
  implements:
  - NMF.Transformations.Core.ITransformationContext
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Transformations.Core.ITransformationContext.NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  - NMF.Transformations.Core.ITransformationContext.NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(System.Object,System.Func{{TValue}})
- uid: NMF.Transformations.Tests.MockContext.#ctor(NMF.Transformations.Core.Transformation)
  commentId: M:NMF.Transformations.Tests.MockContext.#ctor(NMF.Transformations.Core.Transformation)
  id: '#ctor(NMF.Transformations.Core.Transformation)'
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: MockContext(Transformation)
  nameWithType: MockContext.MockContext(Transformation)
  fullName: NMF.Transformations.Tests.MockContext.MockContext(NMF.Transformations.Core.Transformation)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 21
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Creates a new MockContext for the given transformation
  example: []
  syntax:
    content: public MockContext(Transformation transformation)
    parameters:
    - id: transformation
      type: NMF.Transformations.Core.Transformation
      description: The transformation for which the mock context should be created
    content.vb: Public Sub New(transformation As Transformation)
  overload: NMF.Transformations.Tests.MockContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: An ArgumentNullException is thrown whenever the transformation parameter is passed a null reference.
  nameWithType.vb: MockContext.New(Transformation)
  fullName.vb: NMF.Transformations.Tests.MockContext.New(NMF.Transformations.Core.Transformation)
  name.vb: New(Transformation)
- uid: NMF.Transformations.Tests.MockContext.Bag
  commentId: P:NMF.Transformations.Tests.MockContext.Bag
  id: Bag
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Bag
  nameWithType: MockContext.Bag
  fullName: NMF.Transformations.Tests.MockContext.Bag
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Bag
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 44
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets a Bag, where dynamic data can be added
  remarks: The value of this property is an ExpandoObject, so that the bag can be easily extended with new properties
  example: []
  syntax:
    content: public dynamic Bag { get; }
    parameters: []
    return:
      type: dynamic
    content.vb: Public ReadOnly Property Bag As Object
  overload: NMF.Transformations.Tests.MockContext.Bag*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Bag
- uid: NMF.Transformations.Tests.MockContext.Data
  commentId: P:NMF.Transformations.Tests.MockContext.Data
  id: Data
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: MockContext.Data
  fullName: NMF.Transformations.Tests.MockContext.Data
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Data
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 52
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets a data dictionary, where data set during the transformation can be added
  example: []
  syntax:
    content: public IDictionary<object, object> Data { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    content.vb: Public ReadOnly Property Data As IDictionary(Of Object, Object)
  overload: NMF.Transformations.Tests.MockContext.Data*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Data
- uid: NMF.Transformations.Tests.MockContext.Transformation
  commentId: P:NMF.Transformations.Tests.MockContext.Transformation
  id: Transformation
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Transformation
  nameWithType: MockContext.Transformation
  fullName: NMF.Transformations.Tests.MockContext.Transformation
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Transformation
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 60
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets the parent transformation, that the context is based upon
  example: []
  syntax:
    content: public Transformation Transformation { get; }
    parameters: []
    return:
      type: NMF.Transformations.Core.Transformation
    content.vb: Public ReadOnly Property Transformation As Transformation
  overload: NMF.Transformations.Tests.MockContext.Transformation*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Transformation
- uid: NMF.Transformations.Tests.MockContext.Computations
  commentId: P:NMF.Transformations.Tests.MockContext.Computations
  id: Computations
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Computations
  nameWithType: MockContext.Computations
  fullName: NMF.Transformations.Tests.MockContext.Computations
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Computations
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 68
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets all computations (for custom trace purposes)
  example: []
  syntax:
    content: public MockComputationCollection Computations { get; }
    parameters: []
    return:
      type: NMF.Transformations.Tests.MockComputationCollection
    content.vb: Public ReadOnly Property Computations As MockComputationCollection
  overload: NMF.Transformations.Tests.MockContext.Computations*
- uid: NMF.Transformations.Tests.MockContext.ExecuteDependencies(NMF.Transformations.Core.Computation,System.Boolean)
  commentId: M:NMF.Transformations.Tests.MockContext.ExecuteDependencies(NMF.Transformations.Core.Computation,System.Boolean)
  id: ExecuteDependencies(NMF.Transformations.Core.Computation,System.Boolean)
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: ExecuteDependencies(Computation, bool)
  nameWithType: MockContext.ExecuteDependencies(Computation, bool)
  fullName: NMF.Transformations.Tests.MockContext.ExecuteDependencies(NMF.Transformations.Core.Computation, bool)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ExecuteDependencies
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 86
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Executes the dependencies of the given computation
  example: []
  syntax:
    content: public virtual void ExecuteDependencies(Computation computation, bool before)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
      description: The computation whose dependencies should be executed
    - id: before
      type: System.Boolean
      description: A value indicating whether the dependencies before the computation or the dependencies after the computation should be executed
    content.vb: Public Overridable Sub ExecuteDependencies(computation As Computation, before As Boolean)
  overload: NMF.Transformations.Tests.MockContext.ExecuteDependencies*
  nameWithType.vb: MockContext.ExecuteDependencies(Computation, Boolean)
  fullName.vb: NMF.Transformations.Tests.MockContext.ExecuteDependencies(NMF.Transformations.Core.Computation, Boolean)
  name.vb: ExecuteDependencies(Computation, Boolean)
- uid: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  id: CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: CallTransformation(GeneralTransformationRule, object[])
  nameWithType: MockContext.CallTransformation(GeneralTransformationRule, object[])
  fullName: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, object[])
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CallTransformation
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 101
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Calls the given transformation with the specified input
  example: []
  syntax:
    content: public Computation CallTransformation(GeneralTransformationRule transformationRule, object[] input)
    parameters:
    - id: transformationRule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The rule that should be applied
    - id: input
      type: System.Object[]
      description: The input for the transformation rule
    return:
      type: NMF.Transformations.Core.Computation
      description: The computation that handles this request
    content.vb: Public Function CallTransformation(transformationRule As GeneralTransformationRule, input As Object()) As Computation
  overload: NMF.Transformations.Tests.MockContext.CallTransformation*
  nameWithType.vb: MockContext.CallTransformation(GeneralTransformationRule, Object())
  fullName.vb: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, Object())
  name.vb: CallTransformation(GeneralTransformationRule, Object())
- uid: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  id: CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  nameWithType: MockContext.CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  fullName: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, object[], System.Collections.IEnumerable)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CallTransformation
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 113
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Calls the given transformation with the specified input
  example: []
  syntax:
    content: public virtual Computation CallTransformation(GeneralTransformationRule transformationRule, object[] input, IEnumerable context)
    parameters:
    - id: transformationRule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The rule that should be applied
    - id: input
      type: System.Object[]
      description: The input for the transformation rule
    - id: context
      type: System.Collections.IEnumerable
      description: The context elements
    return:
      type: NMF.Transformations.Core.Computation
      description: The computation that handles this request
    content.vb: Public Overridable Function CallTransformation(transformationRule As GeneralTransformationRule, input As Object(), context As IEnumerable) As Computation
  overload: NMF.Transformations.Tests.MockContext.CallTransformation*
  implements:
  - NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  nameWithType.vb: MockContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName.vb: NMF.Transformations.Tests.MockContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, Object(), System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
- uid: NMF.Transformations.Tests.MockContext.CallTransformation``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  commentId: M:NMF.Transformations.Tests.MockContext.CallTransformation``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  id: CallTransformation``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: CallTransformation<TIn>(GeneralTransformationRule<TIn>, TIn)
  nameWithType: MockContext.CallTransformation<TIn>(GeneralTransformationRule<TIn>, TIn)
  fullName: NMF.Transformations.Tests.MockContext.CallTransformation<TIn>(NMF.Transformations.GeneralTransformationRule<TIn>, TIn)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CallTransformation
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 133
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Calls the given transformation with the specified input
  example: []
  syntax:
    content: 'public Computation CallTransformation<TIn>(GeneralTransformationRule<TIn> transformationRule, TIn input) where TIn : class'
    parameters:
    - id: transformationRule
      type: NMF.Transformations.GeneralTransformationRule{{TIn}}
      description: The rule that should be applied
    - id: input
      type: '{TIn}'
      description: The input for the transformation rule
    typeParameters:
    - id: TIn
      description: The type of the first input parameter
    return:
      type: NMF.Transformations.Core.Computation
      description: The computation that handles this request
    content.vb: Public Function CallTransformation(Of TIn As Class)(transformationRule As GeneralTransformationRule(Of TIn), input As TIn) As Computation
  overload: NMF.Transformations.Tests.MockContext.CallTransformation*
  nameWithType.vb: MockContext.CallTransformation(Of TIn)(GeneralTransformationRule(Of TIn), TIn)
  fullName.vb: NMF.Transformations.Tests.MockContext.CallTransformation(Of TIn)(NMF.Transformations.GeneralTransformationRule(Of TIn), TIn)
  name.vb: CallTransformation(Of TIn)(GeneralTransformationRule(Of TIn), TIn)
- uid: NMF.Transformations.Tests.MockContext.CallTransformation``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  commentId: M:NMF.Transformations.Tests.MockContext.CallTransformation``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  id: CallTransformation``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: CallTransformation<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  nameWithType: MockContext.CallTransformation<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  fullName: NMF.Transformations.Tests.MockContext.CallTransformation<TIn1, TIn2>(NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CallTransformation
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 148
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Calls the given transformation with the specified input
  example: []
  syntax:
    content: 'public Computation CallTransformation<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2> transformationRule, TIn1 input1, TIn2 input2) where TIn1 : class where TIn2 : class'
    parameters:
    - id: transformationRule
      type: NMF.Transformations.GeneralTransformationRule{{TIn1},{TIn2}}
      description: The rule that should be applied
    - id: input1
      type: '{TIn1}'
      description: The first input for the transformation rule
    - id: input2
      type: '{TIn2}'
      description: The second input for the transformation rule
    typeParameters:
    - id: TIn1
      description: The type of the first input parameter
    - id: TIn2
      description: The type of the second input parameter
    return:
      type: NMF.Transformations.Core.Computation
      description: The computation that handles this request
    content.vb: Public Function CallTransformation(Of TIn1 As Class, TIn2 As Class)(transformationRule As GeneralTransformationRule(Of TIn1, TIn2), input1 As TIn1, input2 As TIn2) As Computation
  overload: NMF.Transformations.Tests.MockContext.CallTransformation*
  nameWithType.vb: MockContext.CallTransformation(Of TIn1, TIn2)(GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
  fullName.vb: NMF.Transformations.Tests.MockContext.CallTransformation(Of TIn1, TIn2)(NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
  name.vb: CallTransformation(Of TIn1, TIn2)(GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
- uid: NMF.Transformations.Tests.MockContext.Trace
  commentId: P:NMF.Transformations.Tests.MockContext.Trace
  id: Trace
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Trace
  nameWithType: MockContext.Trace
  fullName: NMF.Transformations.Tests.MockContext.Trace
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Trace
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 158
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets the object responsible for trace operations for this transformation context
  example: []
  syntax:
    content: public ITransformationTrace Trace { get; }
    parameters: []
    return:
      type: NMF.Transformations.Core.ITransformationTrace
    content.vb: Public ReadOnly Property Trace As ITransformationTrace
  overload: NMF.Transformations.Tests.MockContext.Trace*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Trace
- uid: NMF.Transformations.Tests.MockContext.Input
  commentId: P:NMF.Transformations.Tests.MockContext.Input
  id: Input
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: MockContext.Input
  fullName: NMF.Transformations.Tests.MockContext.Input
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Input
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 167
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets the input of the transformation context
  remarks: If the transformation has multiple inputs, this returns the first input
  example: []
  syntax:
    content: public object[] Input { get; set; }
    parameters: []
    return:
      type: System.Object[]
    content.vb: Public Property Input As Object()
  overload: NMF.Transformations.Tests.MockContext.Input*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Input
- uid: NMF.Transformations.Tests.MockContext.Inputs
  commentId: P:NMF.Transformations.Tests.MockContext.Inputs
  id: Inputs
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Inputs
  nameWithType: MockContext.Inputs
  fullName: NMF.Transformations.Tests.MockContext.Inputs
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Inputs
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 180
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets a collection of inputs
  example: []
  syntax:
    content: public IList<object[]> Inputs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Object[]}
    content.vb: Public ReadOnly Property Inputs As IList(Of Object())
  overload: NMF.Transformations.Tests.MockContext.Inputs*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Inputs
- uid: NMF.Transformations.Tests.MockContext.Output
  commentId: P:NMF.Transformations.Tests.MockContext.Output
  id: Output
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: MockContext.Output
  fullName: NMF.Transformations.Tests.MockContext.Output
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Output
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 189
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets the output of the transformation context
  remarks: If the transformation has multiple outputs, this property returns the first output
  example: []
  syntax:
    content: public object Output { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Output As Object
  overload: NMF.Transformations.Tests.MockContext.Output*
- uid: NMF.Transformations.Tests.MockContext.Outputs
  commentId: P:NMF.Transformations.Tests.MockContext.Outputs
  id: Outputs
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: Outputs
  nameWithType: MockContext.Outputs
  fullName: NMF.Transformations.Tests.MockContext.Outputs
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Outputs
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 197
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets a collection of outputs
  example: []
  syntax:
    content: public IList<object> Outputs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Object}
    content.vb: Public ReadOnly Property Outputs As IList(Of Object)
  overload: NMF.Transformations.Tests.MockContext.Outputs*
  implements:
  - NMF.Transformations.Core.ITransformationContext.Outputs
- uid: NMF.Transformations.Tests.MockContext.ComputationCompleted
  commentId: E:NMF.Transformations.Tests.MockContext.ComputationCompleted
  id: ComputationCompleted
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: ComputationCompleted
  nameWithType: MockContext.ComputationCompleted
  fullName: NMF.Transformations.Tests.MockContext.ComputationCompleted
  type: Event
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ComputationCompleted
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 204
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Gets fired when a computation is done
  example: []
  syntax:
    content: public event EventHandler<ComputationEventArgs> ComputationCompleted
    return:
      type: System.EventHandler{NMF.Transformations.Core.ComputationEventArgs}
    content.vb: Public Event ComputationCompleted As EventHandler(Of ComputationEventArgs)
  implements:
  - NMF.Transformations.Core.ITransformationContext.ComputationCompleted
- uid: NMF.Transformations.Tests.MockContext.RegisterComputationDependency(NMF.Transformations.Core.Computation,NMF.Transformations.Core.Computation,System.Boolean)
  commentId: M:NMF.Transformations.Tests.MockContext.RegisterComputationDependency(NMF.Transformations.Core.Computation,NMF.Transformations.Core.Computation,System.Boolean)
  id: RegisterComputationDependency(NMF.Transformations.Core.Computation,NMF.Transformations.Core.Computation,System.Boolean)
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: RegisterComputationDependency(Computation, Computation, bool)
  nameWithType: MockContext.RegisterComputationDependency(Computation, Computation, bool)
  fullName: NMF.Transformations.Tests.MockContext.RegisterComputationDependency(NMF.Transformations.Core.Computation, NMF.Transformations.Core.Computation, bool)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RegisterComputationDependency
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 218
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  example: []
  syntax:
    content: public void RegisterComputationDependency(Computation computation, Computation dependency, bool isRequired)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
    - id: dependency
      type: NMF.Transformations.Core.Computation
    - id: isRequired
      type: System.Boolean
    content.vb: Public Sub RegisterComputationDependency(computation As Computation, dependency As Computation, isRequired As Boolean)
  overload: NMF.Transformations.Tests.MockContext.RegisterComputationDependency*
  nameWithType.vb: MockContext.RegisterComputationDependency(Computation, Computation, Boolean)
  fullName.vb: NMF.Transformations.Tests.MockContext.RegisterComputationDependency(NMF.Transformations.Core.Computation, NMF.Transformations.Core.Computation, Boolean)
  name.vb: RegisterComputationDependency(Computation, Computation, Boolean)
- uid: NMF.Transformations.Tests.MockContext.IsThreadSafe
  commentId: P:NMF.Transformations.Tests.MockContext.IsThreadSafe
  id: IsThreadSafe
  parent: NMF.Transformations.Tests.MockContext
  langs:
  - csharp
  - vb
  name: IsThreadSafe
  nameWithType: MockContext.IsThreadSafe
  fullName: NMF.Transformations.Tests.MockContext.IsThreadSafe
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Tests/MockTransformationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsThreadSafe
    path: src/Transformations/Transformations/Tests/MockTransformationContext.cs
    startLine: 224
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: Indicates whether the transformation context is thread-safe
  example: []
  syntax:
    content: public bool IsThreadSafe { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsThreadSafe As Boolean
  overload: NMF.Transformations.Tests.MockContext.IsThreadSafe*
  implements:
  - NMF.Transformations.Core.ITransformationContext.IsThreadSafe
references:
- uid: NMF.Transformations.Tests
  commentId: N:NMF.Transformations.Tests
  href: NMF.html
  name: NMF.Transformations.Tests
  nameWithType: NMF.Transformations.Tests
  fullName: NMF.Transformations.Tests
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Tests
    name: Tests
    href: NMF.Transformations.Tests.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Tests
    name: Tests
    href: NMF.Transformations.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationContext.html
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  parent: NMF.Transformations.Core.TransformationContextExtensions
  definition: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  name: CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  nameWithType: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, params object[])
  nameWithType.vb: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  fullName.vb: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, ParamArray Object())
  name.vb: CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
    href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
    href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(System.Object,System.Func{{TValue}})
  commentId: M:NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  parent: NMF.Transformations.TraceExtensions
  definition: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  name: GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  nameWithType: TraceExtensions.GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem<TValue>(NMF.Transformations.Core.ITransformationContext, object, System.Func<TValue>)
  nameWithType.vb: TraceExtensions.GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  fullName.vb: NMF.Transformations.TraceExtensions.GetOrCreateUserItem(Of TValue)(NMF.Transformations.Core.ITransformationContext, Object, System.Func(Of TValue))
  name.vb: GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  spec.csharp:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
    href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
    href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  href: NMF.html
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
- uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  isExternal: true
  href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  name: CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  nameWithType: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, params object[])
  nameWithType.vb: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  fullName.vb: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, ParamArray Object())
  name.vb: CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
    href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
    href: NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: NMF.Transformations.Core.TransformationContextExtensions
  commentId: T:NMF.Transformations.Core.TransformationContextExtensions
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.TransformationContextExtensions.html
  name: TransformationContextExtensions
  nameWithType: TransformationContextExtensions
  fullName: NMF.Transformations.Core.TransformationContextExtensions
- uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  commentId: M:NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  isExternal: true
  href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  name: GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  nameWithType: TraceExtensions.GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem<TValue>(NMF.Transformations.Core.ITransformationContext, object, System.Func<TValue>)
  nameWithType.vb: TraceExtensions.GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  fullName.vb: NMF.Transformations.TraceExtensions.GetOrCreateUserItem(Of TValue)(NMF.Transformations.Core.ITransformationContext, Object, System.Func(Of TValue))
  name.vb: GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  spec.csharp:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
    href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
    href: NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: NMF.Transformations.TraceExtensions
  commentId: T:NMF.Transformations.TraceExtensions
  parent: NMF.Transformations
  href: NMF.Transformations.TraceExtensions.html
  name: TraceExtensions
  nameWithType: TraceExtensions
  fullName: NMF.Transformations.TraceExtensions
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  href: NMF.html
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: NMF.Transformations.Tests.MockContext.#ctor*
  commentId: Overload:NMF.Transformations.Tests.MockContext.#ctor
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext__ctor_NMF_Transformations_Core_Transformation_
  name: MockContext
  nameWithType: MockContext.MockContext
  fullName: NMF.Transformations.Tests.MockContext.MockContext
  nameWithType.vb: MockContext.New
  fullName.vb: NMF.Transformations.Tests.MockContext.New
  name.vb: New
- uid: NMF.Transformations.Core.Transformation
  commentId: T:NMF.Transformations.Core.Transformation
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.Transformation.html
  name: Transformation
  nameWithType: Transformation
  fullName: NMF.Transformations.Core.Transformation
- uid: NMF.Transformations.Tests.MockContext.Bag*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Bag
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Bag
  name: Bag
  nameWithType: MockContext.Bag
  fullName: NMF.Transformations.Tests.MockContext.Bag
- uid: NMF.Transformations.Core.ITransformationContext.Bag
  commentId: P:NMF.Transformations.Core.ITransformationContext.Bag
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Bag
  name: Bag
  nameWithType: ITransformationContext.Bag
  fullName: NMF.Transformations.Core.ITransformationContext.Bag
- uid: dynamic
  commentId: T:System.Object
  isExternal: true
  name: dynamic
  nameWithType: dynamic
  fullName: dynamic
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Tests.MockContext.Data*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Data
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Data
  name: Data
  nameWithType: MockContext.Data
  fullName: NMF.Transformations.Tests.MockContext.Data
- uid: NMF.Transformations.Core.ITransformationContext.Data
  commentId: P:NMF.Transformations.Core.ITransformationContext.Data
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Data
  name: Data
  nameWithType: ITransformationContext.Data
  fullName: NMF.Transformations.Core.ITransformationContext.Data
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<object, object>
  nameWithType: IDictionary<object, object>
  fullName: System.Collections.Generic.IDictionary<object, object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of Object, Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Transformations.Tests.MockContext.Transformation*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Transformation
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Transformation
  name: Transformation
  nameWithType: MockContext.Transformation
  fullName: NMF.Transformations.Tests.MockContext.Transformation
- uid: NMF.Transformations.Core.ITransformationContext.Transformation
  commentId: P:NMF.Transformations.Core.ITransformationContext.Transformation
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Transformation
  name: Transformation
  nameWithType: ITransformationContext.Transformation
  fullName: NMF.Transformations.Core.ITransformationContext.Transformation
- uid: NMF.Transformations.Tests.MockContext.Computations*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Computations
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Computations
  name: Computations
  nameWithType: MockContext.Computations
  fullName: NMF.Transformations.Tests.MockContext.Computations
- uid: NMF.Transformations.Tests.MockComputationCollection
  commentId: T:NMF.Transformations.Tests.MockComputationCollection
  parent: NMF.Transformations.Tests
  href: NMF.Transformations.Tests.MockComputationCollection.html
  name: MockComputationCollection
  nameWithType: MockComputationCollection
  fullName: NMF.Transformations.Tests.MockComputationCollection
- uid: NMF.Transformations.Tests.MockContext.ExecuteDependencies*
  commentId: Overload:NMF.Transformations.Tests.MockContext.ExecuteDependencies
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_ExecuteDependencies_NMF_Transformations_Core_Computation_System_Boolean_
  name: ExecuteDependencies
  nameWithType: MockContext.ExecuteDependencies
  fullName: NMF.Transformations.Tests.MockContext.ExecuteDependencies
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.Computation.html
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Transformations.Tests.MockContext.CallTransformation*
  commentId: Overload:NMF.Transformations.Tests.MockContext.CallTransformation
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  name: CallTransformation
  nameWithType: MockContext.CallTransformation
  fullName: NMF.Transformations.Tests.MockContext.CallTransformation
- uid: NMF.Transformations.Core.GeneralTransformationRule
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.GeneralTransformationRule.html
  name: GeneralTransformationRule
  nameWithType: GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.ITransformationContext
  isExternal: true
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___System_Collections_IEnumerable_
  name: CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  nameWithType: ITransformationContext.CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  fullName: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, object[], System.Collections.IEnumerable)
  nameWithType.vb: ITransformationContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName.vb: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, Object(), System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
    href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___System_Collections_IEnumerable_
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
    href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___System_Collections_IEnumerable_
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
    href: NMF.Transformations.Core.GeneralTransformationRule.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Transformations.GeneralTransformationRule{{TIn}}
  commentId: T:NMF.Transformations.GeneralTransformationRule{`0}
  parent: NMF.Transformations
  definition: NMF.Transformations.GeneralTransformationRule`1
  href: NMF.Transformations.GeneralTransformationRule-1.html
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: '{TIn}'
  commentId: '!:TIn'
  definition: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: NMF.Transformations.GeneralTransformationRule`1
  commentId: T:NMF.Transformations.GeneralTransformationRule`1
  href: NMF.Transformations.GeneralTransformationRule-1.html
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: NMF.Transformations.GeneralTransformationRule{{TIn1},{TIn2}}
  commentId: T:NMF.Transformations.GeneralTransformationRule{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.GeneralTransformationRule`2
  href: NMF.Transformations.GeneralTransformationRule-2.html
  name: GeneralTransformationRule<TIn1, TIn2>
  nameWithType: GeneralTransformationRule<TIn1, TIn2>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2)
  name.vb: GeneralTransformationRule(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-2.html
  - name: <
  - name: TIn1
  - name: ','
  - name: " "
  - name: TIn2
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn1
  - name: ','
  - name: " "
  - name: TIn2
  - name: )
- uid: '{TIn1}'
  commentId: '!:TIn1'
  definition: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: '{TIn2}'
  commentId: '!:TIn2'
  definition: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
- uid: NMF.Transformations.GeneralTransformationRule`2
  commentId: T:NMF.Transformations.GeneralTransformationRule`2
  parent: NMF.Transformations
  href: NMF.Transformations.GeneralTransformationRule-2.html
  name: GeneralTransformationRule<TIn1, TIn2>
  nameWithType: GeneralTransformationRule<TIn1, TIn2>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2)
  name.vb: GeneralTransformationRule(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-2.html
  - name: <
  - name: TIn1
  - name: ','
  - name: " "
  - name: TIn2
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn1
  - name: ','
  - name: " "
  - name: TIn2
  - name: )
- uid: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
- uid: NMF.Transformations.Tests.MockContext.Trace*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Trace
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Trace
  name: Trace
  nameWithType: MockContext.Trace
  fullName: NMF.Transformations.Tests.MockContext.Trace
- uid: NMF.Transformations.Core.ITransformationContext.Trace
  commentId: P:NMF.Transformations.Core.ITransformationContext.Trace
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Trace
  name: Trace
  nameWithType: ITransformationContext.Trace
  fullName: NMF.Transformations.Core.ITransformationContext.Trace
- uid: NMF.Transformations.Core.ITransformationTrace
  commentId: T:NMF.Transformations.Core.ITransformationTrace
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationTrace.html
  name: ITransformationTrace
  nameWithType: ITransformationTrace
  fullName: NMF.Transformations.Core.ITransformationTrace
- uid: NMF.Transformations.Tests.MockContext.Input*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Input
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Input
  name: Input
  nameWithType: MockContext.Input
  fullName: NMF.Transformations.Tests.MockContext.Input
- uid: NMF.Transformations.Core.ITransformationContext.Input
  commentId: P:NMF.Transformations.Core.ITransformationContext.Input
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Input
  name: Input
  nameWithType: ITransformationContext.Input
  fullName: NMF.Transformations.Core.ITransformationContext.Input
- uid: NMF.Transformations.Tests.MockContext.Inputs*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Inputs
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Inputs
  name: Inputs
  nameWithType: MockContext.Inputs
  fullName: NMF.Transformations.Tests.MockContext.Inputs
- uid: NMF.Transformations.Core.ITransformationContext.Inputs
  commentId: P:NMF.Transformations.Core.ITransformationContext.Inputs
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Inputs
  name: Inputs
  nameWithType: ITransformationContext.Inputs
  fullName: NMF.Transformations.Core.ITransformationContext.Inputs
- uid: System.Collections.Generic.IList{System.Object[]}
  commentId: T:System.Collections.Generic.IList{System.Object[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<object[]>
  nameWithType: IList<object[]>
  fullName: System.Collections.Generic.IList<object[]>
  nameWithType.vb: IList(Of Object())
  fullName.vb: System.Collections.Generic.IList(Of Object())
  name.vb: IList(Of Object())
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Transformations.Tests.MockContext.Output*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Output
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Output
  name: Output
  nameWithType: MockContext.Output
  fullName: NMF.Transformations.Tests.MockContext.Output
- uid: NMF.Transformations.Tests.MockContext.Outputs*
  commentId: Overload:NMF.Transformations.Tests.MockContext.Outputs
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_Outputs
  name: Outputs
  nameWithType: MockContext.Outputs
  fullName: NMF.Transformations.Tests.MockContext.Outputs
- uid: NMF.Transformations.Core.ITransformationContext.Outputs
  commentId: P:NMF.Transformations.Core.ITransformationContext.Outputs
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Outputs
  name: Outputs
  nameWithType: ITransformationContext.Outputs
  fullName: NMF.Transformations.Core.ITransformationContext.Outputs
- uid: System.Collections.Generic.IList{System.Object}
  commentId: T:System.Collections.Generic.IList{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<object>
  nameWithType: IList<object>
  fullName: System.Collections.Generic.IList<object>
  nameWithType.vb: IList(Of Object)
  fullName.vb: System.Collections.Generic.IList(Of Object)
  name.vb: IList(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.ComputationCompleted
  commentId: E:NMF.Transformations.Core.ITransformationContext.ComputationCompleted
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_ComputationCompleted
  name: ComputationCompleted
  nameWithType: ITransformationContext.ComputationCompleted
  fullName: NMF.Transformations.Core.ITransformationContext.ComputationCompleted
- uid: System.EventHandler{NMF.Transformations.Core.ComputationEventArgs}
  commentId: T:System.EventHandler{NMF.Transformations.Core.ComputationEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ComputationEventArgs>
  nameWithType: EventHandler<ComputationEventArgs>
  fullName: System.EventHandler<NMF.Transformations.Core.ComputationEventArgs>
  nameWithType.vb: EventHandler(Of ComputationEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Transformations.Core.ComputationEventArgs)
  name.vb: EventHandler(Of ComputationEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
    href: NMF.Transformations.Core.ComputationEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
    href: NMF.Transformations.Core.ComputationEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NMF.Transformations.Tests.MockContext.RegisterComputationDependency*
  commentId: Overload:NMF.Transformations.Tests.MockContext.RegisterComputationDependency
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_RegisterComputationDependency_NMF_Transformations_Core_Computation_NMF_Transformations_Core_Computation_System_Boolean_
  name: RegisterComputationDependency
  nameWithType: MockContext.RegisterComputationDependency
  fullName: NMF.Transformations.Tests.MockContext.RegisterComputationDependency
- uid: NMF.Transformations.Tests.MockContext.IsThreadSafe*
  commentId: Overload:NMF.Transformations.Tests.MockContext.IsThreadSafe
  href: NMF.Transformations.Tests.MockContext.html#NMF_Transformations_Tests_MockContext_IsThreadSafe
  name: IsThreadSafe
  nameWithType: MockContext.IsThreadSafe
  fullName: NMF.Transformations.Tests.MockContext.IsThreadSafe
- uid: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  commentId: P:NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  parent: NMF.Transformations.Core.ITransformationContext
  href: NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_IsThreadSafe
  name: IsThreadSafe
  nameWithType: ITransformationContext.IsThreadSafe
  fullName: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
