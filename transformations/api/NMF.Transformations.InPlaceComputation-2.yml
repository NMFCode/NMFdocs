### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.InPlaceComputation`2
  commentId: T:NMF.Transformations.InPlaceComputation`2
  id: InPlaceComputation`2
  parent: NMF.Transformations
  children:
  - NMF.Transformations.InPlaceComputation`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  langs:
  - csharp
  - vb
  name: InPlaceComputation<TIn1, TIn2>
  nameWithType: InPlaceComputation<TIn1, TIn2>
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>
  type: Class
  source:
    remote:
      path: Transformations/Transformations/NTL/InPlaceComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InPlaceComputation
    path: src/Transformations/Transformations/NTL/InPlaceComputation.cs
    startLine: 46
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: "\nRepresents an in-place computation \n"
  example: []
  syntax:
    content: 'public abstract class InPlaceComputation<TIn1, TIn2> : ComputationBase<TIn1, TIn2>, IPersistor, ITraceEntry where TIn1 : class where TIn2 : class'
    typeParameters:
    - id: TIn1
      description: The type of the first input parameter
    - id: TIn2
      description: The type of the second input parameter
    content.vb: >-
      Public MustInherit Class InPlaceComputation(Of TIn1 As Class, TIn2 As Class)
          Inherits ComputationBase(Of TIn1, TIn2)
          Implements IPersistor, ITraceEntry
  inheritance:
  - System.Object
  - NMF.Transformations.Core.Computation
  - NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  implements:
  - NMF.Transformations.Core.IPersistor
  - NMF.Transformations.Core.ITraceEntry
  inheritedMembers:
  - NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.GetInput(System.Int32)
  - NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.TransformationRule
  - NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.Input1
  - NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.Input2
  - NMF.Transformations.Core.Computation.TransformationRule
  - NMF.Transformations.Core.Computation.TransformationContext
  - NMF.Transformations.Core.Computation.Context
  - NMF.Transformations.Core.Computation.InputArguments
  - NMF.Transformations.Core.Computation.GetInput(System.Int32)
  - NMF.Transformations.Core.Computation.CreateInputArray
  - NMF.Transformations.Core.Computation.Output
  - NMF.Transformations.Core.Computation.ThrowDelayedException
  - NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  - NMF.Transformations.Core.Computation.OutputCore
  - NMF.Transformations.Core.Computation.OutputInitialized
  - NMF.Transformations.Core.Computation.Computed
  - NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  - NMF.Transformations.Core.Computation.IsDelayed
  - NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  - NMF.Transformations.Core.Computation.Transform
  - NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  - NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  - NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2)
  name.vb: InPlaceComputation(Of TIn1, TIn2)
- uid: NMF.Transformations.InPlaceComputation`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  commentId: M:NMF.Transformations.InPlaceComputation`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  id: '#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)'
  parent: NMF.Transformations.InPlaceComputation`2
  langs:
  - csharp
  - vb
  name: InPlaceComputation(InPlaceTransformationRuleBase<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  nameWithType: InPlaceComputation<TIn1, TIn2>.InPlaceComputation(InPlaceTransformationRuleBase<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>.InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>, NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/NTL/InPlaceComputation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/NTL/InPlaceComputation.cs
    startLine: 58
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: "\nCreates a new in-place computation for the given transformation rule and the given transformation context\n"
  example: []
  syntax:
    content: protected InPlaceComputation(InPlaceTransformationRuleBase<TIn1, TIn2> transformationRule, IComputationContext context, TIn1 input1, TIn2 input2)
    parameters:
    - id: transformationRule
      type: NMF.Transformations.InPlaceTransformationRuleBase{{TIn1},{TIn2}}
      description: The transformation rule for this computation
    - id: context
      type: NMF.Transformations.Core.IComputationContext
      description: The transformation context in which this computations resides
    - id: input1
      type: '{TIn1}'
      description: The first input parameter for this computation
    - id: input2
      type: '{TIn2}'
      description: The second input parameter for this computation
    content.vb: Protected Sub New(transformationRule As InPlaceTransformationRuleBase(Of TIn1, TIn2), context As IComputationContext, input1 As TIn1, input2 As TIn2)
  overload: NMF.Transformations.InPlaceComputation`2.#ctor*
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2).InPlaceComputation(InPlaceTransformationRuleBase(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2).InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2), NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  name.vb: InPlaceComputation(InPlaceTransformationRuleBase(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
references:
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  commentId: T:NMF.Transformations.ComputationBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.ComputationBase`2
  name: ComputationBase<TIn1, TIn2>
  nameWithType: ComputationBase<TIn1, TIn2>
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>
  nameWithType.vb: ComputationBase(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2)
  name.vb: ComputationBase(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.ComputationBase`2
    name: ComputationBase
    nameWithType: ComputationBase
    fullName: NMF.Transformations.ComputationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.ComputationBase`2
    name: ComputationBase
    nameWithType: ComputationBase
    fullName: NMF.Transformations.ComputationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.IPersistor
  commentId: T:NMF.Transformations.Core.IPersistor
  parent: NMF.Transformations.Core
  name: IPersistor
  nameWithType: IPersistor
  fullName: NMF.Transformations.Core.IPersistor
- uid: NMF.Transformations.Core.ITraceEntry
  commentId: T:NMF.Transformations.Core.ITraceEntry
  parent: NMF.Transformations.Core
  name: ITraceEntry
  nameWithType: ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
- uid: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.GetInput(System.Int32)
  commentId: M:NMF.Transformations.ComputationBase{`0,`1}.GetInput(System.Int32)
  parent: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  definition: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
  name: GetInput(Int32)
  nameWithType: ComputationBase<TIn1, TIn2>.GetInput(Int32)
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput(System.Int32)
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).GetInput(Int32)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput(System.Int32)
  spec.csharp:
  - uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
    name: GetInput
    nameWithType: ComputationBase<TIn1, TIn2>.GetInput
    fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
    name: GetInput
    nameWithType: ComputationBase(Of TIn1, TIn2).GetInput
    fullName: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.TransformationRule
  commentId: P:NMF.Transformations.ComputationBase{`0,`1}.TransformationRule
  parent: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  definition: NMF.Transformations.ComputationBase`2.TransformationRule
  name: TransformationRule
  nameWithType: ComputationBase<TIn1, TIn2>.TransformationRule
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.Input1
  commentId: P:NMF.Transformations.ComputationBase{`0,`1}.Input1
  parent: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  definition: NMF.Transformations.ComputationBase`2.Input1
  name: Input1
  nameWithType: ComputationBase<TIn1, TIn2>.Input1
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input1
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input1
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}.Input2
  commentId: P:NMF.Transformations.ComputationBase{`0,`1}.Input2
  parent: NMF.Transformations.ComputationBase{{TIn1},{TIn2}}
  definition: NMF.Transformations.ComputationBase`2.Input2
  name: Input2
  nameWithType: ComputationBase<TIn1, TIn2>.Input2
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input2
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input2
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.Core.Computation.TransformationRule
  commentId: P:NMF.Transformations.Core.Computation.TransformationRule
  parent: NMF.Transformations.Core.Computation
  name: TransformationRule
  nameWithType: Computation.TransformationRule
  fullName: NMF.Transformations.Core.Computation.TransformationRule
- uid: NMF.Transformations.Core.Computation.TransformationContext
  commentId: P:NMF.Transformations.Core.Computation.TransformationContext
  parent: NMF.Transformations.Core.Computation
  name: TransformationContext
  nameWithType: Computation.TransformationContext
  fullName: NMF.Transformations.Core.Computation.TransformationContext
- uid: NMF.Transformations.Core.Computation.Context
  commentId: P:NMF.Transformations.Core.Computation.Context
  parent: NMF.Transformations.Core.Computation
  name: Context
  nameWithType: Computation.Context
  fullName: NMF.Transformations.Core.Computation.Context
- uid: NMF.Transformations.Core.Computation.InputArguments
  commentId: P:NMF.Transformations.Core.Computation.InputArguments
  parent: NMF.Transformations.Core.Computation
  name: InputArguments
  nameWithType: Computation.InputArguments
  fullName: NMF.Transformations.Core.Computation.InputArguments
- uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  commentId: M:NMF.Transformations.Core.Computation.GetInput(System.Int32)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: GetInput(Int32)
  nameWithType: Computation.GetInput(Int32)
  fullName: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
    nameWithType: Computation.GetInput
    fullName: NMF.Transformations.Core.Computation.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
    nameWithType: Computation.GetInput
    fullName: NMF.Transformations.Core.Computation.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.CreateInputArray
  commentId: M:NMF.Transformations.Core.Computation.CreateInputArray
  parent: NMF.Transformations.Core.Computation
  name: CreateInputArray()
  nameWithType: Computation.CreateInputArray()
  fullName: NMF.Transformations.Core.Computation.CreateInputArray()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
    nameWithType: Computation.CreateInputArray
    fullName: NMF.Transformations.Core.Computation.CreateInputArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
    nameWithType: Computation.CreateInputArray
    fullName: NMF.Transformations.Core.Computation.CreateInputArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.Output
  commentId: P:NMF.Transformations.Core.Computation.Output
  parent: NMF.Transformations.Core.Computation
  name: Output
  nameWithType: Computation.Output
  fullName: NMF.Transformations.Core.Computation.Output
- uid: NMF.Transformations.Core.Computation.ThrowDelayedException
  commentId: M:NMF.Transformations.Core.Computation.ThrowDelayedException
  parent: NMF.Transformations.Core.Computation
  name: ThrowDelayedException()
  nameWithType: Computation.ThrowDelayedException()
  fullName: NMF.Transformations.Core.Computation.ThrowDelayedException()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
    nameWithType: Computation.ThrowDelayedException
    fullName: NMF.Transformations.Core.Computation.ThrowDelayedException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
    nameWithType: Computation.ThrowDelayedException
    fullName: NMF.Transformations.Core.Computation.ThrowDelayedException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  commentId: M:NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  nameWithType: Computation.MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  fullName: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean, NMF.Transformations.Core.ITransformationRuleDependency)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
    nameWithType: Computation.MarkRequire
    fullName: NMF.Transformations.Core.Computation.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
    nameWithType: ITransformationRuleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
    nameWithType: Computation.MarkRequire
    fullName: NMF.Transformations.Core.Computation.MarkRequire
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
    nameWithType: ITransformationRuleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.OutputCore
  commentId: P:NMF.Transformations.Core.Computation.OutputCore
  parent: NMF.Transformations.Core.Computation
  name: OutputCore
  nameWithType: Computation.OutputCore
  fullName: NMF.Transformations.Core.Computation.OutputCore
- uid: NMF.Transformations.Core.Computation.OutputInitialized
  commentId: E:NMF.Transformations.Core.Computation.OutputInitialized
  parent: NMF.Transformations.Core.Computation
  name: OutputInitialized
  nameWithType: Computation.OutputInitialized
  fullName: NMF.Transformations.Core.Computation.OutputInitialized
- uid: NMF.Transformations.Core.Computation.Computed
  commentId: E:NMF.Transformations.Core.Computation.Computed
  parent: NMF.Transformations.Core.Computation
  name: Computed
  nameWithType: Computation.Computed
  fullName: NMF.Transformations.Core.Computation.Computed
- uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: DelayOutputAtLeast(Byte)
  nameWithType: Computation.DelayOutputAtLeast(Byte)
  fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: Computation.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
    nameWithType: Computation.DelayOutputAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: DelayTransformationAtLeast(Byte)
  nameWithType: Computation.DelayTransformationAtLeast(Byte)
  fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: Computation.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
    nameWithType: Computation.DelayTransformationAtLeast
    fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: OnOutputInitialized(EventArgs)
  nameWithType: Computation.OnOutputInitialized(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
    nameWithType: Computation.OnOutputInitialized
    fullName: NMF.Transformations.Core.Computation.OnOutputInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
    nameWithType: Computation.OnOutputInitialized
    fullName: NMF.Transformations.Core.Computation.OnOutputInitialized
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.IsDelayed
  commentId: P:NMF.Transformations.Core.Computation.IsDelayed
  parent: NMF.Transformations.Core.Computation
  name: IsDelayed
  nameWithType: Computation.IsDelayed
  fullName: NMF.Transformations.Core.Computation.IsDelayed
- uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: OnComputed(EventArgs)
  nameWithType: Computation.OnComputed(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
    nameWithType: Computation.OnComputed
    fullName: NMF.Transformations.Core.Computation.OnComputed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
    nameWithType: Computation.OnComputed
    fullName: NMF.Transformations.Core.Computation.OnComputed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.Transform
  commentId: M:NMF.Transformations.Core.Computation.Transform
  parent: NMF.Transformations.Core.Computation
  name: Transform()
  nameWithType: Computation.Transform()
  fullName: NMF.Transformations.Core.Computation.Transform()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
    nameWithType: Computation.Transform
    fullName: NMF.Transformations.Core.Computation.Transform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
    nameWithType: Computation.Transform
    fullName: NMF.Transformations.Core.Computation.Transform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: CreateOutput(IEnumerable)
  nameWithType: Computation.CreateOutput(IEnumerable)
  fullName: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
    nameWithType: Computation.CreateOutput
    fullName: NMF.Transformations.Core.Computation.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
    nameWithType: Computation.CreateOutput
    fullName: NMF.Transformations.Core.Computation.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  commentId: M:NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: InitializeOutput(Object)
  nameWithType: Computation.InitializeOutput(Object)
  fullName: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: Computation.InitializeOutput
    fullName: NMF.Transformations.Core.Computation.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
    nameWithType: Computation.InitializeOutput
    fullName: NMF.Transformations.Core.Computation.InitializeOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.Computation
  name: SetBaseComputation(Computation)
  nameWithType: Computation.SetBaseComputation(Computation)
  fullName: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
    nameWithType: Computation.SetBaseComputation
    fullName: NMF.Transformations.Core.Computation.SetBaseComputation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
    nameWithType: Computation.SetBaseComputation
    fullName: NMF.Transformations.Core.Computation.SetBaseComputation
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  commentId: M:NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  name: IPersistor.Persist(Object)
  nameWithType: Computation.IPersistor.Persist(Object)
  fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist(System.Object)
  nameWithType.vb: Computation.NMF.Transformations.Core.IPersistor.Persist(Object)
  name.vb: NMF.Transformations.Core.IPersistor.Persist(Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
    name: IPersistor.Persist
    nameWithType: Computation.IPersistor.Persist
    fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
    name: NMF.Transformations.Core.IPersistor.Persist
    nameWithType: Computation.NMF.Transformations.Core.IPersistor.Persist
    fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: NMF.Transformations.ComputationBase`2
  commentId: T:NMF.Transformations.ComputationBase`2
  name: ComputationBase<TIn1, TIn2>
  nameWithType: ComputationBase<TIn1, TIn2>
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>
  nameWithType.vb: ComputationBase(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2)
  name.vb: ComputationBase(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.ComputationBase`2
    name: ComputationBase
    nameWithType: ComputationBase
    fullName: NMF.Transformations.ComputationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.ComputationBase`2
    name: ComputationBase
    nameWithType: ComputationBase
    fullName: NMF.Transformations.ComputationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
  commentId: M:NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
  isExternal: true
  name: GetInput(Int32)
  nameWithType: ComputationBase<TIn1, TIn2>.GetInput(Int32)
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput(System.Int32)
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).GetInput(Int32)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput(System.Int32)
  spec.csharp:
  - uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
    name: GetInput
    nameWithType: ComputationBase<TIn1, TIn2>.GetInput
    fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
    name: GetInput
    nameWithType: ComputationBase(Of TIn1, TIn2).GetInput
    fullName: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.ComputationBase`2.TransformationRule
  commentId: P:NMF.Transformations.ComputationBase`2.TransformationRule
  name: TransformationRule
  nameWithType: ComputationBase<TIn1, TIn2>.TransformationRule
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.ComputationBase`2.Input1
  commentId: P:NMF.Transformations.ComputationBase`2.Input1
  name: Input1
  nameWithType: ComputationBase<TIn1, TIn2>.Input1
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input1
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input1
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.ComputationBase`2.Input2
  commentId: P:NMF.Transformations.ComputationBase`2.Input2
  name: Input2
  nameWithType: ComputationBase<TIn1, TIn2>.Input2
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input2
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input2
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.InPlaceComputation`2.#ctor*
  commentId: Overload:NMF.Transformations.InPlaceComputation`2.#ctor
  name: InPlaceComputation
  nameWithType: InPlaceComputation<TIn1, TIn2>.InPlaceComputation
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>.InPlaceComputation
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2).InPlaceComputation
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2).InPlaceComputation
- uid: NMF.Transformations.InPlaceTransformationRuleBase{{TIn1},{TIn2}}
  commentId: T:NMF.Transformations.InPlaceTransformationRuleBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.InPlaceTransformationRuleBase`2
  name: InPlaceTransformationRuleBase<TIn1, TIn2>
  nameWithType: InPlaceTransformationRuleBase<TIn1, TIn2>
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>
  nameWithType.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2)
  name.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.InPlaceTransformationRuleBase`2
    name: InPlaceTransformationRuleBase
    nameWithType: InPlaceTransformationRuleBase
    fullName: NMF.Transformations.InPlaceTransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.InPlaceTransformationRuleBase`2
    name: InPlaceTransformationRuleBase
    nameWithType: InPlaceTransformationRuleBase
    fullName: NMF.Transformations.InPlaceTransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.IComputationContext
  commentId: T:NMF.Transformations.Core.IComputationContext
  parent: NMF.Transformations.Core
  name: IComputationContext
  nameWithType: IComputationContext
  fullName: NMF.Transformations.Core.IComputationContext
- uid: '{TIn1}'
  commentId: '!:TIn1'
  definition: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: '{TIn2}'
  commentId: '!:TIn2'
  definition: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
- uid: NMF.Transformations.InPlaceTransformationRuleBase`2
  commentId: T:NMF.Transformations.InPlaceTransformationRuleBase`2
  name: InPlaceTransformationRuleBase<TIn1, TIn2>
  nameWithType: InPlaceTransformationRuleBase<TIn1, TIn2>
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>
  nameWithType.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2)
  name.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.InPlaceTransformationRuleBase`2
    name: InPlaceTransformationRuleBase
    nameWithType: InPlaceTransformationRuleBase
    fullName: NMF.Transformations.InPlaceTransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.InPlaceTransformationRuleBase`2
    name: InPlaceTransformationRuleBase
    nameWithType: InPlaceTransformationRuleBase
    fullName: NMF.Transformations.InPlaceTransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
