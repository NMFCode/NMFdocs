### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Linq.IncrementalPattern`1
  commentId: T:NMF.Transformations.Linq.IncrementalPattern`1
  id: IncrementalPattern`1
  parent: NMF.Transformations.Linq
  children:
  - NMF.Transformations.Linq.IncrementalPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{`0}})
  - NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  - NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  - NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  langs:
  - csharp
  - vb
  name: IncrementalPattern<TIn>
  nameWithType: IncrementalPattern<TIn>
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>
  type: Class
  source:
    remote:
      path: Transformations/Transformations/Linq/IncrementalPattern.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IncrementalPattern
    path: src/Transformations/Transformations/Linq/IncrementalPattern.cs
    startLine: 13
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Linq
  summary: Represents a relational pattern for a transformation rule with one input argument
  example: []
  syntax:
    content: 'public class IncrementalPattern<TIn> : ITransformationRulePattern<TIn>, ITransformationRulePattern, ITransformationPattern'
    typeParameters:
    - id: TIn
      description: The input type of the targeted transformation rule
    content.vb: Public Class IncrementalPattern(Of TIn) Implements ITransformationRulePattern(Of TIn), ITransformationRulePattern, ITransformationPattern
  inheritance:
  - System.Object
  implements:
  - NMF.Transformations.ITransformationRulePattern{{TIn}}
  - NMF.Transformations.Core.ITransformationRulePattern
  - NMF.Transformations.Core.ITransformationPattern
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: IncrementalPattern(Of TIn)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn)
  name.vb: IncrementalPattern(Of TIn)
- uid: NMF.Transformations.Linq.IncrementalPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{`0}})
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{`0}})
  id: '#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{`0}})'
  parent: NMF.Transformations.Linq.IncrementalPattern`1
  langs:
  - csharp
  - vb
  name: IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  nameWithType: IncrementalPattern<TIn>.IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.IncrementalPattern(System.Func<NMF.Transformations.Core.ITransformationContext, NMF.Expressions.INotifyEnumerable<TIn>>)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Linq/IncrementalPattern.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Linq/IncrementalPattern.cs
    startLine: 19
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Linq
  summary: Creates a new relational pattern with the given pattern constructor
  example: []
  syntax:
    content: public IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<TIn>> sourceCreator)
    parameters:
    - id: sourceCreator
      type: System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{{TIn}}}
      description: A method that creates a relational source for a given transformation context
    content.vb: Public Sub New(sourceCreator As Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
  overload: NMF.Transformations.Linq.IncrementalPattern`1.#ctor*
  nameWithType.vb: IncrementalPattern(Of TIn).New(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).New(System.Func(Of NMF.Transformations.Core.ITransformationContext, NMF.Expressions.INotifyEnumerable(Of TIn)))
  name.vb: New(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
- uid: NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  id: SourceCreator
  parent: NMF.Transformations.Linq.IncrementalPattern`1
  langs:
  - csharp
  - vb
  name: SourceCreator
  nameWithType: IncrementalPattern<TIn>.SourceCreator
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.SourceCreator
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Linq/IncrementalPattern.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SourceCreator
    path: src/Transformations/Transformations/Linq/IncrementalPattern.cs
    startLine: 29
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Linq
  summary: Gets the pattern constructor function that is used to build up relational patterns
  example: []
  syntax:
    content: public Func<ITransformationContext, INotifyEnumerable<TIn>> SourceCreator { get; }
    parameters: []
    return:
      type: System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{{TIn}}}
    content.vb: Public Property SourceCreator As Func(Of ITransformationContext, INotifyEnumerable(Of TIn))
  overload: NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator*
  nameWithType.vb: IncrementalPattern(Of TIn).SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  id: CreatePattern(NMF.Transformations.Core.ITransformationContext)
  parent: NMF.Transformations.Linq.IncrementalPattern`1
  langs:
  - csharp
  - vb
  name: CreatePattern(ITransformationContext)
  nameWithType: IncrementalPattern<TIn>.CreatePattern(ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Linq/IncrementalPattern.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreatePattern
    path: src/Transformations/Transformations/Linq/IncrementalPattern.cs
    startLine: 36
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Linq
  summary: Creates a pattern context for the given transformation context
  example: []
  syntax:
    content: public ITransformationPatternContext CreatePattern(ITransformationContext context)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context the pattern should be created for
    return:
      type: NMF.Transformations.Core.ITransformationPatternContext
      description: ''
    content.vb: Public Function CreatePattern(context As ITransformationContext) As ITransformationPatternContext
  overload: NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern*
  implements:
  - NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType.vb: IncrementalPattern(Of TIn).CreatePattern(ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).CreatePattern(NMF.Transformations.Core.ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  id: TargetRule
  parent: NMF.Transformations.Linq.IncrementalPattern`1
  langs:
  - csharp
  - vb
  name: TargetRule
  nameWithType: IncrementalPattern<TIn>.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.TargetRule
  type: Property
  source:
    remote:
      path: Transformations/Transformations/Linq/IncrementalPattern.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TargetRule
    path: src/Transformations/Transformations/Linq/IncrementalPattern.cs
    startLine: 44
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Linq
  summary: The transformation rule, the pattern should be applied to
  example: []
  syntax:
    content: public GeneralTransformationRule<TIn> TargetRule { get; set; }
    parameters: []
    return:
      type: NMF.Transformations.GeneralTransformationRule{{TIn}}
    content.vb: Public Property TargetRule As GeneralTransformationRule(Of TIn)
  overload: NMF.Transformations.Linq.IncrementalPattern`1.TargetRule*
  implements:
  - NMF.Transformations.ITransformationRulePattern{{TIn}}.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).TargetRule
references:
- uid: NMF.Transformations.Linq
  commentId: N:NMF.Transformations.Linq
  href: NMF.html
  name: NMF.Transformations.Linq
  nameWithType: NMF.Transformations.Linq
  fullName: NMF.Transformations.Linq
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Linq
    name: Linq
    href: NMF.Transformations.Linq.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Linq
    name: Linq
    href: NMF.Transformations.Linq.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.ITransformationRulePattern{{TIn}}
  commentId: T:NMF.Transformations.ITransformationRulePattern{`0}
  parent: NMF.Transformations
  definition: NMF.Transformations.ITransformationRulePattern`1
  href: NMF.Transformations.ITransformationRulePattern-1.html
  name: ITransformationRulePattern<TIn>
  nameWithType: ITransformationRulePattern<TIn>
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>
  nameWithType.vb: ITransformationRulePattern(Of TIn)
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn)
  name.vb: ITransformationRulePattern(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.ITransformationRulePattern`1
    name: ITransformationRulePattern
    href: NMF.Transformations.ITransformationRulePattern-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.ITransformationRulePattern`1
    name: ITransformationRulePattern
    href: NMF.Transformations.ITransformationRulePattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: NMF.Transformations.Core.ITransformationRulePattern
  commentId: T:NMF.Transformations.Core.ITransformationRulePattern
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationRulePattern.html
  name: ITransformationRulePattern
  nameWithType: ITransformationRulePattern
  fullName: NMF.Transformations.Core.ITransformationRulePattern
- uid: NMF.Transformations.Core.ITransformationPattern
  commentId: T:NMF.Transformations.Core.ITransformationPattern
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationPattern.html
  name: ITransformationPattern
  nameWithType: ITransformationPattern
  fullName: NMF.Transformations.Core.ITransformationPattern
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.ITransformationRulePattern`1
  commentId: T:NMF.Transformations.ITransformationRulePattern`1
  href: NMF.Transformations.ITransformationRulePattern-1.html
  name: ITransformationRulePattern<TIn>
  nameWithType: ITransformationRulePattern<TIn>
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>
  nameWithType.vb: ITransformationRulePattern(Of TIn)
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn)
  name.vb: ITransformationRulePattern(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.ITransformationRulePattern`1
    name: ITransformationRulePattern
    href: NMF.Transformations.ITransformationRulePattern-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.ITransformationRulePattern`1
    name: ITransformationRulePattern
    href: NMF.Transformations.ITransformationRulePattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  href: NMF.html
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  href: NMF.html
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
- uid: NMF.Transformations.Linq.IncrementalPattern`1.#ctor*
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.#ctor
  href: NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1__ctor_System_Func_NMF_Transformations_Core_ITransformationContext_NMF_Expressions_INotifyEnumerable__0___
  name: IncrementalPattern
  nameWithType: IncrementalPattern<TIn>.IncrementalPattern
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.IncrementalPattern
  nameWithType.vb: IncrementalPattern(Of TIn).New
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).New
  name.vb: New
- uid: System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{{TIn}}}
  commentId: T:System.Func{NMF.Transformations.Core.ITransformationContext,NMF.Expressions.INotifyEnumerable{`0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ITransformationContext, INotifyEnumerable<TIn>>
  nameWithType: Func<ITransformationContext, INotifyEnumerable<TIn>>
  fullName: System.Func<NMF.Transformations.Core.ITransformationContext, NMF.Expressions.INotifyEnumerable<TIn>>
  nameWithType.vb: Func(Of ITransformationContext, INotifyEnumerable(Of TIn))
  fullName.vb: System.Func(Of NMF.Transformations.Core.ITransformationContext, NMF.Expressions.INotifyEnumerable(Of TIn))
  name.vb: Func(Of ITransformationContext, INotifyEnumerable(Of TIn))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
  - name: <
  - name: TIn
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: ','
  - name: " "
  - uid: NMF.Expressions.INotifyEnumerable`1
    name: INotifyEnumerable
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator*
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  href: NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_SourceCreator
  name: SourceCreator
  nameWithType: IncrementalPattern<TIn>.SourceCreator
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.SourceCreator
  nameWithType.vb: IncrementalPattern(Of TIn).SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern*
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern
  href: NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  name: CreatePattern
  nameWithType: IncrementalPattern<TIn>.CreatePattern
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.CreatePattern
  nameWithType.vb: IncrementalPattern(Of TIn).CreatePattern
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).CreatePattern
- uid: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  commentId: M:NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  parent: NMF.Transformations.Core.ITransformationPattern
  href: NMF.Transformations.Core.ITransformationPattern.html#NMF_Transformations_Core_ITransformationPattern_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  name: CreatePattern(ITransformationContext)
  nameWithType: ITransformationPattern.CreatePattern(ITransformationContext)
  fullName: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  spec.csharp:
  - uid: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
    name: CreatePattern
    href: NMF.Transformations.Core.ITransformationPattern.html#NMF_Transformations_Core_ITransformationPattern_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
    name: CreatePattern
    href: NMF.Transformations.Core.ITransformationPattern.html#NMF_Transformations_Core_ITransformationPattern_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    href: NMF.Transformations.Core.ITransformationContext.html
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationContext.html
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Transformations.Core.ITransformationPatternContext
  commentId: T:NMF.Transformations.Core.ITransformationPatternContext
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITransformationPatternContext.html
  name: ITransformationPatternContext
  nameWithType: ITransformationPatternContext
  fullName: NMF.Transformations.Core.ITransformationPatternContext
- uid: NMF.Transformations.Linq.IncrementalPattern`1.TargetRule*
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  href: NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_TargetRule
  name: TargetRule
  nameWithType: IncrementalPattern<TIn>.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).TargetRule
- uid: NMF.Transformations.ITransformationRulePattern{{TIn}}.TargetRule
  commentId: P:NMF.Transformations.ITransformationRulePattern{`0}.TargetRule
  parent: NMF.Transformations.ITransformationRulePattern{{TIn}}
  definition: NMF.Transformations.ITransformationRulePattern`1.TargetRule
  href: NMF.Transformations.ITransformationRulePattern-1.html#NMF_Transformations_ITransformationRulePattern_1_TargetRule
  name: TargetRule
  nameWithType: ITransformationRulePattern<TIn>.TargetRule
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn).TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn).TargetRule
- uid: NMF.Transformations.GeneralTransformationRule{{TIn}}
  commentId: T:NMF.Transformations.GeneralTransformationRule{`0}
  parent: NMF.Transformations
  definition: NMF.Transformations.GeneralTransformationRule`1
  href: NMF.Transformations.GeneralTransformationRule-1.html
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
- uid: NMF.Transformations.ITransformationRulePattern`1.TargetRule
  commentId: P:NMF.Transformations.ITransformationRulePattern`1.TargetRule
  href: NMF.Transformations.ITransformationRulePattern-1.html#NMF_Transformations_ITransformationRulePattern_1_TargetRule
  name: TargetRule
  nameWithType: ITransformationRulePattern<TIn>.TargetRule
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn).TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn).TargetRule
- uid: NMF.Transformations.GeneralTransformationRule`1
  commentId: T:NMF.Transformations.GeneralTransformationRule`1
  href: NMF.Transformations.GeneralTransformationRule-1.html
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: <
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    href: NMF.Transformations.GeneralTransformationRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: )
