### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Core.Dependency
  commentId: T:NMF.Transformations.Core.Dependency
  id: Dependency
  parent: NMF.Transformations.Core
  children:
  - NMF.Transformations.Core.Dependency.ExecuteBefore
  - NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.Dependency.NeedOutput
  - NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  langs:
  - csharp
  - vb
  name: Dependency
  nameWithType: Dependency
  fullName: NMF.Transformations.Core.Dependency
  type: Class
  source:
    remote:
      path: Transformations/Transformations.Core/Core/Dependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Dependency
    path: src/Transformations/Transformations.Core/Core/Dependency.cs
    startLine: 10
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nThis class represents a (non-calling) dependency\n"
  example: []
  syntax:
    content: 'public abstract class Dependency : ITransformationRuleDependency'
    content.vb: >-
      Public MustInherit Class Dependency

          Implements ITransformationRuleDependency
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Transformations.Core.MultipleDependency
  - NMF.Transformations.Core.SingleDependency
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: NMF.Transformations.Core.Dependency.NeedOutput
  commentId: P:NMF.Transformations.Core.Dependency.NeedOutput
  id: NeedOutput
  parent: NMF.Transformations.Core.Dependency
  langs:
  - csharp
  - vb
  name: NeedOutput
  nameWithType: Dependency.NeedOutput
  fullName: NMF.Transformations.Core.Dependency.NeedOutput
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/Dependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NeedOutput
    path: src/Transformations/Transformations.Core/Core/Dependency.cs
    startLine: 19
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nGets or sets a value indicating whether the dependency needs the output of the base computation set\n"
  example: []
  syntax:
    content: public bool NeedOutput { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NeedOutput As Boolean
  overload: NMF.Transformations.Core.Dependency.NeedOutput*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Core.Dependency.ExecuteBefore
  commentId: P:NMF.Transformations.Core.Dependency.ExecuteBefore
  id: ExecuteBefore
  parent: NMF.Transformations.Core.Dependency
  langs:
  - csharp
  - vb
  name: ExecuteBefore
  nameWithType: Dependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.ExecuteBefore
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/Dependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ExecuteBefore
    path: src/Transformations/Transformations.Core/Core/Dependency.cs
    startLine: 24
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nGets or sets a value indicating whether the dependency is executed before or after the base computation\n"
  example: []
  syntax:
    content: public bool ExecuteBefore { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExecuteBefore As Boolean
  overload: NMF.Transformations.Core.Dependency.ExecuteBefore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  id: HandleDependency(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.Dependency
  langs:
  - csharp
  - vb
  name: HandleDependency(Computation)
  nameWithType: Dependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Core/Core/Dependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleDependency
    path: src/Transformations/Transformations.Core/Core/Dependency.cs
    startLine: 30
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nCalls the transformation dependency for the given computation\n"
  example: []
  syntax:
    content: public abstract void HandleDependency(Computation computation)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
      description: The computation that this dependency is to be called
    content.vb: Public MustOverride Sub HandleDependency(computation As Computation)
  overload: NMF.Transformations.Core.Dependency.HandleDependency*
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  commentId: P:NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  id: NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  isEii: true
  parent: NMF.Transformations.Core.Dependency
  langs:
  - csharp
  - vb
  name: ITransformationRuleDependency.ExecuteBefore
  nameWithType: Dependency.ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/Dependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
    path: src/Transformations/Transformations.Core/Core/Dependency.cs
    startLine: 32
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  syntax:
    content: bool ITransformationRuleDependency.ExecuteBefore { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore As Boolean Implements ITransformationRuleDependency.ExecuteBefore
  overload: NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore*
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType.vb: Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
references:
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Transformations.Core.ITransformationRuleDependency
  commentId: T:NMF.Transformations.Core.ITransformationRuleDependency
  parent: NMF.Transformations.Core
  name: ITransformationRuleDependency
  nameWithType: ITransformationRuleDependency
  fullName: NMF.Transformations.Core.ITransformationRuleDependency
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core.Dependency.NeedOutput*
  commentId: Overload:NMF.Transformations.Core.Dependency.NeedOutput
  name: NeedOutput
  nameWithType: Dependency.NeedOutput
  fullName: NMF.Transformations.Core.Dependency.NeedOutput
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Transformations.Core.Dependency.ExecuteBefore*
  commentId: Overload:NMF.Transformations.Core.Dependency.ExecuteBefore
  name: ExecuteBefore
  nameWithType: Dependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.ExecuteBefore
- uid: NMF.Transformations.Core.Dependency.HandleDependency*
  commentId: Overload:NMF.Transformations.Core.Dependency.HandleDependency
  name: HandleDependency
  nameWithType: Dependency.HandleDependency
  fullName: NMF.Transformations.Core.Dependency.HandleDependency
- uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.ITransformationRuleDependency
  name: HandleDependency(Computation)
  nameWithType: ITransformationRuleDependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
    nameWithType: ITransformationRuleDependency.HandleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
    nameWithType: ITransformationRuleDependency.HandleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore*
  commentId: Overload:NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  name: ITransformationRuleDependency.ExecuteBefore
  nameWithType: Dependency.ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType.vb: Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
- uid: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  commentId: P:NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  parent: NMF.Transformations.Core.ITransformationRuleDependency
  name: ExecuteBefore
  nameWithType: ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
