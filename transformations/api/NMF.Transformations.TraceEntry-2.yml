### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.TraceEntry`2
  commentId: T:NMF.Transformations.TraceEntry`2
  id: TraceEntry`2
  parent: NMF.Transformations
  children:
  - NMF.Transformations.TraceEntry`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)
  - NMF.Transformations.TraceEntry`2.Output
  - NMF.Transformations.TraceEntry`2.TransformationRule
  langs:
  - csharp
  - vb
  name: TraceEntry<TInput, TOut>
  nameWithType: TraceEntry<TInput, TOut>
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>
  type: Class
  source:
    id: TraceEntry
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Transformations\Transformations\NTL\TraceOnlyComputation.cs
    startLine: 13
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Represents a computation that is only used for tracing purposes
  example: []
  syntax:
    content: 'public sealed class TraceEntry<TInput, TOut> : ITraceEntry'
    typeParameters:
    - id: TInput
      description: The type of the trace key
    - id: TOut
      description: The output type of the trace entry
    content.vb: Public NotInheritable Class TraceEntry(Of TInput, TOut) Implements ITraceEntry
  inheritance:
  - System.Object
  implements:
  - NMF.Transformations.Core.ITraceEntry
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Transformations.Core.ITraceEntry.NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
  nameWithType.vb: TraceEntry(Of TInput, TOut)
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut)
  name.vb: TraceEntry(Of TInput, TOut)
- uid: NMF.Transformations.TraceEntry`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)
  commentId: M:NMF.Transformations.TraceEntry`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)
  id: '#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)'
  parent: NMF.Transformations.TraceEntry`2
  langs:
  - csharp
  - vb
  name: TraceEntry(TransformationRuleBase<TInput, TOut>, TInput, TOut)
  nameWithType: TraceEntry<TInput, TOut>.TraceEntry(TransformationRuleBase<TInput, TOut>, TInput, TOut)
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TraceEntry(NMF.Transformations.TransformationRuleBase<TInput, TOut>, TInput, TOut)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Transformations\Transformations\NTL\TraceOnlyComputation.cs
    startLine: 25
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Creates a new trace-only computation
  example: []
  syntax:
    content: public TraceEntry(TransformationRuleBase<TInput, TOut> rule, TInput input, TOut output)
    parameters:
    - id: rule
      type: NMF.Transformations.TransformationRuleBase{{TInput},{TOut}}
      description: The transformation rule used as trace group
    - id: input
      type: '{TInput}'
      description: The trace key for this transformation rule
    - id: output
      type: '{TOut}'
      description: The output for this trace entry
    content.vb: Public Sub New(rule As TransformationRuleBase(Of TInput, TOut), input As TInput, output As TOut)
  overload: NMF.Transformations.TraceEntry`2.#ctor*
  nameWithType.vb: TraceEntry(Of TInput, TOut).New(TransformationRuleBase(Of TInput, TOut), TInput, TOut)
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).New(NMF.Transformations.TransformationRuleBase(Of TInput, TOut), TInput, TOut)
  name.vb: New(TransformationRuleBase(Of TInput, TOut), TInput, TOut)
- uid: NMF.Transformations.TraceEntry`2.Output
  commentId: P:NMF.Transformations.TraceEntry`2.Output
  id: Output
  parent: NMF.Transformations.TraceEntry`2
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: TraceEntry<TInput, TOut>.Output
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.Output
  type: Property
  source:
    id: Output
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Transformations\Transformations\NTL\TraceOnlyComputation.cs
    startLine: 42
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Gets the output of the trace entry
  example: []
  syntax:
    content: public TOut Output { get; }
    parameters: []
    return:
      type: '{TOut}'
    content.vb: Public ReadOnly Property Output As TOut
  overload: NMF.Transformations.TraceEntry`2.Output*
  nameWithType.vb: TraceEntry(Of TInput, TOut).Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).Output
- uid: NMF.Transformations.TraceEntry`2.TransformationRule
  commentId: P:NMF.Transformations.TraceEntry`2.TransformationRule
  id: TransformationRule
  parent: NMF.Transformations.TraceEntry`2
  langs:
  - csharp
  - vb
  name: TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.TransformationRule
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TransformationRule
  type: Property
  source:
    id: TransformationRule
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Transformations\Transformations\NTL\TraceOnlyComputation.cs
    startLine: 52
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Gets the transformation rule used as trace key for this trace entry
  example: []
  syntax:
    content: public TransformationRuleBase<TInput, TOut> TransformationRule { get; }
    parameters: []
    return:
      type: NMF.Transformations.TransformationRuleBase{{TInput},{TOut}}
    content.vb: Public ReadOnly Property TransformationRule As TransformationRuleBase(Of TInput, TOut)
  overload: NMF.Transformations.TraceEntry`2.TransformationRule*
  nameWithType.vb: TraceEntry(Of TInput, TOut).TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TransformationRule
references:
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  href: NMF.html
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.ITraceEntry
  commentId: T:NMF.Transformations.Core.ITraceEntry
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.ITraceEntry.html
  name: ITraceEntry
  nameWithType: ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Transformations.Core.ITraceEntry.NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
  commentId: M:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  parent: NMF.Transformations.Core.TraceEntryExtensions
  definition: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  name: CreateInputArray(ITraceEntry)
  nameWithType: TraceEntryExtensions.CreateInputArray(ITraceEntry)
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
    href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    href: NMF.Transformations.Core.ITraceEntry.html
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
    href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    href: NMF.Transformations.Core.ITraceEntry.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  href: NMF.html
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
    href: NMF.Transformations.Core.html
- uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  commentId: M:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  name: CreateInputArray(ITraceEntry)
  nameWithType: TraceEntryExtensions.CreateInputArray(ITraceEntry)
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
    href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    href: NMF.Transformations.Core.ITraceEntry.html
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
    href: NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    href: NMF.Transformations.Core.ITraceEntry.html
  - name: )
- uid: NMF.Transformations.Core.TraceEntryExtensions
  commentId: T:NMF.Transformations.Core.TraceEntryExtensions
  parent: NMF.Transformations.Core
  href: NMF.Transformations.Core.TraceEntryExtensions.html
  name: TraceEntryExtensions
  nameWithType: TraceEntryExtensions
  fullName: NMF.Transformations.Core.TraceEntryExtensions
- uid: NMF.Transformations.TraceEntry`2.#ctor*
  commentId: Overload:NMF.Transformations.TraceEntry`2.#ctor
  href: NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2__ctor_NMF_Transformations_TransformationRuleBase__0__1___0__1_
  name: TraceEntry
  nameWithType: TraceEntry<TInput, TOut>.TraceEntry
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TraceEntry
  nameWithType.vb: TraceEntry(Of TInput, TOut).New
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).New
  name.vb: New
- uid: NMF.Transformations.TransformationRuleBase{{TInput},{TOut}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`2
  href: NMF.Transformations.TransformationRuleBase-2.html
  name: TransformationRuleBase<TInput, TOut>
  nameWithType: TransformationRuleBase<TInput, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TInput, TOut>
  nameWithType.vb: TransformationRuleBase(Of TInput, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TInput, TOut)
  name.vb: TransformationRuleBase(Of TInput, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    href: NMF.Transformations.TransformationRuleBase-2.html
  - name: <
  - name: TInput
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    href: NMF.Transformations.TransformationRuleBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TInput
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: '{TInput}'
  commentId: '!:TInput'
  definition: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: '{TOut}'
  commentId: '!:TOut'
  definition: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: NMF.Transformations.TransformationRuleBase`2
  commentId: T:NMF.Transformations.TransformationRuleBase`2
  href: NMF.Transformations.TransformationRuleBase-2.html
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    href: NMF.Transformations.TransformationRuleBase-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    href: NMF.Transformations.TransformationRuleBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: TInput
  commentId: '!:TInput'
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: NMF.Transformations.TraceEntry`2.Output*
  commentId: Overload:NMF.Transformations.TraceEntry`2.Output
  href: NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_Output
  name: Output
  nameWithType: TraceEntry<TInput, TOut>.Output
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.Output
  nameWithType.vb: TraceEntry(Of TInput, TOut).Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).Output
- uid: NMF.Transformations.TraceEntry`2.TransformationRule*
  commentId: Overload:NMF.Transformations.TraceEntry`2.TransformationRule
  href: NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_TransformationRule
  name: TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.TransformationRule
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TransformationRule
  nameWithType.vb: TraceEntry(Of TInput, TOut).TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TransformationRule
