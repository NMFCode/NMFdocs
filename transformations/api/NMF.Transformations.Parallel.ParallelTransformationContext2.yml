### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2
  commentId: T:NMF.Transformations.Parallel.ParallelTransformationContext2
  id: ParallelTransformationContext2
  parent: NMF.Transformations.Parallel
  children:
  - NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor(NMF.Transformations.Core.Transformation)
  - NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  - NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  langs:
  - csharp
  - vb
  name: ParallelTransformationContext2
  nameWithType: ParallelTransformationContext2
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2
  type: Class
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ParallelTransformationContext2
    path: src/Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
    startLine: 13
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nAn alternative implementation of a parallel transformation context\n"
  example: []
  syntax:
    content: 'public class ParallelTransformationContext2 : TransformationContext, ITransformationEngineContext, ITransformationContext'
    content.vb: Public Class ParallelTransformationContext2 Inherits TransformationContext Implements ITransformationEngineContext, ITransformationContext
  inheritance:
  - System.Object
  - NMF.Transformations.Core.TransformationContext
  implements:
  - NMF.Transformations.Core.ITransformationEngineContext
  - NMF.Transformations.Core.ITransformationContext
  inheritedMembers:
  - NMF.Transformations.Core.TransformationContext.Transformation
  - NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  - NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  - NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  - NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  - NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  - NMF.Transformations.Core.TransformationContext.Bag
  - NMF.Transformations.Core.TransformationContext.Data
  - NMF.Transformations.Core.TransformationContext.ExecutePending
  - NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  - NMF.Transformations.Core.TransformationContext.Computations
  - NMF.Transformations.Core.TransformationContext.Trace
  - NMF.Transformations.Core.TransformationContext.Input
  - NMF.Transformations.Core.TransformationContext.Inputs
  - NMF.Transformations.Core.TransformationContext.Output
  - NMF.Transformations.Core.TransformationContext.Outputs
  - NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  - NMF.Transformations.Core.TransformationContext.ComputationCompleted
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Transformations.Core.ITransformationContext.NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  - NMF.Transformations.Core.ITransformationContext.NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(System.Object,System.Func{{TValue}})
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor(NMF.Transformations.Core.Transformation)
  commentId: M:NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor(NMF.Transformations.Core.Transformation)
  id: '#ctor(NMF.Transformations.Core.Transformation)'
  parent: NMF.Transformations.Parallel.ParallelTransformationContext2
  langs:
  - csharp
  - vb
  name: ParallelTransformationContext2(Transformation)
  nameWithType: ParallelTransformationContext2.ParallelTransformationContext2(Transformation)
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.ParallelTransformationContext2(NMF.Transformations.Core.Transformation)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
    startLine: 19
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public ParallelTransformationContext2(Transformation transformation)
    parameters:
    - id: transformation
      type: NMF.Transformations.Core.Transformation
      description: ''
    content.vb: Public Sub New(transformation As Transformation)
  overload: NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor*
  nameWithType.vb: ParallelTransformationContext2.New(Transformation)
  fullName.vb: NMF.Transformations.Parallel.ParallelTransformationContext2.New(NMF.Transformations.Core.Transformation)
  name.vb: New(Transformation)
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  commentId: M:NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  id: CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  parent: NMF.Transformations.Parallel.ParallelTransformationContext2
  langs:
  - csharp
  - vb
  name: CreateComputationContext(object[], GeneralTransformationRule)
  nameWithType: ParallelTransformationContext2.CreateComputationContext(object[], GeneralTransformationRule)
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext(object[], NMF.Transformations.Core.GeneralTransformationRule)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateComputationContext
    path: src/Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
    startLine: 22
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nCreates a computation context for the given input with the given transformation rule\n"
  example: []
  syntax:
    content: protected override ComputationContext CreateComputationContext(object[] input, GeneralTransformationRule rule)
    parameters:
    - id: input
      type: System.Object[]
      description: The inputs
    - id: rule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule to process these inputs
    return:
      type: NMF.Transformations.Core.ComputationContext
      description: A computation context
    content.vb: Protected Overrides Function CreateComputationContext(input As Object(), rule As GeneralTransformationRule) As ComputationContext
  overridden: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  overload: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext*
  nameWithType.vb: ParallelTransformationContext2.CreateComputationContext(Object(), GeneralTransformationRule)
  fullName.vb: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext(Object(), NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: CreateComputationContext(Object(), GeneralTransformationRule)
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  commentId: M:NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  id: ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  parent: NMF.Transformations.Parallel.ParallelTransformationContext2
  langs:
  - csharp
  - vb
  name: ExecuteLevel(IList<Computation>)
  nameWithType: ParallelTransformationContext2.ExecuteLevel(IList<Computation>)
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel(System.Collections.Generic.IList<NMF.Transformations.Core.Computation>)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ExecuteLevel
    path: src/Transformations/Transformations.Parallel/ParallelTransformationContext2.cs
    startLine: 28
  assemblies:
  - NMF.Transformations.Parallel
  namespace: NMF.Transformations.Parallel
  summary: "\nExecutes all computations of the given level\n"
  example: []
  syntax:
    content: protected override void ExecuteLevel(IList<Computation> computationsOfLevel)
    parameters:
    - id: computationsOfLevel
      type: System.Collections.Generic.IList{NMF.Transformations.Core.Computation}
      description: The computations of the given level
    content.vb: Protected Overrides Sub ExecuteLevel(computationsOfLevel As IList(Of Computation))
  overridden: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  overload: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel*
  nameWithType.vb: ParallelTransformationContext2.ExecuteLevel(IList(Of Computation))
  fullName.vb: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel(System.Collections.Generic.IList(Of NMF.Transformations.Core.Computation))
  name.vb: ExecuteLevel(IList(Of Computation))
references:
- uid: NMF.Transformations.Parallel
  commentId: N:NMF.Transformations.Parallel
  name: NMF.Transformations.Parallel
  nameWithType: NMF.Transformations.Parallel
  fullName: NMF.Transformations.Parallel
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Parallel
    name: Parallel
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Parallel
    name: Parallel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.TransformationContext
  commentId: T:NMF.Transformations.Core.TransformationContext
  parent: NMF.Transformations.Core
  name: TransformationContext
  nameWithType: TransformationContext
  fullName: NMF.Transformations.Core.TransformationContext
- uid: NMF.Transformations.Core.ITransformationEngineContext
  commentId: T:NMF.Transformations.Core.ITransformationEngineContext
  parent: NMF.Transformations.Core
  name: ITransformationEngineContext
  nameWithType: ITransformationEngineContext
  fullName: NMF.Transformations.Core.ITransformationEngineContext
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Transformations.Core.TransformationContext.Transformation
  commentId: P:NMF.Transformations.Core.TransformationContext.Transformation
  parent: NMF.Transformations.Core.TransformationContext
  name: Transformation
  nameWithType: TransformationContext.Transformation
  fullName: NMF.Transformations.Core.TransformationContext.Transformation
- uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  name: CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  nameWithType: TransformationContext.CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  fullName: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, object[], System.Collections.IEnumerable)
  nameWithType.vb: TransformationContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, Object(), System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.TransformationContext
  name: AddTraceEntry(Computation)
  nameWithType: TransformationContext.AddTraceEntry(Computation)
  fullName: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
    name: AddTraceEntry
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
    name: AddTraceEntry
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  parent: NMF.Transformations.Core.TransformationContext
  name: ExecutePendingComputations()
  nameWithType: TransformationContext.ExecutePendingComputations()
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
    name: ExecutePendingComputations
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
    name: ExecutePendingComputations
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  parent: NMF.Transformations.Core.TransformationContext
  name: CreateDelayedOutputs()
  nameWithType: TransformationContext.CreateDelayedOutputs()
  fullName: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
    name: CreateDelayedOutputs
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
    name: CreateDelayedOutputs
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  name: GetRules(Type[], Type)
  nameWithType: TransformationContext.GetRules(Type[], Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[], System.Type)
  nameWithType.vb: TransformationContext.GetRules(Type(), Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRules(System.Type(), System.Type)
  name.vb: GetRules(Type(), Type)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
    name: GetRules
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
    name: GetRules
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  name: GetRule(Type[], Type)
  nameWithType: TransformationContext.GetRule(Type[], Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[], System.Type)
  nameWithType.vb: TransformationContext.GetRule(Type(), Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRule(System.Type(), System.Type)
  name.vb: GetRule(Type(), Type)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
    name: GetRule
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
    name: GetRule
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.Bag
  commentId: P:NMF.Transformations.Core.TransformationContext.Bag
  parent: NMF.Transformations.Core.TransformationContext
  name: Bag
  nameWithType: TransformationContext.Bag
  fullName: NMF.Transformations.Core.TransformationContext.Bag
- uid: NMF.Transformations.Core.TransformationContext.Data
  commentId: P:NMF.Transformations.Core.TransformationContext.Data
  parent: NMF.Transformations.Core.TransformationContext
  name: Data
  nameWithType: TransformationContext.Data
  fullName: NMF.Transformations.Core.TransformationContext.Data
- uid: NMF.Transformations.Core.TransformationContext.ExecutePending
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePending
  parent: NMF.Transformations.Core.TransformationContext
  name: ExecutePending()
  nameWithType: TransformationContext.ExecutePending()
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePending()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePending
    name: ExecutePending
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePending
    name: ExecutePending
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  commentId: M:NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  parent: NMF.Transformations.Core.TransformationContext
  name: CallPendingDependencies()
  nameWithType: TransformationContext.CallPendingDependencies()
  fullName: NMF.Transformations.Core.TransformationContext.CallPendingDependencies()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
    name: CallPendingDependencies
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
    name: CallPendingDependencies
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.Computations
  commentId: P:NMF.Transformations.Core.TransformationContext.Computations
  parent: NMF.Transformations.Core.TransformationContext
  name: Computations
  nameWithType: TransformationContext.Computations
  fullName: NMF.Transformations.Core.TransformationContext.Computations
- uid: NMF.Transformations.Core.TransformationContext.Trace
  commentId: P:NMF.Transformations.Core.TransformationContext.Trace
  parent: NMF.Transformations.Core.TransformationContext
  name: Trace
  nameWithType: TransformationContext.Trace
  fullName: NMF.Transformations.Core.TransformationContext.Trace
- uid: NMF.Transformations.Core.TransformationContext.Input
  commentId: P:NMF.Transformations.Core.TransformationContext.Input
  parent: NMF.Transformations.Core.TransformationContext
  name: Input
  nameWithType: TransformationContext.Input
  fullName: NMF.Transformations.Core.TransformationContext.Input
- uid: NMF.Transformations.Core.TransformationContext.Inputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Inputs
  parent: NMF.Transformations.Core.TransformationContext
  name: Inputs
  nameWithType: TransformationContext.Inputs
  fullName: NMF.Transformations.Core.TransformationContext.Inputs
- uid: NMF.Transformations.Core.TransformationContext.Output
  commentId: P:NMF.Transformations.Core.TransformationContext.Output
  parent: NMF.Transformations.Core.TransformationContext
  name: Output
  nameWithType: TransformationContext.Output
  fullName: NMF.Transformations.Core.TransformationContext.Output
- uid: NMF.Transformations.Core.TransformationContext.Outputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Outputs
  parent: NMF.Transformations.Core.TransformationContext
  name: Outputs
  nameWithType: TransformationContext.Outputs
  fullName: NMF.Transformations.Core.TransformationContext.Outputs
- uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  commentId: M:NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  parent: NMF.Transformations.Core.TransformationContext
  name: OnComputationCompleted(ComputationEventArgs)
  nameWithType: TransformationContext.OnComputationCompleted(ComputationEventArgs)
  fullName: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
    name: OnComputationCompleted
  - name: (
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
    name: OnComputationCompleted
  - name: (
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.ComputationCompleted
  commentId: E:NMF.Transformations.Core.TransformationContext.ComputationCompleted
  parent: NMF.Transformations.Core.TransformationContext
  name: ComputationCompleted
  nameWithType: TransformationContext.ComputationCompleted
  fullName: NMF.Transformations.Core.TransformationContext.ComputationCompleted
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  parent: NMF.Transformations.Core.TransformationContextExtensions
  definition: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  nameWithType: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, params object[])
  nameWithType.vb: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  fullName.vb: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, ParamArray Object())
  name.vb: CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(System.Object,System.Func{{TValue}})
  commentId: M:NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  parent: NMF.Transformations.TraceExtensions
  definition: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  name: GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  nameWithType: TraceExtensions.GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem<TValue>(NMF.Transformations.Core.ITransformationContext, object, System.Func<TValue>)
  nameWithType.vb: TraceExtensions.GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  fullName.vb: NMF.Transformations.TraceExtensions.GetOrCreateUserItem(Of TValue)(NMF.Transformations.Core.ITransformationContext, Object, System.Func(Of TValue))
  name.vb: GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  spec.csharp:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  isExternal: true
  name: CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  nameWithType: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, params object[])
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, params object[])
  nameWithType.vb: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  fullName.vb: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, ParamArray Object())
  name.vb: CallTransformation(ITransformationContext, GeneralTransformationRule, ParamArray Object())
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: NMF.Transformations.Core.TransformationContextExtensions
  commentId: T:NMF.Transformations.Core.TransformationContextExtensions
  parent: NMF.Transformations.Core
  name: TransformationContextExtensions
  nameWithType: TransformationContextExtensions
  fullName: NMF.Transformations.Core.TransformationContextExtensions
- uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  commentId: M:NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  isExternal: true
  name: GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  nameWithType: TraceExtensions.GetOrCreateUserItem<TValue>(ITransformationContext, object, Func<TValue>)
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem<TValue>(NMF.Transformations.Core.ITransformationContext, object, System.Func<TValue>)
  nameWithType.vb: TraceExtensions.GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  fullName.vb: NMF.Transformations.TraceExtensions.GetOrCreateUserItem(Of TValue)(NMF.Transformations.Core.ITransformationContext, Object, System.Func(Of TValue))
  name.vb: GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  spec.csharp:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
    name: GetOrCreateUserItem
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: NMF.Transformations.TraceExtensions
  commentId: T:NMF.Transformations.TraceExtensions
  parent: NMF.Transformations
  name: TraceExtensions
  nameWithType: TraceExtensions
  fullName: NMF.Transformations.TraceExtensions
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor*
  commentId: Overload:NMF.Transformations.Parallel.ParallelTransformationContext2.#ctor
  name: ParallelTransformationContext2
  nameWithType: ParallelTransformationContext2.ParallelTransformationContext2
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.ParallelTransformationContext2
  nameWithType.vb: ParallelTransformationContext2.New
  fullName.vb: NMF.Transformations.Parallel.ParallelTransformationContext2.New
  name.vb: New
- uid: NMF.Transformations.Core.Transformation
  commentId: T:NMF.Transformations.Core.Transformation
  parent: NMF.Transformations.Core
  name: Transformation
  nameWithType: Transformation
  fullName: NMF.Transformations.Core.Transformation
- uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  name: CreateComputationContext(object[], GeneralTransformationRule)
  nameWithType: TransformationContext.CreateComputationContext(object[], GeneralTransformationRule)
  fullName: NMF.Transformations.Core.TransformationContext.CreateComputationContext(object[], NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType.vb: TransformationContext.CreateComputationContext(Object(), GeneralTransformationRule)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CreateComputationContext(Object(), NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: CreateComputationContext(Object(), GeneralTransformationRule)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
    name: CreateComputationContext
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
    name: CreateComputationContext
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: )
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext*
  commentId: Overload:NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext
  name: CreateComputationContext
  nameWithType: ParallelTransformationContext2.CreateComputationContext
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.CreateComputationContext
- uid: System.Object[]
  isExternal: true
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
- uid: NMF.Transformations.Core.GeneralTransformationRule
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  parent: NMF.Transformations.Core
  name: GeneralTransformationRule
  nameWithType: GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
- uid: NMF.Transformations.Core.ComputationContext
  commentId: T:NMF.Transformations.Core.ComputationContext
  parent: NMF.Transformations.Core
  name: ComputationContext
  nameWithType: ComputationContext
  fullName: NMF.Transformations.Core.ComputationContext
- uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  name: ExecuteLevel(IList<Computation>)
  nameWithType: TransformationContext.ExecuteLevel(IList<Computation>)
  fullName: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList<NMF.Transformations.Core.Computation>)
  nameWithType.vb: TransformationContext.ExecuteLevel(IList(Of Computation))
  fullName.vb: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList(Of NMF.Transformations.Core.Computation))
  name.vb: ExecuteLevel(IList(Of Computation))
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
    name: ExecuteLevel
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
    name: ExecuteLevel
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  - name: )
- uid: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel*
  commentId: Overload:NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel
  name: ExecuteLevel
  nameWithType: ParallelTransformationContext2.ExecuteLevel
  fullName: NMF.Transformations.Parallel.ParallelTransformationContext2.ExecuteLevel
- uid: System.Collections.Generic.IList{NMF.Transformations.Core.Computation}
  commentId: T:System.Collections.Generic.IList{NMF.Transformations.Core.Computation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Computation>
  nameWithType: IList<Computation>
  fullName: System.Collections.Generic.IList<NMF.Transformations.Core.Computation>
  nameWithType.vb: IList(Of Computation)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Transformations.Core.Computation)
  name.vb: IList(Of Computation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
