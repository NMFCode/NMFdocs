### YamlMime:ManagedReference
items:
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember
  commentId: T:NMF.CodeGen.EnumGenerator`1.EnumMember
  id: EnumGenerator`1.EnumMember
  parent: NMF.CodeGen
  children:
  - NMF.CodeGen.EnumGenerator`1.EnumMember.Name
  - NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks
  - NMF.CodeGen.EnumGenerator`1.EnumMember.Summary
  - NMF.CodeGen.EnumGenerator`1.EnumMember.Value
  langs:
  - csharp
  - vb
  name: EnumGenerator<T>.EnumMember
  nameWithType: EnumGenerator<T>.EnumMember
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember
  type: Struct
  source:
    remote:
      path: src/Transformations/CodeGen/EnumGenerator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: EnumMember
    path: src/Transformations/CodeGen/EnumGenerator.cs
    startLine: 20
  assemblies:
  - NMF.CodeGen
  namespace: NMF.CodeGen
  summary: Represents an enumeration member
  example: []
  syntax:
    content: protected struct EnumGenerator<T>.EnumMember
    content.vb: Protected Structure EnumGenerator(Of T).EnumMember
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: EnumGenerator(Of T).EnumMember
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember
  name.vb: EnumGenerator(Of T).EnumMember
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Value
  commentId: P:NMF.CodeGen.EnumGenerator`1.EnumMember.Value
  id: Value
  parent: NMF.CodeGen.EnumGenerator`1.EnumMember
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: EnumGenerator<T>.EnumMember.Value
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Value
  type: Property
  source:
    remote:
      path: src/Transformations/CodeGen/EnumGenerator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Value
    path: src/Transformations/CodeGen/EnumGenerator.cs
    startLine: 25
  assemblies:
  - NMF.CodeGen
  namespace: NMF.CodeGen
  summary: The value of the enumeration literal
  example: []
  syntax:
    content: public int? Value { readonly get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Value As Integer?
  overload: NMF.CodeGen.EnumGenerator`1.EnumMember.Value*
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Value
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Value
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Name
  commentId: P:NMF.CodeGen.EnumGenerator`1.EnumMember.Name
  id: Name
  parent: NMF.CodeGen.EnumGenerator`1.EnumMember
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EnumGenerator<T>.EnumMember.Name
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Name
  type: Property
  source:
    remote:
      path: src/Transformations/CodeGen/EnumGenerator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Name
    path: src/Transformations/CodeGen/EnumGenerator.cs
    startLine: 30
  assemblies:
  - NMF.CodeGen
  namespace: NMF.CodeGen
  summary: The name of the enumeration literal
  example: []
  syntax:
    content: public string Name { readonly get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: NMF.CodeGen.EnumGenerator`1.EnumMember.Name*
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Name
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Name
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Summary
  commentId: P:NMF.CodeGen.EnumGenerator`1.EnumMember.Summary
  id: Summary
  parent: NMF.CodeGen.EnumGenerator`1.EnumMember
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: EnumGenerator<T>.EnumMember.Summary
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Summary
  type: Property
  source:
    remote:
      path: src/Transformations/CodeGen/EnumGenerator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Summary
    path: src/Transformations/CodeGen/EnumGenerator.cs
    startLine: 35
  assemblies:
  - NMF.CodeGen
  namespace: NMF.CodeGen
  summary: The documentation summary of the literal
  example: []
  syntax:
    content: public string Summary { readonly get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Summary As String
  overload: NMF.CodeGen.EnumGenerator`1.EnumMember.Summary*
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Summary
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Summary
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks
  commentId: P:NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks
  id: Remarks
  parent: NMF.CodeGen.EnumGenerator`1.EnumMember
  langs:
  - csharp
  - vb
  name: Remarks
  nameWithType: EnumGenerator<T>.EnumMember.Remarks
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Remarks
  type: Property
  source:
    remote:
      path: src/Transformations/CodeGen/EnumGenerator.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Remarks
    path: src/Transformations/CodeGen/EnumGenerator.cs
    startLine: 40
  assemblies:
  - NMF.CodeGen
  namespace: NMF.CodeGen
  summary: The documentation remarks of the literal
  example: []
  syntax:
    content: public string Remarks { readonly get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Remarks As String
  overload: NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks*
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Remarks
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Remarks
references:
- uid: NMF.CodeGen
  commentId: N:NMF.CodeGen
  href: NMF.html
  name: NMF.CodeGen
  nameWithType: NMF.CodeGen
  fullName: NMF.CodeGen
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.CodeGen
    name: CodeGen
    href: NMF.CodeGen.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.CodeGen
    name: CodeGen
    href: NMF.CodeGen.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Value*
  commentId: Overload:NMF.CodeGen.EnumGenerator`1.EnumMember.Value
  href: NMF.CodeGen.EnumGenerator-1.EnumMember.html#NMF_CodeGen_EnumGenerator_1_EnumMember_Value
  name: Value
  nameWithType: EnumGenerator<T>.EnumMember.Value
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Value
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Value
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Value
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Name*
  commentId: Overload:NMF.CodeGen.EnumGenerator`1.EnumMember.Name
  href: NMF.CodeGen.EnumGenerator-1.EnumMember.html#NMF_CodeGen_EnumGenerator_1_EnumMember_Name
  name: Name
  nameWithType: EnumGenerator<T>.EnumMember.Name
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Name
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Name
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Summary*
  commentId: Overload:NMF.CodeGen.EnumGenerator`1.EnumMember.Summary
  href: NMF.CodeGen.EnumGenerator-1.EnumMember.html#NMF_CodeGen_EnumGenerator_1_EnumMember_Summary
  name: Summary
  nameWithType: EnumGenerator<T>.EnumMember.Summary
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Summary
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Summary
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Summary
- uid: NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks*
  commentId: Overload:NMF.CodeGen.EnumGenerator`1.EnumMember.Remarks
  href: NMF.CodeGen.EnumGenerator-1.EnumMember.html#NMF_CodeGen_EnumGenerator_1_EnumMember_Remarks
  name: Remarks
  nameWithType: EnumGenerator<T>.EnumMember.Remarks
  fullName: NMF.CodeGen.EnumGenerator<T>.EnumMember.Remarks
  nameWithType.vb: EnumGenerator(Of T).EnumMember.Remarks
  fullName.vb: NMF.CodeGen.EnumGenerator(Of T).EnumMember.Remarks
