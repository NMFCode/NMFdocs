### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Core.SingleDependency
  commentId: T:NMF.Transformations.Core.SingleDependency
  id: SingleDependency
  parent: NMF.Transformations.Core
  children:
  - NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  langs:
  - csharp
  - vb
  name: SingleDependency
  nameWithType: SingleDependency
  fullName: NMF.Transformations.Core.SingleDependency
  type: Class
  source:
    remote:
      path: Transformations/Transformations.Core/Core/SingleDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SingleDependency
    path: src/Transformations/Transformations.Core/Core/SingleDependency.cs
    startLine: 11
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nThis class represents a single require- or call-after- dependency\n"
  example: []
  syntax:
    content: 'public class SingleDependency : Dependency, ITransformationRuleDependency'
    content.vb: Public Class SingleDependency Inherits Dependency Implements ITransformationRuleDependency
  inheritance:
  - System.Object
  - NMF.Transformations.Core.Dependency
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency
  inheritedMembers:
  - NMF.Transformations.Core.Dependency.NeedOutput
  - NMF.Transformations.Core.Dependency.ExecuteBefore
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  id: HandleDependency(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.SingleDependency
  langs:
  - csharp
  - vb
  name: HandleDependency(Computation)
  nameWithType: SingleDependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Core/Core/SingleDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleDependency
    path: src/Transformations/Transformations.Core/Core/SingleDependency.cs
    startLine: 36
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nCalls the transformation dependency for the given computation\n"
  example: []
  syntax:
    content: public override void HandleDependency(Computation computation)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
      description: The computation that this dependency is to be called
    content.vb: Public Overrides Sub HandleDependency(computation As Computation)
  overridden: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  overload: NMF.Transformations.Core.SingleDependency.HandleDependency*
references:
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.Dependency
  commentId: T:NMF.Transformations.Core.Dependency
  parent: NMF.Transformations.Core
  name: Dependency
  nameWithType: Dependency
  fullName: NMF.Transformations.Core.Dependency
- uid: NMF.Transformations.Core.ITransformationRuleDependency
  commentId: T:NMF.Transformations.Core.ITransformationRuleDependency
  parent: NMF.Transformations.Core
  name: ITransformationRuleDependency
  nameWithType: ITransformationRuleDependency
  fullName: NMF.Transformations.Core.ITransformationRuleDependency
- uid: NMF.Transformations.Core.Dependency.NeedOutput
  commentId: P:NMF.Transformations.Core.Dependency.NeedOutput
  parent: NMF.Transformations.Core.Dependency
  name: NeedOutput
  nameWithType: Dependency.NeedOutput
  fullName: NMF.Transformations.Core.Dependency.NeedOutput
- uid: NMF.Transformations.Core.Dependency.ExecuteBefore
  commentId: P:NMF.Transformations.Core.Dependency.ExecuteBefore
  parent: NMF.Transformations.Core.Dependency
  name: ExecuteBefore
  nameWithType: Dependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.ExecuteBefore
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.Dependency
  name: HandleDependency(Computation)
  nameWithType: Dependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
- uid: NMF.Transformations.Core.SingleDependency.HandleDependency*
  commentId: Overload:NMF.Transformations.Core.SingleDependency.HandleDependency
  name: HandleDependency
  nameWithType: SingleDependency.HandleDependency
  fullName: NMF.Transformations.Core.SingleDependency.HandleDependency
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
