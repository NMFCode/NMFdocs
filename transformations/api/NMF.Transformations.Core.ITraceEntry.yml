### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Core.ITraceEntry
  commentId: T:NMF.Transformations.Core.ITraceEntry
  id: ITraceEntry
  parent: NMF.Transformations.Core
  children:
  - NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  - NMF.Transformations.Core.ITraceEntry.Output
  - NMF.Transformations.Core.ITraceEntry.TransformationRule
  langs:
  - csharp
  - vb
  name: ITraceEntry
  nameWithType: ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
  type: Interface
  source:
    remote:
      path: Transformations/Transformations.Core/Core/TraceEntry.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ITraceEntry
    path: src/Transformations/Transformations.Core/Core/TraceEntry.cs
    startLine: 10
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nRepresents a trace entry\n"
  example: []
  syntax:
    content: public interface ITraceEntry
    content.vb: Public Interface ITraceEntry
  extensionMethods:
  - NMF.Transformations.Core.ITraceEntry.NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
- uid: NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  commentId: M:NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  id: GetInput(System.Int32)
  parent: NMF.Transformations.Core.ITraceEntry
  langs:
  - csharp
  - vb
  name: GetInput(int)
  nameWithType: ITraceEntry.GetInput(int)
  fullName: NMF.Transformations.Core.ITraceEntry.GetInput(int)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Core/Core/TraceEntry.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetInput
    path: src/Transformations/Transformations.Core/Core/TraceEntry.cs
    startLine: 17
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nGets the input for this trace entry at the ith position\n"
  example: []
  syntax:
    content: object GetInput(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The position index
    return:
      type: System.Object
      description: The input at the ith position
    content.vb: Function GetInput(index As Integer) As Object
  overload: NMF.Transformations.Core.ITraceEntry.GetInput*
  nameWithType.vb: ITraceEntry.GetInput(Integer)
  fullName.vb: NMF.Transformations.Core.ITraceEntry.GetInput(Integer)
  name.vb: GetInput(Integer)
- uid: NMF.Transformations.Core.ITraceEntry.Output
  commentId: P:NMF.Transformations.Core.ITraceEntry.Output
  id: Output
  parent: NMF.Transformations.Core.ITraceEntry
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: ITraceEntry.Output
  fullName: NMF.Transformations.Core.ITraceEntry.Output
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/TraceEntry.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Output
    path: src/Transformations/Transformations.Core/Core/TraceEntry.cs
    startLine: 22
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nGets the transformation output for this trace entry\n"
  example: []
  syntax:
    content: object Output { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property Output As Object
  overload: NMF.Transformations.Core.ITraceEntry.Output*
- uid: NMF.Transformations.Core.ITraceEntry.TransformationRule
  commentId: P:NMF.Transformations.Core.ITraceEntry.TransformationRule
  id: TransformationRule
  parent: NMF.Transformations.Core.ITraceEntry
  langs:
  - csharp
  - vb
  name: TransformationRule
  nameWithType: ITraceEntry.TransformationRule
  fullName: NMF.Transformations.Core.ITraceEntry.TransformationRule
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/TraceEntry.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TransformationRule
    path: src/Transformations/Transformations.Core/Core/TraceEntry.cs
    startLine: 27
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nGets the transformation rule for which the trace entry was generated\n"
  example: []
  syntax:
    content: GeneralTransformationRule TransformationRule { get; }
    parameters: []
    return:
      type: NMF.Transformations.Core.GeneralTransformationRule
    content.vb: ReadOnly Property TransformationRule As GeneralTransformationRule
  overload: NMF.Transformations.Core.ITraceEntry.TransformationRule*
references:
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: NMF.Transformations.Core.ITraceEntry.NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
  commentId: M:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  parent: NMF.Transformations.Core.TraceEntryExtensions
  definition: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  name: CreateInputArray(ITraceEntry)
  nameWithType: TraceEntryExtensions.CreateInputArray(ITraceEntry)
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
  - name: )
- uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  commentId: M:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  name: CreateInputArray(ITraceEntry)
  nameWithType: TraceEntryExtensions.CreateInputArray(ITraceEntry)
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
    name: CreateInputArray
  - name: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
  - name: )
- uid: NMF.Transformations.Core.TraceEntryExtensions
  commentId: T:NMF.Transformations.Core.TraceEntryExtensions
  parent: NMF.Transformations.Core
  name: TraceEntryExtensions
  nameWithType: TraceEntryExtensions
  fullName: NMF.Transformations.Core.TraceEntryExtensions
- uid: NMF.Transformations.Core.ITraceEntry.GetInput*
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.GetInput
  name: GetInput
  nameWithType: ITraceEntry.GetInput
  fullName: NMF.Transformations.Core.ITraceEntry.GetInput
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core.ITraceEntry.Output*
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.Output
  name: Output
  nameWithType: ITraceEntry.Output
  fullName: NMF.Transformations.Core.ITraceEntry.Output
- uid: NMF.Transformations.Core.ITraceEntry.TransformationRule*
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.TransformationRule
  name: TransformationRule
  nameWithType: ITraceEntry.TransformationRule
  fullName: NMF.Transformations.Core.ITraceEntry.TransformationRule
- uid: NMF.Transformations.Core.GeneralTransformationRule
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  parent: NMF.Transformations.Core
  name: GeneralTransformationRule
  nameWithType: GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
