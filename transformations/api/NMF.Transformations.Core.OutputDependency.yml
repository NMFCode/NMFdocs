### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Core.OutputDependency
  commentId: T:NMF.Transformations.Core.OutputDependency
  id: OutputDependency
  parent: NMF.Transformations.Core
  children:
  - NMF.Transformations.Core.OutputDependency.ExecuteBefore
  - NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  langs:
  - csharp
  - vb
  name: OutputDependency
  nameWithType: OutputDependency
  fullName: NMF.Transformations.Core.OutputDependency
  type: Class
  source:
    remote:
      path: Transformations/Transformations.Core/Core/OutputDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OutputDependency
    path: src/Transformations/Transformations.Core/Core/OutputDependency.cs
    startLine: 10
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  summary: "\nRepresents a default implementation for a dependency that requires a computation to have its output initialized\n"
  example: []
  syntax:
    content: 'public abstract class OutputDependency : ITransformationRuleDependency'
    content.vb: >-
      Public MustInherit Class OutputDependency

          Implements ITransformationRuleDependency
  inheritance:
  - System.Object
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  id: HandleReadyComputation(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.OutputDependency
  langs:
  - csharp
  - vb
  name: HandleReadyComputation(Computation)
  nameWithType: OutputDependency.HandleReadyComputation(Computation)
  fullName: NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Core/Core/OutputDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: HandleReadyComputation
    path: src/Transformations/Transformations.Core/Core/OutputDependency.cs
    startLine: 12
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  syntax:
    content: protected abstract void HandleReadyComputation(Computation computation)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
    content.vb: Protected MustOverride Sub HandleReadyComputation(computation As Computation)
  overload: NMF.Transformations.Core.OutputDependency.HandleReadyComputation*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: NMF.Transformations.Core.OutputDependency.ExecuteBefore
  commentId: P:NMF.Transformations.Core.OutputDependency.ExecuteBefore
  id: ExecuteBefore
  parent: NMF.Transformations.Core.OutputDependency
  langs:
  - csharp
  - vb
  name: ExecuteBefore
  nameWithType: OutputDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.OutputDependency.ExecuteBefore
  type: Property
  source:
    remote:
      path: Transformations/Transformations.Core/Core/OutputDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ExecuteBefore
    path: src/Transformations/Transformations.Core/Core/OutputDependency.cs
    startLine: 24
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  syntax:
    content: public bool ExecuteBefore { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ExecuteBefore As Boolean
  overload: NMF.Transformations.Core.OutputDependency.ExecuteBefore*
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  id: NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  isEii: true
  parent: NMF.Transformations.Core.OutputDependency
  langs:
  - csharp
  - vb
  name: ITransformationRuleDependency.HandleDependency(Computation)
  nameWithType: OutputDependency.ITransformationRuleDependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  type: Method
  source:
    remote:
      path: Transformations/Transformations.Core/Core/OutputDependency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
    path: src/Transformations/Transformations.Core/Core/OutputDependency.cs
    startLine: 29
  assemblies:
  - NMF.Transformations.Core
  namespace: NMF.Transformations.Core
  syntax:
    content: void ITransformationRuleDependency.HandleDependency(Computation computation)
    parameters:
    - id: computation
      type: NMF.Transformations.Core.Computation
    content.vb: Sub NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(computation As Computation) Implements ITransformationRuleDependency.HandleDependency
  overload: NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency*
  implements:
  - NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType.vb: OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(Computation)
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(Computation)
references:
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Transformations.Core.ITransformationRuleDependency
  commentId: T:NMF.Transformations.Core.ITransformationRuleDependency
  parent: NMF.Transformations.Core
  name: ITransformationRuleDependency
  nameWithType: ITransformationRuleDependency
  fullName: NMF.Transformations.Core.ITransformationRuleDependency
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core.OutputDependency.HandleReadyComputation*
  commentId: Overload:NMF.Transformations.Core.OutputDependency.HandleReadyComputation
  name: HandleReadyComputation
  nameWithType: OutputDependency.HandleReadyComputation
  fullName: NMF.Transformations.Core.OutputDependency.HandleReadyComputation
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: NMF.Transformations.Core.OutputDependency.ExecuteBefore*
  commentId: Overload:NMF.Transformations.Core.OutputDependency.ExecuteBefore
  name: ExecuteBefore
  nameWithType: OutputDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.OutputDependency.ExecuteBefore
- uid: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  commentId: P:NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  parent: NMF.Transformations.Core.ITransformationRuleDependency
  name: ExecuteBefore
  nameWithType: ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency*
  commentId: Overload:NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency
  name: ITransformationRuleDependency.HandleDependency
  nameWithType: OutputDependency.ITransformationRuleDependency.HandleDependency
  fullName: NMF.Transformations.Core.OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  nameWithType.vb: OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
- uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.ITransformationRuleDependency
  name: HandleDependency(Computation)
  nameWithType: ITransformationRuleDependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
    nameWithType: ITransformationRuleDependency.HandleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
    name: HandleDependency
    nameWithType: ITransformationRuleDependency.HandleDependency
    fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
    nameWithType: Computation
    fullName: NMF.Transformations.Core.Computation
  - name: )
    nameWithType: )
    fullName: )
