### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Tests.MockComputationCollection
  commentId: T:NMF.Transformations.Tests.MockComputationCollection
  id: MockComputationCollection
  parent: NMF.Transformations.Tests
  children:
  - NMF.Transformations.Tests.MockComputationCollection.#ctor(NMF.Transformations.Tests.MockContext)
  - NMF.Transformations.Tests.MockComputationCollection.Add(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  - NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  - NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.TransformationRuleBase{``0},System.Object[],``0)
  - NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  - NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.TransformationRuleBase{``0,``1},``0,``1)
  - NMF.Transformations.Tests.MockComputationCollection.Add``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1,``2)
  langs:
  - csharp
  - vb
  name: MockComputationCollection
  nameWithType: MockComputationCollection
  fullName: NMF.Transformations.Tests.MockComputationCollection
  type: Class
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MockComputationCollection
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 12
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nRepresents a collection of computations used by the mocked context\n"
  example: []
  syntax:
    content: 'public class MockComputationCollection : ObservableCollection<ITraceEntry>, IList<ITraceEntry>, ICollection<ITraceEntry>, IReadOnlyList<ITraceEntry>, IReadOnlyCollection<ITraceEntry>, IEnumerable<ITraceEntry>, IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged'
    content.vb: >-
      Public Class MockComputationCollection
          Inherits ObservableCollection(Of ITraceEntry)
          Implements IList(Of ITraceEntry), ICollection(Of ITraceEntry), IReadOnlyList(Of ITraceEntry), IReadOnlyCollection(Of ITraceEntry), IEnumerable(Of ITraceEntry), IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  implements:
  - System.Collections.Generic.IList{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.Generic.ICollection{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.Generic.IReadOnlyList{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.Generic.IReadOnlyCollection{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.Generic.IEnumerable{NMF.Transformations.Core.ITraceEntry}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.BlockReentrancy
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CheckReentrancy
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.ClearItems
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.InsertItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.Move(System.Int32,System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.MoveItem(System.Int32,System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.SetItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CollectionChanged
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.PropertyChanged
  - System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Add(NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Clear
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Contains(NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.CopyTo(NMF.Transformations.Core.ITraceEntry[],System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.IndexOf(NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Insert(System.Int32,NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Remove(NMF.Transformations.Core.ITraceEntry)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Count
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Items
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NMF.Transformations.Tests.MockComputationCollection.#ctor(NMF.Transformations.Tests.MockContext)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.#ctor(NMF.Transformations.Tests.MockContext)
  id: '#ctor(NMF.Transformations.Tests.MockContext)'
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: MockComputationCollection(MockContext)
  nameWithType: MockComputationCollection.MockComputationCollection(MockContext)
  fullName: NMF.Transformations.Tests.MockComputationCollection.MockComputationCollection(NMF.Transformations.Tests.MockContext)
  type: Constructor
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 21
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a new mock computation collection for the given mocked context\n"
  example: []
  syntax:
    content: public MockComputationCollection(MockContext context)
    parameters:
    - id: context
      type: NMF.Transformations.Tests.MockContext
      description: The mock context in which to create the computation collection
    content.vb: Public Sub New(context As MockContext)
  overload: NMF.Transformations.Tests.MockComputationCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  id: Add``1(NMF.Transformations.GeneralTransformationRule{``0},``0)
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add<TIn>(GeneralTransformationRule<TIn>, TIn)
  nameWithType: MockComputationCollection.Add<TIn>(GeneralTransformationRule<TIn>, TIn)
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add<TIn>(NMF.Transformations.GeneralTransformationRule<TIn>, TIn)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 32
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: >-
      public MockComputation Add<TIn>(GeneralTransformationRule<TIn> transformationRule, TIn input)
          where TIn : class
    parameters:
    - id: transformationRule
      type: NMF.Transformations.GeneralTransformationRule{{TIn}}
      description: The transformation rule for this computation mock
    - id: input
      type: '{TIn}'
      description: The input for this computation
    typeParameters:
    - id: TIn
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(Of TIn As Class)(transformationRule As GeneralTransformationRule(Of TIn), input As TIn) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(Of TIn)(GeneralTransformationRule(Of TIn), TIn)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(Of TIn)(NMF.Transformations.GeneralTransformationRule(Of TIn), TIn)
  name.vb: Add(Of TIn)(GeneralTransformationRule(Of TIn), TIn)
- uid: NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.TransformationRuleBase{``0,``1},``0,``1)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.TransformationRuleBase{``0,``1},``0,``1)
  id: Add``2(NMF.Transformations.TransformationRuleBase{``0,``1},``0,``1)
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add<TIn, TOut>(TransformationRuleBase<TIn, TOut>, TIn, TOut)
  nameWithType: MockComputationCollection.Add<TIn, TOut>(TransformationRuleBase<TIn, TOut>, TIn, TOut)
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add<TIn, TOut>(NMF.Transformations.TransformationRuleBase<TIn, TOut>, TIn, TOut)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 52
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: >-
      public MockComputation Add<TIn, TOut>(TransformationRuleBase<TIn, TOut> transformationRule, TIn input, TOut output)
          where TIn : class where TOut : class
    parameters:
    - id: transformationRule
      type: NMF.Transformations.TransformationRuleBase{{TIn},{TOut}}
      description: The transformation rule for this computation mock
    - id: input
      type: '{TIn}'
      description: The input for this computation
    - id: output
      type: '{TOut}'
      description: The output for the mock computation
    typeParameters:
    - id: TIn
    - id: TOut
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(Of TIn As Class, TOut As Class)(transformationRule As TransformationRuleBase(Of TIn, TOut), input As TIn, output As TOut) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(Of TIn, TOut)(TransformationRuleBase(Of TIn, TOut), TIn, TOut)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(Of TIn, TOut)(NMF.Transformations.TransformationRuleBase(Of TIn, TOut), TIn, TOut)
  name.vb: Add(Of TIn, TOut)(TransformationRuleBase(Of TIn, TOut), TIn, TOut)
- uid: NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  id: Add``2(NMF.Transformations.GeneralTransformationRule{``0,``1},``0,``1)
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  nameWithType: MockComputationCollection.Add<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add<TIn1, TIn2>(NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, TIn1, TIn2)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 68
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: >-
      public MockComputation Add<TIn1, TIn2>(GeneralTransformationRule<TIn1, TIn2> transformationRule, TIn1 input1, TIn2 input2)
          where TIn1 : class where TIn2 : class
    parameters:
    - id: transformationRule
      type: NMF.Transformations.GeneralTransformationRule{{TIn1},{TIn2}}
      description: The transformation rule for this computation mock
    - id: input1
      type: '{TIn1}'
      description: The first input for this computation
    - id: input2
      type: '{TIn2}'
      description: The second input for this computation
    typeParameters:
    - id: TIn1
    - id: TIn2
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(Of TIn1 As Class, TIn2 As Class)(transformationRule As GeneralTransformationRule(Of TIn1, TIn2), input1 As TIn1, input2 As TIn2) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(Of TIn1, TIn2)(GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(Of TIn1, TIn2)(NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
  name.vb: Add(Of TIn1, TIn2)(GeneralTransformationRule(Of TIn1, TIn2), TIn1, TIn2)
- uid: NMF.Transformations.Tests.MockComputationCollection.Add``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1,``2)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1,``2)
  id: Add``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1,``2)
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add<TIn1, TIn2, TOut>(TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2, TOut)
  nameWithType: MockComputationCollection.Add<TIn1, TIn2, TOut>(TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2, TOut)
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add<TIn1, TIn2, TOut>(NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2, TOut)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 85
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: >-
      public MockComputation Add<TIn1, TIn2, TOut>(TransformationRuleBase<TIn1, TIn2, TOut> transformationRule, TIn1 input1, TIn2 input2, TOut output)
          where TIn1 : class where TIn2 : class where TOut : class
    parameters:
    - id: transformationRule
      type: NMF.Transformations.TransformationRuleBase{{TIn1},{TIn2},{TOut}}
      description: The transformation rule for this computation mock
    - id: input1
      type: '{TIn1}'
      description: The first input for this computation
    - id: input2
      type: '{TIn2}'
      description: The second input for this computation
    - id: output
      type: '{TOut}'
      description: The output of the mock computation
    typeParameters:
    - id: TIn1
    - id: TIn2
    - id: TOut
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(Of TIn1 As Class, TIn2 As Class, TOut As Class)(transformationRule As TransformationRuleBase(Of TIn1, TIn2, TOut), input1 As TIn1, input2 As TIn2, output As TOut) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(Of TIn1, TIn2, TOut)(TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2, TOut)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(Of TIn1, TIn2, TOut)(NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2, TOut)
  name.vb: Add(Of TIn1, TIn2, TOut)(TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2, TOut)
- uid: NMF.Transformations.Tests.MockComputationCollection.Add(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  id: Add(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add(GeneralTransformationRule, Object[])
  nameWithType: MockComputationCollection.Add(GeneralTransformationRule, Object[])
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add(NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 101
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: public MockComputation Add(GeneralTransformationRule transformationRule, object[] input)
    parameters:
    - id: transformationRule
      type: NMF.Transformations.Core.GeneralTransformationRule
      description: The transformation rule for this computation mock
    - id: input
      type: System.Object[]
      description: The input for this computation
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(transformationRule As GeneralTransformationRule, input As Object()) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(GeneralTransformationRule, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  name.vb: Add(GeneralTransformationRule, Object())
- uid: NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.TransformationRuleBase{``0},System.Object[],``0)
  commentId: M:NMF.Transformations.Tests.MockComputationCollection.Add``1(NMF.Transformations.TransformationRuleBase{``0},System.Object[],``0)
  id: Add``1(NMF.Transformations.TransformationRuleBase{``0},System.Object[],``0)
  parent: NMF.Transformations.Tests.MockComputationCollection
  langs:
  - csharp
  - vb
  name: Add<TOut>(TransformationRuleBase<TOut>, Object[], TOut)
  nameWithType: MockComputationCollection.Add<TOut>(TransformationRuleBase<TOut>, Object[], TOut)
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add<TOut>(NMF.Transformations.TransformationRuleBase<TOut>, System.Object[], TOut)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/Tests/MockComputationCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Transformations/Transformations/Tests/MockComputationCollection.cs
    startLine: 115
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations.Tests
  summary: "\nCreates a computation mock for the given transformation rule with the given input and the given context and adds the computation to the context\n"
  example: []
  syntax:
    content: >-
      public MockComputation Add<TOut>(TransformationRuleBase<TOut> transformationRule, object[] input, TOut output)
          where TOut : class
    parameters:
    - id: transformationRule
      type: NMF.Transformations.TransformationRuleBase{{TOut}}
      description: The transformation rule for this computation mock
    - id: input
      type: System.Object[]
      description: The input for this computation
    - id: output
      type: '{TOut}'
      description: The output of the mock computation
    typeParameters:
    - id: TOut
    return:
      type: NMF.Transformations.Tests.MockComputation
      description: The computation mock
    content.vb: Public Function Add(Of TOut As Class)(transformationRule As TransformationRuleBase(Of TOut), input As Object(), output As TOut) As MockComputation
  overload: NMF.Transformations.Tests.MockComputationCollection.Add*
  nameWithType.vb: MockComputationCollection.Add(Of TOut)(TransformationRuleBase(Of TOut), Object(), TOut)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Transformations.Tests.MockComputationCollection.Add(Of TOut)(NMF.Transformations.TransformationRuleBase(Of TOut), System.Object(), TOut)
  name.vb: Add(Of TOut)(TransformationRuleBase(Of TOut), Object(), TOut)
references:
- uid: NMF.Transformations.Tests
  commentId: N:NMF.Transformations.Tests
  name: NMF.Transformations.Tests
  nameWithType: NMF.Transformations.Tests
  fullName: NMF.Transformations.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<ITraceEntry>
  nameWithType: Collection<ITraceEntry>
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: Collection(Of ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: Collection(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ITraceEntry>
  nameWithType: ObservableCollection<ITraceEntry>
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: ObservableCollection(Of ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: ObservableCollection(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.Generic.IList{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ITraceEntry>
  nameWithType: IList<ITraceEntry>
  fullName: System.Collections.Generic.IList<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: IList(Of ITraceEntry)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: IList(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.Generic.ICollection{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ITraceEntry>
  nameWithType: ICollection<ITraceEntry>
  fullName: System.Collections.Generic.ICollection<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: ICollection(Of ITraceEntry)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: ICollection(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.Generic.IReadOnlyList{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ITraceEntry>
  nameWithType: IReadOnlyList<ITraceEntry>
  fullName: System.Collections.Generic.IReadOnlyList<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: IReadOnlyList(Of ITraceEntry)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: IReadOnlyList(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<ITraceEntry>
  nameWithType: IReadOnlyCollection<ITraceEntry>
  fullName: System.Collections.Generic.IReadOnlyCollection<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: IReadOnlyCollection(Of ITraceEntry)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: IReadOnlyCollection(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Transformations.Core.ITraceEntry}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Transformations.Core.ITraceEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITraceEntry>
  nameWithType: IEnumerable<ITraceEntry>
  fullName: System.Collections.Generic.IEnumerable<NMF.Transformations.Core.ITraceEntry>
  nameWithType.vb: IEnumerable(Of ITraceEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Transformations.Core.ITraceEntry)
  name.vb: IEnumerable(Of ITraceEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.BlockReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.BlockReentrancy
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  name: BlockReentrancy()
  nameWithType: ObservableCollection<ITraceEntry>.BlockReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.BlockReentrancy()
  nameWithType.vb: ObservableCollection(Of ITraceEntry).BlockReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).BlockReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection<ITraceEntry>.BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection(Of ITraceEntry).BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CheckReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CheckReentrancy
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  name: CheckReentrancy()
  nameWithType: ObservableCollection<ITraceEntry>.CheckReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.CheckReentrancy()
  nameWithType.vb: ObservableCollection(Of ITraceEntry).CheckReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).CheckReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection<ITraceEntry>.CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection(Of ITraceEntry).CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.ClearItems
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.ClearItems
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollection<ITraceEntry>.ClearItems()
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.ClearItems()
  nameWithType.vb: ObservableCollection(Of ITraceEntry).ClearItems()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection<ITraceEntry>.ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection(Of ITraceEntry).ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.InsertItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.InsertItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, ITraceEntry)
  nameWithType: ObservableCollection<ITraceEntry>.InsertItem(Int32, ITraceEntry)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.InsertItem(System.Int32, NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).InsertItem(Int32, ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).InsertItem(System.Int32, NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection<ITraceEntry>.InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection(Of ITraceEntry).InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.Move(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.Move(System.Int32,System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  name: Move(Int32, Int32)
  nameWithType: ObservableCollection<ITraceEntry>.Move(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.Move(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).Move(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection<ITraceEntry>.Move
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection(Of ITraceEntry).Move
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.MoveItem(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.MoveItem(System.Int32,System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollection<ITraceEntry>.MoveItem(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).MoveItem(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection<ITraceEntry>.MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection(Of ITraceEntry).MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollection<ITraceEntry>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection<ITraceEntry>.OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection(Of ITraceEntry).OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: ObservableCollection<ITraceEntry>.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).OnPropertyChanged(PropertyChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection<ITraceEntry>.OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection(Of ITraceEntry).OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableCollection<ITraceEntry>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection<ITraceEntry>.RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection(Of ITraceEntry).RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.SetItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.SetItem(System.Int32,NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, ITraceEntry)
  nameWithType: ObservableCollection<ITraceEntry>.SetItem(Int32, ITraceEntry)
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.SetItem(System.Int32, NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: ObservableCollection(Of ITraceEntry).SetItem(Int32, ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).SetItem(System.Int32, NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection<ITraceEntry>.SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection(Of ITraceEntry).SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CollectionChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.CollectionChanged
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollection<ITraceEntry>.CollectionChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.CollectionChanged
  nameWithType.vb: ObservableCollection(Of ITraceEntry).CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).CollectionChanged
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.PropertyChanged
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollection<ITraceEntry>.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.PropertyChanged
  nameWithType.vb: ObservableCollection(Of ITraceEntry).PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).PropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  parent: System.Collections.ObjectModel.ObservableCollection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: ObservableCollection<ITraceEntry>.INotifyPropertyChanged.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<NMF.Transformations.Core.ITraceEntry>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableCollection(Of ITraceEntry).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of NMF.Transformations.Core.ITraceEntry).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<ITraceEntry>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<ITraceEntry>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<ITraceEntry>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<ITraceEntry>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Add(NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Add(NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(ITraceEntry)
  nameWithType: Collection<ITraceEntry>.Add(ITraceEntry)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Add(NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: Collection(Of ITraceEntry).Add(ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Add(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<ITraceEntry>.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of ITraceEntry).Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Clear
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<ITraceEntry>.Clear()
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Clear()
  nameWithType.vb: Collection(Of ITraceEntry).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<ITraceEntry>.Clear
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of ITraceEntry).Clear
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Contains(NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Contains(NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(ITraceEntry)
  nameWithType: Collection<ITraceEntry>.Contains(ITraceEntry)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Contains(NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: Collection(Of ITraceEntry).Contains(ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Contains(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<ITraceEntry>.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of ITraceEntry).Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.CopyTo(NMF.Transformations.Core.ITraceEntry[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.CopyTo(NMF.Transformations.Core.ITraceEntry[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ITraceEntry[], Int32)
  nameWithType: Collection<ITraceEntry>.CopyTo(ITraceEntry[], Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.CopyTo(NMF.Transformations.Core.ITraceEntry[], System.Int32)
  nameWithType.vb: Collection(Of ITraceEntry).CopyTo(ITraceEntry(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).CopyTo(NMF.Transformations.Core.ITraceEntry(), System.Int32)
  name.vb: CopyTo(ITraceEntry(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<ITraceEntry>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of ITraceEntry).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<ITraceEntry>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.GetEnumerator()
  nameWithType.vb: Collection(Of ITraceEntry).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<ITraceEntry>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of ITraceEntry).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.IndexOf(NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.IndexOf(NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(ITraceEntry)
  nameWithType: Collection<ITraceEntry>.IndexOf(ITraceEntry)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.IndexOf(NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: Collection(Of ITraceEntry).IndexOf(ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).IndexOf(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<ITraceEntry>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of ITraceEntry).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Insert(System.Int32,NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Insert(System.Int32,NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, ITraceEntry)
  nameWithType: Collection<ITraceEntry>.Insert(Int32, ITraceEntry)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Insert(System.Int32, NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: Collection(Of ITraceEntry).Insert(Int32, ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Insert(System.Int32, NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<ITraceEntry>.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of ITraceEntry).Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Remove(NMF.Transformations.Core.ITraceEntry)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Remove(NMF.Transformations.Core.ITraceEntry)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(ITraceEntry)
  nameWithType: Collection<ITraceEntry>.Remove(ITraceEntry)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Remove(NMF.Transformations.Core.ITraceEntry)
  nameWithType.vb: Collection(Of ITraceEntry).Remove(ITraceEntry)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Remove(NMF.Transformations.Core.ITraceEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<ITraceEntry>.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of ITraceEntry).Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Transformations.Core.ITraceEntry
    name: ITraceEntry
    nameWithType: ITraceEntry
    fullName: NMF.Transformations.Core.ITraceEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<ITraceEntry>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of ITraceEntry).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<ITraceEntry>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of ITraceEntry).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<ITraceEntry>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<ITraceEntry>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of ITraceEntry).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<ITraceEntry>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<ITraceEntry>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of ITraceEntry).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<ITraceEntry>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<ITraceEntry>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<ITraceEntry>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<ITraceEntry>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<ITraceEntry>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<ITraceEntry>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<ITraceEntry>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<ITraceEntry>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<ITraceEntry>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<ITraceEntry>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Count
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Count
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<ITraceEntry>.Count
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Count
  nameWithType.vb: Collection(Of ITraceEntry).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Count
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<ITraceEntry>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Item[System.Int32]
  nameWithType.vb: Collection(Of ITraceEntry).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<ITraceEntry>.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of ITraceEntry).Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Items
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.Items
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<ITraceEntry>.Items
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.Items
  nameWithType.vb: Collection(Of ITraceEntry).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).Items
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<ITraceEntry>.IsReadOnly
  nameWithType: Collection<ITraceEntry>.ICollection<ITraceEntry>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.Generic.ICollection<NMF.Transformations.Core.ITraceEntry>.IsReadOnly
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<ITraceEntry>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<ITraceEntry>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<ITraceEntry>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<ITraceEntry>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NMF.Transformations.Core.ITraceEntry}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<ITraceEntry>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of ITraceEntry).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<ITraceEntry>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<NMF.Transformations.Core.ITraceEntry>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of ITraceEntry).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of NMF.Transformations.Core.ITraceEntry).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  isExternal: true
  name: BlockReentrancy()
  nameWithType: ObservableCollection<T>.BlockReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy()
  nameWithType.vb: ObservableCollection(Of T).BlockReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).BlockReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection<T>.BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection(Of T).BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  isExternal: true
  name: CheckReentrancy()
  nameWithType: ObservableCollection<T>.CheckReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy()
  nameWithType.vb: ObservableCollection(Of T).CheckReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).CheckReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection<T>.CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection(Of T).CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: ObservableCollection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.ClearItems()
  nameWithType.vb: ObservableCollection(Of T).ClearItems()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection<T>.ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection(Of T).ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: ObservableCollection<T>.InsertItem(Int32, T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.InsertItem(System.Int32, T)
  nameWithType.vb: ObservableCollection(Of T).InsertItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection<T>.InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection(Of T).InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: ObservableCollection<T>.Move(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.Move(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of T).Move(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection<T>.Move
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection(Of T).Move
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  isExternal: true
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollection<T>.MoveItem(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of T).MoveItem(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection<T>.MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection(Of T).MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollection<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection<T>.OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection(Of T).OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  isExternal: true
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: ObservableCollection<T>.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of T).OnPropertyChanged(PropertyChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection<T>.OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection(Of T).OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableCollection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollection(Of T).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection<T>.RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection(Of T).RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: ObservableCollection<T>.SetItem(Int32, T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.SetItem(System.Int32, T)
  nameWithType.vb: ObservableCollection(Of T).SetItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection<T>.SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection(Of T).SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  isExternal: true
  name: CollectionChanged
  nameWithType: ObservableCollection<T>.CollectionChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.CollectionChanged
  nameWithType.vb: ObservableCollection(Of T).CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).CollectionChanged
- uid: System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: ObservableCollection<T>.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.PropertyChanged
  nameWithType.vb: ObservableCollection(Of T).PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).PropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  isExternal: true
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: ObservableCollection<T>.INotifyPropertyChanged.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableCollection(Of T).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Tests.MockComputationCollection.#ctor*
  commentId: Overload:NMF.Transformations.Tests.MockComputationCollection.#ctor
  name: MockComputationCollection
  nameWithType: MockComputationCollection.MockComputationCollection
  fullName: NMF.Transformations.Tests.MockComputationCollection.MockComputationCollection
- uid: NMF.Transformations.Tests.MockContext
  commentId: T:NMF.Transformations.Tests.MockContext
  parent: NMF.Transformations.Tests
  name: MockContext
  nameWithType: MockContext
  fullName: NMF.Transformations.Tests.MockContext
- uid: NMF.Transformations.Tests.MockComputationCollection.Add*
  commentId: Overload:NMF.Transformations.Tests.MockComputationCollection.Add
  name: Add
  nameWithType: MockComputationCollection.Add
  fullName: NMF.Transformations.Tests.MockComputationCollection.Add
- uid: NMF.Transformations.GeneralTransformationRule{{TIn}}
  commentId: T:NMF.Transformations.GeneralTransformationRule{`0}
  parent: NMF.Transformations
  definition: NMF.Transformations.GeneralTransformationRule`1
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TIn}'
  commentId: '!:TIn'
  definition: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: NMF.Transformations.Tests.MockComputation
  commentId: T:NMF.Transformations.Tests.MockComputation
  parent: NMF.Transformations.Tests
  name: MockComputation
  nameWithType: MockComputation
  fullName: NMF.Transformations.Tests.MockComputation
- uid: NMF.Transformations.GeneralTransformationRule`1
  commentId: T:NMF.Transformations.GeneralTransformationRule`1
  name: GeneralTransformationRule<TIn>
  nameWithType: GeneralTransformationRule<TIn>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  name.vb: GeneralTransformationRule(Of TIn)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`1
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
- uid: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: NMF.Transformations.TransformationRuleBase{{TIn},{TOut}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TOut}'
  commentId: '!:TOut'
  definition: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: NMF.Transformations.TransformationRuleBase`2
  commentId: T:NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: NMF.Transformations.GeneralTransformationRule{{TIn1},{TIn2}}
  commentId: T:NMF.Transformations.GeneralTransformationRule{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.GeneralTransformationRule`2
  name: GeneralTransformationRule<TIn1, TIn2>
  nameWithType: GeneralTransformationRule<TIn1, TIn2>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2)
  name.vb: GeneralTransformationRule(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TIn1}'
  commentId: '!:TIn1'
  definition: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: '{TIn2}'
  commentId: '!:TIn2'
  definition: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
- uid: NMF.Transformations.GeneralTransformationRule`2
  commentId: T:NMF.Transformations.GeneralTransformationRule`2
  parent: NMF.Transformations
  name: GeneralTransformationRule<TIn1, TIn2>
  nameWithType: GeneralTransformationRule<TIn1, TIn2>
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2)
  name.vb: GeneralTransformationRule(Of TIn1, TIn2)
  spec.csharp:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.GeneralTransformationRule`2
    name: GeneralTransformationRule
    nameWithType: GeneralTransformationRule
    fullName: NMF.Transformations.GeneralTransformationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: )
    nameWithType: )
    fullName: )
- uid: TIn1
  name: TIn1
  nameWithType: TIn1
  fullName: TIn1
- uid: TIn2
  name: TIn2
  nameWithType: TIn2
  fullName: TIn2
- uid: NMF.Transformations.TransformationRuleBase{{TIn1},{TIn2},{TOut}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`0,`1,`2}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`3
  name: TransformationRuleBase<TIn1, TIn2, TOut>
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut)
  name.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`3
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`3
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.TransformationRuleBase`3
  commentId: T:NMF.Transformations.TransformationRuleBase`3
  name: TransformationRuleBase<TIn1, TIn2, TOut>
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut)
  name.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`3
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`3
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn1
    nameWithType: TIn1
    fullName: TIn1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TIn2
    nameWithType: TIn2
    fullName: TIn2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.Core.GeneralTransformationRule
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  parent: NMF.Transformations.Core
  name: GeneralTransformationRule
  nameWithType: GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
- uid: NMF.Transformations.TransformationRuleBase{{TOut}}
  commentId: T:NMF.Transformations.TransformationRuleBase{``0}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`1
  name: TransformationRuleBase<TOut>
  nameWithType: TransformationRuleBase<TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TOut>
  nameWithType.vb: TransformationRuleBase(Of TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TOut)
  name.vb: TransformationRuleBase(Of TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`1
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`1
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Transformations.TransformationRuleBase`1
  commentId: T:NMF.Transformations.TransformationRuleBase`1
  name: TransformationRuleBase<T>
  nameWithType: TransformationRuleBase<T>
  fullName: NMF.Transformations.TransformationRuleBase<T>
  nameWithType.vb: TransformationRuleBase(Of T)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T)
  name.vb: TransformationRuleBase(Of T)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`1
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`1
    name: TransformationRuleBase
    nameWithType: TransformationRuleBase
    fullName: NMF.Transformations.TransformationRuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
