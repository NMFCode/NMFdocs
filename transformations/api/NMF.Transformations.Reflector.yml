### YamlMime:ManagedReference
items:
- uid: NMF.Transformations.Reflector
  commentId: T:NMF.Transformations.Reflector
  id: Reflector
  parent: NMF.Transformations
  children:
  - NMF.Transformations.Reflector.ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  - NMF.Transformations.Reflector.ReflectInType``1(System.Type,System.Action{System.Type,``0})
  langs:
  - csharp
  - vb
  name: Reflector
  nameWithType: Reflector
  fullName: NMF.Transformations.Reflector
  type: Class
  source:
    remote:
      path: Transformations/Transformations/NTL/ReflectiveTransformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Reflector
    path: src/Transformations/Transformations/NTL/ReflectiveTransformation.cs
    startLine: 123
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: A helper class that reflects the transformation rules that reside as nested classes within a given type
  example: []
  syntax:
    content: public static class Reflector
    content.vb: Public Module Reflector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Transformations.Reflector.ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  commentId: M:NMF.Transformations.Reflector.ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  id: ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  parent: NMF.Transformations.Reflector
  langs:
  - csharp
  - vb
  name: ReflectDictionary<T>(Stack<Type>, Func<IEnumerable<T>>, Func<IEnumerable<T>>)
  nameWithType: Reflector.ReflectDictionary<T>(Stack<Type>, Func<IEnumerable<T>>, Func<IEnumerable<T>>)
  fullName: NMF.Transformations.Reflector.ReflectDictionary<T>(System.Collections.Generic.Stack<System.Type>, System.Func<System.Collections.Generic.IEnumerable<T>>, System.Func<System.Collections.Generic.IEnumerable<T>>)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/NTL/ReflectiveTransformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReflectDictionary
    path: src/Transformations/Transformations/NTL/ReflectiveTransformation.cs
    startLine: 133
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Obtains the rules from the given type stack
  example: []
  syntax:
    content: 'public static IDictionary<Type, T> ReflectDictionary<T>(Stack<Type> typeStack, Func<IEnumerable<T>> createDefaults, Func<IEnumerable<T>> createCustoms) where T : class'
    parameters:
    - id: typeStack
      type: System.Collections.Generic.Stack{System.Type}
      description: A stack of types from which to reflect the rules
    - id: createDefaults
      type: System.Func{System.Collections.Generic.IEnumerable{{T}}}
      description: A function that returns the defaults
    - id: createCustoms
      type: System.Func{System.Collections.Generic.IEnumerable{{T}}}
      description: A function that returns the customs
    typeParameters:
    - id: T
      description: The type of rules
    return:
      type: System.Collections.Generic.IDictionary{System.Type,{T}}
      description: A collection of rules
    content.vb: Public Shared Function ReflectDictionary(Of T As Class)(typeStack As Stack(Of Type), createDefaults As Func(Of IEnumerable(Of T)), createCustoms As Func(Of IEnumerable(Of T))) As IDictionary(Of Type, T)
  overload: NMF.Transformations.Reflector.ReflectDictionary*
  nameWithType.vb: Reflector.ReflectDictionary(Of T)(Stack(Of Type), Func(Of IEnumerable(Of T)), Func(Of IEnumerable(Of T)))
  fullName.vb: NMF.Transformations.Reflector.ReflectDictionary(Of T)(System.Collections.Generic.Stack(Of System.Type), System.Func(Of System.Collections.Generic.IEnumerable(Of T)), System.Func(Of System.Collections.Generic.IEnumerable(Of T)))
  name.vb: ReflectDictionary(Of T)(Stack(Of Type), Func(Of IEnumerable(Of T)), Func(Of IEnumerable(Of T)))
- uid: NMF.Transformations.Reflector.ReflectInType``1(System.Type,System.Action{System.Type,``0})
  commentId: M:NMF.Transformations.Reflector.ReflectInType``1(System.Type,System.Action{System.Type,``0})
  id: ReflectInType``1(System.Type,System.Action{System.Type,``0})
  parent: NMF.Transformations.Reflector
  langs:
  - csharp
  - vb
  name: ReflectInType<T>(Type, Action<Type, T>)
  nameWithType: Reflector.ReflectInType<T>(Type, Action<Type, T>)
  fullName: NMF.Transformations.Reflector.ReflectInType<T>(System.Type, System.Action<System.Type, T>)
  type: Method
  source:
    remote:
      path: Transformations/Transformations/NTL/ReflectiveTransformation.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ReflectInType
    path: src/Transformations/Transformations/NTL/ReflectiveTransformation.cs
    startLine: 191
  assemblies:
  - NMF.Transformations
  namespace: NMF.Transformations
  summary: Reflects a type and instantiates all transformation rules contained in this type as nested classes
  remarks: This method reflects the nested classes contained in the given type. It does not look in base types!
  example: []
  syntax:
    content: 'public static void ReflectInType<T>(Type transformationType, Action<Type, T> persistor) where T : class'
    parameters:
    - id: transformationType
      type: System.Type
      description: The type that should be reflected
    - id: persistor
      type: System.Action{System.Type,{T}}
      description: A method that should be executed to save the reflected transformation rule
    typeParameters:
    - id: T
    content.vb: Public Shared Sub ReflectInType(Of T As Class)(transformationType As Type, persistor As Action(Of Type, T))
  overload: NMF.Transformations.Reflector.ReflectInType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: An ArgumentNullException is thrown if the transformationType parameter is passed a null instance
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: An ArgumentNullException is thrown if the persistor parameter is passed a null instance
  nameWithType.vb: Reflector.ReflectInType(Of T)(Type, Action(Of Type, T))
  fullName.vb: NMF.Transformations.Reflector.ReflectInType(Of T)(System.Type, System.Action(Of System.Type, T))
  name.vb: ReflectInType(Of T)(Type, Action(Of Type, T))
references:
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  href: NMF.html
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Transformations
    name: Transformations
    href: NMF.Transformations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Reflector.ReflectDictionary*
  commentId: Overload:NMF.Transformations.Reflector.ReflectDictionary
  href: NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectDictionary__1_System_Collections_Generic_Stack_System_Type__System_Func_System_Collections_Generic_IEnumerable___0___System_Func_System_Collections_Generic_IEnumerable___0___
  name: ReflectDictionary
  nameWithType: Reflector.ReflectDictionary
  fullName: NMF.Transformations.Reflector.ReflectDictionary
- uid: System.Collections.Generic.Stack{System.Type}
  commentId: T:System.Collections.Generic.Stack{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<Type>
  nameWithType: Stack<Type>
  fullName: System.Collections.Generic.Stack<System.Type>
  nameWithType.vb: Stack(Of Type)
  fullName.vb: System.Collections.Generic.Stack(Of System.Type)
  name.vb: Stack(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Func{System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Func{System.Collections.Generic.IEnumerable{``0}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<IEnumerable<T>>
  nameWithType: Func<IEnumerable<T>>
  fullName: System.Func<System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Func(Of IEnumerable(Of T))
  fullName.vb: System.Func(Of System.Collections.Generic.IEnumerable(Of T))
  name.vb: Func(Of IEnumerable(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{System.Type,{T}}
  commentId: T:System.Collections.Generic.IDictionary{System.Type,``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<Type, T>
  nameWithType: IDictionary<Type, T>
  fullName: System.Collections.Generic.IDictionary<System.Type, T>
  nameWithType.vb: IDictionary(Of Type, T)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Type, T)
  name.vb: IDictionary(Of Type, T)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.stack-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: NMF.Transformations.Reflector.ReflectInType*
  commentId: Overload:NMF.Transformations.Reflector.ReflectInType
  href: NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectInType__1_System_Type_System_Action_System_Type___0__
  name: ReflectInType
  nameWithType: Reflector.ReflectInType
  fullName: NMF.Transformations.Reflector.ReflectInType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Action{System.Type,{T}}
  commentId: T:System.Action{System.Type,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Type, T>
  nameWithType: Action<Type, T>
  fullName: System.Action<System.Type, T>
  nameWithType.vb: Action(Of Type, T)
  fullName.vb: System.Action(Of System.Type, T)
  name.vb: Action(Of Type, T)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
