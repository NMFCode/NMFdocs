### YamlMime:ManagedReference
items:
- uid: NMF.Collections.ObjectModel.OppositeList`2
  commentId: T:NMF.Collections.ObjectModel.OppositeList`2
  id: OppositeList`2
  parent: NMF.Collections.ObjectModel
  children:
  - NMF.Collections.ObjectModel.OppositeList`2.#ctor(`0)
  - NMF.Collections.ObjectModel.OppositeList`2.ClearItems
  - NMF.Collections.ObjectModel.OppositeList`2.InsertItem(System.Int32,`1)
  - NMF.Collections.ObjectModel.OppositeList`2.Parent
  - NMF.Collections.ObjectModel.OppositeList`2.RemoveItem(System.Int32)
  - NMF.Collections.ObjectModel.OppositeList`2.SetItem(System.Int32,`1)
  - NMF.Collections.ObjectModel.OppositeList`2.SetOpposite(`1,`0)
  langs:
  - csharp
  - vb
  name: OppositeList<TParent, TCollected>
  nameWithType: OppositeList<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>
  type: Class
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: OppositeList
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 106
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: 'public abstract class OppositeList<TParent, TCollected> : Collection<TCollected>, IList<TCollected>, ICollection<TCollected>, IList, ICollection, IReadOnlyList<TCollected>, IReadOnlyCollection<TCollected>, IEnumerable<TCollected>, IEnumerable'
    typeParameters:
    - id: TParent
    - id: TCollected
    content.vb: >-
      Public MustInherit Class OppositeList(Of TParent, TCollected)

          Inherits Collection(Of TCollected)

          Implements IList(Of TCollected), ICollection(Of TCollected), IList, ICollection, IReadOnlyList(Of TCollected), IReadOnlyCollection(Of TCollected), IEnumerable(Of TCollected), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{{TCollected}}
  implements:
  - System.Collections.Generic.IList{{TCollected}}
  - System.Collections.Generic.ICollection{{TCollected}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{TCollected}}
  - System.Collections.Generic.IReadOnlyCollection{{TCollected}}
  - System.Collections.Generic.IEnumerable{{TCollected}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.ObjectModel.Collection{{TCollected}}.Add({TCollected})
  - System.Collections.ObjectModel.Collection{{TCollected}}.Clear
  - System.Collections.ObjectModel.Collection{{TCollected}}.CopyTo({TCollected}[],System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.Contains({TCollected})
  - System.Collections.ObjectModel.Collection{{TCollected}}.GetEnumerator
  - System.Collections.ObjectModel.Collection{{TCollected}}.IndexOf({TCollected})
  - System.Collections.ObjectModel.Collection{{TCollected}}.Insert(System.Int32,{TCollected})
  - System.Collections.ObjectModel.Collection{{TCollected}}.Remove({TCollected})
  - System.Collections.ObjectModel.Collection{{TCollected}}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{{TCollected}}.Count
  - System.Collections.ObjectModel.Collection{{TCollected}}.Items
  - System.Collections.ObjectModel.Collection{{TCollected}}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IsFixedSize
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: OppositeList(Of TParent, TCollected)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected)
  name.vb: OppositeList(Of TParent, TCollected)
- uid: NMF.Collections.ObjectModel.OppositeList`2.Parent
  commentId: P:NMF.Collections.ObjectModel.OppositeList`2.Parent
  id: Parent
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: OppositeList<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.Parent
  type: Property
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Parent
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 109
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: public TParent Parent { get; }
    parameters: []
    return:
      type: '{TParent}'
    content.vb: Public ReadOnly Property Parent As TParent
  overload: NMF.Collections.ObjectModel.OppositeList`2.Parent*
  nameWithType.vb: OppositeList(Of TParent, TCollected).Parent
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.OppositeList`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.SetOpposite(`1,`0)
  id: SetOpposite(`1,`0)
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: SetOpposite(TCollected, TParent)
  nameWithType: OppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.SetOpposite(TCollected, TParent)
  type: Method
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetOpposite
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 111
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected abstract void SetOpposite(TCollected item, TParent newParent)
    parameters:
    - id: item
      type: '{TCollected}'
    - id: newParent
      type: '{TParent}'
    content.vb: Protected MustOverride Sub SetOpposite(item As TCollected, newParent As TParent)
  overload: NMF.Collections.ObjectModel.OppositeList`2.SetOpposite*
  nameWithType.vb: OppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).SetOpposite(TCollected, TParent)
- uid: NMF.Collections.ObjectModel.OppositeList`2.#ctor(`0)
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.#ctor(`0)
  id: '#ctor(`0)'
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: OppositeList(TParent)
  nameWithType: OppositeList<TParent, TCollected>.OppositeList(TParent)
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.OppositeList(TParent)
  type: Constructor
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 113
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected OppositeList(TParent parent)
    parameters:
    - id: parent
      type: '{TParent}'
    content.vb: Protected Sub New(parent As TParent)
  overload: NMF.Collections.ObjectModel.OppositeList`2.#ctor*
  nameWithType.vb: OppositeList(Of TParent, TCollected).OppositeList(TParent)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).OppositeList(TParent)
- uid: NMF.Collections.ObjectModel.OppositeList`2.ClearItems
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.ClearItems
  id: ClearItems
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: ClearItems()
  nameWithType: OppositeList<TParent, TCollected>.ClearItems()
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.ClearItems()
  type: Method
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ClearItems
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 120
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected override void ClearItems()
    content.vb: Protected Overrides Sub ClearItems
  overridden: System.Collections.ObjectModel.Collection{{TCollected}}.ClearItems
  overload: NMF.Collections.ObjectModel.OppositeList`2.ClearItems*
  nameWithType.vb: OppositeList(Of TParent, TCollected).ClearItems()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).ClearItems()
- uid: NMF.Collections.ObjectModel.OppositeList`2.InsertItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: InsertItem(Int32, TCollected)
  nameWithType: OppositeList<TParent, TCollected>.InsertItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.InsertItem(System.Int32, TCollected)
  type: Method
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: InsertItem
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 130
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected override void InsertItem(int index, TCollected item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TCollected}'
    content.vb: Protected Overrides Sub InsertItem(index As Integer, item As TCollected)
  overridden: System.Collections.ObjectModel.Collection{{TCollected}}.InsertItem(System.Int32,{TCollected})
  overload: NMF.Collections.ObjectModel.OppositeList`2.InsertItem*
  nameWithType.vb: OppositeList(Of TParent, TCollected).InsertItem(Int32, TCollected)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).InsertItem(System.Int32, TCollected)
- uid: NMF.Collections.ObjectModel.OppositeList`2.RemoveItem(System.Int32)
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: RemoveItem(Int32)
  nameWithType: OppositeList<TParent, TCollected>.RemoveItem(Int32)
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.RemoveItem(System.Int32)
  type: Method
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RemoveItem
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 136
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected override void RemoveItem(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Protected Overrides Sub RemoveItem(index As Integer)
  overridden: System.Collections.ObjectModel.Collection{{TCollected}}.RemoveItem(System.Int32)
  overload: NMF.Collections.ObjectModel.OppositeList`2.RemoveItem*
  nameWithType.vb: OppositeList(Of TParent, TCollected).RemoveItem(Int32)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).RemoveItem(System.Int32)
- uid: NMF.Collections.ObjectModel.OppositeList`2.SetItem(System.Int32,`1)
  commentId: M:NMF.Collections.ObjectModel.OppositeList`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: NMF.Collections.ObjectModel.OppositeList`2
  langs:
  - csharp
  - vb
  name: SetItem(Int32, TCollected)
  nameWithType: OppositeList<TParent, TCollected>.SetItem(Int32, TCollected)
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.SetItem(System.Int32, TCollected)
  type: Method
  source:
    remote:
      path: Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SetItem
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 142
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected override void SetItem(int index, TCollected item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TCollected}'
    content.vb: Protected Overrides Sub SetItem(index As Integer, item As TCollected)
  overridden: System.Collections.ObjectModel.Collection{{TCollected}}.SetItem(System.Int32,{TCollected})
  overload: NMF.Collections.ObjectModel.OppositeList`2.SetItem*
  nameWithType.vb: OppositeList(Of TParent, TCollected).SetItem(Int32, TCollected)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).SetItem(System.Int32, TCollected)
references:
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{{TCollected}}
  commentId: T:System.Collections.ObjectModel.Collection{`1}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<TCollected>
  nameWithType: Collection<TCollected>
  fullName: System.Collections.ObjectModel.Collection<TCollected>
  nameWithType.vb: Collection(Of TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected)
  name.vb: Collection(Of TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{{TCollected}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TCollected>
  nameWithType: IList<TCollected>
  fullName: System.Collections.Generic.IList<TCollected>
  nameWithType.vb: IList(Of TCollected)
  fullName.vb: System.Collections.Generic.IList(Of TCollected)
  name.vb: IList(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TCollected}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TCollected>
  nameWithType: ICollection<TCollected>
  fullName: System.Collections.Generic.ICollection<TCollected>
  nameWithType.vb: ICollection(Of TCollected)
  fullName.vb: System.Collections.Generic.ICollection(Of TCollected)
  name.vb: ICollection(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{{TCollected}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TCollected>
  nameWithType: IReadOnlyList<TCollected>
  fullName: System.Collections.Generic.IReadOnlyList<TCollected>
  nameWithType.vb: IReadOnlyList(Of TCollected)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TCollected)
  name.vb: IReadOnlyList(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{{TCollected}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<TCollected>
  nameWithType: IReadOnlyCollection<TCollected>
  fullName: System.Collections.Generic.IReadOnlyCollection<TCollected>
  nameWithType.vb: IReadOnlyCollection(Of TCollected)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TCollected)
  name.vb: IReadOnlyCollection(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TCollected}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TCollected>
  nameWithType: IEnumerable<TCollected>
  fullName: System.Collections.Generic.IEnumerable<TCollected>
  nameWithType.vb: IEnumerable(Of TCollected)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TCollected)
  name.vb: IEnumerable(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Add({TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Add(`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(TCollected)
  nameWithType: Collection<TCollected>.Add(TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Add(TCollected)
  nameWithType.vb: Collection(Of TCollected).Add(TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Add(TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<TCollected>.Add
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of TCollected).Add
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Clear
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<TCollected>.Clear()
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Clear()
  nameWithType.vb: Collection(Of TCollected).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<TCollected>.Clear
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of TCollected).Clear
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.CopyTo({TCollected}[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.CopyTo(`1[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TCollected[], Int32)
  nameWithType: Collection<TCollected>.CopyTo(TCollected[], Int32)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.CopyTo(TCollected[], System.Int32)
  nameWithType.vb: Collection(Of TCollected).CopyTo(TCollected(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).CopyTo(TCollected(), System.Int32)
  name.vb: CopyTo(TCollected(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<TCollected>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<TCollected>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of TCollected).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Contains({TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Contains(`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(TCollected)
  nameWithType: Collection<TCollected>.Contains(TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Contains(TCollected)
  nameWithType.vb: Collection(Of TCollected).Contains(TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Contains(TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<TCollected>.Contains
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of TCollected).Contains
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<TCollected>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<TCollected>.GetEnumerator()
  nameWithType.vb: Collection(Of TCollected).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<TCollected>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<TCollected>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of TCollected).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.IndexOf({TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.IndexOf(`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(TCollected)
  nameWithType: Collection<TCollected>.IndexOf(TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.IndexOf(TCollected)
  nameWithType.vb: Collection(Of TCollected).IndexOf(TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).IndexOf(TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<TCollected>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<TCollected>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of TCollected).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Insert(System.Int32,{TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Insert(System.Int32,`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, TCollected)
  nameWithType: Collection<TCollected>.Insert(Int32, TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Insert(System.Int32, TCollected)
  nameWithType.vb: Collection(Of TCollected).Insert(Int32, TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Insert(System.Int32, TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<TCollected>.Insert
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of TCollected).Insert
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Remove({TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Remove(`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(TCollected)
  nameWithType: Collection<TCollected>.Remove(TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Remove(TCollected)
  nameWithType.vb: Collection(Of TCollected).Remove(TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Remove(TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<TCollected>.Remove
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of TCollected).Remove
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<TCollected>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of TCollected).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<TCollected>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<TCollected>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of TCollected).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<TCollected>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of TCollected).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<TCollected>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of TCollected).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<TCollected>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of TCollected).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<TCollected>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of TCollected).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<TCollected>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<TCollected>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of TCollected).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<TCollected>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<TCollected>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of TCollected).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<TCollected>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<TCollected>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of TCollected).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<TCollected>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<TCollected>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of TCollected).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<TCollected>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<TCollected>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of TCollected).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<TCollected>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<TCollected>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of TCollected).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<TCollected>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<TCollected>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of TCollected).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Count
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Count
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<TCollected>.Count
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Count
  nameWithType.vb: Collection(Of TCollected).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Count
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Items
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Items
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<TCollected>.Items
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Items
  nameWithType.vb: Collection(Of TCollected).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Items
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<TCollected>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<TCollected>.Item[System.Int32]
  nameWithType.vb: Collection(Of TCollected).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<TCollected>.Item
    fullName: System.Collections.ObjectModel.Collection<TCollected>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of TCollected).Item
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<TCollected>.IsReadOnly
  nameWithType: Collection<TCollected>.ICollection<TCollected>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.Generic.ICollection<TCollected>.IsReadOnly
  nameWithType.vb: Collection(Of TCollected).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<TCollected>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of TCollected).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<TCollected>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of TCollected).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<TCollected>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<TCollected>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of TCollected).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<TCollected>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<TCollected>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<TCollected>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of TCollected).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: NMF.Collections.ObjectModel.OppositeList`2.Parent*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.Parent
  name: Parent
  nameWithType: OppositeList<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.Parent
  nameWithType.vb: OppositeList(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).Parent
- uid: '{TParent}'
  commentId: '!:TParent'
  definition: TParent
  name: TParent
  nameWithType: TParent
  fullName: TParent
- uid: TParent
  name: TParent
  nameWithType: TParent
  fullName: TParent
- uid: NMF.Collections.ObjectModel.OppositeList`2.SetOpposite*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.SetOpposite
  name: SetOpposite
  nameWithType: OppositeList<TParent, TCollected>.SetOpposite
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.SetOpposite
  nameWithType.vb: OppositeList(Of TParent, TCollected).SetOpposite
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).SetOpposite
- uid: '{TCollected}'
  commentId: '!:TCollected'
  definition: TCollected
  name: TCollected
  nameWithType: TCollected
  fullName: TCollected
- uid: TCollected
  name: TCollected
  nameWithType: TCollected
  fullName: TCollected
- uid: NMF.Collections.ObjectModel.OppositeList`2.#ctor*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.#ctor
  name: OppositeList
  nameWithType: OppositeList<TParent, TCollected>.OppositeList
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.OppositeList
  nameWithType.vb: OppositeList(Of TParent, TCollected).OppositeList
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).OppositeList
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection{`1}.ClearItems
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.ClearItems
  name: ClearItems()
  nameWithType: Collection<TCollected>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<TCollected>.ClearItems()
  nameWithType.vb: Collection(Of TCollected).ClearItems()
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<TCollected>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<TCollected>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of TCollected).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.OppositeList`2.ClearItems*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.ClearItems
  name: ClearItems
  nameWithType: OppositeList<TParent, TCollected>.ClearItems
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.ClearItems
  nameWithType.vb: OppositeList(Of TParent, TCollected).ClearItems
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).ClearItems
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: Collection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
  nameWithType.vb: Collection(Of T).ClearItems()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<T>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of T).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.InsertItem(System.Int32,{TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, TCollected)
  nameWithType: Collection<TCollected>.InsertItem(Int32, TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.InsertItem(System.Int32, TCollected)
  nameWithType.vb: Collection(Of TCollected).InsertItem(Int32, TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).InsertItem(System.Int32, TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection<TCollected>.InsertItem
    fullName: System.Collections.ObjectModel.Collection<TCollected>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection(Of TCollected).InsertItem
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.OppositeList`2.InsertItem*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.InsertItem
  name: InsertItem
  nameWithType: OppositeList<TParent, TCollected>.InsertItem
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.InsertItem
  nameWithType.vb: OppositeList(Of TParent, TCollected).InsertItem
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).InsertItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: Collection<T>.InsertItem(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(System.Int32, T)
  nameWithType.vb: Collection(Of T).InsertItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection<T>.InsertItem
    fullName: System.Collections.ObjectModel.Collection<T>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: Collection(Of T).InsertItem
    fullName: System.Collections.ObjectModel.Collection(Of T).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: Collection<TCollected>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.RemoveItem(System.Int32)
  nameWithType.vb: Collection(Of TCollected).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection<TCollected>.RemoveItem
    fullName: System.Collections.ObjectModel.Collection<TCollected>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection(Of TCollected).RemoveItem
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.OppositeList`2.RemoveItem*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.RemoveItem
  name: RemoveItem
  nameWithType: OppositeList<TParent, TCollected>.RemoveItem
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.RemoveItem
  nameWithType.vb: OppositeList(Of TParent, TCollected).RemoveItem
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).RemoveItem
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: Collection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection<T>.RemoveItem
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: Collection(Of T).RemoveItem
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{TCollected}}.SetItem(System.Int32,{TCollected})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.Collection{{TCollected}}
  definition: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, TCollected)
  nameWithType: Collection<TCollected>.SetItem(Int32, TCollected)
  fullName: System.Collections.ObjectModel.Collection<TCollected>.SetItem(System.Int32, TCollected)
  nameWithType.vb: Collection(Of TCollected).SetItem(Int32, TCollected)
  fullName.vb: System.Collections.ObjectModel.Collection(Of TCollected).SetItem(System.Int32, TCollected)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection<TCollected>.SetItem
    fullName: System.Collections.ObjectModel.Collection<TCollected>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection(Of TCollected).SetItem
    fullName: System.Collections.ObjectModel.Collection(Of TCollected).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TCollected
    nameWithType: TCollected
    fullName: TCollected
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Collections.ObjectModel.OppositeList`2.SetItem*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeList`2.SetItem
  name: SetItem
  nameWithType: OppositeList<TParent, TCollected>.SetItem
  fullName: NMF.Collections.ObjectModel.OppositeList<TParent, TCollected>.SetItem
  nameWithType.vb: OppositeList(Of TParent, TCollected).SetItem
  fullName.vb: NMF.Collections.ObjectModel.OppositeList(Of TParent, TCollected).SetItem
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: Collection<T>.SetItem(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(System.Int32, T)
  nameWithType.vb: Collection(Of T).SetItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection<T>.SetItem
    fullName: System.Collections.ObjectModel.Collection<T>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: Collection(Of T).SetItem
    fullName: System.Collections.ObjectModel.Collection(Of T).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
