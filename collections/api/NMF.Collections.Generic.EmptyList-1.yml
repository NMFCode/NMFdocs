### YamlMime:ManagedReference
items:
- uid: NMF.Collections.Generic.EmptyList`1
  commentId: T:NMF.Collections.Generic.EmptyList`1
  id: EmptyList`1
  parent: NMF.Collections.Generic
  children:
  - NMF.Collections.Generic.EmptyList`1.AsNotifiable
  - NMF.Collections.Generic.EmptyList`1.Instance
  langs:
  - csharp
  - vb
  name: EmptyList<T>
  nameWithType: EmptyList<T>
  fullName: NMF.Collections.Generic.EmptyList<T>
  type: Class
  source:
    remote:
      path: Collections/Collections/Generic/EmptyList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EmptyList
    path: src/Collections/Collections/Generic/EmptyList.cs
    startLine: 17
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  summary: Denotes an empty list
  example: []
  syntax:
    content: 'public sealed class EmptyList<T> : IListExpression<T>, IList<T>, ICollectionExpression<T>, IEnumerableExpression<T>, IEnumerableExpression, ICollection<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
      description: The element type
    content.vb: Public NotInheritable Class EmptyList(Of T) Implements IListExpression(Of T), IList(Of T), ICollectionExpression(Of T), IEnumerableExpression(Of T), IEnumerableExpression, ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - NMF.Expressions.IListExpression{{T}}
  - System.Collections.Generic.IList{{T}}
  - NMF.Expressions.ICollectionExpression{{T}}
  - NMF.Expressions.IEnumerableExpression{{T}}
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EmptyList(Of T)
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T)
  name.vb: EmptyList(Of T)
- uid: NMF.Collections.Generic.EmptyList`1.Instance
  commentId: P:NMF.Collections.Generic.EmptyList`1.Instance
  id: Instance
  parent: NMF.Collections.Generic.EmptyList`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: EmptyList<T>.Instance
  fullName: NMF.Collections.Generic.EmptyList<T>.Instance
  type: Property
  source:
    remote:
      path: Collections/Collections/Generic/EmptyList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Instance
    path: src/Collections/Collections/Generic/EmptyList.cs
    startLine: 24
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  summary: Gets the instance
  example: []
  syntax:
    content: public static EmptyList<T> Instance { get; }
    parameters: []
    return:
      type: NMF.Collections.Generic.EmptyList`1
    content.vb: Public Shared ReadOnly Property Instance As EmptyList(Of T)
  overload: NMF.Collections.Generic.EmptyList`1.Instance*
  nameWithType.vb: EmptyList(Of T).Instance
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T).Instance
- uid: NMF.Collections.Generic.EmptyList`1.AsNotifiable
  commentId: M:NMF.Collections.Generic.EmptyList`1.AsNotifiable
  id: AsNotifiable
  parent: NMF.Collections.Generic.EmptyList`1
  langs:
  - csharp
  - vb
  name: AsNotifiable()
  nameWithType: EmptyList<T>.AsNotifiable()
  fullName: NMF.Collections.Generic.EmptyList<T>.AsNotifiable()
  type: Method
  source:
    remote:
      path: Collections/Collections/Generic/EmptyList.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AsNotifiable
    path: src/Collections/Collections/Generic/EmptyList.cs
    startLine: 104
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  summary: Gets notifications for this collection
  example: []
  syntax:
    content: public INotifyCollection<T> AsNotifiable()
    return:
      type: NMF.Expressions.INotifyCollection{{T}}
      description: A collection that will notify clients as new elements change
    content.vb: Public Function AsNotifiable() As INotifyCollection(Of T)
  overload: NMF.Collections.Generic.EmptyList`1.AsNotifiable*
  implements:
  - NMF.Expressions.ICollectionExpression{{T}}.AsNotifiable
  nameWithType.vb: EmptyList(Of T).AsNotifiable()
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T).AsNotifiable()
references:
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  href: NMF.html
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Expressions.IListExpression{{T}}
  commentId: T:NMF.Expressions.IListExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  nameWithType: IListExpression<T>
  fullName: NMF.Expressions.IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  name.vb: IListExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.ICollectionExpression{{T}}
  commentId: T:NMF.Expressions.ICollectionExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression{{T}}
  commentId: T:NMF.Expressions.IEnumerableExpression{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Expressions.IListExpression`1
  commentId: T:NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  nameWithType: IListExpression<T>
  fullName: NMF.Expressions.IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  name.vb: IListExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IListExpression`1
    name: IListExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Collections.Generic.EmptyList`1.Instance*
  commentId: Overload:NMF.Collections.Generic.EmptyList`1.Instance
  href: NMF.Collections.Generic.EmptyList-1.html#NMF_Collections_Generic_EmptyList_1_Instance
  name: Instance
  nameWithType: EmptyList<T>.Instance
  fullName: NMF.Collections.Generic.EmptyList<T>.Instance
  nameWithType.vb: EmptyList(Of T).Instance
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T).Instance
- uid: NMF.Collections.Generic.EmptyList`1
  commentId: T:NMF.Collections.Generic.EmptyList`1
  parent: NMF.Collections.Generic
  href: NMF.Collections.Generic.EmptyList-1.html
  name: EmptyList<T>
  nameWithType: EmptyList<T>
  fullName: NMF.Collections.Generic.EmptyList<T>
  nameWithType.vb: EmptyList(Of T)
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T)
  name.vb: EmptyList(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.EmptyList`1
    name: EmptyList
    href: NMF.Collections.Generic.EmptyList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.EmptyList`1
    name: EmptyList
    href: NMF.Collections.Generic.EmptyList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.EmptyList`1.AsNotifiable*
  commentId: Overload:NMF.Collections.Generic.EmptyList`1.AsNotifiable
  href: NMF.Collections.Generic.EmptyList-1.html#NMF_Collections_Generic_EmptyList_1_AsNotifiable
  name: AsNotifiable
  nameWithType: EmptyList<T>.AsNotifiable
  fullName: NMF.Collections.Generic.EmptyList<T>.AsNotifiable
  nameWithType.vb: EmptyList(Of T).AsNotifiable
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T).AsNotifiable
- uid: NMF.Expressions.ICollectionExpression{{T}}.AsNotifiable
  commentId: M:NMF.Expressions.ICollectionExpression{`0}.AsNotifiable
  parent: NMF.Expressions.ICollectionExpression{{T}}
  definition: NMF.Expressions.ICollectionExpression`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ICollectionExpression<T>.AsNotifiable()
  fullName: NMF.Expressions.ICollectionExpression<T>.AsNotifiable()
  nameWithType.vb: ICollectionExpression(Of T).AsNotifiable()
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression{`0}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression{`0}.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Expressions.INotifyCollection{{T}}
  commentId: T:NMF.Expressions.INotifyCollection{`0}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyCollection`1
  name: INotifyCollection<T>
  nameWithType: INotifyCollection<T>
  fullName: NMF.Expressions.INotifyCollection<T>
  nameWithType.vb: INotifyCollection(Of T)
  fullName.vb: NMF.Expressions.INotifyCollection(Of T)
  name.vb: INotifyCollection(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyCollection`1
    name: INotifyCollection
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyCollection`1
    name: INotifyCollection
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions.ICollectionExpression`1.AsNotifiable
  commentId: M:NMF.Expressions.ICollectionExpression`1.AsNotifiable
  name: AsNotifiable()
  nameWithType: ICollectionExpression<T>.AsNotifiable()
  fullName: NMF.Expressions.ICollectionExpression<T>.AsNotifiable()
  nameWithType.vb: ICollectionExpression(Of T).AsNotifiable()
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T).AsNotifiable()
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1.AsNotifiable
    name: AsNotifiable
  - name: (
  - name: )
- uid: NMF.Expressions.INotifyCollection`1
  commentId: T:NMF.Expressions.INotifyCollection`1
  name: INotifyCollection<T>
  nameWithType: INotifyCollection<T>
  fullName: NMF.Expressions.INotifyCollection<T>
  nameWithType.vb: INotifyCollection(Of T)
  fullName.vb: NMF.Expressions.INotifyCollection(Of T)
  name.vb: INotifyCollection(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyCollection`1
    name: INotifyCollection
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyCollection`1
    name: INotifyCollection
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
