### YamlMime:TableOfContent
items:
- uid: NMF.Collections.Generic
  name: NMF.Collections.Generic
  items:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet<T>
  - uid: NMF.Collections.Generic.EmptyList`1
    name: EmptyList<T>
  - uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1
    name: EnumerableDebuggerProxy<T>
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression<T>
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet<T>
  - uid: NMF.Collections.Generic.LooselyLinkedListNode`1
    name: LooselyLinkedListNode<T>
  - uid: NMF.Collections.Generic.LooselyLinkedList`1
    name: LooselyLinkedList<T>
  - uid: NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
    name: LooselyLinkedList<T>.Enumerator
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet<T>
  - uid: NMF.Collections.Generic.ReadOnlyListSelection`2
    name: ReadOnlyListSelection<TSource, T>
  - uid: NMF.Collections.Generic.ReadOnlyOrderedSet`1
    name: ReadOnlyOrderedSet<T>
- uid: NMF.Collections.ObjectModel
  name: NMF.Collections.ObjectModel
  items:
  - uid: NMF.Collections.ObjectModel.CustomCollection`1
    name: CustomCollection<T>
  - uid: NMF.Collections.ObjectModel.INotifyCollectionChanging
    name: INotifyCollectionChanging
  - uid: NMF.Collections.ObjectModel.ObservableCollectionExtended`1
    name: ObservableCollectionExtended<T>
  - uid: NMF.Collections.ObjectModel.ObservableList`1
    name: ObservableList<T>
  - uid: NMF.Collections.ObjectModel.ObservableOppositeList`2
    name: ObservableOppositeList<TParent, TCollected>
  - uid: NMF.Collections.ObjectModel.ObservableOppositeOrderedSet`2
    name: ObservableOppositeOrderedSet<TParent, TCollected>
  - uid: NMF.Collections.ObjectModel.ObservableOppositeSet`2
    name: ObservableOppositeSet<TParent, TCollected>
  - uid: NMF.Collections.ObjectModel.ObservableOrderedSet`1
    name: ObservableOrderedSet<T>
  - uid: NMF.Collections.ObjectModel.ObservableReadOnlyOrderedSet`1
    name: ObservableReadOnlyOrderedSet<T>
  - uid: NMF.Collections.ObjectModel.ObservableSet`1
    name: ObservableSet<T>
  - uid: NMF.Collections.ObjectModel.OppositeList`2
    name: OppositeList<TParent, TCollected>
  - uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2
    name: OppositeOrderedSet<TParent, TCollected>
  - uid: NMF.Collections.ObjectModel.OppositeSet`2
    name: OppositeSet<TParent, TCollected>
memberLayout: SamePage
