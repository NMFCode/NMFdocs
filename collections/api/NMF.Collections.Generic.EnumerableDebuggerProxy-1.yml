### YamlMime:ManagedReference
items:
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1
  commentId: T:NMF.Collections.Generic.EnumerableDebuggerProxy`1
  id: EnumerableDebuggerProxy`1
  parent: NMF.Collections.Generic
  children:
  - NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items
  langs:
  - csharp
  - vb
  name: EnumerableDebuggerProxy<T>
  nameWithType: EnumerableDebuggerProxy<T>
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>
  type: Class
  source:
    remote:
      path: Collections/Collections/Generic/EnumerableDebuggerProxy.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: EnumerableDebuggerProxy
    path: src/Collections/Collections/Generic/EnumerableDebuggerProxy.cs
    startLine: 8
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  syntax:
    content: public class EnumerableDebuggerProxy<T>
    typeParameters:
    - id: T
    content.vb: Public Class EnumerableDebuggerProxy(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EnumerableDebuggerProxy(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T)
  name.vb: EnumerableDebuggerProxy(Of T)
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: NMF.Collections.Generic.EnumerableDebuggerProxy`1
  langs:
  - csharp
  - vb
  name: EnumerableDebuggerProxy(IEnumerable<T>)
  nameWithType: EnumerableDebuggerProxy<T>.EnumerableDebuggerProxy(IEnumerable<T>)
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>.EnumerableDebuggerProxy(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: Collections/Collections/Generic/EnumerableDebuggerProxy.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Collections/Collections/Generic/EnumerableDebuggerProxy.cs
    startLine: 12
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  syntax:
    content: public EnumerableDebuggerProxy(IEnumerable<T> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Sub New(items As IEnumerable(Of T))
  overload: NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor*
  nameWithType.vb: EnumerableDebuggerProxy(Of T).EnumerableDebuggerProxy(IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T).EnumerableDebuggerProxy(System.Collections.Generic.IEnumerable(Of T))
  name.vb: EnumerableDebuggerProxy(IEnumerable(Of T))
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items
  commentId: P:NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items
  id: Items
  parent: NMF.Collections.Generic.EnumerableDebuggerProxy`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: EnumerableDebuggerProxy<T>.Items
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>.Items
  type: Property
  source:
    remote:
      path: Collections/Collections/Generic/EnumerableDebuggerProxy.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Items
    path: src/Collections/Collections/Generic/EnumerableDebuggerProxy.cs
    startLine: 17
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.Generic
  syntax:
    content: public T[] Items { get; }
    parameters: []
    return:
      type: '{T}[]'
    content.vb: Public ReadOnly Property Items As T()
  overload: NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items*
  nameWithType.vb: EnumerableDebuggerProxy(Of T).Items
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T).Items
references:
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor*
  commentId: Overload:NMF.Collections.Generic.EnumerableDebuggerProxy`1.#ctor
  name: EnumerableDebuggerProxy
  nameWithType: EnumerableDebuggerProxy<T>.EnumerableDebuggerProxy
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>.EnumerableDebuggerProxy
  nameWithType.vb: EnumerableDebuggerProxy(Of T).EnumerableDebuggerProxy
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T).EnumerableDebuggerProxy
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items*
  commentId: Overload:NMF.Collections.Generic.EnumerableDebuggerProxy`1.Items
  name: Items
  nameWithType: EnumerableDebuggerProxy<T>.Items
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>.Items
  nameWithType.vb: EnumerableDebuggerProxy(Of T).Items
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T).Items
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
