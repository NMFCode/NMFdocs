### YamlMime:ManagedReference
items:
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  id: NMF.Collections.Generic
  children:
  - NMF.Collections.Generic.DecoratedSet`1
  - NMF.Collections.Generic.EmptyList`1
  - NMF.Collections.Generic.EnumerableDebuggerProxy`1
  - NMF.Collections.Generic.IOrderedSetExpression`1
  - NMF.Collections.Generic.IOrderedSet`1
  - NMF.Collections.Generic.LooselyLinkedListNode`1
  - NMF.Collections.Generic.LooselyLinkedList`1
  - NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
  - NMF.Collections.Generic.OrderedSet`1
  - NMF.Collections.Generic.ReadOnlyListSelection`2
  - NMF.Collections.Generic.ReadOnlyOrderedSet`1
  langs:
  - csharp
  - vb
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  type: Namespace
  assemblies:
  - NMF.Collections
references:
- uid: NMF.Collections.Generic.DecoratedSet`1
  commentId: T:NMF.Collections.Generic.DecoratedSet`1
  href: NMF.Collections.Generic.DecoratedSet-1.html
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.EmptyList`1
  commentId: T:NMF.Collections.Generic.EmptyList`1
  parent: NMF.Collections.Generic
  href: NMF.Collections.Generic.EmptyList-1.html
  name: EmptyList<T>
  nameWithType: EmptyList<T>
  fullName: NMF.Collections.Generic.EmptyList<T>
  nameWithType.vb: EmptyList(Of T)
  fullName.vb: NMF.Collections.Generic.EmptyList(Of T)
  name.vb: EmptyList(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.EmptyList`1
    name: EmptyList
    href: NMF.Collections.Generic.EmptyList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.EmptyList`1
    name: EmptyList
    href: NMF.Collections.Generic.EmptyList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1
  commentId: T:NMF.Collections.Generic.EnumerableDebuggerProxy`1
  href: NMF.Collections.Generic.EnumerableDebuggerProxy-1.html
  name: EnumerableDebuggerProxy<T>
  nameWithType: EnumerableDebuggerProxy<T>
  fullName: NMF.Collections.Generic.EnumerableDebuggerProxy<T>
  nameWithType.vb: EnumerableDebuggerProxy(Of T)
  fullName.vb: NMF.Collections.Generic.EnumerableDebuggerProxy(Of T)
  name.vb: EnumerableDebuggerProxy(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1
    name: EnumerableDebuggerProxy
    href: NMF.Collections.Generic.EnumerableDebuggerProxy-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.EnumerableDebuggerProxy`1
    name: EnumerableDebuggerProxy
    href: NMF.Collections.Generic.EnumerableDebuggerProxy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.IOrderedSet`1
  commentId: T:NMF.Collections.Generic.IOrderedSet`1
  href: NMF.Collections.Generic.IOrderedSet-1.html
  name: IOrderedSet<T>
  nameWithType: IOrderedSet<T>
  fullName: NMF.Collections.Generic.IOrderedSet<T>
  nameWithType.vb: IOrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of T)
  name.vb: IOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.IOrderedSetExpression`1
  commentId: T:NMF.Collections.Generic.IOrderedSetExpression`1
  href: NMF.Collections.Generic.IOrderedSetExpression-1.html
  name: IOrderedSetExpression<T>
  nameWithType: IOrderedSetExpression<T>
  fullName: NMF.Collections.Generic.IOrderedSetExpression<T>
  nameWithType.vb: IOrderedSetExpression(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSetExpression(Of T)
  name.vb: IOrderedSetExpression(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    href: NMF.Collections.Generic.IOrderedSetExpression-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSetExpression`1
    name: IOrderedSetExpression
    href: NMF.Collections.Generic.IOrderedSetExpression-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.LooselyLinkedList`1
  commentId: T:NMF.Collections.Generic.LooselyLinkedList`1
  href: NMF.Collections.Generic.LooselyLinkedList-1.html
  name: LooselyLinkedList<T>
  nameWithType: LooselyLinkedList<T>
  fullName: NMF.Collections.Generic.LooselyLinkedList<T>
  nameWithType.vb: LooselyLinkedList(Of T)
  fullName.vb: NMF.Collections.Generic.LooselyLinkedList(Of T)
  name.vb: LooselyLinkedList(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.LooselyLinkedList`1
    name: LooselyLinkedList
    href: NMF.Collections.Generic.LooselyLinkedList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.LooselyLinkedList`1
    name: LooselyLinkedList
    href: NMF.Collections.Generic.LooselyLinkedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
  commentId: T:NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
  href: NMF.Collections.Generic.LooselyLinkedList-1.html
  name: LooselyLinkedList<T>.Enumerator
  nameWithType: LooselyLinkedList<T>.Enumerator
  fullName: NMF.Collections.Generic.LooselyLinkedList<T>.Enumerator
  nameWithType.vb: LooselyLinkedList(Of T).Enumerator
  fullName.vb: NMF.Collections.Generic.LooselyLinkedList(Of T).Enumerator
  name.vb: LooselyLinkedList(Of T).Enumerator
  spec.csharp:
  - uid: NMF.Collections.Generic.LooselyLinkedList`1
    name: LooselyLinkedList
    href: NMF.Collections.Generic.LooselyLinkedList-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
    name: Enumerator
    href: NMF.Collections.Generic.LooselyLinkedList-1.Enumerator.html
  spec.vb:
  - uid: NMF.Collections.Generic.LooselyLinkedList`1
    name: LooselyLinkedList
    href: NMF.Collections.Generic.LooselyLinkedList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: NMF.Collections.Generic.LooselyLinkedList`1.Enumerator
    name: Enumerator
    href: NMF.Collections.Generic.LooselyLinkedList-1.Enumerator.html
- uid: NMF.Collections.Generic.LooselyLinkedListNode`1
  commentId: T:NMF.Collections.Generic.LooselyLinkedListNode`1
  parent: NMF.Collections.Generic
  href: NMF.Collections.Generic.LooselyLinkedListNode-1.html
  name: LooselyLinkedListNode<T>
  nameWithType: LooselyLinkedListNode<T>
  fullName: NMF.Collections.Generic.LooselyLinkedListNode<T>
  nameWithType.vb: LooselyLinkedListNode(Of T)
  fullName.vb: NMF.Collections.Generic.LooselyLinkedListNode(Of T)
  name.vb: LooselyLinkedListNode(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.LooselyLinkedListNode`1
    name: LooselyLinkedListNode
    href: NMF.Collections.Generic.LooselyLinkedListNode-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.LooselyLinkedListNode`1
    name: LooselyLinkedListNode
    href: NMF.Collections.Generic.LooselyLinkedListNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1
  commentId: T:NMF.Collections.Generic.OrderedSet`1
  href: NMF.Collections.Generic.OrderedSet-1.html
  name: OrderedSet<T>
  nameWithType: OrderedSet<T>
  fullName: NMF.Collections.Generic.OrderedSet<T>
  nameWithType.vb: OrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T)
  name.vb: OrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.ReadOnlyListSelection`2
  commentId: T:NMF.Collections.Generic.ReadOnlyListSelection`2
  href: NMF.Collections.Generic.ReadOnlyListSelection-2.html
  name: ReadOnlyListSelection<TSource, T>
  nameWithType: ReadOnlyListSelection<TSource, T>
  fullName: NMF.Collections.Generic.ReadOnlyListSelection<TSource, T>
  nameWithType.vb: ReadOnlyListSelection(Of TSource, T)
  fullName.vb: NMF.Collections.Generic.ReadOnlyListSelection(Of TSource, T)
  name.vb: ReadOnlyListSelection(Of TSource, T)
  spec.csharp:
  - uid: NMF.Collections.Generic.ReadOnlyListSelection`2
    name: ReadOnlyListSelection
    href: NMF.Collections.Generic.ReadOnlyListSelection-2.html
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.ReadOnlyListSelection`2
    name: ReadOnlyListSelection
    href: NMF.Collections.Generic.ReadOnlyListSelection-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.ReadOnlyOrderedSet`1
  commentId: T:NMF.Collections.Generic.ReadOnlyOrderedSet`1
  href: NMF.Collections.Generic.ReadOnlyOrderedSet-1.html
  name: ReadOnlyOrderedSet<T>
  nameWithType: ReadOnlyOrderedSet<T>
  fullName: NMF.Collections.Generic.ReadOnlyOrderedSet<T>
  nameWithType.vb: ReadOnlyOrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.ReadOnlyOrderedSet(Of T)
  name.vb: ReadOnlyOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.ReadOnlyOrderedSet`1
    name: ReadOnlyOrderedSet
    href: NMF.Collections.Generic.ReadOnlyOrderedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.ReadOnlyOrderedSet`1
    name: ReadOnlyOrderedSet
    href: NMF.Collections.Generic.ReadOnlyOrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  href: NMF.html
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
