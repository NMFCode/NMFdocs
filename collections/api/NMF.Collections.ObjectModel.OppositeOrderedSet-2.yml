### YamlMime:ManagedReference
items:
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  commentId: T:NMF.Collections.ObjectModel.OppositeOrderedSet`2
  id: OppositeOrderedSet`2
  parent: NMF.Collections.ObjectModel
  children:
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor(`0)
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add(`1)
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove(`1,System.Int32)
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  - NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite(`1,`0)
  langs:
  - csharp
  - vb
  name: OppositeOrderedSet<TParent, TCollected>
  nameWithType: OppositeOrderedSet<TParent, TCollected>
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>
  type: Class
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OppositeOrderedSet
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 9
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: 'public abstract class OppositeOrderedSet<TParent, TCollected> : OrderedSet<TCollected>, IList, ICollection, IOrderedSet<TCollected>, IList<TCollected>, ISet<TCollected>, ICollection<TCollected>, IEnumerable<TCollected>, IEnumerable'
    typeParameters:
    - id: TParent
    - id: TCollected
    content.vb: Public MustInherit Class OppositeOrderedSet(Of TParent, TCollected) Inherits OrderedSet(Of TCollected) Implements IList, ICollection, IOrderedSet(Of TCollected), IList(Of TCollected), ISet(Of TCollected), ICollection(Of TCollected), IEnumerable(Of TCollected), IEnumerable
  inheritance:
  - System.Object
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}
  - NMF.Collections.Generic.OrderedSet{{TCollected}}
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - NMF.Collections.Generic.IOrderedSet{{TCollected}}
  - System.Collections.Generic.IList{{TCollected}}
  - System.Collections.Generic.ISet{{TCollected}}
  - System.Collections.Generic.ICollection{{TCollected}}
  - System.Collections.Generic.IEnumerable{{TCollected}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.Remove({TCollected})
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.GetEnumerator
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.IndexOf({TCollected})
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.Insert(System.Int32,{TCollected})
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.RemoveAt(System.Int32)
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.Item(System.Int32)
  - NMF.Collections.Generic.OrderedSet{{TCollected}}.AsReadOnly
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.Items
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.ExceptWith(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.IntersectWith(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.Overlaps(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.SetEquals(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.UnionWith(System.Collections.Generic.IEnumerable{{TCollected}})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.Contains({TCollected})
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.CopyTo({TCollected}[],System.Int32)
  - NMF.Collections.Generic.DecoratedSet{{TCollected}}.Count
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected)
  name.vb: OppositeOrderedSet(Of TParent, TCollected)
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent
  commentId: P:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent
  id: Parent
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Parent
  type: Property
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Parent
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 11
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: public TParent Parent { get; }
    parameters: []
    return:
      type: '{TParent}'
    content.vb: Public Property Parent As TParent
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Parent
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite(`1,`0)
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite(`1,`0)
  id: SetOpposite(`1,`0)
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: SetOpposite(TCollected, TParent)
  nameWithType: OppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.SetOpposite(TCollected, TParent)
  type: Method
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetOpposite
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 13
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected abstract void SetOpposite(TCollected item, TParent newParent)
    parameters:
    - id: item
      type: '{TCollected}'
    - id: newParent
      type: '{TParent}'
    content.vb: Protected MustOverride Sub SetOpposite(item As TCollected, newParent As TParent)
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).SetOpposite(TCollected, TParent)
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor(`0)
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor(`0)
  id: '#ctor(`0)'
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: OppositeOrderedSet(TParent)
  nameWithType: OppositeOrderedSet<TParent, TCollected>.OppositeOrderedSet(TParent)
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.OppositeOrderedSet(TParent)
  type: Constructor
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 15
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  syntax:
    content: protected OppositeOrderedSet(TParent parent)
    parameters:
    - id: parent
      type: '{TParent}'
    content.vb: Protected Sub New(parent As TParent)
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).New(TParent)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).New(TParent)
  name.vb: New(TParent)
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear
  id: Clear
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Clear()
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Clear()
  type: Method
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Clear
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 22
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  example: []
  syntax:
    content: public override void Clear()
    content.vb: Public Overrides Sub Clear()
  overridden: NMF.Collections.Generic.OrderedSet{{TCollected}}.Clear
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Clear()
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Clear()
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add(`1)
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add(`1)
  id: Add(`1)
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: Add(TCollected)
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Add(TCollected)
  type: Method
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Add
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 32
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  example: []
  syntax:
    content: public override bool Add(TCollected item)
    parameters:
    - id: item
      type: '{TCollected}'
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Add(item As TCollected) As Boolean
  overridden: NMF.Collections.Generic.OrderedSet{{TCollected}}.Add({TCollected})
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Add(TCollected)
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove(`1,System.Int32)
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove(`1,System.Int32)
  id: Remove(`1,System.Int32)
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: Remove(TCollected, int)
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Remove(TCollected, int)
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Remove(TCollected, int)
  type: Method
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Remove
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 42
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  example: []
  syntax:
    content: protected override bool Remove(TCollected item, int index)
    parameters:
    - id: item
      type: '{TCollected}'
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function Remove(item As TCollected, index As Integer) As Boolean
  overridden: NMF.Collections.Generic.OrderedSet{{TCollected}}.Remove({TCollected},System.Int32)
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, Integer)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Remove(TCollected, Integer)
  name.vb: Remove(TCollected, Integer)
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  commentId: M:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace(System.Int32,`1,`1)
  id: Replace(System.Int32,`1,`1)
  parent: NMF.Collections.ObjectModel.OppositeOrderedSet`2
  langs:
  - csharp
  - vb
  name: Replace(int, TCollected, TCollected)
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Replace(int, TCollected, TCollected)
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Replace(int, TCollected, TCollected)
  type: Method
  source:
    remote:
      path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Replace
    path: src/Collections/Collections/ObjectModel/OppositeCollection.cs
    startLine: 52
  assemblies:
  - NMF.Collections
  namespace: NMF.Collections.ObjectModel
  example: []
  syntax:
    content: protected override void Replace(int index, TCollected oldValue, TCollected newValue)
    parameters:
    - id: index
      type: System.Int32
    - id: oldValue
      type: '{TCollected}'
    - id: newValue
      type: '{TCollected}'
    content.vb: Protected Overrides Sub Replace(index As Integer, oldValue As TCollected, newValue As TCollected)
  overridden: NMF.Collections.Generic.OrderedSet{{TCollected}}.Replace(System.Int32,{TCollected},{TCollected})
  overload: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace*
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Replace(Integer, TCollected, TCollected)
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Replace(Integer, TCollected, TCollected)
  name.vb: Replace(Integer, TCollected, TCollected)
references:
- uid: NMF.Collections.ObjectModel
  commentId: N:NMF.Collections.ObjectModel
  href: NMF.html
  name: NMF.Collections.ObjectModel
  nameWithType: NMF.Collections.ObjectModel
  fullName: NMF.Collections.ObjectModel
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
    href: NMF.Collections.ObjectModel.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.ObjectModel
    name: ObjectModel
    href: NMF.Collections.ObjectModel.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  commentId: T:NMF.Collections.Generic.DecoratedSet{`1}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.DecoratedSet`1
  href: NMF.Collections.Generic.DecoratedSet-1.html
  name: DecoratedSet<TCollected>
  nameWithType: DecoratedSet<TCollected>
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>
  nameWithType.vb: DecoratedSet(Of TCollected)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected)
  name.vb: DecoratedSet(Of TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}
  commentId: T:NMF.Collections.Generic.OrderedSet{`1}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.OrderedSet`1
  href: NMF.Collections.Generic.OrderedSet-1.html
  name: OrderedSet<TCollected>
  nameWithType: OrderedSet<TCollected>
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>
  nameWithType.vb: OrderedSet(Of TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected)
  name.vb: OrderedSet(Of TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: NMF.Collections.Generic.IOrderedSet{{TCollected}}
  commentId: T:NMF.Collections.Generic.IOrderedSet{`1}
  parent: NMF.Collections.Generic
  definition: NMF.Collections.Generic.IOrderedSet`1
  href: NMF.Collections.Generic.IOrderedSet-1.html
  name: IOrderedSet<TCollected>
  nameWithType: IOrderedSet<TCollected>
  fullName: NMF.Collections.Generic.IOrderedSet<TCollected>
  nameWithType.vb: IOrderedSet(Of TCollected)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of TCollected)
  name.vb: IOrderedSet(Of TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.Generic.IList{{TCollected}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TCollected>
  nameWithType: IList<TCollected>
  fullName: System.Collections.Generic.IList<TCollected>
  nameWithType.vb: IList(Of TCollected)
  fullName.vb: System.Collections.Generic.IList(Of TCollected)
  name.vb: IList(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.Generic.ISet{{TCollected}}
  commentId: T:System.Collections.Generic.ISet{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<TCollected>
  nameWithType: ISet<TCollected>
  fullName: System.Collections.Generic.ISet<TCollected>
  nameWithType.vb: ISet(Of TCollected)
  fullName.vb: System.Collections.Generic.ISet(Of TCollected)
  name.vb: ISet(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.Generic.ICollection{{TCollected}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TCollected>
  nameWithType: ICollection<TCollected>
  fullName: System.Collections.Generic.ICollection<TCollected>
  nameWithType.vb: ICollection(Of TCollected)
  fullName.vb: System.Collections.Generic.ICollection(Of TCollected)
  name.vb: ICollection(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TCollected}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TCollected>
  nameWithType: IEnumerable<TCollected>
  fullName: System.Collections.Generic.IEnumerable<TCollected>
  nameWithType.vb: IEnumerable(Of TCollected)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TCollected)
  name.vb: IEnumerable(Of TCollected)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Remove({TCollected})
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Remove(`1)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  name: Remove(TCollected)
  nameWithType: OrderedSet<TCollected>.Remove(TCollected)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Remove(TCollected)
  nameWithType.vb: OrderedSet(Of TCollected).Remove(TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Remove(TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Remove(`1)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Remove(`1)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.GetEnumerator
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<TCollected>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of TCollected).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.GetEnumerator
    name: GetEnumerator
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.GetEnumerator
    name: GetEnumerator
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.IndexOf({TCollected})
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.IndexOf(`1)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  name: IndexOf(TCollected)
  nameWithType: OrderedSet<TCollected>.IndexOf(TCollected)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.IndexOf(TCollected)
  nameWithType.vb: OrderedSet(Of TCollected).IndexOf(TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).IndexOf(TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.IndexOf(`1)
    name: IndexOf
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.IndexOf(`1)
    name: IndexOf
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Insert(System.Int32,{TCollected})
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Insert(System.Int32,`1)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Insert(System.Int32,`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  name: Insert(int, TCollected)
  nameWithType: OrderedSet<TCollected>.Insert(int, TCollected)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Insert(int, TCollected)
  nameWithType.vb: OrderedSet(Of TCollected).Insert(Integer, TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Insert(Integer, TCollected)
  name.vb: Insert(Integer, TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Insert(System.Int32,`1)
    name: Insert
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Insert(System.Int32,`1)
    name: Insert
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.RemoveAt(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  name: RemoveAt(int)
  nameWithType: OrderedSet<TCollected>.RemoveAt(int)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.RemoveAt(int)
  nameWithType.vb: OrderedSet(Of TCollected).RemoveAt(Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.RemoveAt(System.Int32)
    name: RemoveAt
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.RemoveAt(System.Int32)
    name: RemoveAt
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet{`1}.Item(System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: OrderedSet<TCollected>.this[int]
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.this[int]
  nameWithType.vb: OrderedSet(Of TCollected).this[](Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Item(System.Int32)
    name: this[]
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.AsReadOnly
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<TCollected>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of TCollected).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.AsReadOnly
    name: AsReadOnly
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.AsReadOnly
    name: AsReadOnly
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet{`1}.Items
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Items
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Items
  name: Items
  nameWithType: DecoratedSet<TCollected>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.Items
  nameWithType.vb: DecoratedSet(Of TCollected).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).Items
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.ExceptWith(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.ExceptWith(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  name: ExceptWith(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.ExceptWith(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.ExceptWith(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).ExceptWith(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).ExceptWith(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: ExceptWith(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.ExceptWith(System.Collections.Generic.IEnumerable{`1})
    name: ExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.ExceptWith(System.Collections.Generic.IEnumerable{`1})
    name: ExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.IntersectWith(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.IntersectWith(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  name: IntersectWith(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.IntersectWith(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.IntersectWith(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).IntersectWith(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).IntersectWith(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: IntersectWith(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IntersectWith(System.Collections.Generic.IEnumerable{`1})
    name: IntersectWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IntersectWith(System.Collections.Generic.IEnumerable{`1})
    name: IntersectWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSubsetOf(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.IsProperSubsetOf(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).IsProperSubsetOf(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: IsProperSubsetOf(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsProperSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsProperSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSupersetOf(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.IsProperSupersetOf(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).IsProperSupersetOf(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: IsProperSupersetOf(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsProperSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsProperSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsSubsetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.IsSubsetOf(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSubsetOf(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.IsSubsetOf(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.IsSubsetOf(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).IsSubsetOf(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).IsSubsetOf(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: IsSubsetOf(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsSubsetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsSubsetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.IsSupersetOf(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.IsSupersetOf(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSupersetOf(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.IsSupersetOf(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.IsSupersetOf(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).IsSupersetOf(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).IsSupersetOf(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: IsSupersetOf(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsSupersetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.IsSupersetOf(System.Collections.Generic.IEnumerable{`1})
    name: IsSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.Overlaps(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.Overlaps(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  name: Overlaps(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.Overlaps(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.Overlaps(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).Overlaps(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).Overlaps(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: Overlaps(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.Overlaps(System.Collections.Generic.IEnumerable{`1})
    name: Overlaps
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.Overlaps(System.Collections.Generic.IEnumerable{`1})
    name: Overlaps
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.SetEquals(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.SetEquals(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  name: SetEquals(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.SetEquals(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.SetEquals(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).SetEquals(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).SetEquals(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: SetEquals(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.SetEquals(System.Collections.Generic.IEnumerable{`1})
    name: SetEquals
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.SetEquals(System.Collections.Generic.IEnumerable{`1})
    name: SetEquals
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  name: SymmetricExceptWith(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.SymmetricExceptWith(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).SymmetricExceptWith(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: SymmetricExceptWith(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`1})
    name: SymmetricExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`1})
    name: SymmetricExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.UnionWith(System.Collections.Generic.IEnumerable{{TCollected}})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.UnionWith(System.Collections.Generic.IEnumerable{`1})
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  name: UnionWith(IEnumerable<TCollected>)
  nameWithType: DecoratedSet<TCollected>.UnionWith(IEnumerable<TCollected>)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.UnionWith(System.Collections.Generic.IEnumerable<TCollected>)
  nameWithType.vb: DecoratedSet(Of TCollected).UnionWith(IEnumerable(Of TCollected))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).UnionWith(System.Collections.Generic.IEnumerable(Of TCollected))
  name.vb: UnionWith(IEnumerable(Of TCollected))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.UnionWith(System.Collections.Generic.IEnumerable{`1})
    name: UnionWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TCollected
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.UnionWith(System.Collections.Generic.IEnumerable{`1})
    name: UnionWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TCollected
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.Contains({TCollected})
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.Contains(`1)
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  name: Contains(TCollected)
  nameWithType: DecoratedSet<TCollected>.Contains(TCollected)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.Contains(TCollected)
  nameWithType.vb: DecoratedSet(Of TCollected).Contains(TCollected)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).Contains(TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.Contains(`1)
    name: Contains
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.Contains(`1)
    name: Contains
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.CopyTo({TCollected}[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet{`1}.CopyTo(`1[],System.Int32)
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  name: CopyTo(TCollected[], int)
  nameWithType: DecoratedSet<TCollected>.CopyTo(TCollected[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.CopyTo(TCollected[], int)
  nameWithType.vb: DecoratedSet(Of TCollected).CopyTo(TCollected(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).CopyTo(TCollected(), Integer)
  name.vb: CopyTo(TCollected(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.CopyTo(`1[],System.Int32)
    name: CopyTo
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  - name: (
  - name: TCollected
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet{`1}.CopyTo(`1[],System.Int32)
    name: CopyTo
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  - name: (
  - name: TCollected
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet{{TCollected}}.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet{`1}.Count
  parent: NMF.Collections.Generic.DecoratedSet{{TCollected}}
  definition: NMF.Collections.Generic.DecoratedSet`1.Count
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Count
  name: Count
  nameWithType: DecoratedSet<TCollected>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<TCollected>.Count
  nameWithType.vb: DecoratedSet(Of TCollected).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of TCollected).Count
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Collections.Generic.DecoratedSet`1
  commentId: T:NMF.Collections.Generic.DecoratedSet`1
  href: NMF.Collections.Generic.DecoratedSet-1.html
  name: DecoratedSet<T>
  nameWithType: DecoratedSet<T>
  fullName: NMF.Collections.Generic.DecoratedSet<T>
  nameWithType.vb: DecoratedSet(Of T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T)
  name.vb: DecoratedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1
    name: DecoratedSet
    href: NMF.Collections.Generic.DecoratedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic
  commentId: N:NMF.Collections.Generic
  href: NMF.html
  name: NMF.Collections.Generic
  nameWithType: NMF.Collections.Generic
  fullName: NMF.Collections.Generic
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Collections
    name: Collections
    href: NMF.Collections.html
  - name: .
  - uid: NMF.Collections.Generic
    name: Generic
    href: NMF.Collections.Generic.html
- uid: NMF.Collections.Generic.OrderedSet`1
  commentId: T:NMF.Collections.Generic.OrderedSet`1
  href: NMF.Collections.Generic.OrderedSet-1.html
  name: OrderedSet<T>
  nameWithType: OrderedSet<T>
  fullName: NMF.Collections.Generic.OrderedSet<T>
  nameWithType.vb: OrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T)
  name.vb: OrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1
    name: OrderedSet
    href: NMF.Collections.Generic.OrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: NMF.Collections.Generic.IOrderedSet`1
  commentId: T:NMF.Collections.Generic.IOrderedSet`1
  href: NMF.Collections.Generic.IOrderedSet-1.html
  name: IOrderedSet<T>
  nameWithType: IOrderedSet<T>
  fullName: NMF.Collections.Generic.IOrderedSet<T>
  nameWithType.vb: IOrderedSet(Of T)
  fullName.vb: NMF.Collections.Generic.IOrderedSet(Of T)
  name.vb: IOrderedSet(Of T)
  spec.csharp:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Collections.Generic.IOrderedSet`1
    name: IOrderedSet
    href: NMF.Collections.Generic.IOrderedSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Remove(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  name: Remove(T)
  nameWithType: OrderedSet<T>.Remove(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Remove(T)
  nameWithType.vb: OrderedSet(Of T).Remove(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Remove(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  commentId: M:NMF.Collections.Generic.OrderedSet`1.GetEnumerator
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  name: GetEnumerator()
  nameWithType: OrderedSet<T>.GetEnumerator()
  fullName: NMF.Collections.Generic.OrderedSet<T>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of T).GetEnumerator()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).GetEnumerator()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.GetEnumerator
    name: GetEnumerator
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_GetEnumerator
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  name: IndexOf(T)
  nameWithType: OrderedSet<T>.IndexOf(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.IndexOf(T)
  nameWithType.vb: OrderedSet(Of T).IndexOf(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).IndexOf(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.IndexOf(`0)
    name: IndexOf
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_IndexOf__0_
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.Insert(System.Int32,`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Insert(System.Int32,`0)
  isExternal: true
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  name: Insert(int, T)
  nameWithType: OrderedSet<T>.Insert(int, T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Insert(int, T)
  nameWithType.vb: OrderedSet(Of T).Insert(Integer, T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Insert(System.Int32,`0)
    name: Insert
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Insert_System_Int32__0_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
  isExternal: true
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  name: RemoveAt(int)
  nameWithType: OrderedSet<T>.RemoveAt(int)
  fullName: NMF.Collections.Generic.OrderedSet<T>.RemoveAt(int)
  nameWithType.vb: OrderedSet(Of T).RemoveAt(Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.RemoveAt(System.Int32)
    name: RemoveAt
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_RemoveAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  commentId: P:NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: OrderedSet<T>.this[int]
  fullName: NMF.Collections.Generic.OrderedSet<T>.this[int]
  nameWithType.vb: OrderedSet(Of T).this[](Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Item(System.Int32)
    name: this[]
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  commentId: M:NMF.Collections.Generic.OrderedSet`1.AsReadOnly
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  name: AsReadOnly()
  nameWithType: OrderedSet<T>.AsReadOnly()
  fullName: NMF.Collections.Generic.OrderedSet<T>.AsReadOnly()
  nameWithType.vb: OrderedSet(Of T).AsReadOnly()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).AsReadOnly()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.AsReadOnly
    name: AsReadOnly
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_AsReadOnly
  - name: (
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Items
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Items
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Items
  name: Items
  nameWithType: DecoratedSet<T>.Items
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Items
  nameWithType.vb: DecoratedSet(Of T).Items
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Items
- uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  name: ExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.ExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).ExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: ExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: ExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  name: IntersectWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IntersectWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IntersectWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IntersectWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IntersectWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IntersectWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
    name: IntersectWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IntersectWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsProperSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsProperSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsProperSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSubsetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSubsetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSubsetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSubsetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSubsetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSubsetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.IsSupersetOf(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).IsSupersetOf(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).IsSupersetOf(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsSupersetOf(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
    name: IsSupersetOf
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_IsSupersetOf_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  name: Overlaps(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.Overlaps(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Overlaps(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).Overlaps(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Overlaps(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Overlaps(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
    name: Overlaps
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Overlaps_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  name: SetEquals(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SetEquals(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SetEquals(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SetEquals(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SetEquals(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SetEquals(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
    name: SetEquals
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SetEquals_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.SymmetricExceptWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).SymmetricExceptWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).SymmetricExceptWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: SymmetricExceptWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
    name: SymmetricExceptWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_SymmetricExceptWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  name: UnionWith(IEnumerable<T>)
  nameWithType: DecoratedSet<T>.UnionWith(IEnumerable<T>)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: DecoratedSet(Of T).UnionWith(IEnumerable(Of T))
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  name.vb: UnionWith(IEnumerable(Of T))
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
    name: UnionWith
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  name: Contains(T)
  nameWithType: DecoratedSet<T>.Contains(T)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Contains(T)
  nameWithType.vb: DecoratedSet(Of T).Contains(T)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Contains(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.Contains(`0)
    name: Contains
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Contains__0_
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  commentId: M:NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  name: CopyTo(T[], int)
  nameWithType: DecoratedSet<T>.CopyTo(T[], int)
  fullName: NMF.Collections.Generic.DecoratedSet<T>.CopyTo(T[], int)
  nameWithType.vb: DecoratedSet(Of T).CopyTo(T(), Integer)
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.DecoratedSet`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.DecoratedSet`1.Count
  commentId: P:NMF.Collections.Generic.DecoratedSet`1.Count
  href: NMF.Collections.Generic.DecoratedSet-1.html#NMF_Collections_Generic_DecoratedSet_1_Count
  name: Count
  nameWithType: DecoratedSet<T>.Count
  fullName: NMF.Collections.Generic.DecoratedSet<T>.Count
  nameWithType.vb: DecoratedSet(Of T).Count
  fullName.vb: NMF.Collections.Generic.DecoratedSet(Of T).Count
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Parent
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_Parent
  name: Parent
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Parent
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Parent
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Parent
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Parent
- uid: '{TParent}'
  commentId: '!:TParent'
  definition: TParent
  name: TParent
  nameWithType: TParent
  fullName: TParent
- uid: TParent
  name: TParent
  nameWithType: TParent
  fullName: TParent
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.SetOpposite
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_SetOpposite__1__0_
  name: SetOpposite
  nameWithType: OppositeOrderedSet<TParent, TCollected>.SetOpposite
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.SetOpposite
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).SetOpposite
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).SetOpposite
- uid: '{TCollected}'
  commentId: '!:TCollected'
  definition: TCollected
  name: TCollected
  nameWithType: TCollected
  fullName: TCollected
- uid: TCollected
  name: TCollected
  nameWithType: TCollected
  fullName: TCollected
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.#ctor
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2__ctor__0_
  name: OppositeOrderedSet
  nameWithType: OppositeOrderedSet<TParent, TCollected>.OppositeOrderedSet
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.OppositeOrderedSet
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).New
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).New
  name.vb: New
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Clear
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Clear
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Clear
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  name: Clear()
  nameWithType: OrderedSet<TCollected>.Clear()
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Clear()
  nameWithType.vb: OrderedSet(Of TCollected).Clear()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Clear()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Clear
    name: Clear
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Clear
    name: Clear
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  - name: (
  - name: )
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Clear
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_Clear
  name: Clear
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Clear
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Clear
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Clear
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Clear
- uid: NMF.Collections.Generic.OrderedSet`1.Clear
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Clear
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  name: Clear()
  nameWithType: OrderedSet<T>.Clear()
  fullName: NMF.Collections.Generic.OrderedSet<T>.Clear()
  nameWithType.vb: OrderedSet(Of T).Clear()
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Clear()
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Clear
    name: Clear
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Clear
    name: Clear
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Clear
  - name: (
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Add({TCollected})
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Add(`1)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Add(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  name: Add(TCollected)
  nameWithType: OrderedSet<TCollected>.Add(TCollected)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Add(TCollected)
  nameWithType.vb: OrderedSet(Of TCollected).Add(TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Add(TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Add(`1)
    name: Add
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  - name: (
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Add(`1)
    name: Add
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  - name: (
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Add
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_Add__1_
  name: Add
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Add
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Add
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Add
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Add
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Collections.Generic.OrderedSet`1.Add(`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Add(`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  name: Add(T)
  nameWithType: OrderedSet<T>.Add(T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Add(T)
  nameWithType.vb: OrderedSet(Of T).Add(T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Add(T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Add(`0)
    name: Add
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Add(`0)
    name: Add
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Add__0_
  - name: (
  - name: T
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Remove({TCollected},System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Remove(`1,System.Int32)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Remove(`0,System.Int32)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  name: Remove(TCollected, int)
  nameWithType: OrderedSet<TCollected>.Remove(TCollected, int)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Remove(TCollected, int)
  nameWithType.vb: OrderedSet(Of TCollected).Remove(TCollected, Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Remove(TCollected, Integer)
  name.vb: Remove(TCollected, Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Remove(`1,System.Int32)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Remove(`1,System.Int32)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  - name: (
  - name: TCollected
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Remove
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_Remove__1_System_Int32_
  name: Remove
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Remove
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Remove
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Remove
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Remove
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0,System.Int32)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Remove(`0,System.Int32)
  isExternal: true
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  name: Remove(T, int)
  nameWithType: OrderedSet<T>.Remove(T, int)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Remove(T, int)
  nameWithType.vb: OrderedSet(Of T).Remove(T, Integer)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Remove(T, Integer)
  name.vb: Remove(T, Integer)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Remove(`0,System.Int32)
    name: Remove
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Remove__0_System_Int32_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Collections.Generic.OrderedSet{{TCollected}}.Replace(System.Int32,{TCollected},{TCollected})
  commentId: M:NMF.Collections.Generic.OrderedSet{`1}.Replace(System.Int32,`1,`1)
  parent: NMF.Collections.Generic.OrderedSet{{TCollected}}
  definition: NMF.Collections.Generic.OrderedSet`1.Replace(System.Int32,`0,`0)
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  name: Replace(int, TCollected, TCollected)
  nameWithType: OrderedSet<TCollected>.Replace(int, TCollected, TCollected)
  fullName: NMF.Collections.Generic.OrderedSet<TCollected>.Replace(int, TCollected, TCollected)
  nameWithType.vb: OrderedSet(Of TCollected).Replace(Integer, TCollected, TCollected)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of TCollected).Replace(Integer, TCollected, TCollected)
  name.vb: Replace(Integer, TCollected, TCollected)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Replace(System.Int32,`1,`1)
    name: Replace
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet{`1}.Replace(System.Int32,`1,`1)
    name: Replace
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TCollected
  - name: ','
  - name: " "
  - name: TCollected
  - name: )
- uid: NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace*
  commentId: Overload:NMF.Collections.ObjectModel.OppositeOrderedSet`2.Replace
  href: NMF.Collections.ObjectModel.OppositeOrderedSet-2.html#NMF_Collections_ObjectModel_OppositeOrderedSet_2_Replace_System_Int32__1__1_
  name: Replace
  nameWithType: OppositeOrderedSet<TParent, TCollected>.Replace
  fullName: NMF.Collections.ObjectModel.OppositeOrderedSet<TParent, TCollected>.Replace
  nameWithType.vb: OppositeOrderedSet(Of TParent, TCollected).Replace
  fullName.vb: NMF.Collections.ObjectModel.OppositeOrderedSet(Of TParent, TCollected).Replace
- uid: NMF.Collections.Generic.OrderedSet`1.Replace(System.Int32,`0,`0)
  commentId: M:NMF.Collections.Generic.OrderedSet`1.Replace(System.Int32,`0,`0)
  isExternal: true
  href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  name: Replace(int, T, T)
  nameWithType: OrderedSet<T>.Replace(int, T, T)
  fullName: NMF.Collections.Generic.OrderedSet<T>.Replace(int, T, T)
  nameWithType.vb: OrderedSet(Of T).Replace(Integer, T, T)
  fullName.vb: NMF.Collections.Generic.OrderedSet(Of T).Replace(Integer, T, T)
  name.vb: Replace(Integer, T, T)
  spec.csharp:
  - uid: NMF.Collections.Generic.OrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Collections.Generic.OrderedSet`1.Replace(System.Int32,`0,`0)
    name: Replace
    href: NMF.Collections.Generic.OrderedSet-1.html#NMF_Collections_Generic_OrderedSet_1_Replace_System_Int32__0__0_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
