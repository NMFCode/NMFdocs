### YamlMime:XRefMap
sorted: true
references:
- uid: NMF.Expressions
  name: NMF.Expressions
  href: api/Expressions/NMF.Expressions.html
  commentId: N:NMF.Expressions
  fullName: NMF.Expressions
  nameWithType: NMF.Expressions
- uid: NMF.Expressions.ApplyParametersVisitor
  name: ApplyParametersVisitor
  href: api/Expressions/NMF.Expressions.ApplyParametersVisitor.html
  commentId: T:NMF.Expressions.ApplyParametersVisitor
  fullName: NMF.Expressions.ApplyParametersVisitor
  nameWithType: ApplyParametersVisitor
- uid: NMF.Expressions.ApplyParametersVisitor.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ApplyParametersVisitor(IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.ApplyParametersVisitor.html#NMF_Expressions_ApplyParametersVisitor__ctor_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.ApplyParametersVisitor.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: ApplyParametersVisitor(IDictionary(Of String, Object))
  fullName: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor(System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: ApplyParametersVisitor.ApplyParametersVisitor(IDictionary<String, Object>)
  nameWithType.vb: ApplyParametersVisitor.ApplyParametersVisitor(IDictionary(Of String, Object))
- uid: NMF.Expressions.ApplyParametersVisitor.#ctor*
  name: ApplyParametersVisitor
  href: api/Expressions/NMF.Expressions.ApplyParametersVisitor.html#NMF_Expressions_ApplyParametersVisitor__ctor_
  commentId: Overload:NMF.Expressions.ApplyParametersVisitor.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ApplyParametersVisitor.ApplyParametersVisitor
  nameWithType: ApplyParametersVisitor.ApplyParametersVisitor
- uid: NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  name: VisitParameter(ParameterExpression)
  href: api/Expressions/NMF.Expressions.ApplyParametersVisitor.html#NMF_Expressions_ApplyParametersVisitor_VisitParameter_System_Linq_Expressions_ParameterExpression_
  commentId: M:NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  fullName: NMF.Expressions.ApplyParametersVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  nameWithType: ApplyParametersVisitor.VisitParameter(ParameterExpression)
- uid: NMF.Expressions.ApplyParametersVisitor.VisitParameter*
  name: VisitParameter
  href: api/Expressions/NMF.Expressions.ApplyParametersVisitor.html#NMF_Expressions_ApplyParametersVisitor_VisitParameter_
  commentId: Overload:NMF.Expressions.ApplyParametersVisitor.VisitParameter
  isSpec: "True"
  fullName: NMF.Expressions.ApplyParametersVisitor.VisitParameter
  nameWithType: ApplyParametersVisitor.VisitParameter
- uid: NMF.Expressions.BinaryHeap`1
  name: BinaryHeap<T>
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html
  commentId: T:NMF.Expressions.BinaryHeap`1
  name.vb: BinaryHeap(Of T)
  fullName: NMF.Expressions.BinaryHeap<T>
  fullName.vb: NMF.Expressions.BinaryHeap(Of T)
  nameWithType: BinaryHeap<T>
  nameWithType.vb: BinaryHeap(Of T)
- uid: NMF.Expressions.BinaryHeap`1.#ctor
  name: BinaryHeap()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1__ctor
  commentId: M:NMF.Expressions.BinaryHeap`1.#ctor
  fullName: NMF.Expressions.BinaryHeap<T>.BinaryHeap()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).BinaryHeap()
  nameWithType: BinaryHeap<T>.BinaryHeap()
  nameWithType.vb: BinaryHeap(Of T).BinaryHeap()
- uid: NMF.Expressions.BinaryHeap`1.#ctor(System.Collections.Generic.IComparer{`0})
  name: BinaryHeap(IComparer<T>)
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1__ctor_System_Collections_Generic_IComparer__0__
  commentId: M:NMF.Expressions.BinaryHeap`1.#ctor(System.Collections.Generic.IComparer{`0})
  name.vb: BinaryHeap(IComparer(Of T))
  fullName: NMF.Expressions.BinaryHeap<T>.BinaryHeap(System.Collections.Generic.IComparer<T>)
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).BinaryHeap(System.Collections.Generic.IComparer(Of T))
  nameWithType: BinaryHeap<T>.BinaryHeap(IComparer<T>)
  nameWithType.vb: BinaryHeap(Of T).BinaryHeap(IComparer(Of T))
- uid: NMF.Expressions.BinaryHeap`1.#ctor*
  name: BinaryHeap
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1__ctor_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.BinaryHeap
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).BinaryHeap
  nameWithType: BinaryHeap<T>.BinaryHeap
  nameWithType.vb: BinaryHeap(Of T).BinaryHeap
- uid: NMF.Expressions.BinaryHeap`1.Add(`0)
  name: Add(T)
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Add__0_
  commentId: M:NMF.Expressions.BinaryHeap`1.Add(`0)
  fullName: NMF.Expressions.BinaryHeap<T>.Add(T)
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Add(T)
  nameWithType: BinaryHeap<T>.Add(T)
  nameWithType.vb: BinaryHeap(Of T).Add(T)
- uid: NMF.Expressions.BinaryHeap`1.Add*
  name: Add
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Add_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Add
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Add
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Add
  nameWithType: BinaryHeap<T>.Add
  nameWithType.vb: BinaryHeap(Of T).Add
- uid: NMF.Expressions.BinaryHeap`1.Capacity
  name: Capacity
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Capacity
  commentId: P:NMF.Expressions.BinaryHeap`1.Capacity
  fullName: NMF.Expressions.BinaryHeap<T>.Capacity
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Capacity
  nameWithType: BinaryHeap<T>.Capacity
  nameWithType.vb: BinaryHeap(Of T).Capacity
- uid: NMF.Expressions.BinaryHeap`1.Capacity*
  name: Capacity
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Capacity_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Capacity
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Capacity
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Capacity
  nameWithType: BinaryHeap<T>.Capacity
  nameWithType.vb: BinaryHeap(Of T).Capacity
- uid: NMF.Expressions.BinaryHeap`1.Clear
  name: Clear()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Clear
  commentId: M:NMF.Expressions.BinaryHeap`1.Clear
  fullName: NMF.Expressions.BinaryHeap<T>.Clear()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Clear()
  nameWithType: BinaryHeap<T>.Clear()
  nameWithType.vb: BinaryHeap(Of T).Clear()
- uid: NMF.Expressions.BinaryHeap`1.Clear*
  name: Clear
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Clear_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Clear
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Clear
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Clear
  nameWithType: BinaryHeap<T>.Clear
  nameWithType.vb: BinaryHeap(Of T).Clear
- uid: NMF.Expressions.BinaryHeap`1.Contains(`0)
  name: Contains(T)
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Contains__0_
  commentId: M:NMF.Expressions.BinaryHeap`1.Contains(`0)
  fullName: NMF.Expressions.BinaryHeap<T>.Contains(T)
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Contains(T)
  nameWithType: BinaryHeap<T>.Contains(T)
  nameWithType.vb: BinaryHeap(Of T).Contains(T)
- uid: NMF.Expressions.BinaryHeap`1.Contains*
  name: Contains
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Contains_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Contains
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Contains
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Contains
  nameWithType: BinaryHeap<T>.Contains
  nameWithType.vb: BinaryHeap(Of T).Contains
- uid: NMF.Expressions.BinaryHeap`1.Copy
  name: Copy()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Copy
  commentId: M:NMF.Expressions.BinaryHeap`1.Copy
  fullName: NMF.Expressions.BinaryHeap<T>.Copy()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Copy()
  nameWithType: BinaryHeap<T>.Copy()
  nameWithType.vb: BinaryHeap(Of T).Copy()
- uid: NMF.Expressions.BinaryHeap`1.Copy*
  name: Copy
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Copy_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Copy
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Copy
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Copy
  nameWithType: BinaryHeap<T>.Copy
  nameWithType.vb: BinaryHeap(Of T).Copy
- uid: NMF.Expressions.BinaryHeap`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_CopyTo__0___System_Int32_
  commentId: M:NMF.Expressions.BinaryHeap`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: NMF.Expressions.BinaryHeap<T>.CopyTo(T[], System.Int32)
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).CopyTo(T(), System.Int32)
  nameWithType: BinaryHeap<T>.CopyTo(T[], Int32)
  nameWithType.vb: BinaryHeap(Of T).CopyTo(T(), Int32)
- uid: NMF.Expressions.BinaryHeap`1.CopyTo*
  name: CopyTo
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_CopyTo_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.CopyTo
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.CopyTo
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).CopyTo
  nameWithType: BinaryHeap<T>.CopyTo
  nameWithType.vb: BinaryHeap(Of T).CopyTo
- uid: NMF.Expressions.BinaryHeap`1.Count
  name: Count
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Count
  commentId: P:NMF.Expressions.BinaryHeap`1.Count
  fullName: NMF.Expressions.BinaryHeap<T>.Count
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Count
  nameWithType: BinaryHeap<T>.Count
  nameWithType.vb: BinaryHeap(Of T).Count
- uid: NMF.Expressions.BinaryHeap`1.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Count_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Count
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Count
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Count
  nameWithType: BinaryHeap<T>.Count
  nameWithType.vb: BinaryHeap(Of T).Count
- uid: NMF.Expressions.BinaryHeap`1.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_GetEnumerator
  commentId: M:NMF.Expressions.BinaryHeap`1.GetEnumerator
  fullName: NMF.Expressions.BinaryHeap<T>.GetEnumerator()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).GetEnumerator()
  nameWithType: BinaryHeap<T>.GetEnumerator()
  nameWithType.vb: BinaryHeap(Of T).GetEnumerator()
- uid: NMF.Expressions.BinaryHeap`1.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_GetEnumerator_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.GetEnumerator
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).GetEnumerator
  nameWithType: BinaryHeap<T>.GetEnumerator
  nameWithType.vb: BinaryHeap(Of T).GetEnumerator
- uid: NMF.Expressions.BinaryHeap`1.IsReadOnly
  name: IsReadOnly
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_IsReadOnly
  commentId: P:NMF.Expressions.BinaryHeap`1.IsReadOnly
  fullName: NMF.Expressions.BinaryHeap<T>.IsReadOnly
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).IsReadOnly
  nameWithType: BinaryHeap<T>.IsReadOnly
  nameWithType.vb: BinaryHeap(Of T).IsReadOnly
- uid: NMF.Expressions.BinaryHeap`1.IsReadOnly*
  name: IsReadOnly
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_IsReadOnly_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.IsReadOnly
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.IsReadOnly
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).IsReadOnly
  nameWithType: BinaryHeap<T>.IsReadOnly
  nameWithType.vb: BinaryHeap(Of T).IsReadOnly
- uid: NMF.Expressions.BinaryHeap`1.Peek
  name: Peek()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Peek
  commentId: M:NMF.Expressions.BinaryHeap`1.Peek
  fullName: NMF.Expressions.BinaryHeap<T>.Peek()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Peek()
  nameWithType: BinaryHeap<T>.Peek()
  nameWithType.vb: BinaryHeap(Of T).Peek()
- uid: NMF.Expressions.BinaryHeap`1.Peek*
  name: Peek
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Peek_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Peek
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Peek
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Peek
  nameWithType: BinaryHeap<T>.Peek
  nameWithType.vb: BinaryHeap(Of T).Peek
- uid: NMF.Expressions.BinaryHeap`1.Remove
  name: Remove()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Remove
  commentId: M:NMF.Expressions.BinaryHeap`1.Remove
  fullName: NMF.Expressions.BinaryHeap<T>.Remove()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Remove()
  nameWithType: BinaryHeap<T>.Remove()
  nameWithType.vb: BinaryHeap(Of T).Remove()
- uid: NMF.Expressions.BinaryHeap`1.Remove(`0)
  name: Remove(T)
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Remove__0_
  commentId: M:NMF.Expressions.BinaryHeap`1.Remove(`0)
  fullName: NMF.Expressions.BinaryHeap<T>.Remove(T)
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Remove(T)
  nameWithType: BinaryHeap<T>.Remove(T)
  nameWithType.vb: BinaryHeap(Of T).Remove(T)
- uid: NMF.Expressions.BinaryHeap`1.Remove*
  name: Remove
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_Remove_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.Remove
  isSpec: "True"
  fullName: NMF.Expressions.BinaryHeap<T>.Remove
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).Remove
  nameWithType: BinaryHeap<T>.Remove
  nameWithType.vb: BinaryHeap(Of T).Remove
- uid: NMF.Expressions.BinaryHeap`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.BinaryHeap`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.BinaryHeap<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BinaryHeap<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: BinaryHeap(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.BinaryHeap`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.BinaryHeap-1.html#NMF_Expressions_BinaryHeap_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.BinaryHeap`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.BinaryHeap<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Expressions.BinaryHeap(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: BinaryHeap<T>.IEnumerable.GetEnumerator
  nameWithType.vb: BinaryHeap(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.Binding`1
  name: Binding<T>
  href: api/Expressions/NMF.Expressions.Binding-1.html
  commentId: T:NMF.Expressions.Binding`1
  name.vb: Binding(Of T)
  fullName: NMF.Expressions.Binding<T>
  fullName.vb: NMF.Expressions.Binding(Of T)
  nameWithType: Binding<T>
  nameWithType.vb: Binding(Of T)
- uid: NMF.Expressions.Binding`1.Create*
  name: Create
  href: api/Expressions/NMF.Expressions.Binding-1.html#NMF_Expressions_Binding_1_Create_
  commentId: Overload:NMF.Expressions.Binding`1.Create
  isSpec: "True"
  fullName: NMF.Expressions.Binding<T>.Create
  fullName.vb: NMF.Expressions.Binding(Of T).Create
  nameWithType: Binding<T>.Create
  nameWithType.vb: Binding(Of T).Create
- uid: NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  name: Create<TMember>(Expression<Func<T, TMember>>, Action<T, TMember>)
  href: api/Expressions/NMF.Expressions.Binding-1.html#NMF_Expressions_Binding_1_Create__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Action__0___0__
  commentId: M:NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0})
  name.vb: Create(Of TMember)(Expression(Of Func(Of T, TMember)), Action(Of T, TMember))
  fullName: NMF.Expressions.Binding<T>.Create<TMember>(System.Linq.Expressions.Expression<System.Func<T, TMember>>, System.Action<T, TMember>)
  fullName.vb: NMF.Expressions.Binding(Of T).Create(Of TMember)(System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)), System.Action(Of T, TMember))
  nameWithType: Binding<T>.Create<TMember>(Expression<Func<T, TMember>>, Action<T, TMember>)
  nameWithType.vb: Binding(Of T).Create(Of TMember)(Expression(Of Func(Of T, TMember)), Action(Of T, TMember))
- uid: NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: Create<TMember>(Expression<Func<T, TMember>>, Expression<Func<T, TMember>>)
  href: api/Expressions/NMF.Expressions.Binding-1.html#NMF_Expressions_Binding_1_Create__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__0___0___
  commentId: M:NMF.Expressions.Binding`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name.vb: Create(Of TMember)(Expression(Of Func(Of T, TMember)), Expression(Of Func(Of T, TMember)))
  fullName: NMF.Expressions.Binding<T>.Create<TMember>(System.Linq.Expressions.Expression<System.Func<T, TMember>>, System.Linq.Expressions.Expression<System.Func<T, TMember>>)
  fullName.vb: NMF.Expressions.Binding(Of T).Create(Of TMember)(System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)), System.Linq.Expressions.Expression(Of System.Func(Of T, TMember)))
  nameWithType: Binding<T>.Create<TMember>(Expression<Func<T, TMember>>, Expression<Func<T, TMember>>)
  nameWithType.vb: Binding(Of T).Create(Of TMember)(Expression(Of Func(Of T, TMember)), Expression(Of Func(Of T, TMember)))
- uid: NMF.Expressions.Binding`2
  name: Binding<T, TMember>
  href: api/Expressions/NMF.Expressions.Binding-2.html
  commentId: T:NMF.Expressions.Binding`2
  name.vb: Binding(Of T, TMember)
  fullName: NMF.Expressions.Binding<T, TMember>
  fullName.vb: NMF.Expressions.Binding(Of T, TMember)
  nameWithType: Binding<T, TMember>
  nameWithType.vb: Binding(Of T, TMember)
- uid: NMF.Expressions.Binding`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})
  name: Binding(ObservingFunc<T, TMember>, Action<T, TMember>)
  href: api/Expressions/NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2__ctor_NMF_Expressions_ObservingFunc__0__1__System_Action__0__1__
  commentId: M:NMF.Expressions.Binding`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1},System.Action{`0,`1})
  name.vb: Binding(ObservingFunc(Of T, TMember), Action(Of T, TMember))
  fullName: NMF.Expressions.Binding<T, TMember>.Binding(NMF.Expressions.ObservingFunc<T, TMember>, System.Action<T, TMember>)
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Binding(NMF.Expressions.ObservingFunc(Of T, TMember), System.Action(Of T, TMember))
  nameWithType: Binding<T, TMember>.Binding(ObservingFunc<T, TMember>, Action<T, TMember>)
  nameWithType.vb: Binding(Of T, TMember).Binding(ObservingFunc(Of T, TMember), Action(Of T, TMember))
- uid: NMF.Expressions.Binding`2.#ctor*
  name: Binding
  href: api/Expressions/NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2__ctor_
  commentId: Overload:NMF.Expressions.Binding`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Binding<T, TMember>.Binding
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Binding
  nameWithType: Binding<T, TMember>.Binding
  nameWithType.vb: Binding(Of T, TMember).Binding
- uid: NMF.Expressions.Binding`2.Bind(`0)
  name: Bind(T)
  href: api/Expressions/NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2_Bind__0_
  commentId: M:NMF.Expressions.Binding`2.Bind(`0)
  fullName: NMF.Expressions.Binding<T, TMember>.Bind(T)
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Bind(T)
  nameWithType: Binding<T, TMember>.Bind(T)
  nameWithType.vb: Binding(Of T, TMember).Bind(T)
- uid: NMF.Expressions.Binding`2.Bind*
  name: Bind
  href: api/Expressions/NMF.Expressions.Binding-2.html#NMF_Expressions_Binding_2_Bind_
  commentId: Overload:NMF.Expressions.Binding`2.Bind
  isSpec: "True"
  fullName: NMF.Expressions.Binding<T, TMember>.Bind
  fullName.vb: NMF.Expressions.Binding(Of T, TMember).Bind
  nameWithType: Binding<T, TMember>.Bind
  nameWithType.vb: Binding(Of T, TMember).Bind
- uid: NMF.Expressions.ChangeAwareDictionary`2
  name: ChangeAwareDictionary<TKey, TValue>
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html
  commentId: T:NMF.Expressions.ChangeAwareDictionary`2
  name.vb: ChangeAwareDictionary(Of TKey, TValue)
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue)
  nameWithType: ChangeAwareDictionary<TKey, TValue>
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue)
- uid: NMF.Expressions.ChangeAwareDictionary`2.#ctor
  name: ChangeAwareDictionary()
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2__ctor
  commentId: M:NMF.Expressions.ChangeAwareDictionary`2.#ctor
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary()
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary()
  nameWithType: ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary()
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary()
- uid: NMF.Expressions.ChangeAwareDictionary`2.#ctor(NMF.Expressions.ChangeAwareDictionary{`0,`1})
  name: ChangeAwareDictionary(ChangeAwareDictionary<TKey, TValue>)
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2__ctor_NMF_Expressions_ChangeAwareDictionary__0__1__
  commentId: M:NMF.Expressions.ChangeAwareDictionary`2.#ctor(NMF.Expressions.ChangeAwareDictionary{`0,`1})
  name.vb: ChangeAwareDictionary(ChangeAwareDictionary(Of TKey, TValue))
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary(NMF.Expressions.ChangeAwareDictionary<TKey, TValue>)
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary(NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue))
  nameWithType: ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary(ChangeAwareDictionary<TKey, TValue>)
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary(ChangeAwareDictionary(Of TKey, TValue))
- uid: NMF.Expressions.ChangeAwareDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name: ChangeAwareDictionary(IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2__ctor_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:NMF.Expressions.ChangeAwareDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name.vb: ChangeAwareDictionary(IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary(System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary(System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary(IEqualityComparer<TKey>)
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary(IEqualityComparer(Of TKey))
- uid: NMF.Expressions.ChangeAwareDictionary`2.#ctor*
  name: ChangeAwareDictionary
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2__ctor_
  commentId: Overload:NMF.Expressions.ChangeAwareDictionary`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary
  nameWithType: ChangeAwareDictionary<TKey, TValue>.ChangeAwareDictionary
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).ChangeAwareDictionary
- uid: NMF.Expressions.ChangeAwareDictionary`2.AsNotifiable(`0)
  name: AsNotifiable(TKey)
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_AsNotifiable__0_
  commentId: M:NMF.Expressions.ChangeAwareDictionary`2.AsNotifiable(`0)
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.AsNotifiable(TKey)
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).AsNotifiable(TKey)
  nameWithType: ChangeAwareDictionary<TKey, TValue>.AsNotifiable(TKey)
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).AsNotifiable(TKey)
- uid: NMF.Expressions.ChangeAwareDictionary`2.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_AsNotifiable_
  commentId: Overload:NMF.Expressions.ChangeAwareDictionary`2.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.AsNotifiable
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).AsNotifiable
  nameWithType: ChangeAwareDictionary<TKey, TValue>.AsNotifiable
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).AsNotifiable
- uid: NMF.Expressions.ChangeAwareDictionary`2.Forget(`0)
  name: Forget(TKey)
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_Forget__0_
  commentId: M:NMF.Expressions.ChangeAwareDictionary`2.Forget(`0)
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.Forget(TKey)
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).Forget(TKey)
  nameWithType: ChangeAwareDictionary<TKey, TValue>.Forget(TKey)
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).Forget(TKey)
- uid: NMF.Expressions.ChangeAwareDictionary`2.Forget*
  name: Forget
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_Forget_
  commentId: Overload:NMF.Expressions.ChangeAwareDictionary`2.Forget
  isSpec: "True"
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.Forget
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).Forget
  nameWithType: ChangeAwareDictionary<TKey, TValue>.Forget
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).Forget
- uid: NMF.Expressions.ChangeAwareDictionary`2.Item(`0)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_Item__0_
  commentId: P:NMF.Expressions.ChangeAwareDictionary`2.Item(`0)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).Item(TKey)
  nameWithType: ChangeAwareDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).Item(TKey)
- uid: NMF.Expressions.ChangeAwareDictionary`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.ChangeAwareDictionary-2.html#NMF_Expressions_ChangeAwareDictionary_2_Item_
  commentId: Overload:NMF.Expressions.ChangeAwareDictionary`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.ChangeAwareDictionary<TKey, TValue>.Item
  fullName.vb: NMF.Expressions.ChangeAwareDictionary(Of TKey, TValue).Item
  nameWithType: ChangeAwareDictionary<TKey, TValue>.Item
  nameWithType.vb: ChangeAwareDictionary(Of TKey, TValue).Item
- uid: NMF.Expressions.CollectionChangedNotificationResult`1
  name: CollectionChangedNotificationResult<T>
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html
  commentId: T:NMF.Expressions.CollectionChangedNotificationResult`1
  name.vb: CollectionChangedNotificationResult(Of T)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T)
  nameWithType: CollectionChangedNotificationResult<T>
  nameWithType.vb: CollectionChangedNotificationResult(Of T)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.AddedItems
  name: AddedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_AddedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.AddedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.AddedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).AddedItems
  nameWithType: CollectionChangedNotificationResult<T>.AddedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).AddedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.AddedItems*
  name: AddedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_AddedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.AddedItems
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.AddedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).AddedItems
  nameWithType: CollectionChangedNotificationResult<T>.AddedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).AddedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Changed
  name: Changed
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Changed
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.Changed
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Changed
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Changed
  nameWithType: CollectionChangedNotificationResult<T>.Changed
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Changed
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Changed*
  name: Changed
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Changed_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.Changed
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Changed
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Changed
  nameWithType: CollectionChangedNotificationResult<T>.Changed
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Changed
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Create(NMF.Expressions.INotifiable,System.Boolean)
  name: Create(INotifiable, Boolean)
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Create_NMF_Expressions_INotifiable_System_Boolean_
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.Create(NMF.Expressions.INotifiable,System.Boolean)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Create(NMF.Expressions.INotifiable, System.Boolean)
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Create(NMF.Expressions.INotifiable, System.Boolean)
  nameWithType: CollectionChangedNotificationResult<T>.Create(INotifiable, Boolean)
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Create(INotifiable, Boolean)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Create*
  name: Create
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Create_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.Create
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Create
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Create
  nameWithType: CollectionChangedNotificationResult<T>.Create
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Create
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.FreeReference
  name: FreeReference()
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_FreeReference
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.FreeReference
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.FreeReference()
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).FreeReference()
  nameWithType: CollectionChangedNotificationResult<T>.FreeReference()
  nameWithType.vb: CollectionChangedNotificationResult(Of T).FreeReference()
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.FreeReference*
  name: FreeReference
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_FreeReference_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.FreeReference
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.FreeReference
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).FreeReference
  nameWithType: CollectionChangedNotificationResult<T>.FreeReference
  nameWithType.vb: CollectionChangedNotificationResult(Of T).FreeReference
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.IncreaseReferences(System.Int32)
  name: IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.IncreaseReferences(System.Int32)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.IncreaseReferences(System.Int32)
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).IncreaseReferences(System.Int32)
  nameWithType: CollectionChangedNotificationResult<T>.IncreaseReferences(Int32)
  nameWithType.vb: CollectionChangedNotificationResult(Of T).IncreaseReferences(Int32)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.IncreaseReferences*
  name: IncreaseReferences
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_IncreaseReferences_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.IncreaseReferences
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.IncreaseReferences
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).IncreaseReferences
  nameWithType: CollectionChangedNotificationResult<T>.IncreaseReferences
  nameWithType.vb: CollectionChangedNotificationResult(Of T).IncreaseReferences
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.IsReset
  name: IsReset
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_IsReset
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.IsReset
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.IsReset
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).IsReset
  nameWithType: CollectionChangedNotificationResult<T>.IsReset
  nameWithType.vb: CollectionChangedNotificationResult(Of T).IsReset
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.IsReset*
  name: IsReset
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_IsReset_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.IsReset
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.IsReset
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).IsReset
  nameWithType: CollectionChangedNotificationResult<T>.IsReset
  nameWithType.vb: CollectionChangedNotificationResult(Of T).IsReset
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.MovedItems
  name: MovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_MovedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.MovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.MovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).MovedItems
  nameWithType: CollectionChangedNotificationResult<T>.MovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).MovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.MovedItems*
  name: MovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_MovedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.MovedItems
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.MovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).MovedItems
  nameWithType: CollectionChangedNotificationResult<T>.MovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).MovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NewItemsStartIndex
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NewItemsStartIndex
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.NewItemsStartIndex
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NewItemsStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NewItemsStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.NewItemsStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NewItemsStartIndex
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NewItemsStartIndex*
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NewItemsStartIndex_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.NewItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NewItemsStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NewItemsStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.NewItemsStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NewItemsStartIndex
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  name: ICollectionChangedNotificationResult.AddedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_AddedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.AddedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems*
  name: ICollectionChangedNotificationResult.AddedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_AddedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.AddedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  name: ICollectionChangedNotificationResult.MovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_MovedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.MovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems*
  name: ICollectionChangedNotificationResult.MovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_MovedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.MovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  name: ICollectionChangedNotificationResult.RemovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.RemovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems*
  name: ICollectionChangedNotificationResult.RemovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: CollectionChangedNotificationResult<T>.ICollectionChangedNotificationResult.RemovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.OldItemsStartIndex
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_OldItemsStartIndex
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.OldItemsStartIndex
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.OldItemsStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).OldItemsStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.OldItemsStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).OldItemsStartIndex
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.OldItemsStartIndex*
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_OldItemsStartIndex_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.OldItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.OldItemsStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).OldItemsStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.OldItemsStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).OldItemsStartIndex
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.RemovedItems
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_RemovedItems
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.RemovedItems
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.RemovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).RemovedItems
  nameWithType: CollectionChangedNotificationResult<T>.RemovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).RemovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.RemovedItems*
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_RemovedItems_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.RemovedItems
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.RemovedItems
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).RemovedItems
  nameWithType: CollectionChangedNotificationResult<T>.RemovedItems
  nameWithType.vb: CollectionChangedNotificationResult(Of T).RemovedItems
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Source
  name: Source
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Source
  commentId: P:NMF.Expressions.CollectionChangedNotificationResult`1.Source
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Source
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Source
  nameWithType: CollectionChangedNotificationResult<T>.Source
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Source
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Source_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.Source
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Source
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Source
  nameWithType: CollectionChangedNotificationResult<T>.Source
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Source
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Transfer(NMF.Expressions.ICollectionChangedNotificationResult,NMF.Expressions.INotifiable)
  name: Transfer(ICollectionChangedNotificationResult, INotifiable)
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Transfer_NMF_Expressions_ICollectionChangedNotificationResult_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.Transfer(NMF.Expressions.ICollectionChangedNotificationResult,NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Transfer(NMF.Expressions.ICollectionChangedNotificationResult, NMF.Expressions.INotifiable)
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Transfer(NMF.Expressions.ICollectionChangedNotificationResult, NMF.Expressions.INotifiable)
  nameWithType: CollectionChangedNotificationResult<T>.Transfer(ICollectionChangedNotificationResult, INotifiable)
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Transfer(ICollectionChangedNotificationResult, INotifiable)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.Transfer*
  name: Transfer
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_Transfer_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.Transfer
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.Transfer
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).Transfer
  nameWithType: CollectionChangedNotificationResult<T>.Transfer
  nameWithType.vb: CollectionChangedNotificationResult(Of T).Transfer
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.TurnIntoReset
  name: TurnIntoReset()
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_TurnIntoReset
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.TurnIntoReset
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.TurnIntoReset()
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).TurnIntoReset()
  nameWithType: CollectionChangedNotificationResult<T>.TurnIntoReset()
  nameWithType.vb: CollectionChangedNotificationResult(Of T).TurnIntoReset()
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.TurnIntoReset*
  name: TurnIntoReset
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_TurnIntoReset_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.TurnIntoReset
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.TurnIntoReset
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).TurnIntoReset
  nameWithType: CollectionChangedNotificationResult<T>.TurnIntoReset
  nameWithType.vb: CollectionChangedNotificationResult(Of T).TurnIntoReset
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.UpdateNewStartIndex(System.Int32)
  name: UpdateNewStartIndex(Int32)
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_UpdateNewStartIndex_System_Int32_
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.UpdateNewStartIndex(System.Int32)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.UpdateNewStartIndex(System.Int32)
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).UpdateNewStartIndex(System.Int32)
  nameWithType: CollectionChangedNotificationResult<T>.UpdateNewStartIndex(Int32)
  nameWithType.vb: CollectionChangedNotificationResult(Of T).UpdateNewStartIndex(Int32)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.UpdateNewStartIndex*
  name: UpdateNewStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_UpdateNewStartIndex_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.UpdateNewStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.UpdateNewStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).UpdateNewStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.UpdateNewStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).UpdateNewStartIndex
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.UpdateOldStartIndex(System.Int32)
  name: UpdateOldStartIndex(Int32)
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_UpdateOldStartIndex_System_Int32_
  commentId: M:NMF.Expressions.CollectionChangedNotificationResult`1.UpdateOldStartIndex(System.Int32)
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.UpdateOldStartIndex(System.Int32)
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).UpdateOldStartIndex(System.Int32)
  nameWithType: CollectionChangedNotificationResult<T>.UpdateOldStartIndex(Int32)
  nameWithType.vb: CollectionChangedNotificationResult(Of T).UpdateOldStartIndex(Int32)
- uid: NMF.Expressions.CollectionChangedNotificationResult`1.UpdateOldStartIndex*
  name: UpdateOldStartIndex
  href: api/Expressions/NMF.Expressions.CollectionChangedNotificationResult-1.html#NMF_Expressions_CollectionChangedNotificationResult_1_UpdateOldStartIndex_
  commentId: Overload:NMF.Expressions.CollectionChangedNotificationResult`1.UpdateOldStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangedNotificationResult<T>.UpdateOldStartIndex
  fullName.vb: NMF.Expressions.CollectionChangedNotificationResult(Of T).UpdateOldStartIndex
  nameWithType: CollectionChangedNotificationResult<T>.UpdateOldStartIndex
  nameWithType.vb: CollectionChangedNotificationResult(Of T).UpdateOldStartIndex
- uid: NMF.Expressions.CollectionChangeListener`1
  name: CollectionChangeListener<T>
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html
  commentId: T:NMF.Expressions.CollectionChangeListener`1
  name.vb: CollectionChangeListener(Of T)
  fullName: NMF.Expressions.CollectionChangeListener<T>
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T)
  nameWithType: CollectionChangeListener<T>
  nameWithType.vb: CollectionChangeListener(Of T)
- uid: NMF.Expressions.CollectionChangeListener`1.#ctor(NMF.Expressions.INotifiable)
  name: CollectionChangeListener(INotifiable)
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1__ctor_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.CollectionChangeListener`1.#ctor(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.CollectionChangeListener<T>.CollectionChangeListener(NMF.Expressions.INotifiable)
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).CollectionChangeListener(NMF.Expressions.INotifiable)
  nameWithType: CollectionChangeListener<T>.CollectionChangeListener(INotifiable)
  nameWithType.vb: CollectionChangeListener(Of T).CollectionChangeListener(INotifiable)
- uid: NMF.Expressions.CollectionChangeListener`1.#ctor*
  name: CollectionChangeListener
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1__ctor_
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangeListener<T>.CollectionChangeListener
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).CollectionChangeListener
  nameWithType: CollectionChangeListener<T>.CollectionChangeListener
  nameWithType.vb: CollectionChangeListener(Of T).CollectionChangeListener
- uid: NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  name: AggregateChanges()
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_AggregateChanges
  commentId: M:NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  fullName: NMF.Expressions.CollectionChangeListener<T>.AggregateChanges()
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).AggregateChanges()
  nameWithType: CollectionChangeListener<T>.AggregateChanges()
  nameWithType.vb: CollectionChangeListener(Of T).AggregateChanges()
- uid: NMF.Expressions.CollectionChangeListener`1.AggregateChanges*
  name: AggregateChanges
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_AggregateChanges_
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.AggregateChanges
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangeListener<T>.AggregateChanges
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).AggregateChanges
  nameWithType: CollectionChangeListener<T>.AggregateChanges
  nameWithType.vb: CollectionChangeListener(Of T).AggregateChanges
- uid: NMF.Expressions.CollectionChangeListener`1.Node
  name: Node
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Node
  commentId: P:NMF.Expressions.CollectionChangeListener`1.Node
  fullName: NMF.Expressions.CollectionChangeListener<T>.Node
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Node
  nameWithType: CollectionChangeListener<T>.Node
  nameWithType.vb: CollectionChangeListener(Of T).Node
- uid: NMF.Expressions.CollectionChangeListener`1.Node*
  name: Node
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Node_
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Node
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangeListener<T>.Node
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Node
  nameWithType: CollectionChangeListener<T>.Node
  nameWithType.vb: CollectionChangeListener(Of T).Node
- uid: NMF.Expressions.CollectionChangeListener`1.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  name: Subscribe(INotifyCollectionChanged)
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Subscribe_System_Collections_Specialized_INotifyCollectionChanged_
  commentId: M:NMF.Expressions.CollectionChangeListener`1.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  fullName: NMF.Expressions.CollectionChangeListener<T>.Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Subscribe(System.Collections.Specialized.INotifyCollectionChanged)
  nameWithType: CollectionChangeListener<T>.Subscribe(INotifyCollectionChanged)
  nameWithType.vb: CollectionChangeListener(Of T).Subscribe(INotifyCollectionChanged)
- uid: NMF.Expressions.CollectionChangeListener`1.Subscribe*
  name: Subscribe
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Subscribe_
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Subscribe
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangeListener<T>.Subscribe
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Subscribe
  nameWithType: CollectionChangeListener<T>.Subscribe
  nameWithType.vb: CollectionChangeListener(Of T).Subscribe
- uid: NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  name: Unsubscribe()
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Unsubscribe
  commentId: M:NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  fullName: NMF.Expressions.CollectionChangeListener<T>.Unsubscribe()
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Unsubscribe()
  nameWithType: CollectionChangeListener<T>.Unsubscribe()
  nameWithType.vb: CollectionChangeListener(Of T).Unsubscribe()
- uid: NMF.Expressions.CollectionChangeListener`1.Unsubscribe*
  name: Unsubscribe
  href: api/Expressions/NMF.Expressions.CollectionChangeListener-1.html#NMF_Expressions_CollectionChangeListener_1_Unsubscribe_
  commentId: Overload:NMF.Expressions.CollectionChangeListener`1.Unsubscribe
  isSpec: "True"
  fullName: NMF.Expressions.CollectionChangeListener<T>.Unsubscribe
  fullName.vb: NMF.Expressions.CollectionChangeListener(Of T).Unsubscribe
  nameWithType: CollectionChangeListener<T>.Unsubscribe
  nameWithType.vb: CollectionChangeListener(Of T).Unsubscribe
- uid: NMF.Expressions.ConstantAttribute
  name: ConstantAttribute
  href: api/Expressions/NMF.Expressions.ConstantAttribute.html
  commentId: T:NMF.Expressions.ConstantAttribute
  fullName: NMF.Expressions.ConstantAttribute
  nameWithType: ConstantAttribute
- uid: NMF.Expressions.ConstantValue`1
  name: ConstantValue<T>
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html
  commentId: T:NMF.Expressions.ConstantValue`1
  name.vb: ConstantValue(Of T)
  fullName: NMF.Expressions.ConstantValue<T>
  fullName.vb: NMF.Expressions.ConstantValue(Of T)
  nameWithType: ConstantValue<T>
  nameWithType.vb: ConstantValue(Of T)
- uid: NMF.Expressions.ConstantValue`1.#ctor(`0)
  name: ConstantValue(T)
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1__ctor__0_
  commentId: M:NMF.Expressions.ConstantValue`1.#ctor(`0)
  fullName: NMF.Expressions.ConstantValue<T>.ConstantValue(T)
  fullName.vb: NMF.Expressions.ConstantValue(Of T).ConstantValue(T)
  nameWithType: ConstantValue<T>.ConstantValue(T)
  nameWithType.vb: ConstantValue(Of T).ConstantValue(T)
- uid: NMF.Expressions.ConstantValue`1.#ctor*
  name: ConstantValue
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1__ctor_
  commentId: Overload:NMF.Expressions.ConstantValue`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.ConstantValue
  fullName.vb: NMF.Expressions.ConstantValue(Of T).ConstantValue
  nameWithType: ConstantValue<T>.ConstantValue
  nameWithType.vb: ConstantValue(Of T).ConstantValue
- uid: NMF.Expressions.ConstantValue`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Dependencies
  commentId: P:NMF.Expressions.ConstantValue`1.Dependencies
  fullName: NMF.Expressions.ConstantValue<T>.Dependencies
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Dependencies
  nameWithType: ConstantValue<T>.Dependencies
  nameWithType.vb: ConstantValue(Of T).Dependencies
- uid: NMF.Expressions.ConstantValue`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Dependencies_
  commentId: Overload:NMF.Expressions.ConstantValue`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.Dependencies
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Dependencies
  nameWithType: ConstantValue<T>.Dependencies
  nameWithType.vb: ConstantValue(Of T).Dependencies
- uid: NMF.Expressions.ConstantValue`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Dispose
  commentId: M:NMF.Expressions.ConstantValue`1.Dispose
  fullName: NMF.Expressions.ConstantValue<T>.Dispose()
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Dispose()
  nameWithType: ConstantValue<T>.Dispose()
  nameWithType.vb: ConstantValue(Of T).Dispose()
- uid: NMF.Expressions.ConstantValue`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Dispose_
  commentId: Overload:NMF.Expressions.ConstantValue`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.Dispose
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Dispose
  nameWithType: ConstantValue<T>.Dispose
  nameWithType.vb: ConstantValue(Of T).Dispose
- uid: NMF.Expressions.ConstantValue`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_ExecutionMetaData
  commentId: P:NMF.Expressions.ConstantValue`1.ExecutionMetaData
  fullName: NMF.Expressions.ConstantValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.ConstantValue(Of T).ExecutionMetaData
  nameWithType: ConstantValue<T>.ExecutionMetaData
  nameWithType.vb: ConstantValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.ConstantValue`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.ConstantValue`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.ConstantValue(Of T).ExecutionMetaData
  nameWithType: ConstantValue<T>.ExecutionMetaData
  nameWithType.vb: ConstantValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.ConstantValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.ConstantValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.ConstantValue<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: ConstantValue<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: ConstantValue(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.ConstantValue`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Notify_
  commentId: Overload:NMF.Expressions.ConstantValue`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.Notify
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Notify
  nameWithType: ConstantValue<T>.Notify
  nameWithType.vb: ConstantValue(Of T).Notify
- uid: NMF.Expressions.ConstantValue`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Successors
  commentId: P:NMF.Expressions.ConstantValue`1.Successors
  fullName: NMF.Expressions.ConstantValue<T>.Successors
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Successors
  nameWithType: ConstantValue<T>.Successors
  nameWithType.vb: ConstantValue(Of T).Successors
- uid: NMF.Expressions.ConstantValue`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Successors_
  commentId: Overload:NMF.Expressions.ConstantValue`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.Successors
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Successors
  nameWithType: ConstantValue<T>.Successors
  nameWithType.vb: ConstantValue(Of T).Successors
- uid: NMF.Expressions.ConstantValue`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Value
  commentId: P:NMF.Expressions.ConstantValue`1.Value
  fullName: NMF.Expressions.ConstantValue<T>.Value
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Value
  nameWithType: ConstantValue<T>.Value
  nameWithType.vb: ConstantValue(Of T).Value
- uid: NMF.Expressions.ConstantValue`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_Value_
  commentId: Overload:NMF.Expressions.ConstantValue`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.ConstantValue<T>.Value
  fullName.vb: NMF.Expressions.ConstantValue(Of T).Value
  nameWithType: ConstantValue<T>.Value
  nameWithType.vb: ConstantValue(Of T).Value
- uid: NMF.Expressions.ConstantValue`1.ValueChanged
  name: ValueChanged
  href: api/Expressions/NMF.Expressions.ConstantValue-1.html#NMF_Expressions_ConstantValue_1_ValueChanged
  commentId: E:NMF.Expressions.ConstantValue`1.ValueChanged
  fullName: NMF.Expressions.ConstantValue<T>.ValueChanged
  fullName.vb: NMF.Expressions.ConstantValue(Of T).ValueChanged
  nameWithType: ConstantValue<T>.ValueChanged
  nameWithType.vb: ConstantValue(Of T).ValueChanged
- uid: NMF.Expressions.ExecutionEngine
  name: ExecutionEngine
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html
  commentId: T:NMF.Expressions.ExecutionEngine
  fullName: NMF.Expressions.ExecutionEngine
  nameWithType: ExecutionEngine
- uid: NMF.Expressions.ExecutionEngine.BeginTransaction
  name: BeginTransaction()
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_BeginTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.BeginTransaction
  fullName: NMF.Expressions.ExecutionEngine.BeginTransaction()
  nameWithType: ExecutionEngine.BeginTransaction()
- uid: NMF.Expressions.ExecutionEngine.BeginTransaction*
  name: BeginTransaction
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_BeginTransaction_
  commentId: Overload:NMF.Expressions.ExecutionEngine.BeginTransaction
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.BeginTransaction
  nameWithType: ExecutionEngine.BeginTransaction
- uid: NMF.Expressions.ExecutionEngine.CommitTransaction
  name: CommitTransaction()
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_CommitTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.CommitTransaction
  fullName: NMF.Expressions.ExecutionEngine.CommitTransaction()
  nameWithType: ExecutionEngine.CommitTransaction()
- uid: NMF.Expressions.ExecutionEngine.CommitTransaction*
  name: CommitTransaction
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_CommitTransaction_
  commentId: Overload:NMF.Expressions.ExecutionEngine.CommitTransaction
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.CommitTransaction
  nameWithType: ExecutionEngine.CommitTransaction
- uid: NMF.Expressions.ExecutionEngine.Current
  name: Current
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_Current
  commentId: P:NMF.Expressions.ExecutionEngine.Current
  fullName: NMF.Expressions.ExecutionEngine.Current
  nameWithType: ExecutionEngine.Current
- uid: NMF.Expressions.ExecutionEngine.Current*
  name: Current
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_Current_
  commentId: Overload:NMF.Expressions.ExecutionEngine.Current
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.Current
  nameWithType: ExecutionEngine.Current
- uid: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name: Execute(List<INotifiable>)
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_Execute_System_Collections_Generic_List_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name.vb: Execute(List(Of INotifiable))
  fullName: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List<NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.ExecutionEngine.Execute(System.Collections.Generic.List(Of NMF.Expressions.INotifiable))
  nameWithType: ExecutionEngine.Execute(List<INotifiable>)
  nameWithType.vb: ExecutionEngine.Execute(List(Of INotifiable))
- uid: NMF.Expressions.ExecutionEngine.Execute*
  name: Execute
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_Execute_
  commentId: Overload:NMF.Expressions.ExecutionEngine.Execute
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.Execute
  nameWithType: ExecutionEngine.Execute
- uid: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  name: ExecuteSingle(INotifiable)
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_ExecuteSingle_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.ExecutionEngine.ExecuteSingle(NMF.Expressions.INotifiable)
  nameWithType: ExecutionEngine.ExecuteSingle(INotifiable)
- uid: NMF.Expressions.ExecutionEngine.ExecuteSingle*
  name: ExecuteSingle
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_ExecuteSingle_
  commentId: Overload:NMF.Expressions.ExecutionEngine.ExecuteSingle
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.ExecuteSingle
  nameWithType: ExecutionEngine.ExecuteSingle
- uid: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  name: InvalidateNode(INotifiable)
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_InvalidateNode_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.ExecutionEngine.InvalidateNode(NMF.Expressions.INotifiable)
  nameWithType: ExecutionEngine.InvalidateNode(INotifiable)
- uid: NMF.Expressions.ExecutionEngine.InvalidateNode*
  name: InvalidateNode
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_InvalidateNode_
  commentId: Overload:NMF.Expressions.ExecutionEngine.InvalidateNode
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.InvalidateNode
  nameWithType: ExecutionEngine.InvalidateNode
- uid: NMF.Expressions.ExecutionEngine.RollbackTransaction
  name: RollbackTransaction()
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_RollbackTransaction
  commentId: M:NMF.Expressions.ExecutionEngine.RollbackTransaction
  fullName: NMF.Expressions.ExecutionEngine.RollbackTransaction()
  nameWithType: ExecutionEngine.RollbackTransaction()
- uid: NMF.Expressions.ExecutionEngine.RollbackTransaction*
  name: RollbackTransaction
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_RollbackTransaction_
  commentId: Overload:NMF.Expressions.ExecutionEngine.RollbackTransaction
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.RollbackTransaction
  nameWithType: ExecutionEngine.RollbackTransaction
- uid: NMF.Expressions.ExecutionEngine.TransactionActive
  name: TransactionActive
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_TransactionActive
  commentId: P:NMF.Expressions.ExecutionEngine.TransactionActive
  fullName: NMF.Expressions.ExecutionEngine.TransactionActive
  nameWithType: ExecutionEngine.TransactionActive
- uid: NMF.Expressions.ExecutionEngine.TransactionActive*
  name: TransactionActive
  href: api/Expressions/NMF.Expressions.ExecutionEngine.html#NMF_Expressions_ExecutionEngine_TransactionActive_
  commentId: Overload:NMF.Expressions.ExecutionEngine.TransactionActive
  isSpec: "True"
  fullName: NMF.Expressions.ExecutionEngine.TransactionActive
  nameWithType: ExecutionEngine.TransactionActive
- uid: NMF.Expressions.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.ExecutionMetaData.html
  commentId: T:NMF.Expressions.ExecutionMetaData
  fullName: NMF.Expressions.ExecutionMetaData
  nameWithType: ExecutionMetaData
- uid: NMF.Expressions.ExecutionMetaData.Results
  name: Results
  href: api/Expressions/NMF.Expressions.ExecutionMetaData.html#NMF_Expressions_ExecutionMetaData_Results
  commentId: F:NMF.Expressions.ExecutionMetaData.Results
  fullName: NMF.Expressions.ExecutionMetaData.Results
  nameWithType: ExecutionMetaData.Results
- uid: NMF.Expressions.ExpressionAnalyzer
  name: ExpressionAnalyzer
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html
  commentId: T:NMF.Expressions.ExpressionAnalyzer
  fullName: NMF.Expressions.ExpressionAnalyzer
  nameWithType: ExpressionAnalyzer
- uid: NMF.Expressions.ExpressionAnalyzer.#ctor
  name: ExpressionAnalyzer()
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer__ctor
  commentId: M:NMF.Expressions.ExpressionAnalyzer.#ctor
  fullName: NMF.Expressions.ExpressionAnalyzer.ExpressionAnalyzer()
  nameWithType: ExpressionAnalyzer.ExpressionAnalyzer()
- uid: NMF.Expressions.ExpressionAnalyzer.#ctor*
  name: ExpressionAnalyzer
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer__ctor_
  commentId: Overload:NMF.Expressions.ExpressionAnalyzer.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionAnalyzer.ExpressionAnalyzer
  nameWithType: ExpressionAnalyzer.ExpressionAnalyzer
- uid: NMF.Expressions.ExpressionAnalyzer.IsStateless(System.Linq.Expressions.LambdaExpression)
  name: IsStateless(LambdaExpression)
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_IsStateless_System_Linq_Expressions_LambdaExpression_
  commentId: M:NMF.Expressions.ExpressionAnalyzer.IsStateless(System.Linq.Expressions.LambdaExpression)
  fullName: NMF.Expressions.ExpressionAnalyzer.IsStateless(System.Linq.Expressions.LambdaExpression)
  nameWithType: ExpressionAnalyzer.IsStateless(LambdaExpression)
- uid: NMF.Expressions.ExpressionAnalyzer.IsStateless*
  name: IsStateless
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_IsStateless_
  commentId: Overload:NMF.Expressions.ExpressionAnalyzer.IsStateless
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionAnalyzer.IsStateless
  nameWithType: ExpressionAnalyzer.IsStateless
- uid: NMF.Expressions.ExpressionAnalyzer.VisitMember(System.Linq.Expressions.MemberExpression)
  name: VisitMember(MemberExpression)
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_VisitMember_System_Linq_Expressions_MemberExpression_
  commentId: M:NMF.Expressions.ExpressionAnalyzer.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName: NMF.Expressions.ExpressionAnalyzer.VisitMember(System.Linq.Expressions.MemberExpression)
  nameWithType: ExpressionAnalyzer.VisitMember(MemberExpression)
- uid: NMF.Expressions.ExpressionAnalyzer.VisitMember*
  name: VisitMember
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_VisitMember_
  commentId: Overload:NMF.Expressions.ExpressionAnalyzer.VisitMember
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionAnalyzer.VisitMember
  nameWithType: ExpressionAnalyzer.VisitMember
- uid: NMF.Expressions.ExpressionAnalyzer.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:NMF.Expressions.ExpressionAnalyzer.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: NMF.Expressions.ExpressionAnalyzer.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: ExpressionAnalyzer.VisitMethodCall(MethodCallExpression)
- uid: NMF.Expressions.ExpressionAnalyzer.VisitMethodCall*
  name: VisitMethodCall
  href: api/Expressions/NMF.Expressions.ExpressionAnalyzer.html#NMF_Expressions_ExpressionAnalyzer_VisitMethodCall_
  commentId: Overload:NMF.Expressions.ExpressionAnalyzer.VisitMethodCall
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionAnalyzer.VisitMethodCall
  nameWithType: ExpressionAnalyzer.VisitMethodCall
- uid: NMF.Expressions.ExpressionCompileRewriter
  name: ExpressionCompileRewriter
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriter.html
  commentId: T:NMF.Expressions.ExpressionCompileRewriter
  fullName: NMF.Expressions.ExpressionCompileRewriter
  nameWithType: ExpressionCompileRewriter
- uid: NMF.Expressions.ExpressionCompileRewriter.Compile*
  name: Compile
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriter.html#NMF_Expressions_ExpressionCompileRewriter_Compile_
  commentId: Overload:NMF.Expressions.ExpressionCompileRewriter.Compile
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionCompileRewriter.Compile
  nameWithType: ExpressionCompileRewriter.Compile
- uid: NMF.Expressions.ExpressionCompileRewriter.Compile``1(System.Linq.Expressions.Expression{``0})
  name: Compile<T>(Expression<T>)
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriter.html#NMF_Expressions_ExpressionCompileRewriter_Compile__1_System_Linq_Expressions_Expression___0__
  commentId: M:NMF.Expressions.ExpressionCompileRewriter.Compile``1(System.Linq.Expressions.Expression{``0})
  name.vb: Compile(Of T)(Expression(Of T))
  fullName: NMF.Expressions.ExpressionCompileRewriter.Compile<T>(System.Linq.Expressions.Expression<T>)
  fullName.vb: NMF.Expressions.ExpressionCompileRewriter.Compile(Of T)(System.Linq.Expressions.Expression(Of T))
  nameWithType: ExpressionCompileRewriter.Compile<T>(Expression<T>)
  nameWithType.vb: ExpressionCompileRewriter.Compile(Of T)(Expression(Of T))
- uid: NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriter.html#NMF_Expressions_ExpressionCompileRewriter_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: ExpressionCompileRewriter.VisitMethodCall(MethodCallExpression)
- uid: NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall*
  name: VisitMethodCall
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriter.html#NMF_Expressions_ExpressionCompileRewriter_VisitMethodCall_
  commentId: Overload:NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionCompileRewriter.VisitMethodCall
  nameWithType: ExpressionCompileRewriter.VisitMethodCall
- uid: NMF.Expressions.ExpressionCompileRewriterAttribute
  name: ExpressionCompileRewriterAttribute
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriterAttribute.html
  commentId: T:NMF.Expressions.ExpressionCompileRewriterAttribute
  fullName: NMF.Expressions.ExpressionCompileRewriterAttribute
  nameWithType: ExpressionCompileRewriterAttribute
- uid: NMF.Expressions.ExpressionCompileRewriterAttribute.#ctor(System.Type,System.String)
  name: ExpressionCompileRewriterAttribute(Type, String)
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriterAttribute.html#NMF_Expressions_ExpressionCompileRewriterAttribute__ctor_System_Type_System_String_
  commentId: M:NMF.Expressions.ExpressionCompileRewriterAttribute.#ctor(System.Type,System.String)
  fullName: NMF.Expressions.ExpressionCompileRewriterAttribute.ExpressionCompileRewriterAttribute(System.Type, System.String)
  nameWithType: ExpressionCompileRewriterAttribute.ExpressionCompileRewriterAttribute(Type, String)
- uid: NMF.Expressions.ExpressionCompileRewriterAttribute.#ctor*
  name: ExpressionCompileRewriterAttribute
  href: api/Expressions/NMF.Expressions.ExpressionCompileRewriterAttribute.html#NMF_Expressions_ExpressionCompileRewriterAttribute__ctor_
  commentId: Overload:NMF.Expressions.ExpressionCompileRewriterAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionCompileRewriterAttribute.ExpressionCompileRewriterAttribute
  nameWithType: ExpressionCompileRewriterAttribute.ExpressionCompileRewriterAttribute
- uid: NMF.Expressions.ExpressionVisitorBase
  name: ExpressionVisitorBase
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html
  commentId: T:NMF.Expressions.ExpressionVisitorBase
  fullName: NMF.Expressions.ExpressionVisitorBase
  nameWithType: ExpressionVisitorBase
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  name: VisitBinary(BinaryExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitBinary_System_Linq_Expressions_BinaryExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBinary(System.Linq.Expressions.BinaryExpression)
  nameWithType: ExpressionVisitorBase.VisitBinary(BinaryExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBinary*
  name: VisitBinary
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitBinary_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitBinary
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBinary
  nameWithType: ExpressionVisitorBase.VisitBinary
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  name: VisitBlock(BlockExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitBlock_System_Linq_Expressions_BlockExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBlock(System.Linq.Expressions.BlockExpression)
  nameWithType: ExpressionVisitorBase.VisitBlock(BlockExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitBlock*
  name: VisitBlock
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitBlock_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitBlock
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitBlock
  nameWithType: ExpressionVisitorBase.VisitBlock
- uid: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  name: VisitCatchBlock(CatchBlock)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitCatchBlock_System_Linq_Expressions_CatchBlock_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  nameWithType: ExpressionVisitorBase.VisitCatchBlock(CatchBlock)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock*
  name: VisitCatchBlock
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitCatchBlock_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitCatchBlock
  nameWithType: ExpressionVisitorBase.VisitCatchBlock
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  name: VisitConditional(ConditionalExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitConditional_System_Linq_Expressions_ConditionalExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  nameWithType: ExpressionVisitorBase.VisitConditional(ConditionalExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConditional*
  name: VisitConditional
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitConditional_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitConditional
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConditional
  nameWithType: ExpressionVisitorBase.VisitConditional
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  name: VisitConstant(ConstantExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitConstant_System_Linq_Expressions_ConstantExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConstant(System.Linq.Expressions.ConstantExpression)
  nameWithType: ExpressionVisitorBase.VisitConstant(ConstantExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitConstant*
  name: VisitConstant
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitConstant_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitConstant
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitConstant
  nameWithType: ExpressionVisitorBase.VisitConstant
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  name: VisitDebugInfo(DebugInfoExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitDebugInfo_System_Linq_Expressions_DebugInfoExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  nameWithType: ExpressionVisitorBase.VisitDebugInfo(DebugInfoExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo*
  name: VisitDebugInfo
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitDebugInfo_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDebugInfo
  nameWithType: ExpressionVisitorBase.VisitDebugInfo
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  name: VisitDefault(DefaultExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitDefault_System_Linq_Expressions_DefaultExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDefault(System.Linq.Expressions.DefaultExpression)
  nameWithType: ExpressionVisitorBase.VisitDefault(DefaultExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitDefault*
  name: VisitDefault
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitDefault_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitDefault
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitDefault
  nameWithType: ExpressionVisitorBase.VisitDefault
- uid: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  name: VisitElementInit(ElementInit)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitElementInit_System_Linq_Expressions_ElementInit_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitElementInit(System.Linq.Expressions.ElementInit)
  nameWithType: ExpressionVisitorBase.VisitElementInit(ElementInit)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitElementInit*
  name: VisitElementInit
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitElementInit_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitElementInit
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitElementInit
  nameWithType: ExpressionVisitorBase.VisitElementInit
- uid: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  name: VisitExtension(Expression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitExtension_System_Linq_Expressions_Expression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)
  nameWithType: ExpressionVisitorBase.VisitExtension(Expression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitExtension*
  name: VisitExtension
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitExtension_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitExtension
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitExtension
  nameWithType: ExpressionVisitorBase.VisitExtension
- uid: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  name: VisitGoto(GotoExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitGoto_System_Linq_Expressions_GotoExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitGoto(System.Linq.Expressions.GotoExpression)
  nameWithType: ExpressionVisitorBase.VisitGoto(GotoExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitGoto*
  name: VisitGoto
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitGoto_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitGoto
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitGoto
  nameWithType: ExpressionVisitorBase.VisitGoto
- uid: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  name: VisitIndex(IndexExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitIndex_System_Linq_Expressions_IndexExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitIndex(System.Linq.Expressions.IndexExpression)
  nameWithType: ExpressionVisitorBase.VisitIndex(IndexExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitIndex*
  name: VisitIndex
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitIndex_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitIndex
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitIndex
  nameWithType: ExpressionVisitorBase.VisitIndex
- uid: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  name: VisitInvocation(InvocationExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitInvocation_System_Linq_Expressions_InvocationExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  nameWithType: ExpressionVisitorBase.VisitInvocation(InvocationExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitInvocation*
  name: VisitInvocation
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitInvocation_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitInvocation
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitInvocation
  nameWithType: ExpressionVisitorBase.VisitInvocation
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  name: VisitLabel(LabelExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLabel_System_Linq_Expressions_LabelExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabel(System.Linq.Expressions.LabelExpression)
  nameWithType: ExpressionVisitorBase.VisitLabel(LabelExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabel*
  name: VisitLabel
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLabel_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitLabel
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabel
  nameWithType: ExpressionVisitorBase.VisitLabel
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  name: VisitLabelTarget(LabelTarget)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLabelTarget_System_Linq_Expressions_LabelTarget_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  nameWithType: ExpressionVisitorBase.VisitLabelTarget(LabelTarget)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget*
  name: VisitLabelTarget
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLabelTarget_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLabelTarget
  nameWithType: ExpressionVisitorBase.VisitLabelTarget
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda*
  name: VisitLambda
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLambda_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitLambda
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda
  nameWithType: ExpressionVisitorBase.VisitLambda
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  name: VisitLambda<T>(Expression<T>)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLambda__1_System_Linq_Expressions_Expression___0__
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  name.vb: VisitLambda(Of T)(Expression(Of T))
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  fullName.vb: NMF.Expressions.ExpressionVisitorBase.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  nameWithType: ExpressionVisitorBase.VisitLambda<T>(Expression<T>)
  nameWithType.vb: ExpressionVisitorBase.VisitLambda(Of T)(Expression(Of T))
- uid: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  name: VisitListInit(ListInitExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitListInit_System_Linq_Expressions_ListInitExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitListInit(System.Linq.Expressions.ListInitExpression)
  nameWithType: ExpressionVisitorBase.VisitListInit(ListInitExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitListInit*
  name: VisitListInit
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitListInit_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitListInit
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitListInit
  nameWithType: ExpressionVisitorBase.VisitListInit
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  name: VisitLoop(LoopExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLoop_System_Linq_Expressions_LoopExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLoop(System.Linq.Expressions.LoopExpression)
  nameWithType: ExpressionVisitorBase.VisitLoop(LoopExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitLoop*
  name: VisitLoop
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitLoop_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitLoop
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitLoop
  nameWithType: ExpressionVisitorBase.VisitLoop
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  name: VisitMember(MemberExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMember_System_Linq_Expressions_MemberExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMember(System.Linq.Expressions.MemberExpression)
  nameWithType: ExpressionVisitorBase.VisitMember(MemberExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMember*
  name: VisitMember
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMember_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMember
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMember
  nameWithType: ExpressionVisitorBase.VisitMember
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  name: VisitMemberAssignment(MemberAssignment)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberAssignment_System_Linq_Expressions_MemberAssignment_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  nameWithType: ExpressionVisitorBase.VisitMemberAssignment(MemberAssignment)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment*
  name: VisitMemberAssignment
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberAssignment_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberAssignment
  nameWithType: ExpressionVisitorBase.VisitMemberAssignment
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  name: VisitMemberInit(MemberInitExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberInit_System_Linq_Expressions_MemberInitExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  nameWithType: ExpressionVisitorBase.VisitMemberInit(MemberInitExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit*
  name: VisitMemberInit
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberInit_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMemberInit
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberInit
  nameWithType: ExpressionVisitorBase.VisitMemberInit
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  name: VisitMemberListBinding(MemberListBinding)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberListBinding_System_Linq_Expressions_MemberListBinding_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  nameWithType: ExpressionVisitorBase.VisitMemberListBinding(MemberListBinding)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding*
  name: VisitMemberListBinding
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberListBinding_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberListBinding
  nameWithType: ExpressionVisitorBase.VisitMemberListBinding
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  name: VisitMemberMemberBinding(MemberMemberBinding)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberMemberBinding_System_Linq_Expressions_MemberMemberBinding_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  nameWithType: ExpressionVisitorBase.VisitMemberMemberBinding(MemberMemberBinding)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding*
  name: VisitMemberMemberBinding
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMemberMemberBinding_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMemberMemberBinding
  nameWithType: ExpressionVisitorBase.VisitMemberMemberBinding
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: ExpressionVisitorBase.VisitMethodCall(MethodCallExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall*
  name: VisitMethodCall
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitMethodCall_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitMethodCall
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitMethodCall
  nameWithType: ExpressionVisitorBase.VisitMethodCall
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  name: VisitNew(NewExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitNew_System_Linq_Expressions_NewExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNew(System.Linq.Expressions.NewExpression)
  nameWithType: ExpressionVisitorBase.VisitNew(NewExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNew*
  name: VisitNew
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitNew_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitNew
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNew
  nameWithType: ExpressionVisitorBase.VisitNew
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  name: VisitNewArray(NewArrayExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitNewArray_System_Linq_Expressions_NewArrayExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  nameWithType: ExpressionVisitorBase.VisitNewArray(NewArrayExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitNewArray*
  name: VisitNewArray
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitNewArray_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitNewArray
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitNewArray
  nameWithType: ExpressionVisitorBase.VisitNewArray
- uid: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  name: VisitParameter(ParameterExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitParameter_System_Linq_Expressions_ParameterExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitParameter(System.Linq.Expressions.ParameterExpression)
  nameWithType: ExpressionVisitorBase.VisitParameter(ParameterExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitParameter*
  name: VisitParameter
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitParameter_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitParameter
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitParameter
  nameWithType: ExpressionVisitorBase.VisitParameter
- uid: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitRuntimeVariables_System_Linq_Expressions_RuntimeVariablesExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  nameWithType: ExpressionVisitorBase.VisitRuntimeVariables(RuntimeVariablesExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables*
  name: VisitRuntimeVariables
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitRuntimeVariables_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitRuntimeVariables
  nameWithType: ExpressionVisitorBase.VisitRuntimeVariables
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  name: VisitSwitch(SwitchExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitSwitch_System_Linq_Expressions_SwitchExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  nameWithType: ExpressionVisitorBase.VisitSwitch(SwitchExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitch*
  name: VisitSwitch
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitSwitch_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitSwitch
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitch
  nameWithType: ExpressionVisitorBase.VisitSwitch
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  name: VisitSwitchCase(SwitchCase)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitSwitchCase_System_Linq_Expressions_SwitchCase_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  nameWithType: ExpressionVisitorBase.VisitSwitchCase(SwitchCase)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase*
  name: VisitSwitchCase
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitSwitchCase_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitSwitchCase
  nameWithType: ExpressionVisitorBase.VisitSwitchCase
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  name: VisitTry(TryExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitTry_System_Linq_Expressions_TryExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTry(System.Linq.Expressions.TryExpression)
  nameWithType: ExpressionVisitorBase.VisitTry(TryExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTry*
  name: VisitTry
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitTry_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitTry
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTry
  nameWithType: ExpressionVisitorBase.VisitTry
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  name: VisitTypeBinary(TypeBinaryExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitTypeBinary_System_Linq_Expressions_TypeBinaryExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  nameWithType: ExpressionVisitorBase.VisitTypeBinary(TypeBinaryExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary*
  name: VisitTypeBinary
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitTypeBinary_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitTypeBinary
  nameWithType: ExpressionVisitorBase.VisitTypeBinary
- uid: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  name: VisitUnary(UnaryExpression)
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitUnary_System_Linq_Expressions_UnaryExpression_
  commentId: M:NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitUnary(System.Linq.Expressions.UnaryExpression)
  nameWithType: ExpressionVisitorBase.VisitUnary(UnaryExpression)
- uid: NMF.Expressions.ExpressionVisitorBase.VisitUnary*
  name: VisitUnary
  href: api/Expressions/NMF.Expressions.ExpressionVisitorBase.html#NMF_Expressions_ExpressionVisitorBase_VisitUnary_
  commentId: Overload:NMF.Expressions.ExpressionVisitorBase.VisitUnary
  isSpec: "True"
  fullName: NMF.Expressions.ExpressionVisitorBase.VisitUnary
  nameWithType: ExpressionVisitorBase.VisitUnary
- uid: NMF.Expressions.IChangeListener
  name: IChangeListener
  href: api/Expressions/NMF.Expressions.IChangeListener.html
  commentId: T:NMF.Expressions.IChangeListener
  fullName: NMF.Expressions.IChangeListener
  nameWithType: IChangeListener
- uid: NMF.Expressions.IChangeListener.AggregateChanges
  name: AggregateChanges()
  href: api/Expressions/NMF.Expressions.IChangeListener.html#NMF_Expressions_IChangeListener_AggregateChanges
  commentId: M:NMF.Expressions.IChangeListener.AggregateChanges
  fullName: NMF.Expressions.IChangeListener.AggregateChanges()
  nameWithType: IChangeListener.AggregateChanges()
- uid: NMF.Expressions.IChangeListener.AggregateChanges*
  name: AggregateChanges
  href: api/Expressions/NMF.Expressions.IChangeListener.html#NMF_Expressions_IChangeListener_AggregateChanges_
  commentId: Overload:NMF.Expressions.IChangeListener.AggregateChanges
  isSpec: "True"
  fullName: NMF.Expressions.IChangeListener.AggregateChanges
  nameWithType: IChangeListener.AggregateChanges
- uid: NMF.Expressions.IChangeListener.Node
  name: Node
  href: api/Expressions/NMF.Expressions.IChangeListener.html#NMF_Expressions_IChangeListener_Node
  commentId: P:NMF.Expressions.IChangeListener.Node
  fullName: NMF.Expressions.IChangeListener.Node
  nameWithType: IChangeListener.Node
- uid: NMF.Expressions.IChangeListener.Node*
  name: Node
  href: api/Expressions/NMF.Expressions.IChangeListener.html#NMF_Expressions_IChangeListener_Node_
  commentId: Overload:NMF.Expressions.IChangeListener.Node
  isSpec: "True"
  fullName: NMF.Expressions.IChangeListener.Node
  nameWithType: IChangeListener.Node
- uid: NMF.Expressions.ICollectionChangedNotificationResult
  name: ICollectionChangedNotificationResult
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html
  commentId: T:NMF.Expressions.ICollectionChangedNotificationResult
  fullName: NMF.Expressions.ICollectionChangedNotificationResult
  nameWithType: ICollectionChangedNotificationResult
- uid: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  name: AddedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_AddedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems*
  name: AddedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_AddedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  name: IsReset
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_IsReset
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  nameWithType: ICollectionChangedNotificationResult.IsReset
- uid: NMF.Expressions.ICollectionChangedNotificationResult.IsReset*
  name: IsReset
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_IsReset_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.IsReset
  nameWithType: ICollectionChangedNotificationResult.IsReset
- uid: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  name: MovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_MovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems*
  name: MovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_MovedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_NewItemsStartIndex
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.NewItemsStartIndex
- uid: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex*
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_NewItemsStartIndex_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.NewItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.NewItemsStartIndex
- uid: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_OldItemsStartIndex
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.OldItemsStartIndex
- uid: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex*
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_OldItemsStartIndex_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.OldItemsStartIndex
  nameWithType: ICollectionChangedNotificationResult.OldItemsStartIndex
- uid: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems*
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult.html#NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1
  name: ICollectionChangedNotificationResult<T>
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html
  commentId: T:NMF.Expressions.ICollectionChangedNotificationResult`1
  name.vb: ICollectionChangedNotificationResult(Of T)
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T)
  nameWithType: ICollectionChangedNotificationResult<T>
  nameWithType.vb: ICollectionChangedNotificationResult(Of T)
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.AddedItems
  name: AddedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_AddedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult`1.AddedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.AddedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).AddedItems
  nameWithType: ICollectionChangedNotificationResult<T>.AddedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).AddedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.AddedItems*
  name: AddedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_AddedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult`1.AddedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.AddedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).AddedItems
  nameWithType: ICollectionChangedNotificationResult<T>.AddedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).AddedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.MovedItems
  name: MovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_MovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult`1.MovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.MovedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).MovedItems
  nameWithType: ICollectionChangedNotificationResult<T>.MovedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).MovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.MovedItems*
  name: MovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_MovedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult`1.MovedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.MovedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).MovedItems
  nameWithType: ICollectionChangedNotificationResult<T>.MovedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).MovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.RemovedItems
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_RemovedItems
  commentId: P:NMF.Expressions.ICollectionChangedNotificationResult`1.RemovedItems
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.RemovedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).RemovedItems
  nameWithType: ICollectionChangedNotificationResult<T>.RemovedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).RemovedItems
- uid: NMF.Expressions.ICollectionChangedNotificationResult`1.RemovedItems*
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.ICollectionChangedNotificationResult-1.html#NMF_Expressions_ICollectionChangedNotificationResult_1_RemovedItems_
  commentId: Overload:NMF.Expressions.ICollectionChangedNotificationResult`1.RemovedItems
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionChangedNotificationResult<T>.RemovedItems
  fullName.vb: NMF.Expressions.ICollectionChangedNotificationResult(Of T).RemovedItems
  nameWithType: ICollectionChangedNotificationResult<T>.RemovedItems
  nameWithType.vb: ICollectionChangedNotificationResult(Of T).RemovedItems
- uid: NMF.Expressions.ICollectionExpression
  name: ICollectionExpression
  href: api/Expressions/NMF.Expressions.ICollectionExpression.html
  commentId: T:NMF.Expressions.ICollectionExpression
  fullName: NMF.Expressions.ICollectionExpression
  nameWithType: ICollectionExpression
- uid: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  href: api/Expressions/NMF.Expressions.ICollectionExpression-1.html
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name.vb: ICollectionExpression(Of T)
  fullName: NMF.Expressions.ICollectionExpression<T>
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  nameWithType: ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
- uid: NMF.Expressions.ICollectionExpression`1.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.ICollectionExpression-1.html#NMF_Expressions_ICollectionExpression_1_AsNotifiable
  commentId: M:NMF.Expressions.ICollectionExpression`1.AsNotifiable
  fullName: NMF.Expressions.ICollectionExpression<T>.AsNotifiable()
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T).AsNotifiable()
  nameWithType: ICollectionExpression<T>.AsNotifiable()
  nameWithType.vb: ICollectionExpression(Of T).AsNotifiable()
- uid: NMF.Expressions.ICollectionExpression`1.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.ICollectionExpression-1.html#NMF_Expressions_ICollectionExpression_1_AsNotifiable_
  commentId: Overload:NMF.Expressions.ICollectionExpression`1.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.ICollectionExpression<T>.AsNotifiable
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T).AsNotifiable
  nameWithType: ICollectionExpression<T>.AsNotifiable
  nameWithType.vb: ICollectionExpression(Of T).AsNotifiable
- uid: NMF.Expressions.IEnumerableExpression
  name: IEnumerableExpression
  href: api/Expressions/NMF.Expressions.IEnumerableExpression.html
  commentId: T:NMF.Expressions.IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
  nameWithType: IEnumerableExpression
- uid: NMF.Expressions.IEnumerableExpression.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.IEnumerableExpression.html#NMF_Expressions_IEnumerableExpression_AsNotifiable
  commentId: M:NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType: IEnumerableExpression.AsNotifiable()
- uid: NMF.Expressions.IEnumerableExpression.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.IEnumerableExpression.html#NMF_Expressions_IEnumerableExpression_AsNotifiable_
  commentId: Overload:NMF.Expressions.IEnumerableExpression.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.IEnumerableExpression.AsNotifiable
  nameWithType: IEnumerableExpression.AsNotifiable
- uid: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  href: api/Expressions/NMF.Expressions.IEnumerableExpression-1.html
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name.vb: IEnumerableExpression(Of T)
  fullName: NMF.Expressions.IEnumerableExpression<T>
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  nameWithType: IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
- uid: NMF.Expressions.IEnumerableExpression`1.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.IEnumerableExpression-1.html#NMF_Expressions_IEnumerableExpression_1_AsNotifiable
  commentId: M:NMF.Expressions.IEnumerableExpression`1.AsNotifiable
  fullName: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T).AsNotifiable()
  nameWithType: IEnumerableExpression<T>.AsNotifiable()
  nameWithType.vb: IEnumerableExpression(Of T).AsNotifiable()
- uid: NMF.Expressions.IEnumerableExpression`1.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.IEnumerableExpression-1.html#NMF_Expressions_IEnumerableExpression_1_AsNotifiable_
  commentId: Overload:NMF.Expressions.IEnumerableExpression`1.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.IEnumerableExpression<T>.AsNotifiable
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T).AsNotifiable
  nameWithType: IEnumerableExpression<T>.AsNotifiable
  nameWithType.vb: IEnumerableExpression(Of T).AsNotifiable
- uid: NMF.Expressions.IGroupingExpression`2
  name: IGroupingExpression<TKey, TElement>
  href: api/Expressions/NMF.Expressions.IGroupingExpression-2.html
  commentId: T:NMF.Expressions.IGroupingExpression`2
  name.vb: IGroupingExpression(Of TKey, TElement)
  fullName: NMF.Expressions.IGroupingExpression<TKey, TElement>
  fullName.vb: NMF.Expressions.IGroupingExpression(Of TKey, TElement)
  nameWithType: IGroupingExpression<TKey, TElement>
  nameWithType.vb: IGroupingExpression(Of TKey, TElement)
- uid: NMF.Expressions.IListExpression`1
  name: IListExpression<T>
  href: api/Expressions/NMF.Expressions.IListExpression-1.html
  commentId: T:NMF.Expressions.IListExpression`1
  name.vb: IListExpression(Of T)
  fullName: NMF.Expressions.IListExpression<T>
  fullName.vb: NMF.Expressions.IListExpression(Of T)
  nameWithType: IListExpression<T>
  nameWithType.vb: IListExpression(Of T)
- uid: NMF.Expressions.ImmutableMethodAttribute
  name: ImmutableMethodAttribute
  href: api/Expressions/NMF.Expressions.ImmutableMethodAttribute.html
  commentId: T:NMF.Expressions.ImmutableMethodAttribute
  fullName: NMF.Expressions.ImmutableMethodAttribute
  nameWithType: ImmutableMethodAttribute
- uid: NMF.Expressions.IncrementalFunc`10
  name: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html
  commentId: T:NMF.Expressions.IncrementalFunc`10
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
- uid: NMF.Expressions.IncrementalFunc`10.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__
  commentId: M:NMF.Expressions.IncrementalFunc`10.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
- uid: NMF.Expressions.IncrementalFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9___
  commentId: M:NMF.Expressions.IncrementalFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
- uid: NMF.Expressions.IncrementalFunc`10.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`10.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`10.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10_GetNotifyValue__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.IncrementalFunc`10.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.IncrementalFunc`10.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`10.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`10.Item(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: Item[T1, T2, T3, T4, T5, T6, T7, T8, T9]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10_Item__0__1__2__3__4__5__6__7__8_
  commentId: P:NMF.Expressions.IncrementalFunc`10.Item(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name.vb: Item(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8, T9]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8, T9]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.IncrementalFunc`10.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-10.html#NMF_Expressions_IncrementalFunc_10_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`10.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`11
  name: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html
  commentId: T:NMF.Expressions.IncrementalFunc`11
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
- uid: NMF.Expressions.IncrementalFunc`11.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__
  commentId: M:NMF.Expressions.IncrementalFunc`11.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
- uid: NMF.Expressions.IncrementalFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10___
  commentId: M:NMF.Expressions.IncrementalFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
- uid: NMF.Expressions.IncrementalFunc`11.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`11.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`11.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11_GetNotifyValue__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.IncrementalFunc`11.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.IncrementalFunc`11.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`11.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`11.Item(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: Item[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11_Item__0__1__2__3__4__5__6__7__8__9_
  commentId: P:NMF.Expressions.IncrementalFunc`11.Item(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name.vb: Item(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.IncrementalFunc`11.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-11.html#NMF_Expressions_IncrementalFunc_11_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`11.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`2
  name: IncrementalFunc<T1, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html
  commentId: T:NMF.Expressions.IncrementalFunc`2
  name.vb: IncrementalFunc(Of T1, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult)
  nameWithType: IncrementalFunc<T1, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, TResult)
- uid: NMF.Expressions.IncrementalFunc`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1})
  name: IncrementalFunc(ObservingFunc<T1, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2__ctor_NMF_Expressions_ObservingFunc__0__1__
  commentId: M:NMF.Expressions.IncrementalFunc`2.#ctor(NMF.Expressions.ObservingFunc{`0,`1})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, TResult))
  nameWithType: IncrementalFunc<T1, TResult>.IncrementalFunc(ObservingFunc<T1, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, TResult).IncrementalFunc(ObservingFunc(Of T1, TResult))
- uid: NMF.Expressions.IncrementalFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name: IncrementalFunc(Expression<Func<T1, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___
  commentId: M:NMF.Expressions.IncrementalFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)))
  nameWithType: IncrementalFunc<T1, TResult>.IncrementalFunc(Expression<Func<T1, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, TResult).IncrementalFunc(Expression(Of Func(Of T1, TResult)))
- uid: NMF.Expressions.IncrementalFunc`2.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`2.GetNotifyValue(`0)
  name: GetNotifyValue(T1)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2_GetNotifyValue__0_
  commentId: M:NMF.Expressions.IncrementalFunc`2.GetNotifyValue(`0)
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.GetNotifyValue(T1)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).GetNotifyValue(T1)
  nameWithType: IncrementalFunc<T1, TResult>.GetNotifyValue(T1)
  nameWithType.vb: IncrementalFunc(Of T1, TResult).GetNotifyValue(T1)
- uid: NMF.Expressions.IncrementalFunc`2.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`2.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`2.Item(`0)
  name: Item[T1]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2_Item__0_
  commentId: P:NMF.Expressions.IncrementalFunc`2.Item(`0)
  name.vb: Item(T1)
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.Item[T1]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).Item(T1)
  nameWithType: IncrementalFunc<T1, TResult>.Item[T1]
  nameWithType.vb: IncrementalFunc(Of T1, TResult).Item(T1)
- uid: NMF.Expressions.IncrementalFunc`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-2.html#NMF_Expressions_IncrementalFunc_2_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, TResult).Item
  nameWithType: IncrementalFunc<T1, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`3
  name: IncrementalFunc<T1, T2, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html
  commentId: T:NMF.Expressions.IncrementalFunc`3
  name.vb: IncrementalFunc(Of T1, T2, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult)
  nameWithType: IncrementalFunc<T1, T2, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult)
- uid: NMF.Expressions.IncrementalFunc`3.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2})
  name: IncrementalFunc(ObservingFunc<T1, T2, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3__ctor_NMF_Expressions_ObservingFunc__0__1__2__
  commentId: M:NMF.Expressions.IncrementalFunc`3.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, TResult))
  nameWithType: IncrementalFunc<T1, T2, TResult>.IncrementalFunc(ObservingFunc<T1, T2, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, TResult))
- uid: NMF.Expressions.IncrementalFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name: IncrementalFunc(Expression<Func<T1, T2, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2___
  commentId: M:NMF.Expressions.IncrementalFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)))
  nameWithType: IncrementalFunc<T1, T2, TResult>.IncrementalFunc(Expression<Func<T1, T2, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, TResult)))
- uid: NMF.Expressions.IncrementalFunc`3.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`3.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`3.GetNotifyValue(`0,`1)
  name: GetNotifyValue(T1, T2)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3_GetNotifyValue__0__1_
  commentId: M:NMF.Expressions.IncrementalFunc`3.GetNotifyValue(`0,`1)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.GetNotifyValue(T1, T2)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).GetNotifyValue(T1, T2)
  nameWithType: IncrementalFunc<T1, T2, TResult>.GetNotifyValue(T1, T2)
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).GetNotifyValue(T1, T2)
- uid: NMF.Expressions.IncrementalFunc`3.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`3.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`3.Item(`0,`1)
  name: Item[T1, T2]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3_Item__0__1_
  commentId: P:NMF.Expressions.IncrementalFunc`3.Item(`0,`1)
  name.vb: Item(T1, T2)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.Item[T1, T2]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).Item(T1, T2)
  nameWithType: IncrementalFunc<T1, T2, TResult>.Item[T1, T2]
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).Item(T1, T2)
- uid: NMF.Expressions.IncrementalFunc`3.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-3.html#NMF_Expressions_IncrementalFunc_3_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`3.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`4
  name: IncrementalFunc<T1, T2, T3, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html
  commentId: T:NMF.Expressions.IncrementalFunc`4
  name.vb: IncrementalFunc(Of T1, T2, T3, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult)
- uid: NMF.Expressions.IncrementalFunc`4.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__
  commentId: M:NMF.Expressions.IncrementalFunc`4.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, TResult))
- uid: NMF.Expressions.IncrementalFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3___
  commentId: M:NMF.Expressions.IncrementalFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, TResult)))
- uid: NMF.Expressions.IncrementalFunc`4.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`4.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`4.GetNotifyValue(`0,`1,`2)
  name: GetNotifyValue(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4_GetNotifyValue__0__1__2_
  commentId: M:NMF.Expressions.IncrementalFunc`4.GetNotifyValue(`0,`1,`2)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.GetNotifyValue(T1, T2, T3)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).GetNotifyValue(T1, T2, T3)
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.GetNotifyValue(T1, T2, T3)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).GetNotifyValue(T1, T2, T3)
- uid: NMF.Expressions.IncrementalFunc`4.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`4.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`4.Item(`0,`1,`2)
  name: Item[T1, T2, T3]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4_Item__0__1__2_
  commentId: P:NMF.Expressions.IncrementalFunc`4.Item(`0,`1,`2)
  name.vb: Item(T1, T2, T3)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.Item[T1, T2, T3]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).Item(T1, T2, T3)
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.Item[T1, T2, T3]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).Item(T1, T2, T3)
- uid: NMF.Expressions.IncrementalFunc`4.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-4.html#NMF_Expressions_IncrementalFunc_4_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`4.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`5
  name: IncrementalFunc<T1, T2, T3, T4, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html
  commentId: T:NMF.Expressions.IncrementalFunc`5
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult)
- uid: NMF.Expressions.IncrementalFunc`5.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__
  commentId: M:NMF.Expressions.IncrementalFunc`5.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, TResult))
- uid: NMF.Expressions.IncrementalFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4___
  commentId: M:NMF.Expressions.IncrementalFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
- uid: NMF.Expressions.IncrementalFunc`5.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`5.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`5.GetNotifyValue(`0,`1,`2,`3)
  name: GetNotifyValue(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5_GetNotifyValue__0__1__2__3_
  commentId: M:NMF.Expressions.IncrementalFunc`5.GetNotifyValue(`0,`1,`2,`3)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.GetNotifyValue(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).GetNotifyValue(T1, T2, T3, T4)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.GetNotifyValue(T1, T2, T3, T4)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).GetNotifyValue(T1, T2, T3, T4)
- uid: NMF.Expressions.IncrementalFunc`5.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`5.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`5.Item(`0,`1,`2,`3)
  name: Item[T1, T2, T3, T4]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5_Item__0__1__2__3_
  commentId: P:NMF.Expressions.IncrementalFunc`5.Item(`0,`1,`2,`3)
  name.vb: Item(T1, T2, T3, T4)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.Item[T1, T2, T3, T4]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).Item(T1, T2, T3, T4)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.Item[T1, T2, T3, T4]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).Item(T1, T2, T3, T4)
- uid: NMF.Expressions.IncrementalFunc`5.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-5.html#NMF_Expressions_IncrementalFunc_5_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`5.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`6
  name: IncrementalFunc<T1, T2, T3, T4, T5, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html
  commentId: T:NMF.Expressions.IncrementalFunc`6
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult)
- uid: NMF.Expressions.IncrementalFunc`6.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__
  commentId: M:NMF.Expressions.IncrementalFunc`6.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
- uid: NMF.Expressions.IncrementalFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5___
  commentId: M:NMF.Expressions.IncrementalFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
- uid: NMF.Expressions.IncrementalFunc`6.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`6.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`6.GetNotifyValue(`0,`1,`2,`3,`4)
  name: GetNotifyValue(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6_GetNotifyValue__0__1__2__3__4_
  commentId: M:NMF.Expressions.IncrementalFunc`6.GetNotifyValue(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.GetNotifyValue(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).GetNotifyValue(T1, T2, T3, T4, T5)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.GetNotifyValue(T1, T2, T3, T4, T5)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).GetNotifyValue(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.IncrementalFunc`6.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`6.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`6.Item(`0,`1,`2,`3,`4)
  name: Item[T1, T2, T3, T4, T5]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6_Item__0__1__2__3__4_
  commentId: P:NMF.Expressions.IncrementalFunc`6.Item(`0,`1,`2,`3,`4)
  name.vb: Item(T1, T2, T3, T4, T5)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.Item[T1, T2, T3, T4, T5]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).Item(T1, T2, T3, T4, T5)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.Item[T1, T2, T3, T4, T5]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).Item(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.IncrementalFunc`6.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-6.html#NMF_Expressions_IncrementalFunc_6_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`6.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`7
  name: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html
  commentId: T:NMF.Expressions.IncrementalFunc`7
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult)
- uid: NMF.Expressions.IncrementalFunc`7.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__
  commentId: M:NMF.Expressions.IncrementalFunc`7.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
- uid: NMF.Expressions.IncrementalFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6___
  commentId: M:NMF.Expressions.IncrementalFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
- uid: NMF.Expressions.IncrementalFunc`7.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`7.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`7.GetNotifyValue(`0,`1,`2,`3,`4,`5)
  name: GetNotifyValue(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7_GetNotifyValue__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.IncrementalFunc`7.GetNotifyValue(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.IncrementalFunc`7.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`7.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`7.Item(`0,`1,`2,`3,`4,`5)
  name: Item[T1, T2, T3, T4, T5, T6]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7_Item__0__1__2__3__4__5_
  commentId: P:NMF.Expressions.IncrementalFunc`7.Item(`0,`1,`2,`3,`4,`5)
  name.vb: Item(T1, T2, T3, T4, T5, T6)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.Item[T1, T2, T3, T4, T5, T6]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).Item(T1, T2, T3, T4, T5, T6)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.Item[T1, T2, T3, T4, T5, T6]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).Item(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.IncrementalFunc`7.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-7.html#NMF_Expressions_IncrementalFunc_7_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`7.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`8
  name: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html
  commentId: T:NMF.Expressions.IncrementalFunc`8
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
- uid: NMF.Expressions.IncrementalFunc`8.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__
  commentId: M:NMF.Expressions.IncrementalFunc`8.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
- uid: NMF.Expressions.IncrementalFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7___
  commentId: M:NMF.Expressions.IncrementalFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
- uid: NMF.Expressions.IncrementalFunc`8.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`8.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`8.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6)
  name: GetNotifyValue(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8_GetNotifyValue__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.IncrementalFunc`8.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.IncrementalFunc`8.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`8.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`8.Item(`0,`1,`2,`3,`4,`5,`6)
  name: Item[T1, T2, T3, T4, T5, T6, T7]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8_Item__0__1__2__3__4__5__6_
  commentId: P:NMF.Expressions.IncrementalFunc`8.Item(`0,`1,`2,`3,`4,`5,`6)
  name.vb: Item(T1, T2, T3, T4, T5, T6, T7)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Item[T1, T2, T3, T4, T5, T6, T7]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Item(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Item[T1, T2, T3, T4, T5, T6, T7]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Item(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.IncrementalFunc`8.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-8.html#NMF_Expressions_IncrementalFunc_8_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`8.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Item
- uid: NMF.Expressions.IncrementalFunc`9
  name: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html
  commentId: T:NMF.Expressions.IncrementalFunc`9
  name.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
- uid: NMF.Expressions.IncrementalFunc`9.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8})
  name: IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9__ctor_NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__
  commentId: M:NMF.Expressions.IncrementalFunc`9.#ctor(NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8})
  name.vb: IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc(NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc(NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc(ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc(ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
- uid: NMF.Expressions.IncrementalFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name: IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8___
  commentId: M:NMF.Expressions.IncrementalFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name.vb: IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
- uid: NMF.Expressions.IncrementalFunc`9.#ctor*
  name: IncrementalFunc
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9__ctor_
  commentId: Overload:NMF.Expressions.IncrementalFunc`9.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IncrementalFunc
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IncrementalFunc
- uid: NMF.Expressions.IncrementalFunc`9.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7)
  name: GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9_GetNotifyValue__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.IncrementalFunc`9.GetNotifyValue(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).GetNotifyValue(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.IncrementalFunc`9.GetNotifyValue*
  name: GetNotifyValue
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9_GetNotifyValue_
  commentId: Overload:NMF.Expressions.IncrementalFunc`9.GetNotifyValue
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.GetNotifyValue
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).GetNotifyValue
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.GetNotifyValue
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).GetNotifyValue
- uid: NMF.Expressions.IncrementalFunc`9.Item(`0,`1,`2,`3,`4,`5,`6,`7)
  name: Item[T1, T2, T3, T4, T5, T6, T7, T8]
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9_Item__0__1__2__3__4__5__6__7_
  commentId: P:NMF.Expressions.IncrementalFunc`9.Item(`0,`1,`2,`3,`4,`5,`6,`7)
  name.vb: Item(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8]
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Item[T1, T2, T3, T4, T5, T6, T7, T8]
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Item(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.IncrementalFunc`9.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.IncrementalFunc-9.html#NMF_Expressions_IncrementalFunc_9_Item_
  commentId: Overload:NMF.Expressions.IncrementalFunc`9.Item
  isSpec: "True"
  fullName: NMF.Expressions.IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Item
  fullName.vb: NMF.Expressions.IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Item
  nameWithType: IncrementalFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Item
  nameWithType.vb: IncrementalFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Item
- uid: NMF.Expressions.INotifiable
  name: INotifiable
  href: api/Expressions/NMF.Expressions.INotifiable.html
  commentId: T:NMF.Expressions.INotifiable
  fullName: NMF.Expressions.INotifiable
  nameWithType: INotifiable
- uid: NMF.Expressions.INotifiable.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Dependencies
  commentId: P:NMF.Expressions.INotifiable.Dependencies
  fullName: NMF.Expressions.INotifiable.Dependencies
  nameWithType: INotifiable.Dependencies
- uid: NMF.Expressions.INotifiable.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Dependencies_
  commentId: Overload:NMF.Expressions.INotifiable.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.INotifiable.Dependencies
  nameWithType: INotifiable.Dependencies
- uid: NMF.Expressions.INotifiable.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_ExecutionMetaData
  commentId: P:NMF.Expressions.INotifiable.ExecutionMetaData
  fullName: NMF.Expressions.INotifiable.ExecutionMetaData
  nameWithType: INotifiable.ExecutionMetaData
- uid: NMF.Expressions.INotifiable.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.INotifiable.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.INotifiable.ExecutionMetaData
  nameWithType: INotifiable.ExecutionMetaData
- uid: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: INotifiable.Notify(IList<INotificationResult>)
  nameWithType.vb: INotifiable.Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.INotifiable.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Notify_
  commentId: Overload:NMF.Expressions.INotifiable.Notify
  isSpec: "True"
  fullName: NMF.Expressions.INotifiable.Notify
  nameWithType: INotifiable.Notify
- uid: NMF.Expressions.INotifiable.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Successors
  commentId: P:NMF.Expressions.INotifiable.Successors
  fullName: NMF.Expressions.INotifiable.Successors
  nameWithType: INotifiable.Successors
- uid: NMF.Expressions.INotifiable.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.INotifiable.html#NMF_Expressions_INotifiable_Successors_
  commentId: Overload:NMF.Expressions.INotifiable.Successors
  isSpec: "True"
  fullName: NMF.Expressions.INotifiable.Successors
  nameWithType: INotifiable.Successors
- uid: NMF.Expressions.INotificationResult
  name: INotificationResult
  href: api/Expressions/NMF.Expressions.INotificationResult.html
  commentId: T:NMF.Expressions.INotificationResult
  fullName: NMF.Expressions.INotificationResult
  nameWithType: INotificationResult
- uid: NMF.Expressions.INotificationResult.Changed
  name: Changed
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_Changed
  commentId: P:NMF.Expressions.INotificationResult.Changed
  fullName: NMF.Expressions.INotificationResult.Changed
  nameWithType: INotificationResult.Changed
- uid: NMF.Expressions.INotificationResult.Changed*
  name: Changed
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_Changed_
  commentId: Overload:NMF.Expressions.INotificationResult.Changed
  isSpec: "True"
  fullName: NMF.Expressions.INotificationResult.Changed
  nameWithType: INotificationResult.Changed
- uid: NMF.Expressions.INotificationResult.FreeReference
  name: FreeReference()
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_FreeReference
  commentId: M:NMF.Expressions.INotificationResult.FreeReference
  fullName: NMF.Expressions.INotificationResult.FreeReference()
  nameWithType: INotificationResult.FreeReference()
- uid: NMF.Expressions.INotificationResult.FreeReference*
  name: FreeReference
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_FreeReference_
  commentId: Overload:NMF.Expressions.INotificationResult.FreeReference
  isSpec: "True"
  fullName: NMF.Expressions.INotificationResult.FreeReference
  nameWithType: INotificationResult.FreeReference
- uid: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  name: IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  fullName: NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  nameWithType: INotificationResult.IncreaseReferences(Int32)
- uid: NMF.Expressions.INotificationResult.IncreaseReferences*
  name: IncreaseReferences
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_IncreaseReferences_
  commentId: Overload:NMF.Expressions.INotificationResult.IncreaseReferences
  isSpec: "True"
  fullName: NMF.Expressions.INotificationResult.IncreaseReferences
  nameWithType: INotificationResult.IncreaseReferences
- uid: NMF.Expressions.INotificationResult.Source
  name: Source
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_Source
  commentId: P:NMF.Expressions.INotificationResult.Source
  fullName: NMF.Expressions.INotificationResult.Source
  nameWithType: INotificationResult.Source
- uid: NMF.Expressions.INotificationResult.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.INotificationResult.html#NMF_Expressions_INotificationResult_Source_
  commentId: Overload:NMF.Expressions.INotificationResult.Source
  isSpec: "True"
  fullName: NMF.Expressions.INotificationResult.Source
  nameWithType: INotificationResult.Source
- uid: NMF.Expressions.INotifyCollection`1
  name: INotifyCollection<T>
  href: api/Expressions/NMF.Expressions.INotifyCollection-1.html
  commentId: T:NMF.Expressions.INotifyCollection`1
  name.vb: INotifyCollection(Of T)
  fullName: NMF.Expressions.INotifyCollection<T>
  fullName.vb: NMF.Expressions.INotifyCollection(Of T)
  nameWithType: INotifyCollection<T>
  nameWithType.vb: INotifyCollection(Of T)
- uid: NMF.Expressions.INotifyEnumerable
  name: INotifyEnumerable
  href: api/Expressions/NMF.Expressions.INotifyEnumerable.html
  commentId: T:NMF.Expressions.INotifyEnumerable
  fullName: NMF.Expressions.INotifyEnumerable
  nameWithType: INotifyEnumerable
- uid: NMF.Expressions.INotifyEnumerable`1
  name: INotifyEnumerable<T>
  href: api/Expressions/NMF.Expressions.INotifyEnumerable-1.html
  commentId: T:NMF.Expressions.INotifyEnumerable`1
  name.vb: INotifyEnumerable(Of T)
  fullName: NMF.Expressions.INotifyEnumerable<T>
  fullName.vb: NMF.Expressions.INotifyEnumerable(Of T)
  nameWithType: INotifyEnumerable<T>
  nameWithType.vb: INotifyEnumerable(Of T)
- uid: NMF.Expressions.INotifyExpression
  name: INotifyExpression
  href: api/Expressions/NMF.Expressions.INotifyExpression.html
  commentId: T:NMF.Expressions.INotifyExpression
  fullName: NMF.Expressions.INotifyExpression
  nameWithType: INotifyExpression
- uid: NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name: ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_ApplyParameters_System_Collections_Generic_IDictionary_System_String_System_Object__System_Collections_Generic_IDictionary_NMF_Expressions_INotifiable_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name.vb: ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
  fullName: NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary<System.String, System.Object>, System.Collections.Generic.IDictionary<NMF.Expressions.INotifiable, NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Collections.Generic.IDictionary(Of NMF.Expressions.INotifiable, NMF.Expressions.INotifiable))
  nameWithType: INotifyExpression.ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  nameWithType.vb: INotifyExpression.ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
- uid: NMF.Expressions.INotifyExpression.ApplyParameters*
  name: ApplyParameters
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_ApplyParameters_
  commentId: Overload:NMF.Expressions.INotifyExpression.ApplyParameters
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression.ApplyParameters
  nameWithType: INotifyExpression.ApplyParameters
- uid: NMF.Expressions.INotifyExpression.CanBeConstant
  name: CanBeConstant
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_CanBeConstant
  commentId: P:NMF.Expressions.INotifyExpression.CanBeConstant
  fullName: NMF.Expressions.INotifyExpression.CanBeConstant
  nameWithType: INotifyExpression.CanBeConstant
- uid: NMF.Expressions.INotifyExpression.CanBeConstant*
  name: CanBeConstant
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_CanBeConstant_
  commentId: Overload:NMF.Expressions.INotifyExpression.CanBeConstant
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression.CanBeConstant
  nameWithType: INotifyExpression.CanBeConstant
- uid: NMF.Expressions.INotifyExpression.IsConstant
  name: IsConstant
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_IsConstant
  commentId: P:NMF.Expressions.INotifyExpression.IsConstant
  fullName: NMF.Expressions.INotifyExpression.IsConstant
  nameWithType: INotifyExpression.IsConstant
- uid: NMF.Expressions.INotifyExpression.IsConstant*
  name: IsConstant
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_IsConstant_
  commentId: Overload:NMF.Expressions.INotifyExpression.IsConstant
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression.IsConstant
  nameWithType: INotifyExpression.IsConstant
- uid: NMF.Expressions.INotifyExpression.IsParameterFree
  name: IsParameterFree
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_IsParameterFree
  commentId: P:NMF.Expressions.INotifyExpression.IsParameterFree
  fullName: NMF.Expressions.INotifyExpression.IsParameterFree
  nameWithType: INotifyExpression.IsParameterFree
- uid: NMF.Expressions.INotifyExpression.IsParameterFree*
  name: IsParameterFree
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_IsParameterFree_
  commentId: Overload:NMF.Expressions.INotifyExpression.IsParameterFree
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression.IsParameterFree
  nameWithType: INotifyExpression.IsParameterFree
- uid: NMF.Expressions.INotifyExpression.ValueObject
  name: ValueObject
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_ValueObject
  commentId: P:NMF.Expressions.INotifyExpression.ValueObject
  fullName: NMF.Expressions.INotifyExpression.ValueObject
  nameWithType: INotifyExpression.ValueObject
- uid: NMF.Expressions.INotifyExpression.ValueObject*
  name: ValueObject
  href: api/Expressions/NMF.Expressions.INotifyExpression.html#NMF_Expressions_INotifyExpression_ValueObject_
  commentId: Overload:NMF.Expressions.INotifyExpression.ValueObject
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression.ValueObject
  nameWithType: INotifyExpression.ValueObject
- uid: NMF.Expressions.INotifyExpression`1
  name: INotifyExpression<T>
  href: api/Expressions/NMF.Expressions.INotifyExpression-1.html
  commentId: T:NMF.Expressions.INotifyExpression`1
  name.vb: INotifyExpression(Of T)
  fullName: NMF.Expressions.INotifyExpression<T>
  fullName.vb: NMF.Expressions.INotifyExpression(Of T)
  nameWithType: INotifyExpression<T>
  nameWithType.vb: INotifyExpression(Of T)
- uid: NMF.Expressions.INotifyExpression`1.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name: ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  href: api/Expressions/NMF.Expressions.INotifyExpression-1.html#NMF_Expressions_INotifyExpression_1_ApplyParameters_System_Collections_Generic_IDictionary_System_String_System_Object__System_Collections_Generic_IDictionary_NMF_Expressions_INotifiable_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.INotifyExpression`1.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name.vb: ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
  fullName: NMF.Expressions.INotifyExpression<T>.ApplyParameters(System.Collections.Generic.IDictionary<System.String, System.Object>, System.Collections.Generic.IDictionary<NMF.Expressions.INotifiable, NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.INotifyExpression(Of T).ApplyParameters(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Collections.Generic.IDictionary(Of NMF.Expressions.INotifiable, NMF.Expressions.INotifiable))
  nameWithType: INotifyExpression<T>.ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  nameWithType.vb: INotifyExpression(Of T).ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
- uid: NMF.Expressions.INotifyExpression`1.ApplyParameters*
  name: ApplyParameters
  href: api/Expressions/NMF.Expressions.INotifyExpression-1.html#NMF_Expressions_INotifyExpression_1_ApplyParameters_
  commentId: Overload:NMF.Expressions.INotifyExpression`1.ApplyParameters
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression<T>.ApplyParameters
  fullName.vb: NMF.Expressions.INotifyExpression(Of T).ApplyParameters
  nameWithType: INotifyExpression<T>.ApplyParameters
  nameWithType.vb: INotifyExpression(Of T).ApplyParameters
- uid: NMF.Expressions.INotifyExpression`1.Reduce
  name: Reduce()
  href: api/Expressions/NMF.Expressions.INotifyExpression-1.html#NMF_Expressions_INotifyExpression_1_Reduce
  commentId: M:NMF.Expressions.INotifyExpression`1.Reduce
  fullName: NMF.Expressions.INotifyExpression<T>.Reduce()
  fullName.vb: NMF.Expressions.INotifyExpression(Of T).Reduce()
  nameWithType: INotifyExpression<T>.Reduce()
  nameWithType.vb: INotifyExpression(Of T).Reduce()
- uid: NMF.Expressions.INotifyExpression`1.Reduce*
  name: Reduce
  href: api/Expressions/NMF.Expressions.INotifyExpression-1.html#NMF_Expressions_INotifyExpression_1_Reduce_
  commentId: Overload:NMF.Expressions.INotifyExpression`1.Reduce
  isSpec: "True"
  fullName: NMF.Expressions.INotifyExpression<T>.Reduce
  fullName.vb: NMF.Expressions.INotifyExpression(Of T).Reduce
  nameWithType: INotifyExpression<T>.Reduce
  nameWithType.vb: INotifyExpression(Of T).Reduce
- uid: NMF.Expressions.INotifyGrouping`2
  name: INotifyGrouping<TKey, TItem>
  href: api/Expressions/NMF.Expressions.INotifyGrouping-2.html
  commentId: T:NMF.Expressions.INotifyGrouping`2
  name.vb: INotifyGrouping(Of TKey, TItem)
  fullName: NMF.Expressions.INotifyGrouping<TKey, TItem>
  fullName.vb: NMF.Expressions.INotifyGrouping(Of TKey, TItem)
  nameWithType: INotifyGrouping<TKey, TItem>
  nameWithType.vb: INotifyGrouping(Of TKey, TItem)
- uid: NMF.Expressions.INotifyReversableExpression`1
  name: INotifyReversableExpression<T>
  href: api/Expressions/NMF.Expressions.INotifyReversableExpression-1.html
  commentId: T:NMF.Expressions.INotifyReversableExpression`1
  name.vb: INotifyReversableExpression(Of T)
  fullName: NMF.Expressions.INotifyReversableExpression<T>
  fullName.vb: NMF.Expressions.INotifyReversableExpression(Of T)
  nameWithType: INotifyReversableExpression<T>
  nameWithType.vb: INotifyReversableExpression(Of T)
- uid: NMF.Expressions.INotifyReversableValue`1
  name: INotifyReversableValue<T>
  href: api/Expressions/NMF.Expressions.INotifyReversableValue-1.html
  commentId: T:NMF.Expressions.INotifyReversableValue`1
  name.vb: INotifyReversableValue(Of T)
  fullName: NMF.Expressions.INotifyReversableValue<T>
  fullName.vb: NMF.Expressions.INotifyReversableValue(Of T)
  nameWithType: INotifyReversableValue<T>
  nameWithType.vb: INotifyReversableValue(Of T)
- uid: NMF.Expressions.INotifyReversableValue`1.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.INotifyReversableValue-1.html#NMF_Expressions_INotifyReversableValue_1_IsReversable
  commentId: P:NMF.Expressions.INotifyReversableValue`1.IsReversable
  fullName: NMF.Expressions.INotifyReversableValue<T>.IsReversable
  fullName.vb: NMF.Expressions.INotifyReversableValue(Of T).IsReversable
  nameWithType: INotifyReversableValue<T>.IsReversable
  nameWithType.vb: INotifyReversableValue(Of T).IsReversable
- uid: NMF.Expressions.INotifyReversableValue`1.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.INotifyReversableValue-1.html#NMF_Expressions_INotifyReversableValue_1_IsReversable_
  commentId: Overload:NMF.Expressions.INotifyReversableValue`1.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.INotifyReversableValue<T>.IsReversable
  fullName.vb: NMF.Expressions.INotifyReversableValue(Of T).IsReversable
  nameWithType: INotifyReversableValue<T>.IsReversable
  nameWithType.vb: INotifyReversableValue(Of T).IsReversable
- uid: NMF.Expressions.INotifyReversableValue`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.INotifyReversableValue-1.html#NMF_Expressions_INotifyReversableValue_1_Value
  commentId: P:NMF.Expressions.INotifyReversableValue`1.Value
  fullName: NMF.Expressions.INotifyReversableValue<T>.Value
  fullName.vb: NMF.Expressions.INotifyReversableValue(Of T).Value
  nameWithType: INotifyReversableValue<T>.Value
  nameWithType.vb: INotifyReversableValue(Of T).Value
- uid: NMF.Expressions.INotifyReversableValue`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.INotifyReversableValue-1.html#NMF_Expressions_INotifyReversableValue_1_Value_
  commentId: Overload:NMF.Expressions.INotifyReversableValue`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.INotifyReversableValue<T>.Value
  fullName.vb: NMF.Expressions.INotifyReversableValue(Of T).Value
  nameWithType: INotifyReversableValue<T>.Value
  nameWithType.vb: INotifyReversableValue(Of T).Value
- uid: NMF.Expressions.INotifySplit`1
  name: INotifySplit<T>
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html
  commentId: T:NMF.Expressions.INotifySplit`1
  name.vb: INotifySplit(Of T)
  fullName: NMF.Expressions.INotifySplit<T>
  fullName.vb: NMF.Expressions.INotifySplit(Of T)
  nameWithType: INotifySplit<T>
  nameWithType.vb: INotifySplit(Of T)
- uid: NMF.Expressions.INotifySplit`1.Empty
  name: Empty
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Empty
  commentId: P:NMF.Expressions.INotifySplit`1.Empty
  fullName: NMF.Expressions.INotifySplit<T>.Empty
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Empty
  nameWithType: INotifySplit<T>.Empty
  nameWithType.vb: INotifySplit(Of T).Empty
- uid: NMF.Expressions.INotifySplit`1.Empty*
  name: Empty
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Empty_
  commentId: Overload:NMF.Expressions.INotifySplit`1.Empty
  isSpec: "True"
  fullName: NMF.Expressions.INotifySplit<T>.Empty
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Empty
  nameWithType: INotifySplit<T>.Empty
  nameWithType.vb: INotifySplit(Of T).Empty
- uid: NMF.Expressions.INotifySplit`1.Head
  name: Head
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Head
  commentId: P:NMF.Expressions.INotifySplit`1.Head
  fullName: NMF.Expressions.INotifySplit<T>.Head
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Head
  nameWithType: INotifySplit<T>.Head
  nameWithType.vb: INotifySplit(Of T).Head
- uid: NMF.Expressions.INotifySplit`1.Head*
  name: Head
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Head_
  commentId: Overload:NMF.Expressions.INotifySplit`1.Head
  isSpec: "True"
  fullName: NMF.Expressions.INotifySplit<T>.Head
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Head
  nameWithType: INotifySplit<T>.Head
  nameWithType.vb: INotifySplit(Of T).Head
- uid: NMF.Expressions.INotifySplit`1.Tail
  name: Tail
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Tail
  commentId: P:NMF.Expressions.INotifySplit`1.Tail
  fullName: NMF.Expressions.INotifySplit<T>.Tail
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Tail
  nameWithType: INotifySplit<T>.Tail
  nameWithType.vb: INotifySplit(Of T).Tail
- uid: NMF.Expressions.INotifySplit`1.Tail*
  name: Tail
  href: api/Expressions/NMF.Expressions.INotifySplit-1.html#NMF_Expressions_INotifySplit_1_Tail_
  commentId: Overload:NMF.Expressions.INotifySplit`1.Tail
  isSpec: "True"
  fullName: NMF.Expressions.INotifySplit<T>.Tail
  fullName.vb: NMF.Expressions.INotifySplit(Of T).Tail
  nameWithType: INotifySplit<T>.Tail
  nameWithType.vb: INotifySplit(Of T).Tail
- uid: NMF.Expressions.INotifySystem
  name: INotifySystem
  href: api/Expressions/NMF.Expressions.INotifySystem.html
  commentId: T:NMF.Expressions.INotifySystem
  fullName: NMF.Expressions.INotifySystem
  nameWithType: INotifySystem
- uid: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.INotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: INotifySystem.CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: INotifySystem.CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.INotifySystem.CreateExpression*
  name: CreateExpression
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression_
  commentId: Overload:NMF.Expressions.INotifySystem.CreateExpression
  isSpec: "True"
  fullName: NMF.Expressions.INotifySystem.CreateExpression
  nameWithType: INotifySystem.CreateExpression
- uid: NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.INotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.INotifySystem.CreateExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.INotifySystem.CreateExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: INotifySystem.CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: INotifySystem.CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.INotifySystem.CreateReversableExpression*
  name: CreateReversableExpression
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateReversableExpression_
  commentId: Overload:NMF.Expressions.INotifySystem.CreateReversableExpression
  isSpec: "True"
  fullName: NMF.Expressions.INotifySystem.CreateReversableExpression
  nameWithType: INotifySystem.CreateReversableExpression
- uid: NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.INotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.INotifySystem.CreateReversableExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.INotifySystem.CreateReversableExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: INotifySystem.CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: INotifySystem.CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.INotifySystem.CreateSuccessorList
  name: CreateSuccessorList()
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateSuccessorList
  commentId: M:NMF.Expressions.INotifySystem.CreateSuccessorList
  fullName: NMF.Expressions.INotifySystem.CreateSuccessorList()
  nameWithType: INotifySystem.CreateSuccessorList()
- uid: NMF.Expressions.INotifySystem.CreateSuccessorList*
  name: CreateSuccessorList
  href: api/Expressions/NMF.Expressions.INotifySystem.html#NMF_Expressions_INotifySystem_CreateSuccessorList_
  commentId: Overload:NMF.Expressions.INotifySystem.CreateSuccessorList
  isSpec: "True"
  fullName: NMF.Expressions.INotifySystem.CreateSuccessorList
  nameWithType: INotifySystem.CreateSuccessorList
- uid: NMF.Expressions.INotifyValue`1
  name: INotifyValue<T>
  href: api/Expressions/NMF.Expressions.INotifyValue-1.html
  commentId: T:NMF.Expressions.INotifyValue`1
  name.vb: INotifyValue(Of T)
  fullName: NMF.Expressions.INotifyValue<T>
  fullName.vb: NMF.Expressions.INotifyValue(Of T)
  nameWithType: INotifyValue<T>
  nameWithType.vb: INotifyValue(Of T)
- uid: NMF.Expressions.INotifyValue`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.INotifyValue-1.html#NMF_Expressions_INotifyValue_1_Value
  commentId: P:NMF.Expressions.INotifyValue`1.Value
  fullName: NMF.Expressions.INotifyValue<T>.Value
  fullName.vb: NMF.Expressions.INotifyValue(Of T).Value
  nameWithType: INotifyValue<T>.Value
  nameWithType.vb: INotifyValue(Of T).Value
- uid: NMF.Expressions.INotifyValue`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.INotifyValue-1.html#NMF_Expressions_INotifyValue_1_Value_
  commentId: Overload:NMF.Expressions.INotifyValue`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.INotifyValue<T>.Value
  fullName.vb: NMF.Expressions.INotifyValue(Of T).Value
  nameWithType: INotifyValue<T>.Value
  nameWithType.vb: INotifyValue(Of T).Value
- uid: NMF.Expressions.INotifyValue`1.ValueChanged
  name: ValueChanged
  href: api/Expressions/NMF.Expressions.INotifyValue-1.html#NMF_Expressions_INotifyValue_1_ValueChanged
  commentId: E:NMF.Expressions.INotifyValue`1.ValueChanged
  fullName: NMF.Expressions.INotifyValue<T>.ValueChanged
  fullName.vb: NMF.Expressions.INotifyValue(Of T).ValueChanged
  nameWithType: INotifyValue<T>.ValueChanged
  nameWithType.vb: INotifyValue(Of T).ValueChanged
- uid: NMF.Expressions.InstructionLevelNotifySystem
  name: InstructionLevelNotifySystem
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html
  commentId: T:NMF.Expressions.InstructionLevelNotifySystem
  fullName: NMF.Expressions.InstructionLevelNotifySystem
  nameWithType: InstructionLevelNotifySystem
- uid: NMF.Expressions.InstructionLevelNotifySystem.#ctor
  name: InstructionLevelNotifySystem()
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem__ctor
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.#ctor
  fullName: NMF.Expressions.InstructionLevelNotifySystem.InstructionLevelNotifySystem()
  nameWithType: InstructionLevelNotifySystem.InstructionLevelNotifySystem()
- uid: NMF.Expressions.InstructionLevelNotifySystem.#ctor*
  name: InstructionLevelNotifySystem
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem__ctor_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.InstructionLevelNotifySystem
  nameWithType: InstructionLevelNotifySystem.InstructionLevelNotifySystem
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateExpression_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: InstructionLevelNotifySystem.CreateExpression(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: InstructionLevelNotifySystem.CreateExpression(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression*
  name: CreateExpression
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateExpression_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression
  nameWithType: InstructionLevelNotifySystem.CreateExpression
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: InstructionLevelNotifySystem.CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: InstructionLevelNotifySystem.CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal*
  name: CreateLocal
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateLocal_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateLocal
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal
  nameWithType: InstructionLevelNotifySystem.CreateLocal
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  name: CreateLocal<T, TVar>(INotifyExpression<T>, INotifyExpression<TVar>, out String)
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateLocal__2_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___1__System_String__
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateLocal``2(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``1},System.String@)
  name.vb: CreateLocal(Of T, TVar)(INotifyExpression(Of T), INotifyExpression(Of TVar), ByRef String)
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal<T, TVar>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<TVar>, out System.String)
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateLocal(Of T, TVar)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of TVar), ByRef System.String)
  nameWithType: InstructionLevelNotifySystem.CreateLocal<T, TVar>(INotifyExpression<T>, INotifyExpression<TVar>, out String)
  nameWithType.vb: InstructionLevelNotifySystem.CreateLocal(Of T, TVar)(INotifyExpression(Of T), INotifyExpression(Of TVar), ByRef String)
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression*
  name: CreateReversableExpression
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateReversableExpression_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression
  nameWithType: InstructionLevelNotifySystem.CreateReversableExpression
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.InstructionLevelNotifySystem.CreateReversableExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: InstructionLevelNotifySystem.CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: InstructionLevelNotifySystem.CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList
  name: CreateSuccessorList()
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateSuccessorList
  commentId: M:NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList()
  nameWithType: InstructionLevelNotifySystem.CreateSuccessorList()
- uid: NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList*
  name: CreateSuccessorList
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_CreateSuccessorList_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.CreateSuccessorList
  nameWithType: InstructionLevelNotifySystem.CreateSuccessorList
- uid: NMF.Expressions.InstructionLevelNotifySystem.Instance
  name: Instance
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_Instance
  commentId: P:NMF.Expressions.InstructionLevelNotifySystem.Instance
  fullName: NMF.Expressions.InstructionLevelNotifySystem.Instance
  nameWithType: InstructionLevelNotifySystem.Instance
- uid: NMF.Expressions.InstructionLevelNotifySystem.Instance*
  name: Instance
  href: api/Expressions/NMF.Expressions.InstructionLevelNotifySystem.html#NMF_Expressions_InstructionLevelNotifySystem_Instance_
  commentId: Overload:NMF.Expressions.InstructionLevelNotifySystem.Instance
  isSpec: "True"
  fullName: NMF.Expressions.InstructionLevelNotifySystem.Instance
  nameWithType: InstructionLevelNotifySystem.Instance
- uid: NMF.Expressions.IOrderableEnumerableExpression`1
  name: IOrderableEnumerableExpression<T>
  href: api/Expressions/NMF.Expressions.IOrderableEnumerableExpression-1.html
  commentId: T:NMF.Expressions.IOrderableEnumerableExpression`1
  name.vb: IOrderableEnumerableExpression(Of T)
  fullName: NMF.Expressions.IOrderableEnumerableExpression<T>
  fullName.vb: NMF.Expressions.IOrderableEnumerableExpression(Of T)
  nameWithType: IOrderableEnumerableExpression<T>
  nameWithType.vb: IOrderableEnumerableExpression(Of T)
- uid: NMF.Expressions.IOrderableEnumerableExpression`1.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.IOrderableEnumerableExpression-1.html#NMF_Expressions_IOrderableEnumerableExpression_1_AsNotifiable
  commentId: M:NMF.Expressions.IOrderableEnumerableExpression`1.AsNotifiable
  fullName: NMF.Expressions.IOrderableEnumerableExpression<T>.AsNotifiable()
  fullName.vb: NMF.Expressions.IOrderableEnumerableExpression(Of T).AsNotifiable()
  nameWithType: IOrderableEnumerableExpression<T>.AsNotifiable()
  nameWithType.vb: IOrderableEnumerableExpression(Of T).AsNotifiable()
- uid: NMF.Expressions.IOrderableEnumerableExpression`1.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.IOrderableEnumerableExpression-1.html#NMF_Expressions_IOrderableEnumerableExpression_1_AsNotifiable_
  commentId: Overload:NMF.Expressions.IOrderableEnumerableExpression`1.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.IOrderableEnumerableExpression<T>.AsNotifiable
  fullName.vb: NMF.Expressions.IOrderableEnumerableExpression(Of T).AsNotifiable
  nameWithType: IOrderableEnumerableExpression<T>.AsNotifiable
  nameWithType.vb: IOrderableEnumerableExpression(Of T).AsNotifiable
- uid: NMF.Expressions.IOrderableNotifyEnumerable`1
  name: IOrderableNotifyEnumerable<T>
  href: api/Expressions/NMF.Expressions.IOrderableNotifyEnumerable-1.html
  commentId: T:NMF.Expressions.IOrderableNotifyEnumerable`1
  name.vb: IOrderableNotifyEnumerable(Of T)
  fullName: NMF.Expressions.IOrderableNotifyEnumerable<T>
  fullName.vb: NMF.Expressions.IOrderableNotifyEnumerable(Of T)
  nameWithType: IOrderableNotifyEnumerable<T>
  nameWithType.vb: IOrderableNotifyEnumerable(Of T)
- uid: NMF.Expressions.IOrderableNotifyEnumerable`1.GetSequenceForItem(`0)
  name: GetSequenceForItem(T)
  href: api/Expressions/NMF.Expressions.IOrderableNotifyEnumerable-1.html#NMF_Expressions_IOrderableNotifyEnumerable_1_GetSequenceForItem__0_
  commentId: M:NMF.Expressions.IOrderableNotifyEnumerable`1.GetSequenceForItem(`0)
  fullName: NMF.Expressions.IOrderableNotifyEnumerable<T>.GetSequenceForItem(T)
  fullName.vb: NMF.Expressions.IOrderableNotifyEnumerable(Of T).GetSequenceForItem(T)
  nameWithType: IOrderableNotifyEnumerable<T>.GetSequenceForItem(T)
  nameWithType.vb: IOrderableNotifyEnumerable(Of T).GetSequenceForItem(T)
- uid: NMF.Expressions.IOrderableNotifyEnumerable`1.GetSequenceForItem*
  name: GetSequenceForItem
  href: api/Expressions/NMF.Expressions.IOrderableNotifyEnumerable-1.html#NMF_Expressions_IOrderableNotifyEnumerable_1_GetSequenceForItem_
  commentId: Overload:NMF.Expressions.IOrderableNotifyEnumerable`1.GetSequenceForItem
  isSpec: "True"
  fullName: NMF.Expressions.IOrderableNotifyEnumerable<T>.GetSequenceForItem
  fullName.vb: NMF.Expressions.IOrderableNotifyEnumerable(Of T).GetSequenceForItem
  nameWithType: IOrderableNotifyEnumerable<T>.GetSequenceForItem
  nameWithType.vb: IOrderableNotifyEnumerable(Of T).GetSequenceForItem
- uid: NMF.Expressions.IOrderableNotifyEnumerable`1.Sequences
  name: Sequences
  href: api/Expressions/NMF.Expressions.IOrderableNotifyEnumerable-1.html#NMF_Expressions_IOrderableNotifyEnumerable_1_Sequences
  commentId: P:NMF.Expressions.IOrderableNotifyEnumerable`1.Sequences
  fullName: NMF.Expressions.IOrderableNotifyEnumerable<T>.Sequences
  fullName.vb: NMF.Expressions.IOrderableNotifyEnumerable(Of T).Sequences
  nameWithType: IOrderableNotifyEnumerable<T>.Sequences
  nameWithType.vb: IOrderableNotifyEnumerable(Of T).Sequences
- uid: NMF.Expressions.IOrderableNotifyEnumerable`1.Sequences*
  name: Sequences
  href: api/Expressions/NMF.Expressions.IOrderableNotifyEnumerable-1.html#NMF_Expressions_IOrderableNotifyEnumerable_1_Sequences_
  commentId: Overload:NMF.Expressions.IOrderableNotifyEnumerable`1.Sequences
  isSpec: "True"
  fullName: NMF.Expressions.IOrderableNotifyEnumerable<T>.Sequences
  fullName.vb: NMF.Expressions.IOrderableNotifyEnumerable(Of T).Sequences
  nameWithType: IOrderableNotifyEnumerable<T>.Sequences
  nameWithType.vb: IOrderableNotifyEnumerable(Of T).Sequences
- uid: NMF.Expressions.ISetExpression`1
  name: ISetExpression<T>
  href: api/Expressions/NMF.Expressions.ISetExpression-1.html
  commentId: T:NMF.Expressions.ISetExpression`1
  name.vb: ISetExpression(Of T)
  fullName: NMF.Expressions.ISetExpression<T>
  fullName.vb: NMF.Expressions.ISetExpression(Of T)
  nameWithType: ISetExpression<T>
  nameWithType.vb: ISetExpression(Of T)
- uid: NMF.Expressions.ISuccessorList
  name: ISuccessorList
  href: api/Expressions/NMF.Expressions.ISuccessorList.html
  commentId: T:NMF.Expressions.ISuccessorList
  fullName: NMF.Expressions.ISuccessorList
  nameWithType: ISuccessorList
- uid: NMF.Expressions.ISuccessorList.Attached
  name: Attached
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Attached
  commentId: E:NMF.Expressions.ISuccessorList.Attached
  fullName: NMF.Expressions.ISuccessorList.Attached
  nameWithType: ISuccessorList.Attached
- uid: NMF.Expressions.ISuccessorList.Count
  name: Count
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Count
  commentId: P:NMF.Expressions.ISuccessorList.Count
  fullName: NMF.Expressions.ISuccessorList.Count
  nameWithType: ISuccessorList.Count
- uid: NMF.Expressions.ISuccessorList.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Count_
  commentId: Overload:NMF.Expressions.ISuccessorList.Count
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.Count
  nameWithType: ISuccessorList.Count
- uid: NMF.Expressions.ISuccessorList.Detached
  name: Detached
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Detached
  commentId: E:NMF.Expressions.ISuccessorList.Detached
  fullName: NMF.Expressions.ISuccessorList.Detached
  nameWithType: ISuccessorList.Detached
- uid: NMF.Expressions.ISuccessorList.HasSuccessors
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_HasSuccessors
  commentId: P:NMF.Expressions.ISuccessorList.HasSuccessors
  fullName: NMF.Expressions.ISuccessorList.HasSuccessors
  nameWithType: ISuccessorList.HasSuccessors
- uid: NMF.Expressions.ISuccessorList.HasSuccessors*
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_HasSuccessors_
  commentId: Overload:NMF.Expressions.ISuccessorList.HasSuccessors
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.HasSuccessors
  nameWithType: ISuccessorList.HasSuccessors
- uid: NMF.Expressions.ISuccessorList.IsAttached
  name: IsAttached
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_IsAttached
  commentId: P:NMF.Expressions.ISuccessorList.IsAttached
  fullName: NMF.Expressions.ISuccessorList.IsAttached
  nameWithType: ISuccessorList.IsAttached
- uid: NMF.Expressions.ISuccessorList.IsAttached*
  name: IsAttached
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_IsAttached_
  commentId: Overload:NMF.Expressions.ISuccessorList.IsAttached
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.IsAttached
  nameWithType: ISuccessorList.IsAttached
- uid: NMF.Expressions.ISuccessorList.Item(System.Int32)
  name: Item[Int32]
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Item_System_Int32_
  commentId: P:NMF.Expressions.ISuccessorList.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: NMF.Expressions.ISuccessorList.Item[System.Int32]
  fullName.vb: NMF.Expressions.ISuccessorList.Item(System.Int32)
  nameWithType: ISuccessorList.Item[Int32]
  nameWithType.vb: ISuccessorList.Item(Int32)
- uid: NMF.Expressions.ISuccessorList.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Item_
  commentId: Overload:NMF.Expressions.ISuccessorList.Item
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.Item
  nameWithType: ISuccessorList.Item
- uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  name: Set(INotifiable)
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Set_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  nameWithType: ISuccessorList.Set(INotifiable)
- uid: NMF.Expressions.ISuccessorList.Set*
  name: Set
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Set_
  commentId: Overload:NMF.Expressions.ISuccessorList.Set
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.Set
  nameWithType: ISuccessorList.Set
- uid: NMF.Expressions.ISuccessorList.SetDummy
  name: SetDummy()
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_SetDummy
  commentId: M:NMF.Expressions.ISuccessorList.SetDummy
  fullName: NMF.Expressions.ISuccessorList.SetDummy()
  nameWithType: ISuccessorList.SetDummy()
- uid: NMF.Expressions.ISuccessorList.SetDummy*
  name: SetDummy
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_SetDummy_
  commentId: Overload:NMF.Expressions.ISuccessorList.SetDummy
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.SetDummy
  nameWithType: ISuccessorList.SetDummy
- uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  name: Unset(INotifiable, Boolean)
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Unset_NMF_Expressions_INotifiable_System_Boolean_
  commentId: M:NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  fullName: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable, System.Boolean)
  nameWithType: ISuccessorList.Unset(INotifiable, Boolean)
- uid: NMF.Expressions.ISuccessorList.Unset*
  name: Unset
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_Unset_
  commentId: Overload:NMF.Expressions.ISuccessorList.Unset
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.Unset
  nameWithType: ISuccessorList.Unset
- uid: NMF.Expressions.ISuccessorList.UnsetAll
  name: UnsetAll()
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_UnsetAll
  commentId: M:NMF.Expressions.ISuccessorList.UnsetAll
  fullName: NMF.Expressions.ISuccessorList.UnsetAll()
  nameWithType: ISuccessorList.UnsetAll()
- uid: NMF.Expressions.ISuccessorList.UnsetAll*
  name: UnsetAll
  href: api/Expressions/NMF.Expressions.ISuccessorList.html#NMF_Expressions_ISuccessorList_UnsetAll_
  commentId: Overload:NMF.Expressions.ISuccessorList.UnsetAll
  isSpec: "True"
  fullName: NMF.Expressions.ISuccessorList.UnsetAll
  nameWithType: ISuccessorList.UnsetAll
- uid: NMF.Expressions.IValueChangedNotificationResult
  name: IValueChangedNotificationResult
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult.html
  commentId: T:NMF.Expressions.IValueChangedNotificationResult
  fullName: NMF.Expressions.IValueChangedNotificationResult
  nameWithType: IValueChangedNotificationResult
- uid: NMF.Expressions.IValueChangedNotificationResult.NewValue
  name: NewValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult.html#NMF_Expressions_IValueChangedNotificationResult_NewValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.IValueChangedNotificationResult.NewValue*
  name: NewValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult.html#NMF_Expressions_IValueChangedNotificationResult_NewValue_
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult.NewValue
  isSpec: "True"
  fullName: NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.IValueChangedNotificationResult.OldValue
  name: OldValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult.html#NMF_Expressions_IValueChangedNotificationResult_OldValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.IValueChangedNotificationResult.OldValue*
  name: OldValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult.html#NMF_Expressions_IValueChangedNotificationResult_OldValue_
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult.OldValue
  isSpec: "True"
  fullName: NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.IValueChangedNotificationResult`1
  name: IValueChangedNotificationResult<T>
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult-1.html
  commentId: T:NMF.Expressions.IValueChangedNotificationResult`1
  name.vb: IValueChangedNotificationResult(Of T)
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T)
  nameWithType: IValueChangedNotificationResult<T>
  nameWithType.vb: IValueChangedNotificationResult(Of T)
- uid: NMF.Expressions.IValueChangedNotificationResult`1.NewValue
  name: NewValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult-1.html#NMF_Expressions_IValueChangedNotificationResult_1_NewValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult`1.NewValue
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T).NewValue
  nameWithType: IValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: IValueChangedNotificationResult(Of T).NewValue
- uid: NMF.Expressions.IValueChangedNotificationResult`1.NewValue*
  name: NewValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult-1.html#NMF_Expressions_IValueChangedNotificationResult_1_NewValue_
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult`1.NewValue
  isSpec: "True"
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T).NewValue
  nameWithType: IValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: IValueChangedNotificationResult(Of T).NewValue
- uid: NMF.Expressions.IValueChangedNotificationResult`1.OldValue
  name: OldValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult-1.html#NMF_Expressions_IValueChangedNotificationResult_1_OldValue
  commentId: P:NMF.Expressions.IValueChangedNotificationResult`1.OldValue
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T).OldValue
  nameWithType: IValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: IValueChangedNotificationResult(Of T).OldValue
- uid: NMF.Expressions.IValueChangedNotificationResult`1.OldValue*
  name: OldValue
  href: api/Expressions/NMF.Expressions.IValueChangedNotificationResult-1.html#NMF_Expressions_IValueChangedNotificationResult_1_OldValue_
  commentId: Overload:NMF.Expressions.IValueChangedNotificationResult`1.OldValue
  isSpec: "True"
  fullName: NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.IValueChangedNotificationResult(Of T).OldValue
  nameWithType: IValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: IValueChangedNotificationResult(Of T).OldValue
- uid: NMF.Expressions.LensPutAttribute
  name: LensPutAttribute
  href: api/Expressions/NMF.Expressions.LensPutAttribute.html
  commentId: T:NMF.Expressions.LensPutAttribute
  fullName: NMF.Expressions.LensPutAttribute
  nameWithType: LensPutAttribute
- uid: NMF.Expressions.LensPutAttribute.#ctor(System.Type,System.String)
  name: LensPutAttribute(Type, String)
  href: api/Expressions/NMF.Expressions.LensPutAttribute.html#NMF_Expressions_LensPutAttribute__ctor_System_Type_System_String_
  commentId: M:NMF.Expressions.LensPutAttribute.#ctor(System.Type,System.String)
  fullName: NMF.Expressions.LensPutAttribute.LensPutAttribute(System.Type, System.String)
  nameWithType: LensPutAttribute.LensPutAttribute(Type, String)
- uid: NMF.Expressions.LensPutAttribute.#ctor*
  name: LensPutAttribute
  href: api/Expressions/NMF.Expressions.LensPutAttribute.html#NMF_Expressions_LensPutAttribute__ctor_
  commentId: Overload:NMF.Expressions.LensPutAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.LensPutAttribute.LensPutAttribute
  nameWithType: LensPutAttribute.LensPutAttribute
- uid: NMF.Expressions.Linq
  name: NMF.Expressions.Linq
  href: api/Expressions/NMF.Expressions.Linq.html
  commentId: N:NMF.Expressions.Linq
  fullName: NMF.Expressions.Linq
  nameWithType: NMF.Expressions.Linq
- uid: NMF.Expressions.Linq.ExpressionExtensions
  name: ExpressionExtensions
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html
  commentId: T:NMF.Expressions.Linq.ExpressionExtensions
  fullName: NMF.Expressions.Linq.ExpressionExtensions
  nameWithType: ExpressionExtensions
- uid: NMF.Expressions.Linq.ExpressionExtensions.All*
  name: All
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_All_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.All
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.All
  nameWithType: ExpressionExtensions.All
- uid: NMF.Expressions.Linq.ExpressionExtensions.All``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: All<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_All__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.All``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: All(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.All<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.All(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ExpressionExtensions.All<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ExpressionExtensions.All(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Any*
  name: Any
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Any_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Any
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Any
  nameWithType: ExpressionExtensions.Any
- uid: NMF.Expressions.Linq.ExpressionExtensions.Any``1(NMF.Expressions.IEnumerableExpression{``0})
  name: Any<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Any__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Any``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: Any(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Any<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Any(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.Any<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.Any(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Any``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Any<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Any__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Any``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Any(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Any<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Any(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ExpressionExtensions.Any<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ExpressionExtensions.Any(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Decimal})
  name: Average(IEnumerableExpression<Decimal>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Decimal__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Decimal})
  name.vb: Average(IEnumerableExpression(Of Decimal))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Decimal>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Decimal))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Decimal>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Decimal))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Double})
  name: Average(IEnumerableExpression<Double>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Double__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Double})
  name.vb: Average(IEnumerableExpression(Of Double))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Double>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Double))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Double>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Double))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Int32})
  name: Average(IEnumerableExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Int32__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Int32})
  name.vb: Average(IEnumerableExpression(Of Int32))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Int32))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Int32>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Int32))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Int64})
  name: Average(IEnumerableExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Int64__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Int64})
  name.vb: Average(IEnumerableExpression(Of Int64))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Int64))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Int64>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Int64))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Decimal}})
  name: Average(IEnumerableExpression<Nullable<Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Decimal}})
  name.vb: Average(IEnumerableExpression(Of Nullable(Of Decimal)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Decimal)))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Nullable<Decimal>>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Nullable(Of Decimal)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Double}})
  name: Average(IEnumerableExpression<Nullable<Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Double___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Double}})
  name.vb: Average(IEnumerableExpression(Of Nullable(Of Double)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Double)))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Nullable<Double>>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Nullable(Of Double)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int32}})
  name: Average(IEnumerableExpression<Nullable<Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Int32___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int32}})
  name.vb: Average(IEnumerableExpression(Of Nullable(Of Int32)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Int32)))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Nullable<Int32>>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Nullable(Of Int32)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int64}})
  name: Average(IEnumerableExpression<Nullable<Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Int64___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int64}})
  name.vb: Average(IEnumerableExpression(Of Nullable(Of Int64)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Int64)))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Nullable<Int64>>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Nullable(Of Int64)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Single}})
  name: Average(IEnumerableExpression<Nullable<Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Single___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Single}})
  name.vb: Average(IEnumerableExpression(Of Nullable(Of Single)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Single)))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Nullable<Single>>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Nullable(Of Single)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Single})
  name: Average(IEnumerableExpression<Single>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_NMF_Expressions_IEnumerableExpression_System_Single__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression{System.Single})
  name.vb: Average(IEnumerableExpression(Of Single))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression<System.Single>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(NMF.Expressions.IEnumerableExpression(Of System.Single))
  nameWithType: ExpressionExtensions.Average(IEnumerableExpression<Single>)
  nameWithType.vb: ExpressionExtensions.Average(IEnumerableExpression(Of Single))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average*
  name: Average
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Average
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average
  nameWithType: ExpressionExtensions.Average
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Decimal)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Decimal>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Decimal)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Double___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Double)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Double>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Double)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Int32___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int32)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int32>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int32)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Int64___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int64)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int64>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int64)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Decimal____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Double____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int32____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int64____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Single____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name: Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Average__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Single___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Average``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name.vb: Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Single)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Average<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Average(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)))
  nameWithType: ExpressionExtensions.Average<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Single>>)
  nameWithType.vb: ExpressionExtensions.Average(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Single)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Cast*
  name: Cast
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Cast
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Cast
  nameWithType: ExpressionExtensions.Cast
- uid: NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  name: Cast<TResult>(IEnumerableExpression)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Cast__1_NMF_Expressions_IEnumerableExpression_
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Cast``1(NMF.Expressions.IEnumerableExpression)
  name.vb: Cast(Of TResult)(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Cast<TResult>(NMF.Expressions.IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Cast(Of TResult)(NMF.Expressions.IEnumerableExpression)
  nameWithType: ExpressionExtensions.Cast<TResult>(IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.Cast(Of TResult)(IEnumerableExpression)
- uid: NMF.Expressions.Linq.ExpressionExtensions.Concat*
  name: Concat
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Concat_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Concat
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Concat
  nameWithType: ExpressionExtensions.Concat
- uid: NMF.Expressions.Linq.ExpressionExtensions.Concat``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: Concat<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Concat__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Concat``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Concat(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Concat<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Concat(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ExpressionExtensions.Concat<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ExpressionExtensions.Concat(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Contains*
  name: Contains
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Contains_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Contains
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Contains
  nameWithType: ExpressionExtensions.Contains
- uid: NMF.Expressions.Linq.ExpressionExtensions.Contains``1(NMF.Expressions.IEnumerableExpression{``0},``0)
  name: Contains<TSource>(IEnumerableExpression<TSource>, TSource)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Contains__1_NMF_Expressions_IEnumerableExpression___0____0_
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Contains``1(NMF.Expressions.IEnumerableExpression{``0},``0)
  name.vb: Contains(Of TSource)(IEnumerableExpression(Of TSource), TSource)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Contains<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, TSource)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Contains(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), TSource)
  nameWithType: ExpressionExtensions.Contains<TSource>(IEnumerableExpression<TSource>, TSource)
  nameWithType.vb: ExpressionExtensions.Contains(Of TSource)(IEnumerableExpression(Of TSource), TSource)
- uid: NMF.Expressions.Linq.ExpressionExtensions.Contains``1(NMF.Expressions.IEnumerableExpression{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: Contains<TSource>(IEnumerableExpression<TSource>, TSource, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Contains__1_NMF_Expressions_IEnumerableExpression___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Contains``1(NMF.Expressions.IEnumerableExpression{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Contains(Of TSource)(IEnumerableExpression(Of TSource), TSource, IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Contains<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Contains(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ExpressionExtensions.Contains<TSource>(IEnumerableExpression<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Contains(Of TSource)(IEnumerableExpression(Of TSource), TSource, IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Count_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Count
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Count
  nameWithType: ExpressionExtensions.Count
- uid: NMF.Expressions.Linq.ExpressionExtensions.Count``1(NMF.Expressions.IEnumerableExpression{``0})
  name: Count<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Count__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Count``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: Count(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Count<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Count(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.Count<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.Count(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Count``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Count<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Count__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Count``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Count(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Count<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Count(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ExpressionExtensions.Count<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ExpressionExtensions.Count(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Distinct*
  name: Distinct
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Distinct_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Distinct
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Distinct
  nameWithType: ExpressionExtensions.Distinct
- uid: NMF.Expressions.Linq.ExpressionExtensions.Distinct``1(NMF.Expressions.IEnumerableExpression{``0})
  name: Distinct<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Distinct__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Distinct``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: Distinct(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Distinct<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Distinct(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.Distinct<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.Distinct(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Distinct``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Distinct<TSource>(IEnumerableExpression<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Distinct__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Distinct``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Distinct(Of TSource)(IEnumerableExpression(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Distinct<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Distinct(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ExpressionExtensions.Distinct<TSource>(IEnumerableExpression<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Distinct(Of TSource)(IEnumerableExpression(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Except*
  name: Except
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Except_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Except
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Except
  nameWithType: ExpressionExtensions.Except
- uid: NMF.Expressions.Linq.ExpressionExtensions.Except``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: Except<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Except__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Except``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Except(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Except<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Except(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ExpressionExtensions.Except<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ExpressionExtensions.Except(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Except``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Except<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Except__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Except``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Except(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Except<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Except(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ExpressionExtensions.Except<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Except(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault*
  name: FirstOrDefault
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_FirstOrDefault_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault
  nameWithType: ExpressionExtensions.FirstOrDefault
- uid: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault``1(NMF.Expressions.IEnumerableExpression{``0})
  name: FirstOrDefault<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_FirstOrDefault__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: FirstOrDefault(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.FirstOrDefault<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.FirstOrDefault(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: FirstOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_FirstOrDefault__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: FirstOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.FirstOrDefault(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ExpressionExtensions.FirstOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ExpressionExtensions.FirstOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupBy*
  name: GroupBy
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupBy_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.GroupBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupBy
  nameWithType: ExpressionExtensions.GroupBy
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: GroupBy<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupBy__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: GroupBy(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupBy<TSource, TKey>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupBy(Of TSource, TKey)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: ExpressionExtensions.GroupBy<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: ExpressionExtensions.GroupBy(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupBy__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IEqualityComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: GroupBy(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupBy<TSource, TKey>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupBy(Of TSource, TKey)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ExpressionExtensions.GroupBy<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, IEqualityComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.GroupBy(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupBy``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  name: GroupBy<TSource, TKey, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupBy__3_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___1_System_Collections_Generic_IEnumerable___0____2___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupBy``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupBy<TSource, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupBy(Of TSource, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult)))
  nameWithType: ExpressionExtensions.GroupBy<TSource, TKey, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>)
  nameWithType.vb: ExpressionExtensions.GroupBy(Of TSource, TKey, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupBy``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<TSource, TKey, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupBy__3_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___1_System_Collections_Generic_IEnumerable___0____2___System_Collections_Generic_IEqualityComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupBy``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupBy<TSource, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupBy(Of TSource, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ExpressionExtensions.GroupBy<TSource, TKey, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.GroupBy(Of TSource, TKey, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin*
  name: GroupJoin
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupJoin_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.GroupJoin
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin
  nameWithType: ExpressionExtensions.GroupJoin
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupJoin__4_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____3___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupJoin``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult)))
  nameWithType: ExpressionExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>)
  nameWithType.vb: ExpressionExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_GroupJoin__4_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____3___System_Collections_Generic_IEqualityComparer___2__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.GroupJoin``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ExpressionExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Intersect*
  name: Intersect
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Intersect_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Intersect
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Intersect
  nameWithType: ExpressionExtensions.Intersect
- uid: NMF.Expressions.Linq.ExpressionExtensions.Intersect``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: Intersect<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Intersect__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Intersect``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Intersect(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Intersect<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Intersect(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ExpressionExtensions.Intersect<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ExpressionExtensions.Intersect(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Intersect``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Intersect<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Intersect__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Intersect``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Intersect(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Intersect<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Intersect(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ExpressionExtensions.Intersect<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Intersect(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSubsetOf_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf
  nameWithType: ExpressionExtensions.IsProperSubsetOf
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsProperSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSubsetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsProperSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ExpressionExtensions.IsProperSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  nameWithType.vb: ExpressionExtensions.IsProperSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsProperSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSubsetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsProperSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsProperSubsetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ExpressionExtensions.IsProperSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ExpressionExtensions.IsProperSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSupersetOf_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf
  nameWithType: ExpressionExtensions.IsProperSupersetOf
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsProperSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSupersetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsProperSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ExpressionExtensions.IsProperSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  nameWithType.vb: ExpressionExtensions.IsProperSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsProperSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsProperSupersetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsProperSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsProperSupersetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ExpressionExtensions.IsProperSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ExpressionExtensions.IsProperSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSubsetOf_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf
  nameWithType: ExpressionExtensions.IsSubsetOf
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSubsetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ExpressionExtensions.IsSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  nameWithType.vb: ExpressionExtensions.IsSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSubsetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsSubsetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ExpressionExtensions.IsSubsetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ExpressionExtensions.IsSubsetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSupersetOf_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf
  nameWithType: ExpressionExtensions.IsSupersetOf
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSupersetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ExpressionExtensions.IsSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>)
  nameWithType.vb: ExpressionExtensions.IsSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_IsSupersetOf__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.IsSupersetOf(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ExpressionExtensions.IsSupersetOf<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ExpressionExtensions.IsSupersetOf(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Join*
  name: Join
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Join_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Join
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Join
  nameWithType: ExpressionExtensions.Join
- uid: NMF.Expressions.Linq.ExpressionExtensions.Join``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Join__4_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0___1___3___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Join``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Join<TOuter, TInner, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, TInner, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Join(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TInner, TResult)))
  nameWithType: ExpressionExtensions.Join<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>)
  nameWithType.vb: ExpressionExtensions.Join(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Join``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Join__4_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0___1___3___System_Collections_Generic_IEqualityComparer___2__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Join``4(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Join<TOuter, TInner, TKey, TResult>(NMF.Expressions.IEnumerableExpression<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, TInner, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Join(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.IEnumerableExpression(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TInner, TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ExpressionExtensions.Join<TOuter, TInner, TKey, TResult>(IEnumerableExpression<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.Join(Of TOuter, TInner, TKey, TResult)(IEnumerableExpression(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max*
  name: Max
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Max
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max
  nameWithType: ExpressionExtensions.Max
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{``0})
  name: Max<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: Max(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.Max<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IComparer{``0})
  name: Max<TSource>(IEnumerableExpression<TSource>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Max(Of TSource)(IEnumerableExpression(Of TSource), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ExpressionExtensions.Max<TSource>(IEnumerableExpression<TSource>, IComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource)(IEnumerableExpression(Of TSource), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}})
  name: Max<TSource>(IEnumerableExpression<Nullable<TSource>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__1_NMF_Expressions_IEnumerableExpression_System_Nullable___0___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}})
  name.vb: Max(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource>(NMF.Expressions.IEnumerableExpression<System.Nullable<TSource>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource)(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of TSource)))
  nameWithType: ExpressionExtensions.Max<TSource>(IEnumerableExpression<Nullable<TSource>>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name: Max<TSource>(IEnumerableExpression<Nullable<TSource>>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__1_NMF_Expressions_IEnumerableExpression_System_Nullable___0___System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name.vb: Max(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource>(NMF.Expressions.IEnumerableExpression<System.Nullable<TSource>>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource)(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of TSource)), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ExpressionExtensions.Max<TSource>(IEnumerableExpression<Nullable<TSource>>, IComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ExpressionExtensions.Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ExpressionExtensions.Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1})
  name: Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, Func<TSource, TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Func___0___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1})
  name.vb: Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), Func(Of TSource, TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Func<TSource, TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Func(Of TSource, TResult))
  nameWithType: ExpressionExtensions.Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, Func<TSource, TResult>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), Func(Of TSource, TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name: Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name.vb: Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))))
  nameWithType: ExpressionExtensions.Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name: Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Max__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Max``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name.vb: Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Max<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Max(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ExpressionExtensions.Max<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  nameWithType.vb: ExpressionExtensions.Max(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min*
  name: Min
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Min
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min
  nameWithType: ExpressionExtensions.Min
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{``0})
  name: Min<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: Min(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.Min<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IComparer{``0})
  name: Min<TSource>(IEnumerableExpression<TSource>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Min(Of TSource)(IEnumerableExpression(Of TSource), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ExpressionExtensions.Min<TSource>(IEnumerableExpression<TSource>, IComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource)(IEnumerableExpression(Of TSource), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}})
  name: Min<TSource>(IEnumerableExpression<Nullable<TSource>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__1_NMF_Expressions_IEnumerableExpression_System_Nullable___0___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}})
  name.vb: Min(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource>(NMF.Expressions.IEnumerableExpression<System.Nullable<TSource>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource)(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of TSource)))
  nameWithType: ExpressionExtensions.Min<TSource>(IEnumerableExpression<Nullable<TSource>>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name: Min<TSource>(IEnumerableExpression<Nullable<TSource>>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__1_NMF_Expressions_IEnumerableExpression_System_Nullable___0___System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``1(NMF.Expressions.IEnumerableExpression{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name.vb: Min(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource>(NMF.Expressions.IEnumerableExpression<System.Nullable<TSource>>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource)(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of TSource)), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ExpressionExtensions.Min<TSource>(IEnumerableExpression<Nullable<TSource>>, IComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource)(IEnumerableExpression(Of Nullable(Of TSource)), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ExpressionExtensions.Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ExpressionExtensions.Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name: Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name.vb: Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))))
  nameWithType: ExpressionExtensions.Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name: Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Min__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Min``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name.vb: Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Min<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Min(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ExpressionExtensions.Min<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  nameWithType.vb: ExpressionExtensions.Min(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.OfType*
  name: OfType
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.OfType
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType
  nameWithType: ExpressionExtensions.OfType
- uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.ICollectionExpression)
  name: OfType<TResult>(ICollectionExpression)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_ICollectionExpression_
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.ICollectionExpression)
  name.vb: OfType(Of TResult)(ICollectionExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType<TResult>(NMF.Expressions.ICollectionExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OfType(Of TResult)(NMF.Expressions.ICollectionExpression)
  nameWithType: ExpressionExtensions.OfType<TResult>(ICollectionExpression)
  nameWithType.vb: ExpressionExtensions.OfType(Of TResult)(ICollectionExpression)
- uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  name: OfType<TResult>(IEnumerableExpression)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__1_NMF_Expressions_IEnumerableExpression_
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OfType``1(NMF.Expressions.IEnumerableExpression)
  name.vb: OfType(Of TResult)(IEnumerableExpression)
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType<TResult>(NMF.Expressions.IEnumerableExpression)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OfType(Of TResult)(NMF.Expressions.IEnumerableExpression)
  nameWithType: ExpressionExtensions.OfType<TResult>(IEnumerableExpression)
  nameWithType.vb: ExpressionExtensions.OfType(Of TResult)(IEnumerableExpression)
- uid: NMF.Expressions.Linq.ExpressionExtensions.OfType``2(NMF.Expressions.ICollectionExpression{``0})
  name: OfType<TSource, TResult>(ICollectionExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OfType__2_NMF_Expressions_ICollectionExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OfType``2(NMF.Expressions.ICollectionExpression{``0})
  name.vb: OfType(Of TSource, TResult)(ICollectionExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OfType<TSource, TResult>(NMF.Expressions.ICollectionExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OfType(Of TSource, TResult)(NMF.Expressions.ICollectionExpression(Of TSource))
  nameWithType: ExpressionExtensions.OfType<TSource, TResult>(ICollectionExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.OfType(Of TSource, TResult)(ICollectionExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderBy*
  name: OrderBy
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderBy_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.OrderBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderBy
  nameWithType: ExpressionExtensions.OrderBy
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderBy<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderBy__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OrderBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderBy(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderBy<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OrderBy(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ExpressionExtensions.OrderBy<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ExpressionExtensions.OrderBy(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: OrderBy<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderBy__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OrderBy``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: OrderBy(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderBy<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OrderBy(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ExpressionExtensions.OrderBy<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.OrderBy(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending*
  name: OrderByDescending
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderByDescending_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending
  nameWithType: ExpressionExtensions.OrderByDescending
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderByDescending<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderByDescending__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderByDescending(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ExpressionExtensions.OrderByDescending<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ExpressionExtensions.OrderByDescending(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: OrderByDescending<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_OrderByDescending__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: OrderByDescending(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.OrderByDescending(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ExpressionExtensions.OrderByDescending<TItem, TKey>(IEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.OrderByDescending(Of TItem, TKey)(IEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Select*
  name: Select
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Select_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Select
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Select
  nameWithType: ExpressionExtensions.Select
- uid: NMF.Expressions.Linq.ExpressionExtensions.Select``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Select<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Select__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Select``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Select(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Select<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Select(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ExpressionExtensions.Select<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ExpressionExtensions.Select(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Select``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1})
  name: Select<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, Func<TSource, TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Select__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Func___0___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Select``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1})
  name.vb: Select(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), Func(Of TSource, TResult))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Select<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Func<TSource, TResult>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Select(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Func(Of TSource, TResult))
  nameWithType: ExpressionExtensions.Select<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, TResult>>, Func<TSource, TResult>)
  nameWithType.vb: ExpressionExtensions.Select(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TResult)), Func(Of TSource, TResult))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SelectMany*
  name: SelectMany
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SelectMany_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.SelectMany
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SelectMany
  nameWithType: ExpressionExtensions.SelectMany
- uid: NMF.Expressions.Linq.ExpressionExtensions.SelectMany``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name: SelectMany<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SelectMany__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SelectMany``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name.vb: SelectMany(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SelectMany<TSource, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SelectMany(Of TSource, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult))))
  nameWithType: ExpressionExtensions.SelectMany<TSource, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  nameWithType.vb: ExpressionExtensions.SelectMany(Of TSource, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SelectMany``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name: SelectMany<TSource, TIntermediate, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, IEnumerable<TIntermediate>>>, Expression<Func<TSource, TIntermediate, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SelectMany__3_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____System_Linq_Expressions_Expression_System_Func___0___1___2___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SelectMany``3(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name.vb: SelectMany(Of TSource, TIntermediate, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TIntermediate))), Expression(Of Func(Of TSource, TIntermediate, TResult)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SelectMany<TSource, TIntermediate, TResult>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TIntermediate>>>, System.Linq.Expressions.Expression<System.Func<TSource, TIntermediate, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SelectMany(Of TSource, TIntermediate, TResult)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TIntermediate))), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TIntermediate, TResult)))
  nameWithType: ExpressionExtensions.SelectMany<TSource, TIntermediate, TResult>(IEnumerableExpression<TSource>, Expression<Func<TSource, IEnumerable<TIntermediate>>>, Expression<Func<TSource, TIntermediate, TResult>>)
  nameWithType.vb: ExpressionExtensions.SelectMany(Of TSource, TIntermediate, TResult)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TIntermediate))), Expression(Of Func(Of TSource, TIntermediate, TResult)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SetEquals*
  name: SetEquals
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SetEquals_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.SetEquals
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SetEquals
  nameWithType: ExpressionExtensions.SetEquals
- uid: NMF.Expressions.Linq.ExpressionExtensions.SetEquals``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetEquals<T>(IEnumerableExpression<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SetEquals__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SetEquals``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetEquals(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SetEquals<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SetEquals(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ExpressionExtensions.SetEquals<T>(IEnumerableExpression<T>, IEnumerable<T>)
  nameWithType.vb: ExpressionExtensions.SetEquals(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SetEquals``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetEquals<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SetEquals__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SetEquals``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetEquals(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SetEquals<T>(NMF.Expressions.IEnumerableExpression<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SetEquals(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ExpressionExtensions.SetEquals<T>(IEnumerableExpression<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ExpressionExtensions.SetEquals(Of T)(IEnumerableExpression(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault*
  name: SingleOrDefault
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SingleOrDefault_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault
  nameWithType: ExpressionExtensions.SingleOrDefault
- uid: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0})
  name: SingleOrDefault<TSource>(IEnumerableExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SingleOrDefault__1_NMF_Expressions_IEnumerableExpression___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0})
  name.vb: SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault<TSource>(NMF.Expressions.IEnumerableExpression<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource))
  nameWithType: ExpressionExtensions.SingleOrDefault<TSource>(IEnumerableExpression<TSource>)
  nameWithType.vb: ExpressionExtensions.SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: SingleOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SingleOrDefault__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ExpressionExtensions.SingleOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ExpressionExtensions.SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean})
  name: SingleOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>, Func<TSource, Boolean>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_SingleOrDefault__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Func___0_System_Boolean__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean})
  name.vb: SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)), Func(Of TSource, Boolean))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Func<TSource, System.Boolean>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.SingleOrDefault(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Func(Of TSource, System.Boolean))
  nameWithType: ExpressionExtensions.SingleOrDefault<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Boolean>>, Func<TSource, Boolean>)
  nameWithType.vb: ExpressionExtensions.SingleOrDefault(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Boolean)), Func(Of TSource, Boolean))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Decimal})
  name: Sum(IEnumerableExpression<Decimal>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Decimal__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Decimal})
  name.vb: Sum(IEnumerableExpression(Of Decimal))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Decimal>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Decimal))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Decimal>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Decimal))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Double})
  name: Sum(IEnumerableExpression<Double>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Double__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Double})
  name.vb: Sum(IEnumerableExpression(Of Double))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Double>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Double))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Double>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Double))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Int32})
  name: Sum(IEnumerableExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Int32__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Int32})
  name.vb: Sum(IEnumerableExpression(Of Int32))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Int32))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Int32>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Int32))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Int64})
  name: Sum(IEnumerableExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Int64__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Int64})
  name.vb: Sum(IEnumerableExpression(Of Int64))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Int64))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Int64>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Int64))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Decimal}})
  name: Sum(IEnumerableExpression<Nullable<Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Decimal}})
  name.vb: Sum(IEnumerableExpression(Of Nullable(Of Decimal)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Decimal)))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Nullable<Decimal>>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Nullable(Of Decimal)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Double}})
  name: Sum(IEnumerableExpression<Nullable<Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Double___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Double}})
  name.vb: Sum(IEnumerableExpression(Of Nullable(Of Double)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Double)))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Nullable<Double>>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Nullable(Of Double)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int32}})
  name: Sum(IEnumerableExpression<Nullable<Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Int32___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int32}})
  name.vb: Sum(IEnumerableExpression(Of Nullable(Of Int32)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Int32)))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Nullable<Int32>>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Nullable(Of Int32)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int64}})
  name: Sum(IEnumerableExpression<Nullable<Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Int64___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Int64}})
  name.vb: Sum(IEnumerableExpression(Of Nullable(Of Int64)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Int64)))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Nullable<Int64>>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Nullable(Of Int64)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Single}})
  name: Sum(IEnumerableExpression<Nullable<Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Nullable_System_Single___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Nullable{System.Single}})
  name.vb: Sum(IEnumerableExpression(Of Nullable(Of Single)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Nullable<System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Nullable(Of System.Single)))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Nullable<Single>>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Nullable(Of Single)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Single})
  name: Sum(IEnumerableExpression<Single>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_NMF_Expressions_IEnumerableExpression_System_Single__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression{System.Single})
  name.vb: Sum(IEnumerableExpression(Of Single))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression<System.Single>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(NMF.Expressions.IEnumerableExpression(Of System.Single))
  nameWithType: ExpressionExtensions.Sum(IEnumerableExpression<Single>)
  nameWithType.vb: ExpressionExtensions.Sum(IEnumerableExpression(Of Single))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum*
  name: Sum
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Sum
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum
  nameWithType: ExpressionExtensions.Sum
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Decimal)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Decimal>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Decimal)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Double___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Double)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Double>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Double)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Int32___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int32)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int32>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int32)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Int64___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int64)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Int64>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Int64)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Decimal____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Double____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int32____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int64____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Single____
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name: Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Sum__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Single___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Sum``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name.vb: Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Single)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Sum<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Sum(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)))
  nameWithType: ExpressionExtensions.Sum<TSource>(IEnumerableExpression<TSource>, Expression<Func<TSource, Single>>)
  nameWithType.vb: ExpressionExtensions.Sum(Of TSource)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, Single)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenBy*
  name: ThenBy
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenBy_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.ThenBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenBy
  nameWithType: ExpressionExtensions.ThenBy
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenBy``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenBy<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenBy__2_NMF_Expressions_IOrderableEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.ThenBy``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenBy(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenBy<TItem, TKey>(NMF.Expressions.IOrderableEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.ThenBy(Of TItem, TKey)(NMF.Expressions.IOrderableEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ExpressionExtensions.ThenBy<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ExpressionExtensions.ThenBy(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenBy``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: ThenBy<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenBy__2_NMF_Expressions_IOrderableEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.ThenBy``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: ThenBy(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenBy<TItem, TKey>(NMF.Expressions.IOrderableEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.ThenBy(Of TItem, TKey)(NMF.Expressions.IOrderableEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ExpressionExtensions.ThenBy<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.ThenBy(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending*
  name: ThenByDescending
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenByDescending_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending
  nameWithType: ExpressionExtensions.ThenByDescending
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenByDescending<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenByDescending__2_NMF_Expressions_IOrderableEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenByDescending(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending<TItem, TKey>(NMF.Expressions.IOrderableEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending(Of TItem, TKey)(NMF.Expressions.IOrderableEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ExpressionExtensions.ThenByDescending<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ExpressionExtensions.ThenByDescending(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: ThenByDescending<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_ThenByDescending__2_NMF_Expressions_IOrderableEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending``2(NMF.Expressions.IOrderableEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: ThenByDescending(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending<TItem, TKey>(NMF.Expressions.IOrderableEnumerableExpression<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.ThenByDescending(Of TItem, TKey)(NMF.Expressions.IOrderableEnumerableExpression(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ExpressionExtensions.ThenByDescending<TItem, TKey>(IOrderableEnumerableExpression<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.ThenByDescending(Of TItem, TKey)(IOrderableEnumerableExpression(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.TopX*
  name: TopX
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_TopX_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.TopX
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.TopX
  nameWithType: ExpressionExtensions.TopX
- uid: NMF.Expressions.Linq.ExpressionExtensions.TopX``2(NMF.Expressions.IEnumerableExpression{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: TopX<TItem, TKey>(IEnumerableExpression<TItem>, Int32, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_TopX__2_NMF_Expressions_IEnumerableExpression___0__System_Int32_System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.TopX``2(NMF.Expressions.IEnumerableExpression{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: TopX(Of TItem, TKey)(IEnumerableExpression(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.TopX<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Int32, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.TopX(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Int32, System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ExpressionExtensions.TopX<TItem, TKey>(IEnumerableExpression<TItem>, Int32, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ExpressionExtensions.TopX(Of TItem, TKey)(IEnumerableExpression(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.TopX``2(NMF.Expressions.IEnumerableExpression{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: TopX<TItem, TKey>(IEnumerableExpression<TItem>, Int32, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_TopX__2_NMF_Expressions_IEnumerableExpression___0__System_Int32_System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.TopX``2(NMF.Expressions.IEnumerableExpression{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: TopX(Of TItem, TKey)(IEnumerableExpression(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.TopX<TItem, TKey>(NMF.Expressions.IEnumerableExpression<TItem>, System.Int32, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.TopX(Of TItem, TKey)(NMF.Expressions.IEnumerableExpression(Of TItem), System.Int32, System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ExpressionExtensions.TopX<TItem, TKey>(IEnumerableExpression<TItem>, Int32, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ExpressionExtensions.TopX(Of TItem, TKey)(IEnumerableExpression(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Union*
  name: Union
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Union_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Union
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Union
  nameWithType: ExpressionExtensions.Union
- uid: NMF.Expressions.Linq.ExpressionExtensions.Union``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name: Union<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Union__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Union``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Union(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Union<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Union(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ExpressionExtensions.Union<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ExpressionExtensions.Union(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Union``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Union<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Union__1_NMF_Expressions_IEnumerableExpression___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Union``1(NMF.Expressions.IEnumerableExpression{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Union(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Union<TSource>(NMF.Expressions.IEnumerableExpression<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Union(Of TSource)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ExpressionExtensions.Union<TSource>(IEnumerableExpression<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ExpressionExtensions.Union(Of TSource)(IEnumerableExpression(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Where*
  name: Where
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Where_
  commentId: Overload:NMF.Expressions.Linq.ExpressionExtensions.Where
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Where
  nameWithType: ExpressionExtensions.Where
- uid: NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.ICollectionExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<T>(ICollectionExpression<T>, Expression<Func<T, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Where__1_NMF_Expressions_ICollectionExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.ICollectionExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Where(Of T)(ICollectionExpression(Of T), Expression(Of Func(Of T, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Where<T>(NMF.Expressions.ICollectionExpression<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Where(Of T)(NMF.Expressions.ICollectionExpression(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  nameWithType: ExpressionExtensions.Where<T>(ICollectionExpression<T>, Expression<Func<T, Boolean>>)
  nameWithType.vb: ExpressionExtensions.Where(Of T)(ICollectionExpression(Of T), Expression(Of Func(Of T, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.ICollectionExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean},System.Action{``0,System.Boolean})
  name: Where<T>(ICollectionExpression<T>, Expression<Func<T, Boolean>>, Func<T, Boolean>, Action<T, Boolean>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Where__1_NMF_Expressions_ICollectionExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Func___0_System_Boolean__System_Action___0_System_Boolean__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.ICollectionExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean},System.Action{``0,System.Boolean})
  name.vb: Where(Of T)(ICollectionExpression(Of T), Expression(Of Func(Of T, Boolean)), Func(Of T, Boolean), Action(Of T, Boolean))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Where<T>(NMF.Expressions.ICollectionExpression<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>, System.Func<T, System.Boolean>, System.Action<T, System.Boolean>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Where(Of T)(NMF.Expressions.ICollectionExpression(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)), System.Func(Of T, System.Boolean), System.Action(Of T, System.Boolean))
  nameWithType: ExpressionExtensions.Where<T>(ICollectionExpression<T>, Expression<Func<T, Boolean>>, Func<T, Boolean>, Action<T, Boolean>)
  nameWithType.vb: ExpressionExtensions.Where(Of T)(ICollectionExpression(Of T), Expression(Of Func(Of T, Boolean)), Func(Of T, Boolean), Action(Of T, Boolean))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<T>(IEnumerableExpression<T>, Expression<Func<T, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Where__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Where(Of T)(IEnumerableExpression(Of T), Expression(Of Func(Of T, Boolean)))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Where<T>(NMF.Expressions.IEnumerableExpression<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Where(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  nameWithType: ExpressionExtensions.Where<T>(IEnumerableExpression<T>, Expression<Func<T, Boolean>>)
  nameWithType.vb: ExpressionExtensions.Where(Of T)(IEnumerableExpression(Of T), Expression(Of Func(Of T, Boolean)))
- uid: NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean})
  name: Where<T>(IEnumerableExpression<T>, Expression<Func<T, Boolean>>, Func<T, Boolean>)
  href: api/Expressions/NMF.Expressions.Linq.ExpressionExtensions.html#NMF_Expressions_Linq_ExpressionExtensions_Where__1_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Func___0_System_Boolean__
  commentId: M:NMF.Expressions.Linq.ExpressionExtensions.Where``1(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Func{``0,System.Boolean})
  name.vb: Where(Of T)(IEnumerableExpression(Of T), Expression(Of Func(Of T, Boolean)), Func(Of T, Boolean))
  fullName: NMF.Expressions.Linq.ExpressionExtensions.Where<T>(NMF.Expressions.IEnumerableExpression<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>, System.Func<T, System.Boolean>)
  fullName.vb: NMF.Expressions.Linq.ExpressionExtensions.Where(Of T)(NMF.Expressions.IEnumerableExpression(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)), System.Func(Of T, System.Boolean))
  nameWithType: ExpressionExtensions.Where<T>(IEnumerableExpression<T>, Expression<Func<T, Boolean>>, Func<T, Boolean>)
  nameWithType.vb: ExpressionExtensions.Where(Of T)(IEnumerableExpression(Of T), Expression(Of Func(Of T, Boolean)), Func(Of T, Boolean))
- uid: NMF.Expressions.Linq.ILookupExpression`2
  name: ILookupExpression<TSource, TKey>
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html
  commentId: T:NMF.Expressions.Linq.ILookupExpression`2
  name.vb: ILookupExpression(Of TSource, TKey)
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey)
  nameWithType: ILookupExpression<TSource, TKey>
  nameWithType.vb: ILookupExpression(Of TSource, TKey)
- uid: NMF.Expressions.Linq.ILookupExpression`2.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_AsNotifiable
  commentId: M:NMF.Expressions.Linq.ILookupExpression`2.AsNotifiable
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).AsNotifiable()
  nameWithType: ILookupExpression<TSource, TKey>.AsNotifiable()
  nameWithType.vb: ILookupExpression(Of TSource, TKey).AsNotifiable()
- uid: NMF.Expressions.Linq.ILookupExpression`2.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.ILookupExpression`2.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).AsNotifiable
  nameWithType: ILookupExpression<TSource, TKey>.AsNotifiable
  nameWithType.vb: ILookupExpression(Of TSource, TKey).AsNotifiable
- uid: NMF.Expressions.Linq.ILookupExpression`2.Item(`1)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_Item__1_
  commentId: P:NMF.Expressions.Linq.ILookupExpression`2.Item(`1)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.Item[TKey]
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).Item(TKey)
  nameWithType: ILookupExpression<TSource, TKey>.Item[TKey]
  nameWithType.vb: ILookupExpression(Of TSource, TKey).Item(TKey)
- uid: NMF.Expressions.Linq.ILookupExpression`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_Item_
  commentId: Overload:NMF.Expressions.Linq.ILookupExpression`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.Item
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).Item
  nameWithType: ILookupExpression<TSource, TKey>.Item
  nameWithType.vb: ILookupExpression(Of TSource, TKey).Item
- uid: NMF.Expressions.Linq.ILookupExpression`2.Keys
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_Keys
  commentId: P:NMF.Expressions.Linq.ILookupExpression`2.Keys
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).Keys
  nameWithType: ILookupExpression<TSource, TKey>.Keys
  nameWithType.vb: ILookupExpression(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.ILookupExpression`2.Keys*
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.ILookupExpression-2.html#NMF_Expressions_Linq_ILookupExpression_2_Keys_
  commentId: Overload:NMF.Expressions.Linq.ILookupExpression`2.Keys
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.ILookupExpression(Of TSource, TKey).Keys
  nameWithType: ILookupExpression<TSource, TKey>.Keys
  nameWithType.vb: ILookupExpression(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.IncrementalLookup`2
  name: IncrementalLookup<TSource, TKey>
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html
  commentId: T:NMF.Expressions.Linq.IncrementalLookup`2
  name.vb: IncrementalLookup(Of TSource, TKey)
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey)
  nameWithType: IncrementalLookup<TSource, TKey>
  nameWithType.vb: IncrementalLookup(Of TSource, TKey)
- uid: NMF.Expressions.Linq.IncrementalLookup`2.#ctor(NMF.Expressions.INotifyEnumerable{`0},NMF.Expressions.ObservingFunc{`0,`1})
  name: IncrementalLookup(INotifyEnumerable<TSource>, ObservingFunc<TSource, TKey>)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2__ctor_NMF_Expressions_INotifyEnumerable__0__NMF_Expressions_ObservingFunc__0__1__
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.#ctor(NMF.Expressions.INotifyEnumerable{`0},NMF.Expressions.ObservingFunc{`0,`1})
  name.vb: IncrementalLookup(INotifyEnumerable(Of TSource), ObservingFunc(Of TSource, TKey))
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookup(NMF.Expressions.INotifyEnumerable<TSource>, NMF.Expressions.ObservingFunc<TSource, TKey>)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookup(NMF.Expressions.INotifyEnumerable(Of TSource), NMF.Expressions.ObservingFunc(Of TSource, TKey))
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookup(INotifyEnumerable<TSource>, ObservingFunc<TSource, TKey>)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookup(INotifyEnumerable(Of TSource), ObservingFunc(Of TSource, TKey))
- uid: NMF.Expressions.Linq.IncrementalLookup`2.#ctor*
  name: IncrementalLookup
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2__ctor_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookup
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookup
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookup
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookup
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Dependencies
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Dependencies
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Dependencies
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Dependencies
  nameWithType: IncrementalLookup<TSource, TKey>.Dependencies
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Dependencies
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Dependencies_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Dependencies
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Dependencies
  nameWithType: IncrementalLookup<TSource, TKey>.Dependencies
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Dependencies
- uid: NMF.Expressions.Linq.IncrementalLookup`2.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_GetEnumerator
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.GetEnumerator
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).GetEnumerator()
  nameWithType: IncrementalLookup<TSource, TKey>.GetEnumerator()
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).GetEnumerator()
- uid: NMF.Expressions.Linq.IncrementalLookup`2.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).GetEnumerator
  nameWithType: IncrementalLookup<TSource, TKey>.GetEnumerator
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).GetEnumerator
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave
  name: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html
  commentId: T:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave
  name.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.#ctor(NMF.Expressions.Linq.IncrementalLookup{`0,`1},`1)
  name: IncrementalLookupSlave(IncrementalLookup<TSource, TKey>, TKey)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave__ctor_NMF_Expressions_Linq_IncrementalLookup__0__1___1_
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.#ctor(NMF.Expressions.Linq.IncrementalLookup{`0,`1},`1)
  name.vb: IncrementalLookupSlave(IncrementalLookup(Of TSource, TKey), TKey)
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.IncrementalLookupSlave(NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>, TKey)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.IncrementalLookupSlave(NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey), TKey)
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.IncrementalLookupSlave(IncrementalLookup<TSource, TKey>, TKey)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.IncrementalLookupSlave(IncrementalLookup(Of TSource, TKey), TKey)
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.#ctor*
  name: IncrementalLookupSlave
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave__ctor_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.IncrementalLookupSlave
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.IncrementalLookupSlave
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.IncrementalLookupSlave
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.IncrementalLookupSlave
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Dependencies
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Dependencies
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Dependencies
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Dependencies
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Dependencies
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Dependencies
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Dependencies_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Dependencies
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Dependencies
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Dependencies
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Dependencies
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_GetEnumerator
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.GetEnumerator
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.GetEnumerator()
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.GetEnumerator()
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.GetEnumerator()
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.GetEnumerator
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.GetEnumerator
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.GetEnumerator
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Items
  name: Items
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Items
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Items
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Items
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Items
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Items
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Items
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Items*
  name: Items
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Items_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Items
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Items
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Items
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Items
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Items
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Key
  name: Key
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Key
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Key
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Key
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Key
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Key
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Key
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Key*
  name: Key
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Key_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Key
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Key
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Key
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Key
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Key
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Notify(IList<INotificationResult>)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.IncrementalLookupSlave.html#NMF_Expressions_Linq_IncrementalLookup_2_IncrementalLookupSlave_Notify_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.IncrementalLookupSlave.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Notify
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Notify
  nameWithType: IncrementalLookup<TSource, TKey>.IncrementalLookupSlave.Notify
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).IncrementalLookupSlave.Notify
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Item(`1)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Item__1_
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Item(`1)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Item[TKey]
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Item(TKey)
  nameWithType: IncrementalLookup<TSource, TKey>.Item[TKey]
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Item(TKey)
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Item_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Item
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Item
  nameWithType: IncrementalLookup<TSource, TKey>.Item
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Item
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Keys
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Keys
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Keys
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Keys
  nameWithType: IncrementalLookup<TSource, TKey>.Keys
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Keys*
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Keys_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Keys
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Keys
  nameWithType: IncrementalLookup<TSource, TKey>.Keys
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification
  name: IncrementalLookup<TSource, TKey>.Notification
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html
  commentId: T:NMF.Expressions.Linq.IncrementalLookup`2.Notification
  name.vb: IncrementalLookup(Of TSource, TKey).Notification
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification
  nameWithType: IncrementalLookup<TSource, TKey>.Notification
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.#ctor(NMF.Expressions.Linq.IncrementalLookup{`0,`1})
  name: Notification(IncrementalLookup<TSource, TKey>)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification__ctor_NMF_Expressions_Linq_IncrementalLookup__0__1__
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.Notification.#ctor(NMF.Expressions.Linq.IncrementalLookup{`0,`1})
  name.vb: Notification(IncrementalLookup(Of TSource, TKey))
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Notification(NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Notification(NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey))
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Notification(IncrementalLookup<TSource, TKey>)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Notification(IncrementalLookup(Of TSource, TKey))
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.#ctor*
  name: Notification
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification__ctor_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Notification
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Notification
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Notification
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Notification
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.AddedItems
  name: AddedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_AddedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.AddedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.AddedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.AddedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.AddedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.AddedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.AddedItems*
  name: AddedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_AddedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.AddedItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.AddedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.AddedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.AddedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.AddedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Changed
  name: Changed
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Changed
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Changed
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Changed
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Changed
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Changed
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Changed
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Changed*
  name: Changed
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Changed_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Changed
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Changed
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Changed
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Changed
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Changed
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.FreeReference
  name: FreeReference()
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_FreeReference
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.Notification.FreeReference
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.FreeReference()
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.FreeReference()
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.FreeReference()
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.FreeReference()
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.FreeReference*
  name: FreeReference
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_FreeReference_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.FreeReference
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.FreeReference
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.FreeReference
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.FreeReference
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.FreeReference
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.IncreaseReferences(System.Int32)
  name: IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.Notification.IncreaseReferences(System.Int32)
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.IncreaseReferences(System.Int32)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.IncreaseReferences(System.Int32)
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.IncreaseReferences(Int32)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.IncreaseReferences(Int32)
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.IncreaseReferences*
  name: IncreaseReferences
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_IncreaseReferences_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.IncreaseReferences
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.IncreaseReferences
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.IncreaseReferences
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.IncreaseReferences
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.IncreaseReferences
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.IsReset
  name: IsReset
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_IsReset
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.IsReset
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.IsReset
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.IsReset
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.IsReset
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.IsReset
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.IsReset*
  name: IsReset
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_IsReset_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.IsReset
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.IsReset
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.IsReset
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.IsReset
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.IsReset
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Item(`1)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Item__1_
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Item(`1)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Item[TKey]
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Item(TKey)
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Item[TKey]
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Item(TKey)
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Item_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Item
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Item
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Item
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Item
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Item
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.MovedItems
  name: MovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_MovedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.MovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.MovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.MovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.MovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.MovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.MovedItems*
  name: MovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_MovedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.MovedItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.MovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.MovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.MovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.MovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NewItemsStartIndex
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NewItemsStartIndex
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NewItemsStartIndex
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NewItemsStartIndex
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NewItemsStartIndex
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.NewItemsStartIndex
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NewItemsStartIndex
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NewItemsStartIndex*
  name: NewItemsStartIndex
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NewItemsStartIndex_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NewItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NewItemsStartIndex
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NewItemsStartIndex
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.NewItemsStartIndex
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NewItemsStartIndex
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  name: ICollectionChangedNotificationResult.AddedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_AddedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.AddedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems*
  name: ICollectionChangedNotificationResult.AddedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_AddedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#AddedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.AddedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.AddedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  name: ICollectionChangedNotificationResult.MovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_MovedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.MovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems*
  name: ICollectionChangedNotificationResult.MovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_MovedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#MovedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.MovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.MovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  name: ICollectionChangedNotificationResult.RemovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.RemovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems*
  name: ICollectionChangedNotificationResult.RemovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_NMF_Expressions_ICollectionChangedNotificationResult_RemovedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.NMF#Expressions#ICollectionChangedNotificationResult#RemovedItems
  isSpec: "True"
  name.vb: NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.ICollectionChangedNotificationResult.RemovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.NMF.Expressions.ICollectionChangedNotificationResult.RemovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.OldItemsStartIndex
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_OldItemsStartIndex
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.OldItemsStartIndex
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.OldItemsStartIndex
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.OldItemsStartIndex
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.OldItemsStartIndex
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.OldItemsStartIndex
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.OldItemsStartIndex*
  name: OldItemsStartIndex
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_OldItemsStartIndex_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.OldItemsStartIndex
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.OldItemsStartIndex
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.OldItemsStartIndex
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.OldItemsStartIndex
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.OldItemsStartIndex
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.RemovedItems
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_RemovedItems
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.RemovedItems
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.RemovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.RemovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.RemovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.RemovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.RemovedItems*
  name: RemovedItems
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_RemovedItems_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.RemovedItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.RemovedItems
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.RemovedItems
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.RemovedItems
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.RemovedItems
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Reset
  name: Reset()
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Reset
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Reset
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Reset()
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Reset()
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Reset()
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Reset()
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Reset*
  name: Reset
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Reset_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Reset
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Reset
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Reset
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Reset
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Reset
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Source
  name: Source
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Source
  commentId: P:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Source
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Source
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Source
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Source
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Source
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notification.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.Notification.html#NMF_Expressions_Linq_IncrementalLookup_2_Notification_Source_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notification.Source
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notification.Source
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notification.Source
  nameWithType: IncrementalLookup<TSource, TKey>.Notification.Source
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notification.Source
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: IncrementalLookup<TSource, TKey>.Notify(IList<INotificationResult>)
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.IncrementalLookup`2.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_Notify_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.Notify
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).Notify
  nameWithType: IncrementalLookup<TSource, TKey>.Notify
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).Notify
- uid: NMF.Expressions.Linq.IncrementalLookup`2.OnAttach
  name: OnAttach()
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_OnAttach
  commentId: M:NMF.Expressions.Linq.IncrementalLookup`2.OnAttach
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.OnAttach()
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).OnAttach()
  nameWithType: IncrementalLookup<TSource, TKey>.OnAttach()
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).OnAttach()
- uid: NMF.Expressions.Linq.IncrementalLookup`2.OnAttach*
  name: OnAttach
  href: api/Expressions/NMF.Expressions.Linq.IncrementalLookup-2.html#NMF_Expressions_Linq_IncrementalLookup_2_OnAttach_
  commentId: Overload:NMF.Expressions.Linq.IncrementalLookup`2.OnAttach
  isSpec: "True"
  fullName: NMF.Expressions.Linq.IncrementalLookup<TSource, TKey>.OnAttach
  fullName.vb: NMF.Expressions.Linq.IncrementalLookup(Of TSource, TKey).OnAttach
  nameWithType: IncrementalLookup<TSource, TKey>.OnAttach
  nameWithType.vb: IncrementalLookup(Of TSource, TKey).OnAttach
- uid: NMF.Expressions.Linq.INotifyLookup`2
  name: INotifyLookup<TSource, TKey>
  href: api/Expressions/NMF.Expressions.Linq.INotifyLookup-2.html
  commentId: T:NMF.Expressions.Linq.INotifyLookup`2
  name.vb: INotifyLookup(Of TSource, TKey)
  fullName: NMF.Expressions.Linq.INotifyLookup<TSource, TKey>
  fullName.vb: NMF.Expressions.Linq.INotifyLookup(Of TSource, TKey)
  nameWithType: INotifyLookup<TSource, TKey>
  nameWithType.vb: INotifyLookup(Of TSource, TKey)
- uid: NMF.Expressions.Linq.INotifyLookup`2.Item(`1)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.Linq.INotifyLookup-2.html#NMF_Expressions_Linq_INotifyLookup_2_Item__1_
  commentId: P:NMF.Expressions.Linq.INotifyLookup`2.Item(`1)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.Linq.INotifyLookup<TSource, TKey>.Item[TKey]
  fullName.vb: NMF.Expressions.Linq.INotifyLookup(Of TSource, TKey).Item(TKey)
  nameWithType: INotifyLookup<TSource, TKey>.Item[TKey]
  nameWithType.vb: INotifyLookup(Of TSource, TKey).Item(TKey)
- uid: NMF.Expressions.Linq.INotifyLookup`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.Linq.INotifyLookup-2.html#NMF_Expressions_Linq_INotifyLookup_2_Item_
  commentId: Overload:NMF.Expressions.Linq.INotifyLookup`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.Linq.INotifyLookup<TSource, TKey>.Item
  fullName.vb: NMF.Expressions.Linq.INotifyLookup(Of TSource, TKey).Item
  nameWithType: INotifyLookup<TSource, TKey>.Item
  nameWithType.vb: INotifyLookup(Of TSource, TKey).Item
- uid: NMF.Expressions.Linq.INotifyLookup`2.Keys
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.INotifyLookup-2.html#NMF_Expressions_Linq_INotifyLookup_2_Keys
  commentId: P:NMF.Expressions.Linq.INotifyLookup`2.Keys
  fullName: NMF.Expressions.Linq.INotifyLookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.INotifyLookup(Of TSource, TKey).Keys
  nameWithType: INotifyLookup<TSource, TKey>.Keys
  nameWithType.vb: INotifyLookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.INotifyLookup`2.Keys*
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.INotifyLookup-2.html#NMF_Expressions_Linq_INotifyLookup_2_Keys_
  commentId: Overload:NMF.Expressions.Linq.INotifyLookup`2.Keys
  isSpec: "True"
  fullName: NMF.Expressions.Linq.INotifyLookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.INotifyLookup(Of TSource, TKey).Keys
  nameWithType: INotifyLookup<TSource, TKey>.Keys
  nameWithType.vb: INotifyLookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.Lookup`2
  name: Lookup<TSource, TKey>
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html
  commentId: T:NMF.Expressions.Linq.Lookup`2
  name.vb: Lookup(Of TSource, TKey)
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey)
  nameWithType: Lookup<TSource, TKey>
  nameWithType.vb: Lookup(Of TSource, TKey)
- uid: NMF.Expressions.Linq.Lookup`2.#ctor(NMF.Expressions.IEnumerableExpression{`0},NMF.Expressions.ObservingFunc{`0,`1})
  name: Lookup(IEnumerableExpression<TSource>, ObservingFunc<TSource, TKey>)
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2__ctor_NMF_Expressions_IEnumerableExpression__0__NMF_Expressions_ObservingFunc__0__1__
  commentId: M:NMF.Expressions.Linq.Lookup`2.#ctor(NMF.Expressions.IEnumerableExpression{`0},NMF.Expressions.ObservingFunc{`0,`1})
  name.vb: Lookup(IEnumerableExpression(Of TSource), ObservingFunc(Of TSource, TKey))
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Lookup(NMF.Expressions.IEnumerableExpression<TSource>, NMF.Expressions.ObservingFunc<TSource, TKey>)
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Lookup(NMF.Expressions.IEnumerableExpression(Of TSource), NMF.Expressions.ObservingFunc(Of TSource, TKey))
  nameWithType: Lookup<TSource, TKey>.Lookup(IEnumerableExpression<TSource>, ObservingFunc<TSource, TKey>)
  nameWithType.vb: Lookup(Of TSource, TKey).Lookup(IEnumerableExpression(Of TSource), ObservingFunc(Of TSource, TKey))
- uid: NMF.Expressions.Linq.Lookup`2.#ctor*
  name: Lookup
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2__ctor_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Lookup
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Lookup
  nameWithType: Lookup<TSource, TKey>.Lookup
  nameWithType.vb: Lookup(Of TSource, TKey).Lookup
- uid: NMF.Expressions.Linq.Lookup`2.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_AsNotifiable
  commentId: M:NMF.Expressions.Linq.Lookup`2.AsNotifiable
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).AsNotifiable()
  nameWithType: Lookup<TSource, TKey>.AsNotifiable()
  nameWithType.vb: Lookup(Of TSource, TKey).AsNotifiable()
- uid: NMF.Expressions.Linq.Lookup`2.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).AsNotifiable
  nameWithType: Lookup<TSource, TKey>.AsNotifiable
  nameWithType.vb: Lookup(Of TSource, TKey).AsNotifiable
- uid: NMF.Expressions.Linq.Lookup`2.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_GetEnumerator
  commentId: M:NMF.Expressions.Linq.Lookup`2.GetEnumerator
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).GetEnumerator()
  nameWithType: Lookup<TSource, TKey>.GetEnumerator()
  nameWithType.vb: Lookup(Of TSource, TKey).GetEnumerator()
- uid: NMF.Expressions.Linq.Lookup`2.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).GetEnumerator
  nameWithType: Lookup<TSource, TKey>.GetEnumerator
  nameWithType.vb: Lookup(Of TSource, TKey).GetEnumerator
- uid: NMF.Expressions.Linq.Lookup`2.Item(`1)
  name: Item[TKey]
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_Item__1_
  commentId: P:NMF.Expressions.Linq.Lookup`2.Item(`1)
  name.vb: Item(TKey)
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Item[TKey]
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Item(TKey)
  nameWithType: Lookup<TSource, TKey>.Item[TKey]
  nameWithType.vb: Lookup(Of TSource, TKey).Item(TKey)
- uid: NMF.Expressions.Linq.Lookup`2.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_Item_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.Item
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Item
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Item
  nameWithType: Lookup<TSource, TKey>.Item
  nameWithType.vb: Lookup(Of TSource, TKey).Item
- uid: NMF.Expressions.Linq.Lookup`2.Keys
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_Keys
  commentId: P:NMF.Expressions.Linq.Lookup`2.Keys
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Keys
  nameWithType: Lookup<TSource, TKey>.Keys
  nameWithType.vb: Lookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.Lookup`2.Keys*
  name: Keys
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_Keys_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.Keys
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.Keys
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).Keys
  nameWithType: Lookup<TSource, TKey>.Keys
  nameWithType.vb: Lookup(Of TSource, TKey).Keys
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave
  name: Lookup<TSource, TKey>.LookupSlave
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html
  commentId: T:NMF.Expressions.Linq.Lookup`2.LookupSlave
  name.vb: Lookup(Of TSource, TKey).LookupSlave
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave
  nameWithType: Lookup<TSource, TKey>.LookupSlave
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.#ctor(NMF.Expressions.Linq.Lookup{`0,`1},`1)
  name: LookupSlave(Lookup<TSource, TKey>, TKey)
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave__ctor_NMF_Expressions_Linq_Lookup__0__1___1_
  commentId: M:NMF.Expressions.Linq.Lookup`2.LookupSlave.#ctor(NMF.Expressions.Linq.Lookup{`0,`1},`1)
  name.vb: LookupSlave(Lookup(Of TSource, TKey), TKey)
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.LookupSlave(NMF.Expressions.Linq.Lookup<TSource, TKey>, TKey)
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.LookupSlave(NMF.Expressions.Linq.Lookup(Of TSource, TKey), TKey)
  nameWithType: Lookup<TSource, TKey>.LookupSlave.LookupSlave(Lookup<TSource, TKey>, TKey)
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.LookupSlave(Lookup(Of TSource, TKey), TKey)
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.#ctor*
  name: LookupSlave
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave__ctor_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.LookupSlave
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.LookupSlave
  nameWithType: Lookup<TSource, TKey>.LookupSlave.LookupSlave
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.LookupSlave
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_AsNotifiable
  commentId: M:NMF.Expressions.Linq.Lookup`2.LookupSlave.AsNotifiable
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.AsNotifiable()
  nameWithType: Lookup<TSource, TKey>.LookupSlave.AsNotifiable()
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.AsNotifiable()
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.AsNotifiable
  nameWithType: Lookup<TSource, TKey>.LookupSlave.AsNotifiable
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.AsNotifiable
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_GetEnumerator
  commentId: M:NMF.Expressions.Linq.Lookup`2.LookupSlave.GetEnumerator
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.GetEnumerator()
  nameWithType: Lookup<TSource, TKey>.LookupSlave.GetEnumerator()
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.GetEnumerator()
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.GetEnumerator
  nameWithType: Lookup<TSource, TKey>.LookupSlave.GetEnumerator
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.GetEnumerator
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.Items
  name: Items
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_Items
  commentId: P:NMF.Expressions.Linq.Lookup`2.LookupSlave.Items
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.Items
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.Items
  nameWithType: Lookup<TSource, TKey>.LookupSlave.Items
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.Items
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.Items*
  name: Items
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_Items_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.Items
  isSpec: "True"
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.Items
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.Items
  nameWithType: Lookup<TSource, TKey>.LookupSlave.Items
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.Items
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_NMF_Expressions_IEnumerableExpression_AsNotifiable
  commentId: M:NMF.Expressions.Linq.Lookup`2.LookupSlave.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType: Lookup<TSource, TKey>.LookupSlave.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable()
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.NMF#Expressions#IEnumerableExpression#AsNotifiable*
  name: IEnumerableExpression.AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_NMF_Expressions_IEnumerableExpression_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.NMF#Expressions#IEnumerableExpression#AsNotifiable
  isSpec: "True"
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable
  nameWithType: Lookup<TSource, TKey>.LookupSlave.IEnumerableExpression.AsNotifiable
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.NMF.Expressions.IEnumerableExpression.AsNotifiable
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.Linq.Lookup`2.LookupSlave.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Lookup<TSource, TKey>.LookupSlave.IEnumerable.GetEnumerator()
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.Linq.Lookup`2.LookupSlave.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.LookupSlave.html#NMF_Expressions_Linq_Lookup_2_LookupSlave_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.LookupSlave.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.LookupSlave.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).LookupSlave.System.Collections.IEnumerable.GetEnumerator
  nameWithType: Lookup<TSource, TKey>.LookupSlave.IEnumerable.GetEnumerator
  nameWithType.vb: Lookup(Of TSource, TKey).LookupSlave.System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.Linq.Lookup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_NMF_Expressions_IEnumerableExpression_AsNotifiable
  commentId: M:NMF.Expressions.Linq.Lookup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType: Lookup<TSource, TKey>.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: Lookup(Of TSource, TKey).NMF.Expressions.IEnumerableExpression.AsNotifiable()
- uid: NMF.Expressions.Linq.Lookup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable*
  name: IEnumerableExpression.AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_NMF_Expressions_IEnumerableExpression_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  isSpec: "True"
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).NMF.Expressions.IEnumerableExpression.AsNotifiable
  nameWithType: Lookup<TSource, TKey>.IEnumerableExpression.AsNotifiable
  nameWithType.vb: Lookup(Of TSource, TKey).NMF.Expressions.IEnumerableExpression.AsNotifiable
- uid: NMF.Expressions.Linq.Lookup`2.NMF#Expressions#Linq#ILookupExpression{TSource,TKey}#AsNotifiable
  name: ILookupExpression<TSource, TKey>.AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_NMF_Expressions_Linq_ILookupExpression_TSource_TKey__AsNotifiable
  commentId: M:NMF.Expressions.Linq.Lookup`2.NMF#Expressions#Linq#ILookupExpression{TSource,TKey}#AsNotifiable
  name.vb: NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable()
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable()
  nameWithType: Lookup<TSource, TKey>.ILookupExpression<TSource, TKey>.AsNotifiable()
  nameWithType.vb: Lookup(Of TSource, TKey).NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable()
- uid: NMF.Expressions.Linq.Lookup`2.NMF#Expressions#Linq#ILookupExpression{TSource,TKey}#AsNotifiable*
  name: ILookupExpression<TSource, TKey>.AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_NMF_Expressions_Linq_ILookupExpression_TSource_TKey__AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.NMF#Expressions#Linq#ILookupExpression{TSource,TKey}#AsNotifiable
  isSpec: "True"
  name.vb: NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.NMF.Expressions.Linq.ILookupExpression<TSource, TKey>.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable
  nameWithType: Lookup<TSource, TKey>.ILookupExpression<TSource, TKey>.AsNotifiable
  nameWithType.vb: Lookup(Of TSource, TKey).NMF.Expressions.Linq.ILookupExpression<TSource,TKey>.AsNotifiable
- uid: NMF.Expressions.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Lookup<TSource, TKey>.IEnumerable.GetEnumerator()
  nameWithType.vb: Lookup(Of TSource, TKey).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.Lookup-2.html#NMF_Expressions_Linq_Lookup_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.Linq.Lookup<TSource, TKey>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.Lookup(Of TSource, TKey).System.Collections.IEnumerable.GetEnumerator
  nameWithType: Lookup<TSource, TKey>.IEnumerable.GetEnumerator
  nameWithType.vb: Lookup(Of TSource, TKey).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.Linq.LookupExtensions
  name: LookupExtensions
  href: api/Expressions/NMF.Expressions.Linq.LookupExtensions.html
  commentId: T:NMF.Expressions.Linq.LookupExtensions
  fullName: NMF.Expressions.Linq.LookupExtensions
  nameWithType: LookupExtensions
- uid: NMF.Expressions.Linq.LookupExtensions.ToLookup*
  name: ToLookup
  href: api/Expressions/NMF.Expressions.Linq.LookupExtensions.html#NMF_Expressions_Linq_LookupExtensions_ToLookup_
  commentId: Overload:NMF.Expressions.Linq.LookupExtensions.ToLookup
  isSpec: "True"
  fullName: NMF.Expressions.Linq.LookupExtensions.ToLookup
  nameWithType: LookupExtensions.ToLookup
- uid: NMF.Expressions.Linq.LookupExtensions.ToLookup``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ToLookup<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.LookupExtensions.html#NMF_Expressions_Linq_LookupExtensions_ToLookup__2_NMF_Expressions_IEnumerableExpression___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.LookupExtensions.ToLookup``2(NMF.Expressions.IEnumerableExpression{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ToLookup(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)))
  fullName: NMF.Expressions.Linq.LookupExtensions.ToLookup<TSource, TKey>(NMF.Expressions.IEnumerableExpression<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NMF.Expressions.Linq.LookupExtensions.ToLookup(Of TSource, TKey)(NMF.Expressions.IEnumerableExpression(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: LookupExtensions.ToLookup<TSource, TKey>(IEnumerableExpression<TSource>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: LookupExtensions.ToLookup(Of TSource, TKey)(IEnumerableExpression(Of TSource), Expression(Of Func(Of TSource, TKey)))
- uid: NMF.Expressions.Linq.LookupExtensions.ToLookup``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ToLookup<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.LookupExtensions.html#NMF_Expressions_Linq_LookupExtensions_ToLookup__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.LookupExtensions.ToLookup``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ToLookup(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)))
  fullName: NMF.Expressions.Linq.LookupExtensions.ToLookup<TSource, TKey>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NMF.Expressions.Linq.LookupExtensions.ToLookup(Of TSource, TKey)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: LookupExtensions.ToLookup<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: LookupExtensions.ToLookup(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)))
- uid: NMF.Expressions.Linq.ObservableAggregate`3
  name: ObservableAggregate<TSource, TAccumulator, TResult>
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html
  commentId: T:NMF.Expressions.Linq.ObservableAggregate`3
  name.vb: ObservableAggregate(Of TSource, TAccumulator, TResult)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)
  name: ObservableAggregate(INotifyEnumerable<TSource>, TAccumulator)
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3__ctor_NMF_Expressions_INotifyEnumerable__0___1_
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.#ctor(NMF.Expressions.INotifyEnumerable{`0},`1)
  name.vb: ObservableAggregate(INotifyEnumerable(Of TSource), TAccumulator)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate(NMF.Expressions.INotifyEnumerable<TSource>, TAccumulator)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ObservableAggregate(NMF.Expressions.INotifyEnumerable(Of TSource), TAccumulator)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate(INotifyEnumerable<TSource>, TAccumulator)
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ObservableAggregate(INotifyEnumerable(Of TSource), TAccumulator)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.#ctor*
  name: ObservableAggregate
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3__ctor_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ObservableAggregate
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ObservableAggregate
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ObservableAggregate
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  name: Accumulator
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Accumulator
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Accumulator*
  name: Accumulator
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Accumulator_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Accumulator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Accumulator
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Accumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.AddItem(`0)
  name: AddItem(TSource)
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_AddItem__0_
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.AddItem(`0)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.AddItem(TSource)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem(TSource)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.AddItem(TSource)
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem(TSource)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.AddItem*
  name: AddItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_AddItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.AddItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.AddItem
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.AddItem
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).AddItem
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Dependencies
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Dependencies_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Dependencies
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Dependencies
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Changed
  name: INotificationResult.Changed
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_Changed
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Changed
  name.vb: NMF.Expressions.INotificationResult.Changed
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.Changed
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Changed
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.Changed
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Changed*
  name: INotificationResult.Changed
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_Changed_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Changed
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.Changed
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.Changed
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Changed
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.Changed
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#FreeReference
  name: INotificationResult.FreeReference()
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_FreeReference
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#FreeReference
  name.vb: NMF.Expressions.INotificationResult.FreeReference()
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.FreeReference()
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.FreeReference()
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.FreeReference()
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.FreeReference()
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#FreeReference*
  name: INotificationResult.FreeReference
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_FreeReference_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#FreeReference
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.FreeReference
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.FreeReference
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.FreeReference
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.FreeReference
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.FreeReference
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name: INotificationResult.IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.IncreaseReferences(Int32)
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#IncreaseReferences*
  name: INotificationResult.IncreaseReferences
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_IncreaseReferences_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#IncreaseReferences
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.IncreaseReferences
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.IncreaseReferences
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.IncreaseReferences
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.IncreaseReferences
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Source
  name: INotificationResult.Source
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_Source
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Source
  name.vb: NMF.Expressions.INotificationResult.Source
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.Source
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Source*
  name: INotificationResult.Source
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_INotificationResult_Source_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#INotificationResult#Source
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.Source
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.INotificationResult.Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.INotificationResult.Source
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_NewValue
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#NewValue*
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_NewValue_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#NewValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_OldValue
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#OldValue*
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_OldValue_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult#OldValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#NewValue
  name: IValueChangedNotificationResult<TResult>.NewValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_TResult__NewValue
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#NewValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult<TResult>.NewValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#NewValue*
  name: IValueChangedNotificationResult<TResult>.NewValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_TResult__NewValue_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#NewValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult<TResult>.NewValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.NewValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#OldValue
  name: IValueChangedNotificationResult<TResult>.OldValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_TResult__OldValue
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#OldValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult<TResult>.OldValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#OldValue*
  name: IValueChangedNotificationResult<TResult>.OldValue
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_NMF_Expressions_IValueChangedNotificationResult_TResult__OldValue_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.NMF#Expressions#IValueChangedNotificationResult{TResult}#OldValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.IValueChangedNotificationResult<TResult>.OldValue
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).NMF.Expressions.IValueChangedNotificationResult<TResult>.OldValue
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Notify(IList<INotificationResult>)
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Notify_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Notify
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Notify
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Notify
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Notify
- uid: NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem(`0)
  name: RemoveItem(TSource)
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_RemoveItem__0_
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem(`0)
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem(TSource)
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem(TSource)
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem(TSource)
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem(TSource)
- uid: NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem*
  name: RemoveItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_RemoveItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.RemoveItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.RemoveItem
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).RemoveItem
- uid: NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  name: ResetAccumulator()
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_ResetAccumulator
  commentId: M:NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator()
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator()
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator()
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator()
- uid: NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator*
  name: ResetAccumulator
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_ResetAccumulator_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.ResetAccumulator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.ResetAccumulator
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).ResetAccumulator
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Source
  name: Source
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Source
  commentId: P:NMF.Expressions.Linq.ObservableAggregate`3.Source
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Source
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Source
- uid: NMF.Expressions.Linq.ObservableAggregate`3.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.Linq.ObservableAggregate-3.html#NMF_Expressions_Linq_ObservableAggregate_3_Source_
  commentId: Overload:NMF.Expressions.Linq.ObservableAggregate`3.Source
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableAggregate<TSource, TAccumulator, TResult>.Source
  fullName.vb: NMF.Expressions.Linq.ObservableAggregate(Of TSource, TAccumulator, TResult).Source
  nameWithType: ObservableAggregate<TSource, TAccumulator, TResult>.Source
  nameWithType.vb: ObservableAggregate(Of TSource, TAccumulator, TResult).Source
- uid: NMF.Expressions.Linq.ObservableEnumerable`1
  name: ObservableEnumerable<T>
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html
  commentId: T:NMF.Expressions.Linq.ObservableEnumerable`1
  name.vb: ObservableEnumerable(Of T)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T)
  nameWithType: ObservableEnumerable<T>
  nameWithType.vb: ObservableEnumerable(Of T)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.#ctor
  name: ObservableEnumerable()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1__ctor
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.#ctor
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.ObservableEnumerable()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).ObservableEnumerable()
  nameWithType: ObservableEnumerable<T>.ObservableEnumerable()
  nameWithType.vb: ObservableEnumerable(Of T).ObservableEnumerable()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.#ctor*
  name: ObservableEnumerable
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1__ctor_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.ObservableEnumerable
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).ObservableEnumerable
  nameWithType: ObservableEnumerable<T>.ObservableEnumerable
  nameWithType.vb: ObservableEnumerable(Of T).ObservableEnumerable
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.CollectionChanged
  name: CollectionChanged
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_CollectionChanged
  commentId: E:NMF.Expressions.Linq.ObservableEnumerable`1.CollectionChanged
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.CollectionChanged
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).CollectionChanged
  nameWithType: ObservableEnumerable<T>.CollectionChanged
  nameWithType.vb: ObservableEnumerable(Of T).CollectionChanged
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Contains(`0)
  name: Contains(T)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Contains__0_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.Contains(`0)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Contains(T)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Contains(T)
  nameWithType: ObservableEnumerable<T>.Contains(T)
  nameWithType.vb: ObservableEnumerable(Of T).Contains(T)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Contains*
  name: Contains
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Contains_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Contains
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Contains
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Contains
  nameWithType: ObservableEnumerable<T>.Contains
  nameWithType.vb: ObservableEnumerable(Of T).Contains
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_CopyTo__0___System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.CopyTo(T[], System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).CopyTo(T(), System.Int32)
  nameWithType: ObservableEnumerable<T>.CopyTo(T[], Int32)
  nameWithType.vb: ObservableEnumerable(Of T).CopyTo(T(), Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.CopyTo*
  name: CopyTo
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_CopyTo_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.CopyTo
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.CopyTo
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).CopyTo
  nameWithType: ObservableEnumerable<T>.CopyTo
  nameWithType.vb: ObservableEnumerable(Of T).CopyTo
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Count
  name: Count
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Count
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.Count
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Count
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Count
  nameWithType: ObservableEnumerable<T>.Count
  nameWithType.vb: ObservableEnumerable(Of T).Count
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Count_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Count
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Count
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Count
  nameWithType: ObservableEnumerable<T>.Count
  nameWithType.vb: ObservableEnumerable(Of T).Count
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Dependencies
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.Dependencies
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Dependencies
  nameWithType: ObservableEnumerable<T>.Dependencies
  nameWithType.vb: ObservableEnumerable(Of T).Dependencies
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Dependencies_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Dependencies
  nameWithType: ObservableEnumerable<T>.Dependencies
  nameWithType.vb: ObservableEnumerable(Of T).Dependencies
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Dispose
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.Dispose
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Dispose()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Dispose()
  nameWithType: ObservableEnumerable<T>.Dispose()
  nameWithType.vb: ObservableEnumerable(Of T).Dispose()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Dispose_System_Boolean_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.Dispose(System.Boolean)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Dispose(System.Boolean)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Dispose(System.Boolean)
  nameWithType: ObservableEnumerable<T>.Dispose(Boolean)
  nameWithType.vb: ObservableEnumerable(Of T).Dispose(Boolean)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Dispose_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Dispose
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Dispose
  nameWithType: ObservableEnumerable<T>.Dispose
  nameWithType.vb: ObservableEnumerable(Of T).Dispose
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_ExecutionMetaData
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.ExecutionMetaData
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).ExecutionMetaData
  nameWithType: ObservableEnumerable<T>.ExecutionMetaData
  nameWithType.vb: ObservableEnumerable(Of T).ExecutionMetaData
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).ExecutionMetaData
  nameWithType: ObservableEnumerable<T>.ExecutionMetaData
  nameWithType.vb: ObservableEnumerable(Of T).ExecutionMetaData
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_GetEnumerator
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.GetEnumerator
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).GetEnumerator()
  nameWithType: ObservableEnumerable<T>.GetEnumerator()
  nameWithType.vb: ObservableEnumerable(Of T).GetEnumerator()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).GetEnumerator
  nameWithType: ObservableEnumerable<T>.GetEnumerator
  nameWithType.vb: ObservableEnumerable(Of T).GetEnumerator
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.HasEventSubscriber
  name: HasEventSubscriber
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_HasEventSubscriber
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.HasEventSubscriber
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.HasEventSubscriber
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).HasEventSubscriber
  nameWithType: ObservableEnumerable<T>.HasEventSubscriber
  nameWithType.vb: ObservableEnumerable(Of T).HasEventSubscriber
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.HasEventSubscriber*
  name: HasEventSubscriber
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_HasEventSubscriber_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.HasEventSubscriber
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.HasEventSubscriber
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).HasEventSubscriber
  nameWithType: ObservableEnumerable<T>.HasEventSubscriber
  nameWithType.vb: ObservableEnumerable(Of T).HasEventSubscriber
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: ObservableEnumerable<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: ObservableEnumerable(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Notify_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Notify
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Notify
  nameWithType: ObservableEnumerable<T>.Notify
  nameWithType.vb: ObservableEnumerable(Of T).Notify
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItem(`0,System.Int32)
  name: OnAddItem(T, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAddItem__0_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItem(`0,System.Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAddItem(T, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAddItem(T, System.Int32)
  nameWithType: ObservableEnumerable<T>.OnAddItem(T, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnAddItem(T, Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItem*
  name: OnAddItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAddItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAddItem
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAddItem
  nameWithType: ObservableEnumerable<T>.OnAddItem
  nameWithType.vb: ObservableEnumerable(Of T).OnAddItem
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItems(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name: OnAddItems(IEnumerable<T>, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAddItems_System_Collections_Generic_IEnumerable__0__System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItems(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name.vb: OnAddItems(IEnumerable(Of T), Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAddItems(System.Collections.Generic.IEnumerable<T>, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAddItems(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  nameWithType: ObservableEnumerable<T>.OnAddItems(IEnumerable<T>, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnAddItems(IEnumerable(Of T), Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItems*
  name: OnAddItems
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAddItems_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnAddItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAddItems
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAddItems
  nameWithType: ObservableEnumerable<T>.OnAddItems
  nameWithType.vb: ObservableEnumerable(Of T).OnAddItems
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAttach
  name: OnAttach()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAttach
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnAttach
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAttach()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAttach()
  nameWithType: ObservableEnumerable<T>.OnAttach()
  nameWithType.vb: ObservableEnumerable(Of T).OnAttach()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnAttach*
  name: OnAttach
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnAttach_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnAttach
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnAttach
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnAttach
  nameWithType: ObservableEnumerable<T>.OnAttach
  nameWithType.vb: ObservableEnumerable(Of T).OnAttach
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnCleared
  name: OnCleared()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnCleared
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnCleared
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnCleared()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnCleared()
  nameWithType: ObservableEnumerable<T>.OnCleared()
  nameWithType.vb: ObservableEnumerable(Of T).OnCleared()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnCleared*
  name: OnCleared
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnCleared_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnCleared
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnCleared
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnCleared
  nameWithType: ObservableEnumerable<T>.OnCleared
  nameWithType.vb: ObservableEnumerable(Of T).OnCleared
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnCollectionChanged_System_Collections_Specialized_NotifyCollectionChangedEventArgs_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType: ObservableEnumerable<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableEnumerable(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnCollectionChanged*
  name: OnCollectionChanged
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnCollectionChanged_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnCollectionChanged
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnCollectionChanged
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnCollectionChanged
  nameWithType: ObservableEnumerable<T>.OnCollectionChanged
  nameWithType.vb: ObservableEnumerable(Of T).OnCollectionChanged
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnDetach
  name: OnDetach()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnDetach
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnDetach
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnDetach()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnDetach()
  nameWithType: ObservableEnumerable<T>.OnDetach()
  nameWithType.vb: ObservableEnumerable(Of T).OnDetach()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnDetach*
  name: OnDetach
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnDetach_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnDetach
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnDetach
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnDetach
  nameWithType: ObservableEnumerable<T>.OnDetach
  nameWithType.vb: ObservableEnumerable(Of T).OnDetach
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItem(`0,System.Int32,System.Int32)
  name: OnMoveItem(T, Int32, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnMoveItem__0_System_Int32_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItem(`0,System.Int32,System.Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnMoveItem(T, System.Int32, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnMoveItem(T, System.Int32, System.Int32)
  nameWithType: ObservableEnumerable<T>.OnMoveItem(T, Int32, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnMoveItem(T, Int32, Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItem*
  name: OnMoveItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnMoveItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnMoveItem
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnMoveItem
  nameWithType: ObservableEnumerable<T>.OnMoveItem
  nameWithType.vb: ObservableEnumerable(Of T).OnMoveItem
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItems(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32)
  name: OnMoveItems(IEnumerable<T>, Int32, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnMoveItems_System_Collections_Generic_IEnumerable__0__System_Int32_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItems(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32)
  name.vb: OnMoveItems(IEnumerable(Of T), Int32, Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnMoveItems(System.Collections.Generic.IEnumerable<T>, System.Int32, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnMoveItems(System.Collections.Generic.IEnumerable(Of T), System.Int32, System.Int32)
  nameWithType: ObservableEnumerable<T>.OnMoveItems(IEnumerable<T>, Int32, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnMoveItems(IEnumerable(Of T), Int32, Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItems*
  name: OnMoveItems
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnMoveItems_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnMoveItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnMoveItems
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnMoveItems
  nameWithType: ObservableEnumerable<T>.OnMoveItems
  nameWithType.vb: ObservableEnumerable(Of T).OnMoveItems
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItem(`0,System.Int32)
  name: OnRemoveItem(T, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnRemoveItem__0_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItem(`0,System.Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnRemoveItem(T, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnRemoveItem(T, System.Int32)
  nameWithType: ObservableEnumerable<T>.OnRemoveItem(T, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnRemoveItem(T, Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItem*
  name: OnRemoveItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnRemoveItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnRemoveItem
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnRemoveItem
  nameWithType: ObservableEnumerable<T>.OnRemoveItem
  nameWithType.vb: ObservableEnumerable(Of T).OnRemoveItem
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItems(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name: OnRemoveItems(IEnumerable<T>, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnRemoveItems_System_Collections_Generic_IEnumerable__0__System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItems(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name.vb: OnRemoveItems(IEnumerable(Of T), Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnRemoveItems(System.Collections.Generic.IEnumerable<T>, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnRemoveItems(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  nameWithType: ObservableEnumerable<T>.OnRemoveItems(IEnumerable<T>, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnRemoveItems(IEnumerable(Of T), Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItems*
  name: OnRemoveItems
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnRemoveItems_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnRemoveItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnRemoveItems
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnRemoveItems
  nameWithType: ObservableEnumerable<T>.OnRemoveItems
  nameWithType.vb: ObservableEnumerable(Of T).OnRemoveItems
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnReplaceItems(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0},System.Int32)
  name: OnReplaceItems(IEnumerable<T>, IEnumerable<T>, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnReplaceItems_System_Collections_Generic_IEnumerable__0__System_Collections_Generic_IEnumerable__0__System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnReplaceItems(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0},System.Int32)
  name.vb: OnReplaceItems(IEnumerable(Of T), IEnumerable(Of T), Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnReplaceItems(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnReplaceItems(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Int32)
  nameWithType: ObservableEnumerable<T>.OnReplaceItems(IEnumerable<T>, IEnumerable<T>, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnReplaceItems(IEnumerable(Of T), IEnumerable(Of T), Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnReplaceItems*
  name: OnReplaceItems
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnReplaceItems_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnReplaceItems
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnReplaceItems
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnReplaceItems
  nameWithType: ObservableEnumerable<T>.OnReplaceItems
  nameWithType.vb: ObservableEnumerable(Of T).OnReplaceItems
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnUpdateItem(`0,`0,System.Int32)
  name: OnUpdateItem(T, T, Int32)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnUpdateItem__0__0_System_Int32_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.OnUpdateItem(`0,`0,System.Int32)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnUpdateItem(T, T, System.Int32)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnUpdateItem(T, T, System.Int32)
  nameWithType: ObservableEnumerable<T>.OnUpdateItem(T, T, Int32)
  nameWithType.vb: ObservableEnumerable(Of T).OnUpdateItem(T, T, Int32)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.OnUpdateItem*
  name: OnUpdateItem
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_OnUpdateItem_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.OnUpdateItem
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.OnUpdateItem
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).OnUpdateItem
  nameWithType: ObservableEnumerable<T>.OnUpdateItem
  nameWithType.vb: ObservableEnumerable(Of T).OnUpdateItem
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Successors
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.Successors
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Successors
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Successors
  nameWithType: ObservableEnumerable<T>.Successors
  nameWithType.vb: ObservableEnumerable(Of T).Successors
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_Successors_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.Successors
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).Successors
  nameWithType: ObservableEnumerable<T>.Successors
  nameWithType.vb: ObservableEnumerable(Of T).Successors
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Add__0_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Add(T)
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Add(T)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Add*
  name: ICollection<T>.Add
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Add_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Add
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Add
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Add
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Add
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Add
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Clear
  name: ICollection<T>.Clear()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Clear
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Clear
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Clear()
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Clear()
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Clear()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Clear*
  name: ICollection<T>.Clear
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Clear_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Clear
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Clear
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Clear
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Clear
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Clear
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Clear
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<T>.IsReadOnly
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__IsReadOnly
  commentId: P:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ObservableEnumerable<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#IsReadOnly*
  name: ICollection<T>.IsReadOnly
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__IsReadOnly_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ObservableEnumerable<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name: ICollection<T>.Remove(T)
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Remove__0_
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Remove(T)
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Remove*
  name: ICollection<T>.Remove
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_Generic_ICollection_T__Remove_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#Generic#ICollection{T}#Remove
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Remove
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.Generic.ICollection<T>.Remove
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Remove
  nameWithType: ObservableEnumerable<T>.ICollection<T>.Remove
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.Generic.ICollection<T>.Remove
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObservableEnumerable<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.Linq.ObservableEnumerable-1.html#NMF_Expressions_Linq_ObservableEnumerable_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.Linq.ObservableEnumerable`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.Linq.ObservableEnumerable<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Expressions.Linq.ObservableEnumerable(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObservableEnumerable<T>.IEnumerable.GetEnumerator
  nameWithType.vb: ObservableEnumerable(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.Linq.ObservableExtensions
  name: ObservableExtensions
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html
  commentId: T:NMF.Expressions.Linq.ObservableExtensions
  fullName: NMF.Expressions.Linq.ObservableExtensions
  nameWithType: ObservableExtensions
- uid: NMF.Expressions.Linq.ObservableExtensions.All*
  name: All
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_All_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.All
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.All
  nameWithType: ObservableExtensions.All
- uid: NMF.Expressions.Linq.ObservableExtensions.All``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: All<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_All__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.All``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: All(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.All<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.All(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ObservableExtensions.All<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ObservableExtensions.All(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Any*
  name: Any
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Any_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Any
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Any
  nameWithType: ObservableExtensions.Any
- uid: NMF.Expressions.Linq.ObservableExtensions.Any``1(NMF.Expressions.INotifyEnumerable{``0})
  name: Any<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Any__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Any``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: Any(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Any<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Any(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Any<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Any(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Any``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Any<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Any__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Any``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Any(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Any<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Any(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ObservableExtensions.Any<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ObservableExtensions.Any(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Decimal})
  name: Average(INotifyEnumerable<Decimal>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Decimal__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Decimal})
  name.vb: Average(INotifyEnumerable(Of Decimal))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Decimal>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Decimal))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Decimal>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Decimal))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Double})
  name: Average(INotifyEnumerable<Double>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Double__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Double})
  name.vb: Average(INotifyEnumerable(Of Double))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Double>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Double))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Double>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Double))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Int32})
  name: Average(INotifyEnumerable<Int32>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Int32__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Int32})
  name.vb: Average(INotifyEnumerable(Of Int32))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Int32>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Int32))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Int32>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Int32))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Int64})
  name: Average(INotifyEnumerable<Int64>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Int64__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Int64})
  name.vb: Average(INotifyEnumerable(Of Int64))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Int64>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Int64))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Int64>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Int64))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Decimal}})
  name: Average(INotifyEnumerable<Nullable<Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Decimal}})
  name.vb: Average(INotifyEnumerable(Of Nullable(Of Decimal)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Decimal)))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Nullable<Decimal>>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Nullable(Of Decimal)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Double}})
  name: Average(INotifyEnumerable<Nullable<Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Double___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Double}})
  name.vb: Average(INotifyEnumerable(Of Nullable(Of Double)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Double)))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Nullable<Double>>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Nullable(Of Double)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int32}})
  name: Average(INotifyEnumerable<Nullable<Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Int32___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int32}})
  name.vb: Average(INotifyEnumerable(Of Nullable(Of Int32)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Int32)))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Nullable<Int32>>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Nullable(Of Int32)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int64}})
  name: Average(INotifyEnumerable<Nullable<Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Int64___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int64}})
  name.vb: Average(INotifyEnumerable(Of Nullable(Of Int64)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Int64)))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Nullable<Int64>>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Nullable(Of Int64)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Single}})
  name: Average(INotifyEnumerable<Nullable<Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Single___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Single}})
  name.vb: Average(INotifyEnumerable(Of Nullable(Of Single)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Single)))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Nullable<Single>>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Nullable(Of Single)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Single})
  name: Average(INotifyEnumerable<Single>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_NMF_Expressions_INotifyEnumerable_System_Single__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable{System.Single})
  name.vb: Average(INotifyEnumerable(Of Single))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable<System.Single>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(NMF.Expressions.INotifyEnumerable(Of System.Single))
  nameWithType: ObservableExtensions.Average(INotifyEnumerable<Single>)
  nameWithType.vb: ObservableExtensions.Average(INotifyEnumerable(Of Single))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average*
  name: Average
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Average
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average
  nameWithType: ObservableExtensions.Average
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Decimal)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Decimal>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Decimal)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Double___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Double)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Double>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Double)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Int32___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int32)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int32>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int32)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Int64___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int64)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int64>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int64)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Decimal____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Double____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int32____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int64____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Single____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name: Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Average__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Single___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Average``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name.vb: Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Single)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Average<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Average(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)))
  nameWithType: ObservableExtensions.Average<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Single>>)
  nameWithType.vb: ObservableExtensions.Average(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Single)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Cast*
  name: Cast
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Cast_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Cast
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Cast
  nameWithType: ObservableExtensions.Cast
- uid: NMF.Expressions.Linq.ObservableExtensions.Cast``1(NMF.Expressions.INotifyEnumerable)
  name: Cast<TResult>(INotifyEnumerable)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Cast__1_NMF_Expressions_INotifyEnumerable_
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Cast``1(NMF.Expressions.INotifyEnumerable)
  name.vb: Cast(Of TResult)(INotifyEnumerable)
  fullName: NMF.Expressions.Linq.ObservableExtensions.Cast<TResult>(NMF.Expressions.INotifyEnumerable)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Cast(Of TResult)(NMF.Expressions.INotifyEnumerable)
  nameWithType: ObservableExtensions.Cast<TResult>(INotifyEnumerable)
  nameWithType.vb: ObservableExtensions.Cast(Of TResult)(INotifyEnumerable)
- uid: NMF.Expressions.Linq.ObservableExtensions.Concat*
  name: Concat
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Concat_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Concat
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Concat
  nameWithType: ObservableExtensions.Concat
- uid: NMF.Expressions.Linq.ObservableExtensions.Concat``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Concat<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Concat__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Concat``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Concat(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Concat<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Concat(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Concat<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Concat(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Contains*
  name: Contains
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Contains_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Contains
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Contains
  nameWithType: ObservableExtensions.Contains
- uid: NMF.Expressions.Linq.ObservableExtensions.Contains``1(NMF.Expressions.INotifyEnumerable{``0},``0)
  name: Contains<TSource>(INotifyEnumerable<TSource>, TSource)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Contains__1_NMF_Expressions_INotifyEnumerable___0____0_
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Contains``1(NMF.Expressions.INotifyEnumerable{``0},``0)
  name.vb: Contains(Of TSource)(INotifyEnumerable(Of TSource), TSource)
  fullName: NMF.Expressions.Linq.ObservableExtensions.Contains<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, TSource)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Contains(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), TSource)
  nameWithType: ObservableExtensions.Contains<TSource>(INotifyEnumerable<TSource>, TSource)
  nameWithType.vb: ObservableExtensions.Contains(Of TSource)(INotifyEnumerable(Of TSource), TSource)
- uid: NMF.Expressions.Linq.ObservableExtensions.Contains``1(NMF.Expressions.INotifyEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: Contains<TSource>(INotifyEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Contains__1_NMF_Expressions_INotifyEnumerable___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Contains``1(NMF.Expressions.INotifyEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Contains(Of TSource)(INotifyEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Contains<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Contains(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ObservableExtensions.Contains<TSource>(INotifyEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Contains(Of TSource)(INotifyEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Count_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Count
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Count
  nameWithType: ObservableExtensions.Count
- uid: NMF.Expressions.Linq.ObservableExtensions.Count``1(NMF.Expressions.INotifyEnumerable{``0})
  name: Count<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Count__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Count``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: Count(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Count<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Count(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Count<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Count(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Count``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Count<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Count__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Count``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Count(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Count<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Count(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ObservableExtensions.Count<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ObservableExtensions.Count(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Distinct*
  name: Distinct
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Distinct_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Distinct
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Distinct
  nameWithType: ObservableExtensions.Distinct
- uid: NMF.Expressions.Linq.ObservableExtensions.Distinct``1(NMF.Expressions.INotifyEnumerable{``0})
  name: Distinct<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Distinct__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Distinct``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: Distinct(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Distinct<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Distinct(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Distinct<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Distinct(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Distinct``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Distinct<TSource>(INotifyEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Distinct__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Distinct``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Distinct(Of TSource)(INotifyEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Distinct<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Distinct(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ObservableExtensions.Distinct<TSource>(INotifyEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Distinct(Of TSource)(INotifyEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Except*
  name: Except
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Except_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Except
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Except
  nameWithType: ObservableExtensions.Except
- uid: NMF.Expressions.Linq.ObservableExtensions.Except``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Except<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Except__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Except``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Except(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Except<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Except(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Except<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Except(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Except``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Except<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Except__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Except``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Except(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Except<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Except(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ObservableExtensions.Except<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Except(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault*
  name: FirstOrDefault
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_FirstOrDefault_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault
  nameWithType: ObservableExtensions.FirstOrDefault
- uid: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault``1(NMF.Expressions.INotifyEnumerable{``0})
  name: FirstOrDefault<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_FirstOrDefault__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: FirstOrDefault(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.FirstOrDefault<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.FirstOrDefault(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: FirstOrDefault<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_FirstOrDefault__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: FirstOrDefault(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.FirstOrDefault(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ObservableExtensions.FirstOrDefault<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ObservableExtensions.FirstOrDefault(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupBy*
  name: GroupBy
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupBy_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.GroupBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupBy
  nameWithType: ObservableExtensions.GroupBy
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: GroupBy<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupBy__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: GroupBy(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupBy<TSource, TKey>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupBy(Of TSource, TKey)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)))
  nameWithType: ObservableExtensions.GroupBy<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>)
  nameWithType.vb: ObservableExtensions.GroupBy(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupBy__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IEqualityComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: GroupBy(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupBy<TSource, TKey>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupBy(Of TSource, TKey)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ObservableExtensions.GroupBy<TSource, TKey>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, IEqualityComparer<TKey>)
  nameWithType.vb: ObservableExtensions.GroupBy(Of TSource, TKey)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupBy``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  name: GroupBy<TSource, TKey, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupBy__3_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___1_System_Collections_Generic_IEnumerable___0____2___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupBy``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  name.vb: GroupBy(Of TSource, TKey, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupBy<TSource, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupBy(Of TSource, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult)))
  nameWithType: ObservableExtensions.GroupBy<TSource, TKey, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>)
  nameWithType.vb: ObservableExtensions.GroupBy(Of TSource, TKey, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupBy``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<TSource, TKey, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupBy__3_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___1_System_Collections_Generic_IEnumerable___0____2___System_Collections_Generic_IEqualityComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupBy``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: GroupBy(Of TSource, TKey, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupBy<TSource, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TKey>>, System.Linq.Expressions.Expression<System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupBy(Of TSource, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ObservableExtensions.GroupBy<TSource, TKey, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TKey>>, Expression<Func<TKey, IEnumerable<TSource>, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ObservableExtensions.GroupBy(Of TSource, TKey, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TKey)), Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupJoin*
  name: GroupJoin
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupJoin_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.GroupJoin
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupJoin
  nameWithType: ObservableExtensions.GroupJoin
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupJoin``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  name: GroupJoin<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupJoin__4_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____3___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupJoin``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult)))
  nameWithType: ObservableExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>)
  nameWithType.vb: ObservableExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.GroupJoin``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  name: GroupJoin<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_GroupJoin__4_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____3___System_Collections_Generic_IEqualityComparer___2__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.GroupJoin``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ObservableExtensions.GroupJoin<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, IEnumerable<TInner>, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ObservableExtensions.GroupJoin(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.Intersect*
  name: Intersect
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Intersect_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Intersect
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Intersect
  nameWithType: ObservableExtensions.Intersect
- uid: NMF.Expressions.Linq.ObservableExtensions.Intersect``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Intersect<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Intersect__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Intersect``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Intersect(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Intersect<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Intersect(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Intersect<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Intersect(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Intersect``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Intersect<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Intersect__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Intersect``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Intersect(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Intersect<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Intersect(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ObservableExtensions.Intersect<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Intersect(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSubsetOf_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf
  nameWithType: ObservableExtensions.IsProperSubsetOf
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsProperSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSubsetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsProperSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.IsProperSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.IsProperSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsProperSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSubsetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsProperSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsProperSubsetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ObservableExtensions.IsProperSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ObservableExtensions.IsProperSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSupersetOf_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf
  nameWithType: ObservableExtensions.IsProperSupersetOf
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsProperSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSupersetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsProperSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.IsProperSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.IsProperSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsProperSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsProperSupersetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsProperSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsProperSupersetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ObservableExtensions.IsProperSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ObservableExtensions.IsProperSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSubsetOf_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf
  nameWithType: ObservableExtensions.IsSubsetOf
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSubsetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.IsSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.IsSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSubsetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsSubsetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ObservableExtensions.IsSubsetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ObservableExtensions.IsSubsetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSupersetOf_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf
  nameWithType: ObservableExtensions.IsSupersetOf
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSupersetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.IsSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.IsSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_IsSupersetOf__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.IsSupersetOf(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ObservableExtensions.IsSupersetOf<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ObservableExtensions.IsSupersetOf(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.Join*
  name: Join
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Join_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Join
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Join
  nameWithType: ObservableExtensions.Join
- uid: NMF.Expressions.Linq.ObservableExtensions.Join``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  name: Join<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Join__4_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0___1___3___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Join``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Join<TOuter, TInner, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, TInner, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Join(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TInner, TResult)))
  nameWithType: ObservableExtensions.Join<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>)
  nameWithType.vb: ObservableExtensions.Join(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Join``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  name: Join<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>, IEqualityComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Join__4_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___1__System_Linq_Expressions_Expression_System_Func___0___2___System_Linq_Expressions_Expression_System_Func___1___2___System_Linq_Expressions_Expression_System_Func___0___1___3___System_Collections_Generic_IEqualityComparer___2__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Join``4(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)), IEqualityComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Join<TOuter, TInner, TKey, TResult>(NMF.Expressions.INotifyEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Linq.Expressions.Expression<System.Func<TOuter, TKey>>, System.Linq.Expressions.Expression<System.Func<TInner, TKey>>, System.Linq.Expressions.Expression<System.Func<TOuter, TInner, TResult>>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Join(Of TOuter, TInner, TKey, TResult)(NMF.Expressions.INotifyEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TInner, TKey)), System.Linq.Expressions.Expression(Of System.Func(Of TOuter, TInner, TResult)), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: ObservableExtensions.Join<TOuter, TInner, TKey, TResult>(INotifyEnumerable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter, TKey>>, Expression<Func<TInner, TKey>>, Expression<Func<TOuter, TInner, TResult>>, IEqualityComparer<TKey>)
  nameWithType.vb: ObservableExtensions.Join(Of TOuter, TInner, TKey, TResult)(INotifyEnumerable(Of TOuter), IEnumerable(Of TInner), Expression(Of Func(Of TOuter, TKey)), Expression(Of Func(Of TInner, TKey)), Expression(Of Func(Of TOuter, TInner, TResult)), IEqualityComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.KeepOrder
  name: KeepOrder
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_KeepOrder
  commentId: P:NMF.Expressions.Linq.ObservableExtensions.KeepOrder
  fullName: NMF.Expressions.Linq.ObservableExtensions.KeepOrder
  nameWithType: ObservableExtensions.KeepOrder
- uid: NMF.Expressions.Linq.ObservableExtensions.KeepOrder*
  name: KeepOrder
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_KeepOrder_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.KeepOrder
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.KeepOrder
  nameWithType: ObservableExtensions.KeepOrder
- uid: NMF.Expressions.Linq.ObservableExtensions.Max*
  name: Max
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Max
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max
  nameWithType: ObservableExtensions.Max
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{``0})
  name: Max<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: Max(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Max<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: Max<TSource>(INotifyEnumerable<TSource>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Max(Of TSource)(INotifyEnumerable(Of TSource), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ObservableExtensions.Max<TSource>(INotifyEnumerable<TSource>, IComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource)(INotifyEnumerable(Of TSource), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}})
  name: Max<TSource>(INotifyEnumerable<Nullable<TSource>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__1_NMF_Expressions_INotifyEnumerable_System_Nullable___0___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}})
  name.vb: Max(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource>(NMF.Expressions.INotifyEnumerable<System.Nullable<TSource>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource)(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of TSource)))
  nameWithType: ObservableExtensions.Max<TSource>(INotifyEnumerable<Nullable<TSource>>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name: Max<TSource>(INotifyEnumerable<Nullable<TSource>>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__1_NMF_Expressions_INotifyEnumerable_System_Nullable___0___System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name.vb: Max(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource>(NMF.Expressions.INotifyEnumerable<System.Nullable<TSource>>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource)(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of TSource)), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ObservableExtensions.Max<TSource>(INotifyEnumerable<Nullable<TSource>>, IComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ObservableExtensions.Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ObservableExtensions.Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name: Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name.vb: Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))))
  nameWithType: ObservableExtensions.Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name: Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Max__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Max``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name.vb: Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Max<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Max(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ObservableExtensions.Max<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  nameWithType.vb: ObservableExtensions.Max(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min*
  name: Min
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Min
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min
  nameWithType: ObservableExtensions.Min
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{``0})
  name: Min<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: Min(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Min<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: Min<TSource>(INotifyEnumerable<TSource>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Min(Of TSource)(INotifyEnumerable(Of TSource), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ObservableExtensions.Min<TSource>(INotifyEnumerable<TSource>, IComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource)(INotifyEnumerable(Of TSource), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}})
  name: Min<TSource>(INotifyEnumerable<Nullable<TSource>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__1_NMF_Expressions_INotifyEnumerable_System_Nullable___0___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}})
  name.vb: Min(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource>(NMF.Expressions.INotifyEnumerable<System.Nullable<TSource>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource)(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of TSource)))
  nameWithType: ObservableExtensions.Min<TSource>(INotifyEnumerable<Nullable<TSource>>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name: Min<TSource>(INotifyEnumerable<Nullable<TSource>>, IComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__1_NMF_Expressions_INotifyEnumerable_System_Nullable___0___System_Collections_Generic_IComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``1(NMF.Expressions.INotifyEnumerable{System.Nullable{``0}},System.Collections.Generic.IComparer{``0})
  name.vb: Min(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)), IComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource>(NMF.Expressions.INotifyEnumerable<System.Nullable<TSource>>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource)(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of TSource)), System.Collections.Generic.IComparer(Of TSource))
  nameWithType: ObservableExtensions.Min<TSource>(INotifyEnumerable<Nullable<TSource>>, IComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource)(INotifyEnumerable(Of Nullable(Of TSource)), IComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ObservableExtensions.Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ObservableExtensions.Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>, IComparer<TResult>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name: Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}})
  name.vb: Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))))
  nameWithType: ObservableExtensions.Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name: Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Min__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable___1____System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Min``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{``1}}},System.Collections.Generic.IComparer{``1})
  name.vb: Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Min<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<TResult>>>, System.Collections.Generic.IComparer<TResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Min(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of TResult))), System.Collections.Generic.IComparer(Of TResult))
  nameWithType: ObservableExtensions.Min<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<TResult>>>, IComparer<TResult>)
  nameWithType.vb: ObservableExtensions.Min(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of TResult))), IComparer(Of TResult))
- uid: NMF.Expressions.Linq.ObservableExtensions.OfType*
  name: OfType
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OfType_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.OfType
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.OfType
  nameWithType: ObservableExtensions.OfType
- uid: NMF.Expressions.Linq.ObservableExtensions.OfType``1(NMF.Expressions.INotifyEnumerable)
  name: OfType<TResult>(INotifyEnumerable)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OfType__1_NMF_Expressions_INotifyEnumerable_
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OfType``1(NMF.Expressions.INotifyEnumerable)
  name.vb: OfType(Of TResult)(INotifyEnumerable)
  fullName: NMF.Expressions.Linq.ObservableExtensions.OfType<TResult>(NMF.Expressions.INotifyEnumerable)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OfType(Of TResult)(NMF.Expressions.INotifyEnumerable)
  nameWithType: ObservableExtensions.OfType<TResult>(INotifyEnumerable)
  nameWithType.vb: ObservableExtensions.OfType(Of TResult)(INotifyEnumerable)
- uid: NMF.Expressions.Linq.ObservableExtensions.OfType``2(NMF.Expressions.INotifyCollection{``0})
  name: OfType<TSource, TResult>(INotifyCollection<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OfType__2_NMF_Expressions_INotifyCollection___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OfType``2(NMF.Expressions.INotifyCollection{``0})
  name.vb: OfType(Of TSource, TResult)(INotifyCollection(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.OfType<TSource, TResult>(NMF.Expressions.INotifyCollection<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OfType(Of TSource, TResult)(NMF.Expressions.INotifyCollection(Of TSource))
  nameWithType: ObservableExtensions.OfType<TSource, TResult>(INotifyCollection<TSource>)
  nameWithType.vb: ObservableExtensions.OfType(Of TSource, TResult)(INotifyCollection(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderBy*
  name: OrderBy
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderBy_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.OrderBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderBy
  nameWithType: ObservableExtensions.OrderBy
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderBy<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderBy__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OrderBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderBy(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderBy<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OrderBy(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ObservableExtensions.OrderBy<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ObservableExtensions.OrderBy(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: OrderBy<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderBy__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OrderBy``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: OrderBy(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderBy<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OrderBy(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ObservableExtensions.OrderBy<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ObservableExtensions.OrderBy(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending*
  name: OrderByDescending
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderByDescending_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.OrderByDescending
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending
  nameWithType: ObservableExtensions.OrderByDescending
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: OrderByDescending<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderByDescending__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OrderByDescending``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: OrderByDescending(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ObservableExtensions.OrderByDescending<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ObservableExtensions.OrderByDescending(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: OrderByDescending<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_OrderByDescending__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.OrderByDescending``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: OrderByDescending(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.OrderByDescending(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ObservableExtensions.OrderByDescending<TItem, TKey>(INotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ObservableExtensions.OrderByDescending(Of TItem, TKey)(INotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.Select*
  name: Select
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Select_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Select
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Select
  nameWithType: ObservableExtensions.Select
- uid: NMF.Expressions.Linq.ObservableExtensions.Select``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Select<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Select__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Select``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Select(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Select<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Select(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)))
  nameWithType: ObservableExtensions.Select<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, TResult>>)
  nameWithType.vb: ObservableExtensions.Select(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.SelectMany*
  name: SelectMany
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SelectMany_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.SelectMany
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.SelectMany
  nameWithType: ObservableExtensions.SelectMany
- uid: NMF.Expressions.Linq.ObservableExtensions.SelectMany``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name: SelectMany<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SelectMany__2_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SelectMany``2(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  name.vb: SelectMany(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SelectMany<TSource, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SelectMany(Of TSource, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult))))
  nameWithType: ObservableExtensions.SelectMany<TSource, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, IEnumerable<TResult>>>)
  nameWithType.vb: ObservableExtensions.SelectMany(Of TSource, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TResult))))
- uid: NMF.Expressions.Linq.ObservableExtensions.SelectMany``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name: SelectMany<TSource, TIntermediate, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, IEnumerable<TIntermediate>>>, Expression<Func<TSource, TIntermediate, TResult>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SelectMany__3_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Collections_Generic_IEnumerable___1____System_Linq_Expressions_Expression_System_Func___0___1___2___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SelectMany``3(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name.vb: SelectMany(Of TSource, TIntermediate, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TIntermediate))), Expression(Of Func(Of TSource, TIntermediate, TResult)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SelectMany<TSource, TIntermediate, TResult>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Collections.Generic.IEnumerable<TIntermediate>>>, System.Linq.Expressions.Expression<System.Func<TSource, TIntermediate, TResult>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SelectMany(Of TSource, TIntermediate, TResult)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TIntermediate))), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TIntermediate, TResult)))
  nameWithType: ObservableExtensions.SelectMany<TSource, TIntermediate, TResult>(INotifyEnumerable<TSource>, Expression<Func<TSource, IEnumerable<TIntermediate>>>, Expression<Func<TSource, TIntermediate, TResult>>)
  nameWithType.vb: ObservableExtensions.SelectMany(Of TSource, TIntermediate, TResult)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, IEnumerable(Of TIntermediate))), Expression(Of Func(Of TSource, TIntermediate, TResult)))
- uid: NMF.Expressions.Linq.ObservableExtensions.SetEquals*
  name: SetEquals
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SetEquals_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.SetEquals
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.SetEquals
  nameWithType: ObservableExtensions.SetEquals
- uid: NMF.Expressions.Linq.ObservableExtensions.SetEquals``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetEquals<T>(INotifyEnumerable<T>, IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SetEquals__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SetEquals``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetEquals(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SetEquals<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SetEquals(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.SetEquals<T>(INotifyEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.SetEquals(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.SetEquals``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetEquals<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SetEquals__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SetEquals``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetEquals(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SetEquals<T>(NMF.Expressions.INotifyEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SetEquals(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: ObservableExtensions.SetEquals<T>(INotifyEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: ObservableExtensions.SetEquals(Of T)(INotifyEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault*
  name: SingleOrDefault
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SingleOrDefault_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault
  nameWithType: ObservableExtensions.SingleOrDefault
- uid: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault``1(NMF.Expressions.INotifyEnumerable{``0})
  name: SingleOrDefault<TSource>(INotifyEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SingleOrDefault__1_NMF_Expressions_INotifyEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault``1(NMF.Expressions.INotifyEnumerable{``0})
  name.vb: SingleOrDefault(Of TSource)(INotifyEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault<TSource>(NMF.Expressions.INotifyEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource))
  nameWithType: ObservableExtensions.SingleOrDefault<TSource>(INotifyEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.SingleOrDefault(Of TSource)(INotifyEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: SingleOrDefault<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_SingleOrDefault__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: SingleOrDefault(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.SingleOrDefault(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)))
  nameWithType: ObservableExtensions.SingleOrDefault<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Boolean>>)
  nameWithType.vb: ObservableExtensions.SingleOrDefault(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Decimal})
  name: Sum(INotifyEnumerable<Decimal>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Decimal__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Decimal})
  name.vb: Sum(INotifyEnumerable(Of Decimal))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Decimal>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Decimal))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Decimal>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Decimal))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Double})
  name: Sum(INotifyEnumerable<Double>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Double__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Double})
  name.vb: Sum(INotifyEnumerable(Of Double))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Double>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Double))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Double>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Double))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Int32})
  name: Sum(INotifyEnumerable<Int32>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Int32__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Int32})
  name.vb: Sum(INotifyEnumerable(Of Int32))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Int32>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Int32))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Int32>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Int32))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Int64})
  name: Sum(INotifyEnumerable<Int64>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Int64__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Int64})
  name.vb: Sum(INotifyEnumerable(Of Int64))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Int64>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Int64))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Int64>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Int64))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Decimal}})
  name: Sum(INotifyEnumerable<Nullable<Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Decimal}})
  name.vb: Sum(INotifyEnumerable(Of Nullable(Of Decimal)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Decimal)))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Nullable<Decimal>>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Nullable(Of Decimal)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Double}})
  name: Sum(INotifyEnumerable<Nullable<Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Double___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Double}})
  name.vb: Sum(INotifyEnumerable(Of Nullable(Of Double)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Double)))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Nullable<Double>>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Nullable(Of Double)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int32}})
  name: Sum(INotifyEnumerable<Nullable<Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Int32___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int32}})
  name.vb: Sum(INotifyEnumerable(Of Nullable(Of Int32)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Int32)))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Nullable<Int32>>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Nullable(Of Int32)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int64}})
  name: Sum(INotifyEnumerable<Nullable<Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Int64___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Int64}})
  name.vb: Sum(INotifyEnumerable(Of Nullable(Of Int64)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Int64)))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Nullable<Int64>>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Nullable(Of Int64)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Single}})
  name: Sum(INotifyEnumerable<Nullable<Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Nullable_System_Single___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Nullable{System.Single}})
  name.vb: Sum(INotifyEnumerable(Of Nullable(Of Single)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Nullable<System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Nullable(Of System.Single)))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Nullable<Single>>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Nullable(Of Single)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Single})
  name: Sum(INotifyEnumerable<Single>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_NMF_Expressions_INotifyEnumerable_System_Single__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable{System.Single})
  name.vb: Sum(INotifyEnumerable(Of Single))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable<System.Single>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(NMF.Expressions.INotifyEnumerable(Of System.Single))
  nameWithType: ObservableExtensions.Sum(INotifyEnumerable<Single>)
  nameWithType.vb: ObservableExtensions.Sum(INotifyEnumerable(Of Single))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum*
  name: Sum
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Sum
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum
  nameWithType: ObservableExtensions.Sum
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Decimal>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Decimal___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Decimal)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Decimal>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Decimal)))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Decimal>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Decimal)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Double>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Double___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Double)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Double>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Double)))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Double>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Double)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int32>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Int32___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int32)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int32>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int32)))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int32>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int32)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int64>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Int64___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int64)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Int64>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Int64)))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Int64>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Int64)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Decimal____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Decimal>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Decimal))))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Decimal>>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Decimal))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Double____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Double>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Double))))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Double>>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Double))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int32____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int32>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int32))))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int32>>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int32))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Int64____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Int64>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Int64))))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Int64>>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Int64))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Nullable_System_Single____
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Nullable<System.Single>>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Nullable(Of System.Single))))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Nullable<Single>>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Nullable(Of Single))))
- uid: NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name: Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Single>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Sum__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Single___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Sum``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  name.vb: Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Single)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Sum<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Single>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Sum(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Single)))
  nameWithType: ObservableExtensions.Sum<TSource>(INotifyEnumerable<TSource>, Expression<Func<TSource, Single>>)
  nameWithType.vb: ObservableExtensions.Sum(Of TSource)(INotifyEnumerable(Of TSource), Expression(Of Func(Of TSource, Single)))
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenBy*
  name: ThenBy
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenBy_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.ThenBy
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenBy
  nameWithType: ObservableExtensions.ThenBy
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenBy``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenBy<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenBy__2_NMF_Expressions_IOrderableNotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.ThenBy``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenBy(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenBy<TItem, TKey>(NMF.Expressions.IOrderableNotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.ThenBy(Of TItem, TKey)(NMF.Expressions.IOrderableNotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ObservableExtensions.ThenBy<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ObservableExtensions.ThenBy(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenBy``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: ThenBy<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenBy__2_NMF_Expressions_IOrderableNotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.ThenBy``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: ThenBy(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenBy<TItem, TKey>(NMF.Expressions.IOrderableNotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.ThenBy(Of TItem, TKey)(NMF.Expressions.IOrderableNotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ObservableExtensions.ThenBy<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ObservableExtensions.ThenBy(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending*
  name: ThenByDescending
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenByDescending_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.ThenByDescending
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending
  nameWithType: ObservableExtensions.ThenByDescending
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: ThenByDescending<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenByDescending__2_NMF_Expressions_IOrderableNotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.ThenByDescending``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: ThenByDescending(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending<TItem, TKey>(NMF.Expressions.IOrderableNotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending(Of TItem, TKey)(NMF.Expressions.IOrderableNotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ObservableExtensions.ThenByDescending<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ObservableExtensions.ThenByDescending(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: ThenByDescending<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_ThenByDescending__2_NMF_Expressions_IOrderableNotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.ThenByDescending``2(NMF.Expressions.IOrderableNotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: ThenByDescending(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending<TItem, TKey>(NMF.Expressions.IOrderableNotifyEnumerable<TItem>, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.ThenByDescending(Of TItem, TKey)(NMF.Expressions.IOrderableNotifyEnumerable(Of TItem), System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ObservableExtensions.ThenByDescending<TItem, TKey>(IOrderableNotifyEnumerable<TItem>, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ObservableExtensions.ThenByDescending(Of TItem, TKey)(IOrderableNotifyEnumerable(Of TItem), Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.TopX*
  name: TopX
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_TopX_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.TopX
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.TopX
  nameWithType: ObservableExtensions.TopX
- uid: NMF.Expressions.Linq.ObservableExtensions.TopX``2(NMF.Expressions.INotifyEnumerable{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: TopX<TItem, TKey>(INotifyEnumerable<TItem>, Int32, Expression<Func<TItem, TKey>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_TopX__2_NMF_Expressions_INotifyEnumerable___0__System_Int32_System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.TopX``2(NMF.Expressions.INotifyEnumerable{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: TopX(Of TItem, TKey)(INotifyEnumerable(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.TopX<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Int32, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.TopX(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Int32, System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)))
  nameWithType: ObservableExtensions.TopX<TItem, TKey>(INotifyEnumerable<TItem>, Int32, Expression<Func<TItem, TKey>>)
  nameWithType.vb: ObservableExtensions.TopX(Of TItem, TKey)(INotifyEnumerable(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)))
- uid: NMF.Expressions.Linq.ObservableExtensions.TopX``2(NMF.Expressions.INotifyEnumerable{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name: TopX<TItem, TKey>(INotifyEnumerable<TItem>, Int32, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_TopX__2_NMF_Expressions_INotifyEnumerable___0__System_Int32_System_Linq_Expressions_Expression_System_Func___0___1___System_Collections_Generic_IComparer___1__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.TopX``2(NMF.Expressions.INotifyEnumerable{``0},System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  name.vb: TopX(Of TItem, TKey)(INotifyEnumerable(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
  fullName: NMF.Expressions.Linq.ObservableExtensions.TopX<TItem, TKey>(NMF.Expressions.INotifyEnumerable<TItem>, System.Int32, System.Linq.Expressions.Expression<System.Func<TItem, TKey>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.TopX(Of TItem, TKey)(NMF.Expressions.INotifyEnumerable(Of TItem), System.Int32, System.Linq.Expressions.Expression(Of System.Func(Of TItem, TKey)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: ObservableExtensions.TopX<TItem, TKey>(INotifyEnumerable<TItem>, Int32, Expression<Func<TItem, TKey>>, IComparer<TKey>)
  nameWithType.vb: ObservableExtensions.TopX(Of TItem, TKey)(INotifyEnumerable(Of TItem), Int32, Expression(Of Func(Of TItem, TKey)), IComparer(Of TKey))
- uid: NMF.Expressions.Linq.ObservableExtensions.Union*
  name: Union
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Union_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Union
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Union
  nameWithType: ObservableExtensions.Union
- uid: NMF.Expressions.Linq.ObservableExtensions.Union``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Union<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Union__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Union``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Union(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Union<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Union(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: ObservableExtensions.Union<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: ObservableExtensions.Union(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Union``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Union<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Union__1_NMF_Expressions_INotifyEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Union``1(NMF.Expressions.INotifyEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Union(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Union<TSource>(NMF.Expressions.INotifyEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Union(Of TSource)(NMF.Expressions.INotifyEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  nameWithType: ObservableExtensions.Union<TSource>(INotifyEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: ObservableExtensions.Union(Of TSource)(INotifyEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
- uid: NMF.Expressions.Linq.ObservableExtensions.Where*
  name: Where
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Where_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.Where
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.Where
  nameWithType: ObservableExtensions.Where
- uid: NMF.Expressions.Linq.ObservableExtensions.Where``1(NMF.Expressions.INotifyCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<T>(INotifyCollection<T>, Expression<Func<T, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Where__1_NMF_Expressions_INotifyCollection___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Where``1(NMF.Expressions.INotifyCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Where(Of T)(INotifyCollection(Of T), Expression(Of Func(Of T, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Where<T>(NMF.Expressions.INotifyCollection<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Where(Of T)(NMF.Expressions.INotifyCollection(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  nameWithType: ObservableExtensions.Where<T>(INotifyCollection<T>, Expression<Func<T, Boolean>>)
  nameWithType.vb: ObservableExtensions.Where(Of T)(INotifyCollection(Of T), Expression(Of Func(Of T, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.Where``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<T>(INotifyEnumerable<T>, Expression<Func<T, Boolean>>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_Where__1_NMF_Expressions_INotifyEnumerable___0__System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.Where``1(NMF.Expressions.INotifyEnumerable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Where(Of T)(INotifyEnumerable(Of T), Expression(Of Func(Of T, Boolean)))
  fullName: NMF.Expressions.Linq.ObservableExtensions.Where<T>(NMF.Expressions.INotifyEnumerable<T>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.Where(Of T)(NMF.Expressions.INotifyEnumerable(Of T), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  nameWithType: ObservableExtensions.Where<T>(INotifyEnumerable<T>, Expression<Func<T, Boolean>>)
  nameWithType.vb: ObservableExtensions.Where(Of T)(INotifyEnumerable(Of T), Expression(Of Func(Of T, Boolean)))
- uid: NMF.Expressions.Linq.ObservableExtensions.WithUpdates*
  name: WithUpdates
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_WithUpdates_
  commentId: Overload:NMF.Expressions.Linq.ObservableExtensions.WithUpdates
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableExtensions.WithUpdates
  nameWithType: ObservableExtensions.WithUpdates
- uid: NMF.Expressions.Linq.ObservableExtensions.WithUpdates``1(System.Collections.Generic.ICollection{``0})
  name: WithUpdates<T>(ICollection<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_WithUpdates__1_System_Collections_Generic_ICollection___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.WithUpdates``1(System.Collections.Generic.ICollection{``0})
  name.vb: WithUpdates(Of T)(ICollection(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.WithUpdates<T>(System.Collections.Generic.ICollection<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.WithUpdates(Of T)(System.Collections.Generic.ICollection(Of T))
  nameWithType: ObservableExtensions.WithUpdates<T>(ICollection<T>)
  nameWithType.vb: ObservableExtensions.WithUpdates(Of T)(ICollection(Of T))
- uid: NMF.Expressions.Linq.ObservableExtensions.WithUpdates``1(System.Collections.Generic.IEnumerable{``0})
  name: WithUpdates<T>(IEnumerable<T>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableExtensions.html#NMF_Expressions_Linq_ObservableExtensions_WithUpdates__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Expressions.Linq.ObservableExtensions.WithUpdates``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: WithUpdates(Of T)(IEnumerable(Of T))
  fullName: NMF.Expressions.Linq.ObservableExtensions.WithUpdates<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: NMF.Expressions.Linq.ObservableExtensions.WithUpdates(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: ObservableExtensions.WithUpdates<T>(IEnumerable<T>)
  nameWithType.vb: ObservableExtensions.WithUpdates(Of T)(IEnumerable(Of T))
- uid: NMF.Expressions.Linq.ObservableGroup`2
  name: ObservableGroup<TKey, TItem>
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html
  commentId: T:NMF.Expressions.Linq.ObservableGroup`2
  name.vb: ObservableGroup(Of TKey, TItem)
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem)
  nameWithType: ObservableGroup<TKey, TItem>
  nameWithType.vb: ObservableGroup(Of TKey, TItem)
- uid: NMF.Expressions.Linq.ObservableGroup`2.#ctor(`0)
  name: ObservableGroup(TKey)
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2__ctor__0_
  commentId: M:NMF.Expressions.Linq.ObservableGroup`2.#ctor(`0)
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.ObservableGroup(TKey)
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).ObservableGroup(TKey)
  nameWithType: ObservableGroup<TKey, TItem>.ObservableGroup(TKey)
  nameWithType.vb: ObservableGroup(Of TKey, TItem).ObservableGroup(TKey)
- uid: NMF.Expressions.Linq.ObservableGroup`2.#ctor*
  name: ObservableGroup
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2__ctor_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.ObservableGroup
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).ObservableGroup
  nameWithType: ObservableGroup<TKey, TItem>.ObservableGroup
  nameWithType.vb: ObservableGroup(Of TKey, TItem).ObservableGroup
- uid: NMF.Expressions.Linq.ObservableGroup`2.AsNotifiable
  name: AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_AsNotifiable
  commentId: M:NMF.Expressions.Linq.ObservableGroup`2.AsNotifiable
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).AsNotifiable()
  nameWithType: ObservableGroup<TKey, TItem>.AsNotifiable()
  nameWithType.vb: ObservableGroup(Of TKey, TItem).AsNotifiable()
- uid: NMF.Expressions.Linq.ObservableGroup`2.AsNotifiable*
  name: AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.AsNotifiable
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).AsNotifiable
  nameWithType: ObservableGroup<TKey, TItem>.AsNotifiable
  nameWithType.vb: ObservableGroup(Of TKey, TItem).AsNotifiable
- uid: NMF.Expressions.Linq.ObservableGroup`2.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Dependencies
  commentId: P:NMF.Expressions.Linq.ObservableGroup`2.Dependencies
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Dependencies
  nameWithType: ObservableGroup<TKey, TItem>.Dependencies
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Dependencies
- uid: NMF.Expressions.Linq.ObservableGroup`2.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Dependencies_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Dependencies
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Dependencies
  nameWithType: ObservableGroup<TKey, TItem>.Dependencies
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Dependencies
- uid: NMF.Expressions.Linq.ObservableGroup`2.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Dispose
  commentId: M:NMF.Expressions.Linq.ObservableGroup`2.Dispose
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Dispose()
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Dispose()
  nameWithType: ObservableGroup<TKey, TItem>.Dispose()
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Dispose()
- uid: NMF.Expressions.Linq.ObservableGroup`2.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Dispose_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Dispose
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Dispose
  nameWithType: ObservableGroup<TKey, TItem>.Dispose
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Dispose
- uid: NMF.Expressions.Linq.ObservableGroup`2.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_ExecutionMetaData
  commentId: P:NMF.Expressions.Linq.ObservableGroup`2.ExecutionMetaData
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.ExecutionMetaData
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).ExecutionMetaData
  nameWithType: ObservableGroup<TKey, TItem>.ExecutionMetaData
  nameWithType.vb: ObservableGroup(Of TKey, TItem).ExecutionMetaData
- uid: NMF.Expressions.Linq.ObservableGroup`2.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.ExecutionMetaData
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).ExecutionMetaData
  nameWithType: ObservableGroup<TKey, TItem>.ExecutionMetaData
  nameWithType.vb: ObservableGroup(Of TKey, TItem).ExecutionMetaData
- uid: NMF.Expressions.Linq.ObservableGroup`2.Key
  name: Key
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Key
  commentId: P:NMF.Expressions.Linq.ObservableGroup`2.Key
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Key
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Key
  nameWithType: ObservableGroup<TKey, TItem>.Key
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Key
- uid: NMF.Expressions.Linq.ObservableGroup`2.Key*
  name: Key
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Key_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.Key
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Key
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Key
  nameWithType: ObservableGroup<TKey, TItem>.Key
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Key
- uid: NMF.Expressions.Linq.ObservableGroup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name: IEnumerableExpression.AsNotifiable()
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_NMF_Expressions_IEnumerableExpression_AsNotifiable
  commentId: M:NMF.Expressions.Linq.ObservableGroup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType: ObservableGroup<TKey, TItem>.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ObservableGroup(Of TKey, TItem).NMF.Expressions.IEnumerableExpression.AsNotifiable()
- uid: NMF.Expressions.Linq.ObservableGroup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable*
  name: IEnumerableExpression.AsNotifiable
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_NMF_Expressions_IEnumerableExpression_AsNotifiable_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.NMF#Expressions#IEnumerableExpression#AsNotifiable
  isSpec: "True"
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.NMF.Expressions.IEnumerableExpression.AsNotifiable
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).NMF.Expressions.IEnumerableExpression.AsNotifiable
  nameWithType: ObservableGroup<TKey, TItem>.IEnumerableExpression.AsNotifiable
  nameWithType.vb: ObservableGroup(Of TKey, TItem).NMF.Expressions.IEnumerableExpression.AsNotifiable
- uid: NMF.Expressions.Linq.ObservableGroup`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Linq.ObservableGroup`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: ObservableGroup<TKey, TItem>.Notify(IList<INotificationResult>)
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Linq.ObservableGroup`2.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Notify_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Notify
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Notify
  nameWithType: ObservableGroup<TKey, TItem>.Notify
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Notify
- uid: NMF.Expressions.Linq.ObservableGroup`2.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Successors
  commentId: P:NMF.Expressions.Linq.ObservableGroup`2.Successors
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Successors
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Successors
  nameWithType: ObservableGroup<TKey, TItem>.Successors
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Successors
- uid: NMF.Expressions.Linq.ObservableGroup`2.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.Linq.ObservableGroup-2.html#NMF_Expressions_Linq_ObservableGroup_2_Successors_
  commentId: Overload:NMF.Expressions.Linq.ObservableGroup`2.Successors
  isSpec: "True"
  fullName: NMF.Expressions.Linq.ObservableGroup<TKey, TItem>.Successors
  fullName.vb: NMF.Expressions.Linq.ObservableGroup(Of TKey, TItem).Successors
  nameWithType: ObservableGroup<TKey, TItem>.Successors
  nameWithType.vb: ObservableGroup(Of TKey, TItem).Successors
- uid: NMF.Expressions.MultiSuccessorList
  name: MultiSuccessorList
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html
  commentId: T:NMF.Expressions.MultiSuccessorList
  fullName: NMF.Expressions.MultiSuccessorList
  nameWithType: MultiSuccessorList
- uid: NMF.Expressions.MultiSuccessorList.Attached
  name: Attached
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Attached
  commentId: E:NMF.Expressions.MultiSuccessorList.Attached
  fullName: NMF.Expressions.MultiSuccessorList.Attached
  nameWithType: MultiSuccessorList.Attached
- uid: NMF.Expressions.MultiSuccessorList.Count
  name: Count
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Count
  commentId: P:NMF.Expressions.MultiSuccessorList.Count
  fullName: NMF.Expressions.MultiSuccessorList.Count
  nameWithType: MultiSuccessorList.Count
- uid: NMF.Expressions.MultiSuccessorList.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Count_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Count
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.Count
  nameWithType: MultiSuccessorList.Count
- uid: NMF.Expressions.MultiSuccessorList.Detached
  name: Detached
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Detached
  commentId: E:NMF.Expressions.MultiSuccessorList.Detached
  fullName: NMF.Expressions.MultiSuccessorList.Detached
  nameWithType: MultiSuccessorList.Detached
- uid: NMF.Expressions.MultiSuccessorList.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_GetEnumerator
  commentId: M:NMF.Expressions.MultiSuccessorList.GetEnumerator
  fullName: NMF.Expressions.MultiSuccessorList.GetEnumerator()
  nameWithType: MultiSuccessorList.GetEnumerator()
- uid: NMF.Expressions.MultiSuccessorList.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_GetEnumerator_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.GetEnumerator
  nameWithType: MultiSuccessorList.GetEnumerator
- uid: NMF.Expressions.MultiSuccessorList.HasSuccessors
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_HasSuccessors
  commentId: P:NMF.Expressions.MultiSuccessorList.HasSuccessors
  fullName: NMF.Expressions.MultiSuccessorList.HasSuccessors
  nameWithType: MultiSuccessorList.HasSuccessors
- uid: NMF.Expressions.MultiSuccessorList.HasSuccessors*
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_HasSuccessors_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.HasSuccessors
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.HasSuccessors
  nameWithType: MultiSuccessorList.HasSuccessors
- uid: NMF.Expressions.MultiSuccessorList.IsAttached
  name: IsAttached
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_IsAttached
  commentId: P:NMF.Expressions.MultiSuccessorList.IsAttached
  fullName: NMF.Expressions.MultiSuccessorList.IsAttached
  nameWithType: MultiSuccessorList.IsAttached
- uid: NMF.Expressions.MultiSuccessorList.IsAttached*
  name: IsAttached
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_IsAttached_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.IsAttached
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.IsAttached
  nameWithType: MultiSuccessorList.IsAttached
- uid: NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  name: Item[Int32]
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Item_System_Int32_
  commentId: P:NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: NMF.Expressions.MultiSuccessorList.Item[System.Int32]
  fullName.vb: NMF.Expressions.MultiSuccessorList.Item(System.Int32)
  nameWithType: MultiSuccessorList.Item[Int32]
  nameWithType.vb: MultiSuccessorList.Item(Int32)
- uid: NMF.Expressions.MultiSuccessorList.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Item_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Item
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.Item
  nameWithType: MultiSuccessorList.Item
- uid: NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  name: Set(INotifiable)
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Set_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.MultiSuccessorList.Set(NMF.Expressions.INotifiable)
  nameWithType: MultiSuccessorList.Set(INotifiable)
- uid: NMF.Expressions.MultiSuccessorList.Set*
  name: Set
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Set_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Set
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.Set
  nameWithType: MultiSuccessorList.Set
- uid: NMF.Expressions.MultiSuccessorList.SetDummy
  name: SetDummy()
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_SetDummy
  commentId: M:NMF.Expressions.MultiSuccessorList.SetDummy
  fullName: NMF.Expressions.MultiSuccessorList.SetDummy()
  nameWithType: MultiSuccessorList.SetDummy()
- uid: NMF.Expressions.MultiSuccessorList.SetDummy*
  name: SetDummy
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_SetDummy_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.SetDummy
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.SetDummy
  nameWithType: MultiSuccessorList.SetDummy
- uid: NMF.Expressions.MultiSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.MultiSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.MultiSuccessorList.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultiSuccessorList.IEnumerable.GetEnumerator()
  nameWithType.vb: MultiSuccessorList.System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.MultiSuccessorList.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.MultiSuccessorList.System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultiSuccessorList.IEnumerable.GetEnumerator
  nameWithType.vb: MultiSuccessorList.System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  name: Unset(INotifiable, Boolean)
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Unset_NMF_Expressions_INotifiable_System_Boolean_
  commentId: M:NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  fullName: NMF.Expressions.MultiSuccessorList.Unset(NMF.Expressions.INotifiable, System.Boolean)
  nameWithType: MultiSuccessorList.Unset(INotifiable, Boolean)
- uid: NMF.Expressions.MultiSuccessorList.Unset*
  name: Unset
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_Unset_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.Unset
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.Unset
  nameWithType: MultiSuccessorList.Unset
- uid: NMF.Expressions.MultiSuccessorList.UnsetAll
  name: UnsetAll()
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_UnsetAll
  commentId: M:NMF.Expressions.MultiSuccessorList.UnsetAll
  fullName: NMF.Expressions.MultiSuccessorList.UnsetAll()
  nameWithType: MultiSuccessorList.UnsetAll()
- uid: NMF.Expressions.MultiSuccessorList.UnsetAll*
  name: UnsetAll
  href: api/Expressions/NMF.Expressions.MultiSuccessorList.html#NMF_Expressions_MultiSuccessorList_UnsetAll_
  commentId: Overload:NMF.Expressions.MultiSuccessorList.UnsetAll
  isSpec: "True"
  fullName: NMF.Expressions.MultiSuccessorList.UnsetAll
  nameWithType: MultiSuccessorList.UnsetAll
- uid: NMF.Expressions.Notifiable
  name: Notifiable
  href: api/Expressions/NMF.Expressions.Notifiable.html
  commentId: T:NMF.Expressions.Notifiable
  fullName: NMF.Expressions.Notifiable
  nameWithType: Notifiable
- uid: NMF.Expressions.Notifiable.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Dependencies
  commentId: P:NMF.Expressions.Notifiable.Dependencies
  fullName: NMF.Expressions.Notifiable.Dependencies
  nameWithType: Notifiable.Dependencies
- uid: NMF.Expressions.Notifiable.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Dependencies_
  commentId: Overload:NMF.Expressions.Notifiable.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.Notifiable.Dependencies
  nameWithType: Notifiable.Dependencies
- uid: NMF.Expressions.Notifiable.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Dispose
  commentId: M:NMF.Expressions.Notifiable.Dispose
  fullName: NMF.Expressions.Notifiable.Dispose()
  nameWithType: Notifiable.Dispose()
- uid: NMF.Expressions.Notifiable.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Dispose_
  commentId: Overload:NMF.Expressions.Notifiable.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.Notifiable.Dispose
  nameWithType: Notifiable.Dispose
- uid: NMF.Expressions.Notifiable.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_ExecutionMetaData
  commentId: P:NMF.Expressions.Notifiable.ExecutionMetaData
  fullName: NMF.Expressions.Notifiable.ExecutionMetaData
  nameWithType: Notifiable.ExecutionMetaData
- uid: NMF.Expressions.Notifiable.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.Notifiable.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.Notifiable.ExecutionMetaData
  nameWithType: Notifiable.ExecutionMetaData
- uid: NMF.Expressions.Notifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.Notifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.Notifiable.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.Notifiable.Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: Notifiable.Notify(IList<INotificationResult>)
  nameWithType.vb: Notifiable.Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.Notifiable.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Notify_
  commentId: Overload:NMF.Expressions.Notifiable.Notify
  isSpec: "True"
  fullName: NMF.Expressions.Notifiable.Notify
  nameWithType: Notifiable.Notify
- uid: NMF.Expressions.Notifiable.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Successors
  commentId: P:NMF.Expressions.Notifiable.Successors
  fullName: NMF.Expressions.Notifiable.Successors
  nameWithType: Notifiable.Successors
- uid: NMF.Expressions.Notifiable.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.Notifiable.html#NMF_Expressions_Notifiable_Successors_
  commentId: Overload:NMF.Expressions.Notifiable.Successors
  isSpec: "True"
  fullName: NMF.Expressions.Notifiable.Successors
  nameWithType: Notifiable.Successors
- uid: NMF.Expressions.NotificationResultCollection
  name: NotificationResultCollection
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html
  commentId: T:NMF.Expressions.NotificationResultCollection
  fullName: NMF.Expressions.NotificationResultCollection
  nameWithType: NotificationResultCollection
- uid: NMF.Expressions.NotificationResultCollection.#ctor
  name: NotificationResultCollection()
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection__ctor
  commentId: M:NMF.Expressions.NotificationResultCollection.#ctor
  fullName: NMF.Expressions.NotificationResultCollection.NotificationResultCollection()
  nameWithType: NotificationResultCollection.NotificationResultCollection()
- uid: NMF.Expressions.NotificationResultCollection.#ctor*
  name: NotificationResultCollection
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection__ctor_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.NotificationResultCollection
  nameWithType: NotificationResultCollection.NotificationResultCollection
- uid: NMF.Expressions.NotificationResultCollection.Add(NMF.Expressions.INotificationResult)
  name: Add(INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Add_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.Add(NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.Add(NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.Add(INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.Add*
  name: Add
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Add_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Add
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Add
  nameWithType: NotificationResultCollection.Add
- uid: NMF.Expressions.NotificationResultCollection.Clear
  name: Clear()
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Clear
  commentId: M:NMF.Expressions.NotificationResultCollection.Clear
  fullName: NMF.Expressions.NotificationResultCollection.Clear()
  nameWithType: NotificationResultCollection.Clear()
- uid: NMF.Expressions.NotificationResultCollection.Clear*
  name: Clear
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Clear_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Clear
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Clear
  nameWithType: NotificationResultCollection.Clear
- uid: NMF.Expressions.NotificationResultCollection.Contains(NMF.Expressions.INotificationResult)
  name: Contains(INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Contains_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.Contains(NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.Contains(NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.Contains(INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.Contains*
  name: Contains
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Contains_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Contains
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Contains
  nameWithType: NotificationResultCollection.Contains
- uid: NMF.Expressions.NotificationResultCollection.CopyTo(NMF.Expressions.INotificationResult[],System.Int32)
  name: CopyTo(INotificationResult[], Int32)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_CopyTo_NMF_Expressions_INotificationResult___System_Int32_
  commentId: M:NMF.Expressions.NotificationResultCollection.CopyTo(NMF.Expressions.INotificationResult[],System.Int32)
  name.vb: CopyTo(INotificationResult(), Int32)
  fullName: NMF.Expressions.NotificationResultCollection.CopyTo(NMF.Expressions.INotificationResult[], System.Int32)
  fullName.vb: NMF.Expressions.NotificationResultCollection.CopyTo(NMF.Expressions.INotificationResult(), System.Int32)
  nameWithType: NotificationResultCollection.CopyTo(INotificationResult[], Int32)
  nameWithType.vb: NotificationResultCollection.CopyTo(INotificationResult(), Int32)
- uid: NMF.Expressions.NotificationResultCollection.CopyTo*
  name: CopyTo
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_CopyTo_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.CopyTo
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.CopyTo
  nameWithType: NotificationResultCollection.CopyTo
- uid: NMF.Expressions.NotificationResultCollection.Count
  name: Count
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Count
  commentId: P:NMF.Expressions.NotificationResultCollection.Count
  fullName: NMF.Expressions.NotificationResultCollection.Count
  nameWithType: NotificationResultCollection.Count
- uid: NMF.Expressions.NotificationResultCollection.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Count_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Count
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Count
  nameWithType: NotificationResultCollection.Count
- uid: NMF.Expressions.NotificationResultCollection.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_GetEnumerator
  commentId: M:NMF.Expressions.NotificationResultCollection.GetEnumerator
  fullName: NMF.Expressions.NotificationResultCollection.GetEnumerator()
  nameWithType: NotificationResultCollection.GetEnumerator()
- uid: NMF.Expressions.NotificationResultCollection.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_GetEnumerator_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.GetEnumerator
  nameWithType: NotificationResultCollection.GetEnumerator
- uid: NMF.Expressions.NotificationResultCollection.IndexOf(NMF.Expressions.INotificationResult)
  name: IndexOf(INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_IndexOf_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.IndexOf(NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.IndexOf(NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.IndexOf(INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.IndexOf*
  name: IndexOf
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_IndexOf_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.IndexOf
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.IndexOf
  nameWithType: NotificationResultCollection.IndexOf
- uid: NMF.Expressions.NotificationResultCollection.Insert(System.Int32,NMF.Expressions.INotificationResult)
  name: Insert(Int32, INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Insert_System_Int32_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.Insert(System.Int32,NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.Insert(System.Int32, NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.Insert(Int32, INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.Insert*
  name: Insert
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Insert_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Insert
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Insert
  nameWithType: NotificationResultCollection.Insert
- uid: NMF.Expressions.NotificationResultCollection.IsReadOnly
  name: IsReadOnly
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_IsReadOnly
  commentId: P:NMF.Expressions.NotificationResultCollection.IsReadOnly
  fullName: NMF.Expressions.NotificationResultCollection.IsReadOnly
  nameWithType: NotificationResultCollection.IsReadOnly
- uid: NMF.Expressions.NotificationResultCollection.IsReadOnly*
  name: IsReadOnly
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_IsReadOnly_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.IsReadOnly
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.IsReadOnly
  nameWithType: NotificationResultCollection.IsReadOnly
- uid: NMF.Expressions.NotificationResultCollection.Item(System.Int32)
  name: Item[Int32]
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Item_System_Int32_
  commentId: P:NMF.Expressions.NotificationResultCollection.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: NMF.Expressions.NotificationResultCollection.Item[System.Int32]
  fullName.vb: NMF.Expressions.NotificationResultCollection.Item(System.Int32)
  nameWithType: NotificationResultCollection.Item[Int32]
  nameWithType.vb: NotificationResultCollection.Item(Int32)
- uid: NMF.Expressions.NotificationResultCollection.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Item_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Item
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Item
  nameWithType: NotificationResultCollection.Item
- uid: NMF.Expressions.NotificationResultCollection.Remove(NMF.Expressions.INotificationResult)
  name: Remove(INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Remove_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.Remove(NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.Remove(NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.Remove(INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.Remove*
  name: Remove
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_Remove_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.Remove
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.Remove
  nameWithType: NotificationResultCollection.Remove
- uid: NMF.Expressions.NotificationResultCollection.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_RemoveAt_System_Int32_
  commentId: M:NMF.Expressions.NotificationResultCollection.RemoveAt(System.Int32)
  fullName: NMF.Expressions.NotificationResultCollection.RemoveAt(System.Int32)
  nameWithType: NotificationResultCollection.RemoveAt(Int32)
- uid: NMF.Expressions.NotificationResultCollection.RemoveAt*
  name: RemoveAt
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_RemoveAt_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.RemoveAt
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.RemoveAt
  nameWithType: NotificationResultCollection.RemoveAt
- uid: NMF.Expressions.NotificationResultCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.NotificationResultCollection.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.NotificationResultCollection.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: NotificationResultCollection.IEnumerable.GetEnumerator()
  nameWithType.vb: NotificationResultCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.NotificationResultCollection.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.NotificationResultCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType: NotificationResultCollection.IEnumerable.GetEnumerator
  nameWithType.vb: NotificationResultCollection.System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.NotificationResultCollection.UnsafeAdd(NMF.Expressions.INotificationResult)
  name: UnsafeAdd(INotificationResult)
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_UnsafeAdd_NMF_Expressions_INotificationResult_
  commentId: M:NMF.Expressions.NotificationResultCollection.UnsafeAdd(NMF.Expressions.INotificationResult)
  fullName: NMF.Expressions.NotificationResultCollection.UnsafeAdd(NMF.Expressions.INotificationResult)
  nameWithType: NotificationResultCollection.UnsafeAdd(INotificationResult)
- uid: NMF.Expressions.NotificationResultCollection.UnsafeAdd*
  name: UnsafeAdd
  href: api/Expressions/NMF.Expressions.NotificationResultCollection.html#NMF_Expressions_NotificationResultCollection_UnsafeAdd_
  commentId: Overload:NMF.Expressions.NotificationResultCollection.UnsafeAdd
  isSpec: "True"
  fullName: NMF.Expressions.NotificationResultCollection.UnsafeAdd
  nameWithType: NotificationResultCollection.UnsafeAdd
- uid: NMF.Expressions.NotifyCollection`1
  name: NotifyCollection<T>
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html
  commentId: T:NMF.Expressions.NotifyCollection`1
  name.vb: NotifyCollection(Of T)
  fullName: NMF.Expressions.NotifyCollection<T>
  fullName.vb: NMF.Expressions.NotifyCollection(Of T)
  nameWithType: NotifyCollection<T>
  nameWithType.vb: NotifyCollection(Of T)
- uid: NMF.Expressions.NotifyCollection`1.#ctor
  name: NotifyCollection()
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1__ctor
  commentId: M:NMF.Expressions.NotifyCollection`1.#ctor
  fullName: NMF.Expressions.NotifyCollection<T>.NotifyCollection()
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).NotifyCollection()
  nameWithType: NotifyCollection<T>.NotifyCollection()
  nameWithType.vb: NotifyCollection(Of T).NotifyCollection()
- uid: NMF.Expressions.NotifyCollection`1.#ctor*
  name: NotifyCollection
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1__ctor_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.NotifyCollection
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).NotifyCollection
  nameWithType: NotifyCollection<T>.NotifyCollection
  nameWithType.vb: NotifyCollection(Of T).NotifyCollection
- uid: NMF.Expressions.NotifyCollection`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Dependencies
  commentId: P:NMF.Expressions.NotifyCollection`1.Dependencies
  fullName: NMF.Expressions.NotifyCollection<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Dependencies
  nameWithType: NotifyCollection<T>.Dependencies
  nameWithType.vb: NotifyCollection(Of T).Dependencies
- uid: NMF.Expressions.NotifyCollection`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Dependencies_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Dependencies
  nameWithType: NotifyCollection<T>.Dependencies
  nameWithType.vb: NotifyCollection(Of T).Dependencies
- uid: NMF.Expressions.NotifyCollection`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Dispose
  commentId: M:NMF.Expressions.NotifyCollection`1.Dispose
  fullName: NMF.Expressions.NotifyCollection<T>.Dispose()
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Dispose()
  nameWithType: NotifyCollection<T>.Dispose()
  nameWithType.vb: NotifyCollection(Of T).Dispose()
- uid: NMF.Expressions.NotifyCollection`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Dispose_System_Boolean_
  commentId: M:NMF.Expressions.NotifyCollection`1.Dispose(System.Boolean)
  fullName: NMF.Expressions.NotifyCollection<T>.Dispose(System.Boolean)
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Dispose(System.Boolean)
  nameWithType: NotifyCollection<T>.Dispose(Boolean)
  nameWithType.vb: NotifyCollection(Of T).Dispose(Boolean)
- uid: NMF.Expressions.NotifyCollection`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Dispose_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.Dispose
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Dispose
  nameWithType: NotifyCollection<T>.Dispose
  nameWithType.vb: NotifyCollection(Of T).Dispose
- uid: NMF.Expressions.NotifyCollection`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyCollection`1.ExecutionMetaData
  fullName: NMF.Expressions.NotifyCollection<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).ExecutionMetaData
  nameWithType: NotifyCollection<T>.ExecutionMetaData
  nameWithType.vb: NotifyCollection(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyCollection`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).ExecutionMetaData
  nameWithType: NotifyCollection<T>.ExecutionMetaData
  nameWithType.vb: NotifyCollection(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyCollection`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.NotifyCollection`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.NotifyCollection<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: NotifyCollection<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: NotifyCollection(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.NotifyCollection`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Notify_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.Notify
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Notify
  nameWithType: NotifyCollection<T>.Notify
  nameWithType.vb: NotifyCollection(Of T).Notify
- uid: NMF.Expressions.NotifyCollection`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Successors
  commentId: P:NMF.Expressions.NotifyCollection`1.Successors
  fullName: NMF.Expressions.NotifyCollection<T>.Successors
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Successors
  nameWithType: NotifyCollection<T>.Successors
  nameWithType.vb: NotifyCollection(Of T).Successors
- uid: NMF.Expressions.NotifyCollection`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyCollection-1.html#NMF_Expressions_NotifyCollection_1_Successors_
  commentId: Overload:NMF.Expressions.NotifyCollection`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.NotifyCollection<T>.Successors
  fullName.vb: NMF.Expressions.NotifyCollection(Of T).Successors
  nameWithType: NotifyCollection<T>.Successors
  nameWithType.vb: NotifyCollection(Of T).Successors
- uid: NMF.Expressions.NotifyExpression`1
  name: NotifyExpression<T>
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html
  commentId: T:NMF.Expressions.NotifyExpression`1
  name.vb: NotifyExpression(Of T)
  fullName: NMF.Expressions.NotifyExpression<T>
  fullName.vb: NMF.Expressions.NotifyExpression(Of T)
  nameWithType: NotifyExpression<T>
  nameWithType.vb: NotifyExpression(Of T)
- uid: NMF.Expressions.NotifyExpression`1.#ctor
  name: NotifyExpression()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1__ctor
  commentId: M:NMF.Expressions.NotifyExpression`1.#ctor
  fullName: NMF.Expressions.NotifyExpression<T>.NotifyExpression()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NotifyExpression()
  nameWithType: NotifyExpression<T>.NotifyExpression()
  nameWithType.vb: NotifyExpression(Of T).NotifyExpression()
- uid: NMF.Expressions.NotifyExpression`1.#ctor(`0)
  name: NotifyExpression(T)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1__ctor__0_
  commentId: M:NMF.Expressions.NotifyExpression`1.#ctor(`0)
  fullName: NMF.Expressions.NotifyExpression<T>.NotifyExpression(T)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NotifyExpression(T)
  nameWithType: NotifyExpression<T>.NotifyExpression(T)
  nameWithType.vb: NotifyExpression(Of T).NotifyExpression(T)
- uid: NMF.Expressions.NotifyExpression`1.#ctor*
  name: NotifyExpression
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1__ctor_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.NotifyExpression
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NotifyExpression
  nameWithType: NotifyExpression<T>.NotifyExpression
  nameWithType.vb: NotifyExpression(Of T).NotifyExpression
- uid: NMF.Expressions.NotifyExpression`1.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name: ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ApplyParameters_System_Collections_Generic_IDictionary_System_String_System_Object__System_Collections_Generic_IDictionary_NMF_Expressions_INotifiable_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.NotifyExpression`1.ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name.vb: ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
  fullName: NMF.Expressions.NotifyExpression<T>.ApplyParameters(System.Collections.Generic.IDictionary<System.String, System.Object>, System.Collections.Generic.IDictionary<NMF.Expressions.INotifiable, NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ApplyParameters(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Collections.Generic.IDictionary(Of NMF.Expressions.INotifiable, NMF.Expressions.INotifiable))
  nameWithType: NotifyExpression<T>.ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  nameWithType.vb: NotifyExpression(Of T).ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
- uid: NMF.Expressions.NotifyExpression`1.ApplyParameters*
  name: ApplyParameters
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ApplyParameters_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.ApplyParameters
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.ApplyParameters
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ApplyParameters
  nameWithType: NotifyExpression<T>.ApplyParameters
  nameWithType.vb: NotifyExpression(Of T).ApplyParameters
- uid: NMF.Expressions.NotifyExpression`1.ApplyParametersCore(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name: ApplyParametersCore(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ApplyParametersCore_System_Collections_Generic_IDictionary_System_String_System_Object__System_Collections_Generic_IDictionary_NMF_Expressions_INotifiable_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.NotifyExpression`1.ApplyParametersCore(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name.vb: ApplyParametersCore(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
  fullName: NMF.Expressions.NotifyExpression<T>.ApplyParametersCore(System.Collections.Generic.IDictionary<System.String, System.Object>, System.Collections.Generic.IDictionary<NMF.Expressions.INotifiable, NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ApplyParametersCore(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Collections.Generic.IDictionary(Of NMF.Expressions.INotifiable, NMF.Expressions.INotifiable))
  nameWithType: NotifyExpression<T>.ApplyParametersCore(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  nameWithType.vb: NotifyExpression(Of T).ApplyParametersCore(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
- uid: NMF.Expressions.NotifyExpression`1.ApplyParametersCore*
  name: ApplyParametersCore
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ApplyParametersCore_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.ApplyParametersCore
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.ApplyParametersCore
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ApplyParametersCore
  nameWithType: NotifyExpression<T>.ApplyParametersCore
  nameWithType.vb: NotifyExpression(Of T).ApplyParametersCore
- uid: NMF.Expressions.NotifyExpression`1.BaseReduce
  name: BaseReduce()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_BaseReduce
  commentId: M:NMF.Expressions.NotifyExpression`1.BaseReduce
  fullName: NMF.Expressions.NotifyExpression<T>.BaseReduce()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).BaseReduce()
  nameWithType: NotifyExpression<T>.BaseReduce()
  nameWithType.vb: NotifyExpression(Of T).BaseReduce()
- uid: NMF.Expressions.NotifyExpression`1.BaseReduce*
  name: BaseReduce
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_BaseReduce_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.BaseReduce
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.BaseReduce
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).BaseReduce
  nameWithType: NotifyExpression<T>.BaseReduce
  nameWithType.vb: NotifyExpression(Of T).BaseReduce
- uid: NMF.Expressions.NotifyExpression`1.CanBeConstant
  name: CanBeConstant
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_CanBeConstant
  commentId: P:NMF.Expressions.NotifyExpression`1.CanBeConstant
  fullName: NMF.Expressions.NotifyExpression<T>.CanBeConstant
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).CanBeConstant
  nameWithType: NotifyExpression<T>.CanBeConstant
  nameWithType.vb: NotifyExpression(Of T).CanBeConstant
- uid: NMF.Expressions.NotifyExpression`1.CanBeConstant*
  name: CanBeConstant
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_CanBeConstant_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.CanBeConstant
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.CanBeConstant
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).CanBeConstant
  nameWithType: NotifyExpression<T>.CanBeConstant
  nameWithType.vb: NotifyExpression(Of T).CanBeConstant
- uid: NMF.Expressions.NotifyExpression`1.CanReduce
  name: CanReduce
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_CanReduce
  commentId: P:NMF.Expressions.NotifyExpression`1.CanReduce
  fullName: NMF.Expressions.NotifyExpression<T>.CanReduce
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).CanReduce
  nameWithType: NotifyExpression<T>.CanReduce
  nameWithType.vb: NotifyExpression(Of T).CanReduce
- uid: NMF.Expressions.NotifyExpression`1.CanReduce*
  name: CanReduce
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_CanReduce_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.CanReduce
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.CanReduce
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).CanReduce
  nameWithType: NotifyExpression<T>.CanReduce
  nameWithType.vb: NotifyExpression(Of T).CanReduce
- uid: NMF.Expressions.NotifyExpression`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Dependencies
  commentId: P:NMF.Expressions.NotifyExpression`1.Dependencies
  fullName: NMF.Expressions.NotifyExpression<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Dependencies
  nameWithType: NotifyExpression<T>.Dependencies
  nameWithType.vb: NotifyExpression(Of T).Dependencies
- uid: NMF.Expressions.NotifyExpression`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Dependencies_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Dependencies
  nameWithType: NotifyExpression<T>.Dependencies
  nameWithType.vb: NotifyExpression(Of T).Dependencies
- uid: NMF.Expressions.NotifyExpression`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Dispose
  commentId: M:NMF.Expressions.NotifyExpression`1.Dispose
  fullName: NMF.Expressions.NotifyExpression<T>.Dispose()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Dispose()
  nameWithType: NotifyExpression<T>.Dispose()
  nameWithType.vb: NotifyExpression(Of T).Dispose()
- uid: NMF.Expressions.NotifyExpression`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Dispose_System_Boolean_
  commentId: M:NMF.Expressions.NotifyExpression`1.Dispose(System.Boolean)
  fullName: NMF.Expressions.NotifyExpression<T>.Dispose(System.Boolean)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Dispose(System.Boolean)
  nameWithType: NotifyExpression<T>.Dispose(Boolean)
  nameWithType.vb: NotifyExpression(Of T).Dispose(Boolean)
- uid: NMF.Expressions.NotifyExpression`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Dispose_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Dispose
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Dispose
  nameWithType: NotifyExpression<T>.Dispose
  nameWithType.vb: NotifyExpression(Of T).Dispose
- uid: NMF.Expressions.NotifyExpression`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyExpression`1.ExecutionMetaData
  fullName: NMF.Expressions.NotifyExpression<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ExecutionMetaData
  nameWithType: NotifyExpression<T>.ExecutionMetaData
  nameWithType.vb: NotifyExpression(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyExpression`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ExecutionMetaData
  nameWithType: NotifyExpression<T>.ExecutionMetaData
  nameWithType.vb: NotifyExpression(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyExpression`1.GetValue
  name: GetValue()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_GetValue
  commentId: M:NMF.Expressions.NotifyExpression`1.GetValue
  fullName: NMF.Expressions.NotifyExpression<T>.GetValue()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).GetValue()
  nameWithType: NotifyExpression<T>.GetValue()
  nameWithType.vb: NotifyExpression(Of T).GetValue()
- uid: NMF.Expressions.NotifyExpression`1.GetValue*
  name: GetValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_GetValue_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.GetValue
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.GetValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).GetValue
  nameWithType: NotifyExpression<T>.GetValue
  nameWithType.vb: NotifyExpression(Of T).GetValue
- uid: NMF.Expressions.NotifyExpression`1.IsConstant
  name: IsConstant
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_IsConstant
  commentId: P:NMF.Expressions.NotifyExpression`1.IsConstant
  fullName: NMF.Expressions.NotifyExpression<T>.IsConstant
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).IsConstant
  nameWithType: NotifyExpression<T>.IsConstant
  nameWithType.vb: NotifyExpression(Of T).IsConstant
- uid: NMF.Expressions.NotifyExpression`1.IsConstant*
  name: IsConstant
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_IsConstant_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.IsConstant
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.IsConstant
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).IsConstant
  nameWithType: NotifyExpression<T>.IsConstant
  nameWithType.vb: NotifyExpression(Of T).IsConstant
- uid: NMF.Expressions.NotifyExpression`1.IsParameterFree
  name: IsParameterFree
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_IsParameterFree
  commentId: P:NMF.Expressions.NotifyExpression`1.IsParameterFree
  fullName: NMF.Expressions.NotifyExpression<T>.IsParameterFree
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).IsParameterFree
  nameWithType: NotifyExpression<T>.IsParameterFree
  nameWithType.vb: NotifyExpression(Of T).IsParameterFree
- uid: NMF.Expressions.NotifyExpression`1.IsParameterFree*
  name: IsParameterFree
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_IsParameterFree_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.IsParameterFree
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.IsParameterFree
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).IsParameterFree
  nameWithType: NotifyExpression<T>.IsParameterFree
  nameWithType.vb: NotifyExpression(Of T).IsParameterFree
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Changed
  name: INotificationResult.Changed
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_Changed
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Changed
  name.vb: NMF.Expressions.INotificationResult.Changed
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.Changed
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.Changed
  nameWithType: NotifyExpression<T>.INotificationResult.Changed
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Changed*
  name: INotificationResult.Changed
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_Changed_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Changed
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.Changed
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.Changed
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.Changed
  nameWithType: NotifyExpression<T>.INotificationResult.Changed
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.Changed
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#FreeReference
  name: INotificationResult.FreeReference()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_FreeReference
  commentId: M:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#FreeReference
  name.vb: NMF.Expressions.INotificationResult.FreeReference()
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.FreeReference()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.FreeReference()
  nameWithType: NotifyExpression<T>.INotificationResult.FreeReference()
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.FreeReference()
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#FreeReference*
  name: INotificationResult.FreeReference
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_FreeReference_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#FreeReference
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.FreeReference
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.FreeReference
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.FreeReference
  nameWithType: NotifyExpression<T>.INotificationResult.FreeReference
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.FreeReference
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name: INotificationResult.IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  nameWithType: NotifyExpression<T>.INotificationResult.IncreaseReferences(Int32)
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#IncreaseReferences*
  name: INotificationResult.IncreaseReferences
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_IncreaseReferences_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#IncreaseReferences
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.IncreaseReferences
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.IncreaseReferences
  nameWithType: NotifyExpression<T>.INotificationResult.IncreaseReferences
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.IncreaseReferences
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Source
  name: INotificationResult.Source
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_Source
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Source
  name.vb: NMF.Expressions.INotificationResult.Source
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.Source
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.Source
  nameWithType: NotifyExpression<T>.INotificationResult.Source
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Source*
  name: INotificationResult.Source
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotificationResult_Source_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotificationResult#Source
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.Source
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotificationResult.Source
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotificationResult.Source
  nameWithType: NotifyExpression<T>.INotificationResult.Source
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotificationResult.Source
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotifyExpression#ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name: INotifyExpression.ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotifyExpression_ApplyParameters_System_Collections_Generic_IDictionary_System_String_System_Object__System_Collections_Generic_IDictionary_NMF_Expressions_INotifiable_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotifyExpression#ApplyParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{NMF.Expressions.INotifiable,NMF.Expressions.INotifiable})
  name.vb: NMF.Expressions.INotifyExpression.ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary<System.String, System.Object>, System.Collections.Generic.IDictionary<NMF.Expressions.INotifiable, NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotifyExpression.ApplyParameters(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Collections.Generic.IDictionary(Of NMF.Expressions.INotifiable, NMF.Expressions.INotifiable))
  nameWithType: NotifyExpression<T>.INotifyExpression.ApplyParameters(IDictionary<String, Object>, IDictionary<INotifiable, INotifiable>)
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotifyExpression.ApplyParameters(IDictionary(Of String, Object), IDictionary(Of INotifiable, INotifiable))
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotifyExpression#ApplyParameters*
  name: INotifyExpression.ApplyParameters
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_INotifyExpression_ApplyParameters_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#INotifyExpression#ApplyParameters
  isSpec: "True"
  name.vb: NMF.Expressions.INotifyExpression.ApplyParameters
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.INotifyExpression.ApplyParameters
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.INotifyExpression.ApplyParameters
  nameWithType: NotifyExpression<T>.INotifyExpression.ApplyParameters
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.INotifyExpression.ApplyParameters
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_NewValue
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#NewValue*
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_NewValue_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_OldValue
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#OldValue*
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_OldValue_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#NewValue
  name: IValueChangedNotificationResult<T>.NewValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_T__NewValue
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#NewValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#NewValue*
  name: IValueChangedNotificationResult<T>.NewValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_T__NewValue_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#NewValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.NewValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#OldValue
  name: IValueChangedNotificationResult<T>.OldValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_T__OldValue
  commentId: P:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#OldValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
- uid: NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#OldValue*
  name: IValueChangedNotificationResult<T>.OldValue
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_NMF_Expressions_IValueChangedNotificationResult_T__OldValue_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.NMF#Expressions#IValueChangedNotificationResult{T}#OldValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName: NMF.Expressions.NotifyExpression<T>.NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
  nameWithType: NotifyExpression<T>.IValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: NotifyExpression(Of T).NMF.Expressions.IValueChangedNotificationResult<T>.OldValue
- uid: NMF.Expressions.NotifyExpression`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.NotifyExpression`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.NotifyExpression<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: NotifyExpression<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: NotifyExpression(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.NotifyExpression`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Notify_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Notify
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Notify
  nameWithType: NotifyExpression<T>.Notify
  nameWithType.vb: NotifyExpression(Of T).Notify
- uid: NMF.Expressions.NotifyExpression`1.OnAttach
  name: OnAttach()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnAttach
  commentId: M:NMF.Expressions.NotifyExpression`1.OnAttach
  fullName: NMF.Expressions.NotifyExpression<T>.OnAttach()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnAttach()
  nameWithType: NotifyExpression<T>.OnAttach()
  nameWithType.vb: NotifyExpression(Of T).OnAttach()
- uid: NMF.Expressions.NotifyExpression`1.OnAttach*
  name: OnAttach
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnAttach_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.OnAttach
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.OnAttach
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnAttach
  nameWithType: NotifyExpression<T>.OnAttach
  nameWithType.vb: NotifyExpression(Of T).OnAttach
- uid: NMF.Expressions.NotifyExpression`1.OnDetach
  name: OnDetach()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnDetach
  commentId: M:NMF.Expressions.NotifyExpression`1.OnDetach
  fullName: NMF.Expressions.NotifyExpression<T>.OnDetach()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnDetach()
  nameWithType: NotifyExpression<T>.OnDetach()
  nameWithType.vb: NotifyExpression(Of T).OnDetach()
- uid: NMF.Expressions.NotifyExpression`1.OnDetach*
  name: OnDetach
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnDetach_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.OnDetach
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.OnDetach
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnDetach
  nameWithType: NotifyExpression<T>.OnDetach
  nameWithType.vb: NotifyExpression(Of T).OnDetach
- uid: NMF.Expressions.NotifyExpression`1.OnValueChanged(`0,`0)
  name: OnValueChanged(T, T)
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnValueChanged__0__0_
  commentId: M:NMF.Expressions.NotifyExpression`1.OnValueChanged(`0,`0)
  fullName: NMF.Expressions.NotifyExpression<T>.OnValueChanged(T, T)
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnValueChanged(T, T)
  nameWithType: NotifyExpression<T>.OnValueChanged(T, T)
  nameWithType.vb: NotifyExpression(Of T).OnValueChanged(T, T)
- uid: NMF.Expressions.NotifyExpression`1.OnValueChanged*
  name: OnValueChanged
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_OnValueChanged_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.OnValueChanged
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.OnValueChanged
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).OnValueChanged
  nameWithType: NotifyExpression<T>.OnValueChanged
  nameWithType.vb: NotifyExpression(Of T).OnValueChanged
- uid: NMF.Expressions.NotifyExpression`1.Reduce
  name: Reduce()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Reduce
  commentId: M:NMF.Expressions.NotifyExpression`1.Reduce
  fullName: NMF.Expressions.NotifyExpression<T>.Reduce()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Reduce()
  nameWithType: NotifyExpression<T>.Reduce()
  nameWithType.vb: NotifyExpression(Of T).Reduce()
- uid: NMF.Expressions.NotifyExpression`1.Reduce*
  name: Reduce
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Reduce_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Reduce
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Reduce
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Reduce
  nameWithType: NotifyExpression<T>.Reduce
  nameWithType.vb: NotifyExpression(Of T).Reduce
- uid: NMF.Expressions.NotifyExpression`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Successors
  commentId: P:NMF.Expressions.NotifyExpression`1.Successors
  fullName: NMF.Expressions.NotifyExpression<T>.Successors
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Successors
  nameWithType: NotifyExpression<T>.Successors
  nameWithType.vb: NotifyExpression(Of T).Successors
- uid: NMF.Expressions.NotifyExpression`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Successors_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Successors
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Successors
  nameWithType: NotifyExpression<T>.Successors
  nameWithType.vb: NotifyExpression(Of T).Successors
- uid: NMF.Expressions.NotifyExpression`1.ToString
  name: ToString()
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ToString
  commentId: M:NMF.Expressions.NotifyExpression`1.ToString
  fullName: NMF.Expressions.NotifyExpression<T>.ToString()
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ToString()
  nameWithType: NotifyExpression<T>.ToString()
  nameWithType.vb: NotifyExpression(Of T).ToString()
- uid: NMF.Expressions.NotifyExpression`1.ToString*
  name: ToString
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ToString_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.ToString
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.ToString
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ToString
  nameWithType: NotifyExpression<T>.ToString
  nameWithType.vb: NotifyExpression(Of T).ToString
- uid: NMF.Expressions.NotifyExpression`1.Type
  name: Type
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Type
  commentId: P:NMF.Expressions.NotifyExpression`1.Type
  fullName: NMF.Expressions.NotifyExpression<T>.Type
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Type
  nameWithType: NotifyExpression<T>.Type
  nameWithType.vb: NotifyExpression(Of T).Type
- uid: NMF.Expressions.NotifyExpression`1.Type*
  name: Type
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Type_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Type
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Type
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Type
  nameWithType: NotifyExpression<T>.Type
  nameWithType.vb: NotifyExpression(Of T).Type
- uid: NMF.Expressions.NotifyExpression`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Value
  commentId: P:NMF.Expressions.NotifyExpression`1.Value
  fullName: NMF.Expressions.NotifyExpression<T>.Value
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Value
  nameWithType: NotifyExpression<T>.Value
  nameWithType.vb: NotifyExpression(Of T).Value
- uid: NMF.Expressions.NotifyExpression`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_Value_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.Value
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).Value
  nameWithType: NotifyExpression<T>.Value
  nameWithType.vb: NotifyExpression(Of T).Value
- uid: NMF.Expressions.NotifyExpression`1.ValueChanged
  name: ValueChanged
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ValueChanged
  commentId: E:NMF.Expressions.NotifyExpression`1.ValueChanged
  fullName: NMF.Expressions.NotifyExpression<T>.ValueChanged
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ValueChanged
  nameWithType: NotifyExpression<T>.ValueChanged
  nameWithType.vb: NotifyExpression(Of T).ValueChanged
- uid: NMF.Expressions.NotifyExpression`1.ValueObject
  name: ValueObject
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ValueObject
  commentId: P:NMF.Expressions.NotifyExpression`1.ValueObject
  fullName: NMF.Expressions.NotifyExpression<T>.ValueObject
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ValueObject
  nameWithType: NotifyExpression<T>.ValueObject
  nameWithType.vb: NotifyExpression(Of T).ValueObject
- uid: NMF.Expressions.NotifyExpression`1.ValueObject*
  name: ValueObject
  href: api/Expressions/NMF.Expressions.NotifyExpression-1.html#NMF_Expressions_NotifyExpression_1_ValueObject_
  commentId: Overload:NMF.Expressions.NotifyExpression`1.ValueObject
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpression<T>.ValueObject
  fullName.vb: NMF.Expressions.NotifyExpression(Of T).ValueObject
  nameWithType: NotifyExpression<T>.ValueObject
  nameWithType.vb: NotifyExpression(Of T).ValueObject
- uid: NMF.Expressions.NotifyExpressionBase
  name: NotifyExpressionBase
  href: api/Expressions/NMF.Expressions.NotifyExpressionBase.html
  commentId: T:NMF.Expressions.NotifyExpressionBase
  fullName: NMF.Expressions.NotifyExpressionBase
  nameWithType: NotifyExpressionBase
- uid: NMF.Expressions.NotifyExpressionBase.BaseReduce
  name: BaseReduce()
  href: api/Expressions/NMF.Expressions.NotifyExpressionBase.html#NMF_Expressions_NotifyExpressionBase_BaseReduce
  commentId: M:NMF.Expressions.NotifyExpressionBase.BaseReduce
  fullName: NMF.Expressions.NotifyExpressionBase.BaseReduce()
  nameWithType: NotifyExpressionBase.BaseReduce()
- uid: NMF.Expressions.NotifyExpressionBase.BaseReduce*
  name: BaseReduce
  href: api/Expressions/NMF.Expressions.NotifyExpressionBase.html#NMF_Expressions_NotifyExpressionBase_BaseReduce_
  commentId: Overload:NMF.Expressions.NotifyExpressionBase.BaseReduce
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpressionBase.BaseReduce
  nameWithType: NotifyExpressionBase.BaseReduce
- uid: NMF.Expressions.NotifyExpressionBase.Reduce
  name: Reduce()
  href: api/Expressions/NMF.Expressions.NotifyExpressionBase.html#NMF_Expressions_NotifyExpressionBase_Reduce
  commentId: M:NMF.Expressions.NotifyExpressionBase.Reduce
  fullName: NMF.Expressions.NotifyExpressionBase.Reduce()
  nameWithType: NotifyExpressionBase.Reduce()
- uid: NMF.Expressions.NotifyExpressionBase.Reduce*
  name: Reduce
  href: api/Expressions/NMF.Expressions.NotifyExpressionBase.html#NMF_Expressions_NotifyExpressionBase_Reduce_
  commentId: Overload:NMF.Expressions.NotifyExpressionBase.Reduce
  isSpec: "True"
  fullName: NMF.Expressions.NotifyExpressionBase.Reduce
  nameWithType: NotifyExpressionBase.Reduce
- uid: NMF.Expressions.NotifyReversableValue`1
  name: NotifyReversableValue<T>
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html
  commentId: T:NMF.Expressions.NotifyReversableValue`1
  name.vb: NotifyReversableValue(Of T)
  fullName: NMF.Expressions.NotifyReversableValue<T>
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T)
  nameWithType: NotifyReversableValue<T>
  nameWithType.vb: NotifyReversableValue(Of T)
- uid: NMF.Expressions.NotifyReversableValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0}},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: NotifyReversableValue(Expression<Func<T>>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1__ctor_System_Linq_Expressions_Expression_System_Func__0___System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.NotifyReversableValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0}},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: NotifyReversableValue(Expression(Of Func(Of T)), IDictionary(Of String, Object))
  fullName: NMF.Expressions.NotifyReversableValue<T>.NotifyReversableValue(System.Linq.Expressions.Expression<System.Func<T>>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).NotifyReversableValue(System.Linq.Expressions.Expression(Of System.Func(Of T)), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: NotifyReversableValue<T>.NotifyReversableValue(Expression<Func<T>>, IDictionary<String, Object>)
  nameWithType.vb: NotifyReversableValue(Of T).NotifyReversableValue(Expression(Of Func(Of T)), IDictionary(Of String, Object))
- uid: NMF.Expressions.NotifyReversableValue`1.#ctor*
  name: NotifyReversableValue
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1__ctor_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.NotifyReversableValue
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).NotifyReversableValue
  nameWithType: NotifyReversableValue<T>.NotifyReversableValue
  nameWithType.vb: NotifyReversableValue(Of T).NotifyReversableValue
- uid: NMF.Expressions.NotifyReversableValue`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Dependencies
  commentId: P:NMF.Expressions.NotifyReversableValue`1.Dependencies
  fullName: NMF.Expressions.NotifyReversableValue<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Dependencies
  nameWithType: NotifyReversableValue<T>.Dependencies
  nameWithType.vb: NotifyReversableValue(Of T).Dependencies
- uid: NMF.Expressions.NotifyReversableValue`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Dependencies_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Dependencies
  nameWithType: NotifyReversableValue<T>.Dependencies
  nameWithType.vb: NotifyReversableValue(Of T).Dependencies
- uid: NMF.Expressions.NotifyReversableValue`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Dispose
  commentId: M:NMF.Expressions.NotifyReversableValue`1.Dispose
  fullName: NMF.Expressions.NotifyReversableValue<T>.Dispose()
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Dispose()
  nameWithType: NotifyReversableValue<T>.Dispose()
  nameWithType.vb: NotifyReversableValue(Of T).Dispose()
- uid: NMF.Expressions.NotifyReversableValue`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Dispose_System_Boolean_
  commentId: M:NMF.Expressions.NotifyReversableValue`1.Dispose(System.Boolean)
  fullName: NMF.Expressions.NotifyReversableValue<T>.Dispose(System.Boolean)
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Dispose(System.Boolean)
  nameWithType: NotifyReversableValue<T>.Dispose(Boolean)
  nameWithType.vb: NotifyReversableValue(Of T).Dispose(Boolean)
- uid: NMF.Expressions.NotifyReversableValue`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Dispose_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.Dispose
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Dispose
  nameWithType: NotifyReversableValue<T>.Dispose
  nameWithType.vb: NotifyReversableValue(Of T).Dispose
- uid: NMF.Expressions.NotifyReversableValue`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyReversableValue`1.ExecutionMetaData
  fullName: NMF.Expressions.NotifyReversableValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).ExecutionMetaData
  nameWithType: NotifyReversableValue<T>.ExecutionMetaData
  nameWithType.vb: NotifyReversableValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyReversableValue`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).ExecutionMetaData
  nameWithType: NotifyReversableValue<T>.ExecutionMetaData
  nameWithType.vb: NotifyReversableValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyReversableValue`1.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_IsReversable
  commentId: P:NMF.Expressions.NotifyReversableValue`1.IsReversable
  fullName: NMF.Expressions.NotifyReversableValue<T>.IsReversable
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).IsReversable
  nameWithType: NotifyReversableValue<T>.IsReversable
  nameWithType.vb: NotifyReversableValue(Of T).IsReversable
- uid: NMF.Expressions.NotifyReversableValue`1.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_IsReversable_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.IsReversable
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).IsReversable
  nameWithType: NotifyReversableValue<T>.IsReversable
  nameWithType.vb: NotifyReversableValue(Of T).IsReversable
- uid: NMF.Expressions.NotifyReversableValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.NotifyReversableValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.NotifyReversableValue<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: NotifyReversableValue<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: NotifyReversableValue(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.NotifyReversableValue`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Notify_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.Notify
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Notify
  nameWithType: NotifyReversableValue<T>.Notify
  nameWithType.vb: NotifyReversableValue(Of T).Notify
- uid: NMF.Expressions.NotifyReversableValue`1.OnAttach
  name: OnAttach()
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnAttach
  commentId: M:NMF.Expressions.NotifyReversableValue`1.OnAttach
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnAttach()
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnAttach()
  nameWithType: NotifyReversableValue<T>.OnAttach()
  nameWithType.vb: NotifyReversableValue(Of T).OnAttach()
- uid: NMF.Expressions.NotifyReversableValue`1.OnAttach*
  name: OnAttach
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnAttach_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.OnAttach
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnAttach
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnAttach
  nameWithType: NotifyReversableValue<T>.OnAttach
  nameWithType.vb: NotifyReversableValue(Of T).OnAttach
- uid: NMF.Expressions.NotifyReversableValue`1.OnDetach
  name: OnDetach()
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnDetach
  commentId: M:NMF.Expressions.NotifyReversableValue`1.OnDetach
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnDetach()
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnDetach()
  nameWithType: NotifyReversableValue<T>.OnDetach()
  nameWithType.vb: NotifyReversableValue(Of T).OnDetach()
- uid: NMF.Expressions.NotifyReversableValue`1.OnDetach*
  name: OnDetach
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnDetach_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.OnDetach
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnDetach
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnDetach
  nameWithType: NotifyReversableValue<T>.OnDetach
  nameWithType.vb: NotifyReversableValue(Of T).OnDetach
- uid: NMF.Expressions.NotifyReversableValue`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnPropertyChanged_System_String_
  commentId: M:NMF.Expressions.NotifyReversableValue`1.OnPropertyChanged(System.String)
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnPropertyChanged(System.String)
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnPropertyChanged(System.String)
  nameWithType: NotifyReversableValue<T>.OnPropertyChanged(String)
  nameWithType.vb: NotifyReversableValue(Of T).OnPropertyChanged(String)
- uid: NMF.Expressions.NotifyReversableValue`1.OnPropertyChanged*
  name: OnPropertyChanged
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnPropertyChanged_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.OnPropertyChanged
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnPropertyChanged
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnPropertyChanged
  nameWithType: NotifyReversableValue<T>.OnPropertyChanged
  nameWithType.vb: NotifyReversableValue(Of T).OnPropertyChanged
- uid: NMF.Expressions.NotifyReversableValue`1.OnValueChanged(`0,`0)
  name: OnValueChanged(T, T)
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnValueChanged__0__0_
  commentId: M:NMF.Expressions.NotifyReversableValue`1.OnValueChanged(`0,`0)
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnValueChanged(T, T)
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnValueChanged(T, T)
  nameWithType: NotifyReversableValue<T>.OnValueChanged(T, T)
  nameWithType.vb: NotifyReversableValue(Of T).OnValueChanged(T, T)
- uid: NMF.Expressions.NotifyReversableValue`1.OnValueChanged*
  name: OnValueChanged
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_OnValueChanged_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.OnValueChanged
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.OnValueChanged
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).OnValueChanged
  nameWithType: NotifyReversableValue<T>.OnValueChanged
  nameWithType.vb: NotifyReversableValue(Of T).OnValueChanged
- uid: NMF.Expressions.NotifyReversableValue`1.PropertyChanged
  name: PropertyChanged
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_PropertyChanged
  commentId: E:NMF.Expressions.NotifyReversableValue`1.PropertyChanged
  fullName: NMF.Expressions.NotifyReversableValue<T>.PropertyChanged
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).PropertyChanged
  nameWithType: NotifyReversableValue<T>.PropertyChanged
  nameWithType.vb: NotifyReversableValue(Of T).PropertyChanged
- uid: NMF.Expressions.NotifyReversableValue`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Successors
  commentId: P:NMF.Expressions.NotifyReversableValue`1.Successors
  fullName: NMF.Expressions.NotifyReversableValue<T>.Successors
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Successors
  nameWithType: NotifyReversableValue<T>.Successors
  nameWithType.vb: NotifyReversableValue(Of T).Successors
- uid: NMF.Expressions.NotifyReversableValue`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Successors_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.Successors
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Successors
  nameWithType: NotifyReversableValue<T>.Successors
  nameWithType.vb: NotifyReversableValue(Of T).Successors
- uid: NMF.Expressions.NotifyReversableValue`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Value
  commentId: P:NMF.Expressions.NotifyReversableValue`1.Value
  fullName: NMF.Expressions.NotifyReversableValue<T>.Value
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Value
  nameWithType: NotifyReversableValue<T>.Value
  nameWithType.vb: NotifyReversableValue(Of T).Value
- uid: NMF.Expressions.NotifyReversableValue`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_Value_
  commentId: Overload:NMF.Expressions.NotifyReversableValue`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.NotifyReversableValue<T>.Value
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).Value
  nameWithType: NotifyReversableValue<T>.Value
  nameWithType.vb: NotifyReversableValue(Of T).Value
- uid: NMF.Expressions.NotifyReversableValue`1.ValueChanged
  name: ValueChanged
  href: api/Expressions/NMF.Expressions.NotifyReversableValue-1.html#NMF_Expressions_NotifyReversableValue_1_ValueChanged
  commentId: E:NMF.Expressions.NotifyReversableValue`1.ValueChanged
  fullName: NMF.Expressions.NotifyReversableValue<T>.ValueChanged
  fullName.vb: NMF.Expressions.NotifyReversableValue(Of T).ValueChanged
  nameWithType: NotifyReversableValue<T>.ValueChanged
  nameWithType.vb: NotifyReversableValue(Of T).ValueChanged
- uid: NMF.Expressions.NotifySystem
  name: NotifySystem
  href: api/Expressions/NMF.Expressions.NotifySystem.html
  commentId: T:NMF.Expressions.NotifySystem
  fullName: NMF.Expressions.NotifySystem
  nameWithType: NotifySystem
- uid: NMF.Expressions.NotifySystem.CreateExpression*
  name: CreateExpression
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_CreateExpression_
  commentId: Overload:NMF.Expressions.NotifySystem.CreateExpression
  isSpec: "True"
  fullName: NMF.Expressions.NotifySystem.CreateExpression
  nameWithType: NotifySystem.CreateExpression
- uid: NMF.Expressions.NotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_CreateExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.NotifySystem.CreateExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.NotifySystem.CreateExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.NotifySystem.CreateExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: NotifySystem.CreateExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: NotifySystem.CreateExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.NotifySystem.CreateReversableExpression*
  name: CreateReversableExpression
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_CreateReversableExpression_
  commentId: Overload:NMF.Expressions.NotifySystem.CreateReversableExpression
  isSpec: "True"
  fullName: NMF.Expressions.NotifySystem.CreateReversableExpression
  nameWithType: NotifySystem.CreateReversableExpression
- uid: NMF.Expressions.NotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_CreateReversableExpression__1_System_Linq_Expressions_Expression_System_Collections_Generic_IEnumerable_System_Linq_Expressions_ParameterExpression__System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:NMF.Expressions.NotifySystem.CreateReversableExpression``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
  fullName: NMF.Expressions.NotifySystem.CreateReversableExpression<T>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IDictionary<System.String, System.Object>)
  fullName.vb: NMF.Expressions.NotifySystem.CreateReversableExpression(Of T)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IDictionary(Of System.String, System.Object))
  nameWithType: NotifySystem.CreateReversableExpression<T>(Expression, IEnumerable<ParameterExpression>, IDictionary<String, Object>)
  nameWithType.vb: NotifySystem.CreateReversableExpression(Of T)(Expression, IEnumerable(Of ParameterExpression), IDictionary(Of String, Object))
- uid: NMF.Expressions.NotifySystem.DefaultSystem
  name: DefaultSystem
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_DefaultSystem
  commentId: P:NMF.Expressions.NotifySystem.DefaultSystem
  fullName: NMF.Expressions.NotifySystem.DefaultSystem
  nameWithType: NotifySystem.DefaultSystem
- uid: NMF.Expressions.NotifySystem.DefaultSystem*
  name: DefaultSystem
  href: api/Expressions/NMF.Expressions.NotifySystem.html#NMF_Expressions_NotifySystem_DefaultSystem_
  commentId: Overload:NMF.Expressions.NotifySystem.DefaultSystem
  isSpec: "True"
  fullName: NMF.Expressions.NotifySystem.DefaultSystem
  nameWithType: NotifySystem.DefaultSystem
- uid: NMF.Expressions.NotifyValue`1
  name: NotifyValue<T>
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html
  commentId: T:NMF.Expressions.NotifyValue`1
  name.vb: NotifyValue(Of T)
  fullName: NMF.Expressions.NotifyValue<T>
  fullName.vb: NMF.Expressions.NotifyValue(Of T)
  nameWithType: NotifyValue<T>
  nameWithType.vb: NotifyValue(Of T)
- uid: NMF.Expressions.NotifyValue`1.Dependencies
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dependencies
  commentId: P:NMF.Expressions.NotifyValue`1.Dependencies
  fullName: NMF.Expressions.NotifyValue<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dependencies
  nameWithType: NotifyValue<T>.Dependencies
  nameWithType.vb: NotifyValue(Of T).Dependencies
- uid: NMF.Expressions.NotifyValue`1.Dependencies*
  name: Dependencies
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dependencies_
  commentId: Overload:NMF.Expressions.NotifyValue`1.Dependencies
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.Dependencies
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dependencies
  nameWithType: NotifyValue<T>.Dependencies
  nameWithType.vb: NotifyValue(Of T).Dependencies
- uid: NMF.Expressions.NotifyValue`1.Dispose
  name: Dispose()
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose
  commentId: M:NMF.Expressions.NotifyValue`1.Dispose
  fullName: NMF.Expressions.NotifyValue<T>.Dispose()
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dispose()
  nameWithType: NotifyValue<T>.Dispose()
  nameWithType.vb: NotifyValue(Of T).Dispose()
- uid: NMF.Expressions.NotifyValue`1.Dispose*
  name: Dispose
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Dispose_
  commentId: Overload:NMF.Expressions.NotifyValue`1.Dispose
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.Dispose
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Dispose
  nameWithType: NotifyValue<T>.Dispose
  nameWithType.vb: NotifyValue(Of T).Dispose
- uid: NMF.Expressions.NotifyValue`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ExecutionMetaData
  commentId: P:NMF.Expressions.NotifyValue`1.ExecutionMetaData
  fullName: NMF.Expressions.NotifyValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyValue(Of T).ExecutionMetaData
  nameWithType: NotifyValue<T>.ExecutionMetaData
  nameWithType.vb: NotifyValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyValue`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ExecutionMetaData_
  commentId: Overload:NMF.Expressions.NotifyValue`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.ExecutionMetaData
  fullName.vb: NMF.Expressions.NotifyValue(Of T).ExecutionMetaData
  nameWithType: NotifyValue<T>.ExecutionMetaData
  nameWithType.vb: NotifyValue(Of T).ExecutionMetaData
- uid: NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  commentId: M:NMF.Expressions.NotifyValue`1.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Expressions.NotifyValue<T>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  nameWithType: NotifyValue<T>.Notify(IList<INotificationResult>)
  nameWithType.vb: NotifyValue(Of T).Notify(IList(Of INotificationResult))
- uid: NMF.Expressions.NotifyValue`1.Notify*
  name: Notify
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Notify_
  commentId: Overload:NMF.Expressions.NotifyValue`1.Notify
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.Notify
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Notify
  nameWithType: NotifyValue<T>.Notify
  nameWithType.vb: NotifyValue(Of T).Notify
- uid: NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
  name: OnValueChanged(T, T)
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged__0__0_
  commentId: M:NMF.Expressions.NotifyValue`1.OnValueChanged(`0,`0)
  fullName: NMF.Expressions.NotifyValue<T>.OnValueChanged(T, T)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).OnValueChanged(T, T)
  nameWithType: NotifyValue<T>.OnValueChanged(T, T)
  nameWithType.vb: NotifyValue(Of T).OnValueChanged(T, T)
- uid: NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  name: OnValueChanged(ValueChangedEventArgs)
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_NMF_Expressions_ValueChangedEventArgs_
  commentId: M:NMF.Expressions.NotifyValue`1.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  fullName: NMF.Expressions.NotifyValue<T>.OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  fullName.vb: NMF.Expressions.NotifyValue(Of T).OnValueChanged(NMF.Expressions.ValueChangedEventArgs)
  nameWithType: NotifyValue<T>.OnValueChanged(ValueChangedEventArgs)
  nameWithType.vb: NotifyValue(Of T).OnValueChanged(ValueChangedEventArgs)
- uid: NMF.Expressions.NotifyValue`1.OnValueChanged*
  name: OnValueChanged
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_OnValueChanged_
  commentId: Overload:NMF.Expressions.NotifyValue`1.OnValueChanged
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.OnValueChanged
  fullName.vb: NMF.Expressions.NotifyValue(Of T).OnValueChanged
  nameWithType: NotifyValue<T>.OnValueChanged
  nameWithType.vb: NotifyValue(Of T).OnValueChanged
- uid: NMF.Expressions.NotifyValue`1.Successors
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Successors
  commentId: P:NMF.Expressions.NotifyValue`1.Successors
  fullName: NMF.Expressions.NotifyValue<T>.Successors
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Successors
  nameWithType: NotifyValue<T>.Successors
  nameWithType.vb: NotifyValue(Of T).Successors
- uid: NMF.Expressions.NotifyValue`1.Successors*
  name: Successors
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Successors_
  commentId: Overload:NMF.Expressions.NotifyValue`1.Successors
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.Successors
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Successors
  nameWithType: NotifyValue<T>.Successors
  nameWithType.vb: NotifyValue(Of T).Successors
- uid: NMF.Expressions.NotifyValue`1.Value
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Value
  commentId: P:NMF.Expressions.NotifyValue`1.Value
  fullName: NMF.Expressions.NotifyValue<T>.Value
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Value
  nameWithType: NotifyValue<T>.Value
  nameWithType.vb: NotifyValue(Of T).Value
- uid: NMF.Expressions.NotifyValue`1.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_Value_
  commentId: Overload:NMF.Expressions.NotifyValue`1.Value
  isSpec: "True"
  fullName: NMF.Expressions.NotifyValue<T>.Value
  fullName.vb: NMF.Expressions.NotifyValue(Of T).Value
  nameWithType: NotifyValue<T>.Value
  nameWithType.vb: NotifyValue(Of T).Value
- uid: NMF.Expressions.NotifyValue`1.ValueChanged
  name: ValueChanged
  href: api/Expressions/NMF.Expressions.NotifyValue-1.html#NMF_Expressions_NotifyValue_1_ValueChanged
  commentId: E:NMF.Expressions.NotifyValue`1.ValueChanged
  fullName: NMF.Expressions.NotifyValue<T>.ValueChanged
  fullName.vb: NMF.Expressions.NotifyValue(Of T).ValueChanged
  nameWithType: NotifyValue<T>.ValueChanged
  nameWithType.vb: NotifyValue(Of T).ValueChanged
- uid: NMF.Expressions.Observable
  name: Observable
  href: api/Expressions/NMF.Expressions.Observable.html
  commentId: T:NMF.Expressions.Observable
  fullName: NMF.Expressions.Observable
  nameWithType: Observable
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name: Add(INotifyExpression<Double>, INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_Double__NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Add(INotifyExpression(Of Double), INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.Double>, NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.Double), NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Add(INotifyExpression<Double>, INotifyExpression<Double>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of Double), INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Add(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Add(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Add(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Add(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Add(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Add(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name: Add(INotifyExpression<Single>, INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_Single__NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Add(INotifyExpression(Of Single), INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.Single>, NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.Single), NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Add(INotifyExpression<Single>, INotifyExpression<Single>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of Single), INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.String},NMF.Expressions.INotifyExpression{System.String})
  name: Add(INotifyExpression<String>, INotifyExpression<String>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_String__NMF_Expressions_INotifyExpression_System_String__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.String},NMF.Expressions.INotifyExpression{System.String})
  name.vb: Add(INotifyExpression(Of String), INotifyExpression(Of String))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.String>, NMF.Expressions.INotifyExpression<System.String>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.String), NMF.Expressions.INotifyExpression(Of System.String))
  nameWithType: Observable.Add(INotifyExpression<String>, INotifyExpression<String>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of String), INotifyExpression(Of String))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Add(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Add(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Add(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Add(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Add(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Add(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Add(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Add(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Add*
  name: Add
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Add_
  commentId: Overload:NMF.Expressions.Observable.Add
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Add
  nameWithType: Observable.Add
- uid: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name: And(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: And(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.And(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  nameWithType.vb: Observable.And(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: And(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: And(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.And(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.And(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: And(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: And(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.And(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.And(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: And(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: And(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.And(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.And(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: And(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: And(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.And(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.And(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.And(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.And*
  name: And
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_And_
  commentId: Overload:NMF.Expressions.Observable.And
  isSpec: "True"
  fullName: NMF.Expressions.Observable.And
  nameWithType: Observable.And
- uid: NMF.Expressions.Observable.AndAlso(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name: AndAlso(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_AndAlso_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.AndAlso(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: AndAlso(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.AndAlso(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.AndAlso(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.AndAlso(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  nameWithType.vb: Observable.AndAlso(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.AndAlso*
  name: AndAlso
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_AndAlso_
  commentId: Overload:NMF.Expressions.Observable.AndAlso
  isSpec: "True"
  fullName: NMF.Expressions.Observable.AndAlso
  nameWithType: Observable.AndAlso
- uid: NMF.Expressions.Observable.ArrayIndex*
  name: ArrayIndex
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_ArrayIndex_
  commentId: Overload:NMF.Expressions.Observable.ArrayIndex
  isSpec: "True"
  fullName: NMF.Expressions.Observable.ArrayIndex
  nameWithType: Observable.ArrayIndex
- uid: NMF.Expressions.Observable.ArrayIndex``1(NMF.Expressions.INotifyExpression{``0[]},NMF.Expressions.INotifyExpression{System.Int32})
  name: ArrayIndex<T>(INotifyExpression<T[]>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_ArrayIndex__1_NMF_Expressions_INotifyExpression___0____NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.ArrayIndex``1(NMF.Expressions.INotifyExpression{``0[]},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: ArrayIndex(Of T)(INotifyExpression(Of T()), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.ArrayIndex<T>(NMF.Expressions.INotifyExpression<T[]>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.ArrayIndex(Of T)(NMF.Expressions.INotifyExpression(Of T()), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.ArrayIndex<T>(INotifyExpression<T[]>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.ArrayIndex(Of T)(INotifyExpression(Of T()), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.ArrayIndex``1(NMF.Expressions.INotifyExpression{``0[]},NMF.Expressions.INotifyExpression{System.Int64})
  name: ArrayIndex<T>(INotifyExpression<T[]>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_ArrayIndex__1_NMF_Expressions_INotifyExpression___0____NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.ArrayIndex``1(NMF.Expressions.INotifyExpression{``0[]},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: ArrayIndex(Of T)(INotifyExpression(Of T()), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.ArrayIndex<T>(NMF.Expressions.INotifyExpression<T[]>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.ArrayIndex(Of T)(NMF.Expressions.INotifyExpression(Of T()), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.ArrayIndex<T>(INotifyExpression<T[]>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.ArrayIndex(Of T)(INotifyExpression(Of T()), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.ArrayInitialization*
  name: ArrayInitialization
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_ArrayInitialization_
  commentId: Overload:NMF.Expressions.Observable.ArrayInitialization
  isSpec: "True"
  fullName: NMF.Expressions.Observable.ArrayInitialization
  nameWithType: Observable.ArrayInitialization
- uid: NMF.Expressions.Observable.ArrayInitialization``1(System.Collections.Generic.IEnumerable{NMF.Expressions.INotifyExpression{``0}})
  name: ArrayInitialization<T>(IEnumerable<INotifyExpression<T>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_ArrayInitialization__1_System_Collections_Generic_IEnumerable_NMF_Expressions_INotifyExpression___0___
  commentId: M:NMF.Expressions.Observable.ArrayInitialization``1(System.Collections.Generic.IEnumerable{NMF.Expressions.INotifyExpression{``0}})
  name.vb: ArrayInitialization(Of T)(IEnumerable(Of INotifyExpression(Of T)))
  fullName: NMF.Expressions.Observable.ArrayInitialization<T>(System.Collections.Generic.IEnumerable<NMF.Expressions.INotifyExpression<T>>)
  fullName.vb: NMF.Expressions.Observable.ArrayInitialization(Of T)(System.Collections.Generic.IEnumerable(Of NMF.Expressions.INotifyExpression(Of T)))
  nameWithType: Observable.ArrayInitialization<T>(IEnumerable<INotifyExpression<T>>)
  nameWithType.vb: Observable.ArrayInitialization(Of T)(IEnumerable(Of INotifyExpression(Of T)))
- uid: NMF.Expressions.Observable.As*
  name: As
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_As_
  commentId: Overload:NMF.Expressions.Observable.As
  isSpec: "True"
  fullName: NMF.Expressions.Observable.As
  nameWithType: Observable.As
- uid: NMF.Expressions.Observable.As``2(NMF.Expressions.INotifyExpression{``0})
  name: As<TInner, TOuter>(INotifyExpression<TInner>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_As__2_NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.As``2(NMF.Expressions.INotifyExpression{``0})
  name.vb: As(Of TInner, TOuter)(INotifyExpression(Of TInner))
  fullName: NMF.Expressions.Observable.As<TInner, TOuter>(NMF.Expressions.INotifyExpression<TInner>)
  fullName.vb: NMF.Expressions.Observable.As(Of TInner, TOuter)(NMF.Expressions.INotifyExpression(Of TInner))
  nameWithType: Observable.As<TInner, TOuter>(INotifyExpression<TInner>)
  nameWithType.vb: Observable.As(Of TInner, TOuter)(INotifyExpression(Of TInner))
- uid: NMF.Expressions.Observable.Box*
  name: Box
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Box_
  commentId: Overload:NMF.Expressions.Observable.Box
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Box
  nameWithType: Observable.Box
- uid: NMF.Expressions.Observable.Box``1(NMF.Expressions.INotifyExpression{``0})
  name: Box<T>(INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Box__1_NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.Box``1(NMF.Expressions.INotifyExpression{``0})
  name.vb: Box(Of T)(INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.Box<T>(NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.Box(Of T)(NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.Box<T>(INotifyExpression<T>)
  nameWithType.vb: Observable.Box(Of T)(INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.Box``1(NMF.Expressions.INotifyReversableExpression{``0})
  name: Box<T>(INotifyReversableExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Box__1_NMF_Expressions_INotifyReversableExpression___0__
  commentId: M:NMF.Expressions.Observable.Box``1(NMF.Expressions.INotifyReversableExpression{``0})
  name.vb: Box(Of T)(INotifyReversableExpression(Of T))
  fullName: NMF.Expressions.Observable.Box<T>(NMF.Expressions.INotifyReversableExpression<T>)
  fullName.vb: NMF.Expressions.Observable.Box(Of T)(NMF.Expressions.INotifyReversableExpression(Of T))
  nameWithType: Observable.Box<T>(INotifyReversableExpression<T>)
  nameWithType.vb: Observable.Box(Of T)(INotifyReversableExpression(Of T))
- uid: NMF.Expressions.Observable.Coalesce*
  name: Coalesce
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Coalesce_
  commentId: Overload:NMF.Expressions.Observable.Coalesce
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Coalesce
  nameWithType: Observable.Coalesce
- uid: NMF.Expressions.Observable.Coalesce``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: Coalesce<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Coalesce__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.Coalesce``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: Coalesce(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.Coalesce<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.Coalesce(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.Coalesce<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.Coalesce(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.Conditional*
  name: Conditional
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Conditional_
  commentId: Overload:NMF.Expressions.Observable.Conditional
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Conditional
  nameWithType: Observable.Conditional
- uid: NMF.Expressions.Observable.Conditional``1(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: Conditional<T>(INotifyExpression<Boolean>, INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Conditional__1_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.Conditional``1(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: Conditional(Of T)(INotifyExpression(Of Boolean), INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.Conditional<T>(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.Conditional(Of T)(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.Conditional<T>(INotifyExpression<Boolean>, INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.Conditional(Of T)(INotifyExpression(Of Boolean), INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.Constant*
  name: Constant
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Constant_
  commentId: Overload:NMF.Expressions.Observable.Constant
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Constant
  nameWithType: Observable.Constant
- uid: NMF.Expressions.Observable.Constant``1(``0)
  name: Constant<T>(T)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Constant__1___0_
  commentId: M:NMF.Expressions.Observable.Constant``1(``0)
  name.vb: Constant(Of T)(T)
  fullName: NMF.Expressions.Observable.Constant<T>(T)
  fullName.vb: NMF.Expressions.Observable.Constant(Of T)(T)
  nameWithType: Observable.Constant<T>(T)
  nameWithType.vb: Observable.Constant(Of T)(T)
- uid: NMF.Expressions.Observable.Convert*
  name: Convert
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Convert_
  commentId: Overload:NMF.Expressions.Observable.Convert
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Convert
  nameWithType: Observable.Convert
- uid: NMF.Expressions.Observable.Convert``2(NMF.Expressions.INotifyExpression{``0})
  name: Convert<TSource, TTarget>(INotifyExpression<TSource>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Convert__2_NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.Convert``2(NMF.Expressions.INotifyExpression{``0})
  name.vb: Convert(Of TSource, TTarget)(INotifyExpression(Of TSource))
  fullName: NMF.Expressions.Observable.Convert<TSource, TTarget>(NMF.Expressions.INotifyExpression<TSource>)
  fullName.vb: NMF.Expressions.Observable.Convert(Of TSource, TTarget)(NMF.Expressions.INotifyExpression(Of TSource))
  nameWithType: Observable.Convert<TSource, TTarget>(INotifyExpression<TSource>)
  nameWithType.vb: Observable.Convert(Of TSource, TTarget)(INotifyExpression(Of TSource))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name: Divide(INotifyExpression<Double>, INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_Double__NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Divide(INotifyExpression(Of Double), INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.Double>, NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.Double), NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Divide(INotifyExpression<Double>, INotifyExpression<Double>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of Double), INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Divide(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Divide(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Divide(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Divide(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Divide(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Divide(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name: Divide(INotifyExpression<Single>, INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_Single__NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Divide(INotifyExpression(Of Single), INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.Single>, NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.Single), NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Divide(INotifyExpression<Single>, INotifyExpression<Single>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of Single), INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Divide(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Divide(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Divide(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Divide(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Divide(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Divide(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Divide(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Divide(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Divide*
  name: Divide
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Divide_
  commentId: Overload:NMF.Expressions.Observable.Divide
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Divide
  nameWithType: Observable.Divide
- uid: NMF.Expressions.Observable.Equals*
  name: Equals
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Equals_
  commentId: Overload:NMF.Expressions.Observable.Equals
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Equals
  nameWithType: Observable.Equals
- uid: NMF.Expressions.Observable.Equals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: Equals<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Equals__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.Equals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: Equals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.Equals<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.Equals(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.Equals<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.Equals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.Expression*
  name: Expression
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Expression_
  commentId: Overload:NMF.Expressions.Observable.Expression
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Expression
  nameWithType: Observable.Expression
- uid: NMF.Expressions.Observable.Expression``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name: Expression<T>(Expression<Func<T>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Expression__1_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NMF.Expressions.Observable.Expression``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: Expression(Of T)(Expression(Of Func(Of T)))
  fullName: NMF.Expressions.Observable.Expression<T>(System.Linq.Expressions.Expression<System.Func<T>>)
  fullName.vb: NMF.Expressions.Observable.Expression(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T)))
  nameWithType: Observable.Expression<T>(Expression<Func<T>>)
  nameWithType.vb: Observable.Expression(Of T)(Expression(Of Func(Of T)))
- uid: NMF.Expressions.Observable.Func*
  name: Func
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func_
  commentId: Overload:NMF.Expressions.Observable.Func
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Func
  nameWithType: Observable.Func
- uid: NMF.Expressions.Observable.Func``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__10_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___
  commentId: M:NMF.Expressions.Observable.Func``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
- uid: NMF.Expressions.Observable.Func``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__10_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___System_Action___0___1___2___3___4___5___6___7___8___9__
  commentId: M:NMF.Expressions.Observable.Func``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
- uid: NMF.Expressions.Observable.Func``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__11_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___
  commentId: M:NMF.Expressions.Observable.Func``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
- uid: NMF.Expressions.Observable.Func``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__11_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___System_Action___0___1___2___3___4___5___6___7___8___9___10__
  commentId: M:NMF.Expressions.Observable.Func``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
- uid: NMF.Expressions.Observable.Func``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__12_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___
  commentId: M:NMF.Expressions.Observable.Func``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
- uid: NMF.Expressions.Observable.Func``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__12_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___System_Action___0___1___2___3___4___5___6___7___8___9___10___11__
  commentId: M:NMF.Expressions.Observable.Func``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
- uid: NMF.Expressions.Observable.Func``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__13_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___
  commentId: M:NMF.Expressions.Observable.Func``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
- uid: NMF.Expressions.Observable.Func``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__13_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___System_Action___0___1___2___3___4___5___6___7___8___9___10___11___12__
  commentId: M:NMF.Expressions.Observable.Func``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
- uid: NMF.Expressions.Observable.Func``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__14_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___
  commentId: M:NMF.Expressions.Observable.Func``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
- uid: NMF.Expressions.Observable.Func``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__14_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___System_Action___0___1___2___3___4___5___6___7___8___9___10___11___12___13__
  commentId: M:NMF.Expressions.Observable.Func``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
- uid: NMF.Expressions.Observable.Func``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__15_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14___
  commentId: M:NMF.Expressions.Observable.Func``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
- uid: NMF.Expressions.Observable.Func``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__15_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14___System_Action___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14__
  commentId: M:NMF.Expressions.Observable.Func``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
- uid: NMF.Expressions.Observable.Func``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__16_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14___15___
  commentId: M:NMF.Expressions.Observable.Func``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
- uid: NMF.Expressions.Observable.Func``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__16_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14___15___System_Action___0___1___2___3___4___5___6___7___8___9___10___11___12___13___14___15__
  commentId: M:NMF.Expressions.Observable.Func``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
- uid: NMF.Expressions.Observable.Func``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Func<T1, TResult>(Expression<Func<T1, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__2_System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.Observable.Func``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Func(Of T1, TResult)(Expression(Of Func(Of T1, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, TResult>(System.Linq.Expressions.Expression<System.Func<T1, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)))
  nameWithType: Observable.Func<T1, TResult>(Expression<Func<T1, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, TResult)(Expression(Of Func(Of T1, TResult)))
- uid: NMF.Expressions.Observable.Func``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{``0,``1})
  name: Func<T1, TResult>(Expression<Func<T1, TResult>>, Action<T1, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__2_System_Linq_Expressions_Expression_System_Func___0___1___System_Action___0___1__
  commentId: M:NMF.Expressions.Observable.Func``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Action{``0,``1})
  name.vb: Func(Of T1, TResult)(Expression(Of Func(Of T1, TResult)), Action(Of T1, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, TResult>(System.Linq.Expressions.Expression<System.Func<T1, TResult>>, System.Action<T1, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)), System.Action(Of T1, TResult))
  nameWithType: Observable.Func<T1, TResult>(Expression<Func<T1, TResult>>, Action<T1, TResult>)
  nameWithType.vb: Observable.Func(Of T1, TResult)(Expression(Of Func(Of T1, TResult)), Action(Of T1, TResult))
- uid: NMF.Expressions.Observable.Func``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name: Func<T1, T2, TResult>(Expression<Func<T1, T2, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__3_System_Linq_Expressions_Expression_System_Func___0___1___2___
  commentId: M:NMF.Expressions.Observable.Func``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name.vb: Func(Of T1, T2, TResult)(Expression(Of Func(Of T1, T2, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)))
  nameWithType: Observable.Func<T1, T2, TResult>(Expression<Func<T1, T2, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, TResult)(Expression(Of Func(Of T1, T2, TResult)))
- uid: NMF.Expressions.Observable.Func``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Action{``0,``1,``2})
  name: Func<T1, T2, TResult>(Expression<Func<T1, T2, TResult>>, Action<T1, T2, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__3_System_Linq_Expressions_Expression_System_Func___0___1___2___System_Action___0___1___2__
  commentId: M:NMF.Expressions.Observable.Func``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Action{``0,``1,``2})
  name.vb: Func(Of T1, T2, TResult)(Expression(Of Func(Of T1, T2, TResult)), Action(Of T1, T2, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>, System.Action<T1, T2, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)), System.Action(Of T1, T2, TResult))
  nameWithType: Observable.Func<T1, T2, TResult>(Expression<Func<T1, T2, TResult>>, Action<T1, T2, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, TResult)(Expression(Of Func(Of T1, T2, TResult)), Action(Of T1, T2, TResult))
- uid: NMF.Expressions.Observable.Func``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  name: Func<T1, T2, T3, TResult>(Expression<Func<T1, T2, T3, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__4_System_Linq_Expressions_Expression_System_Func___0___1___2___3___
  commentId: M:NMF.Expressions.Observable.Func``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})
  name.vb: Func(Of T1, T2, T3, TResult)(Expression(Of Func(Of T1, T2, T3, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, TResult>(Expression<Func<T1, T2, T3, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, TResult)(Expression(Of Func(Of T1, T2, T3, TResult)))
- uid: NMF.Expressions.Observable.Func``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Action{``0,``1,``2,``3})
  name: Func<T1, T2, T3, TResult>(Expression<Func<T1, T2, T3, TResult>>, Action<T1, T2, T3, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__4_System_Linq_Expressions_Expression_System_Func___0___1___2___3___System_Action___0___1___2___3__
  commentId: M:NMF.Expressions.Observable.Func``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Action{``0,``1,``2,``3})
  name.vb: Func(Of T1, T2, T3, TResult)(Expression(Of Func(Of T1, T2, T3, TResult)), Action(Of T1, T2, T3, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>, System.Action<T1, T2, T3, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)), System.Action(Of T1, T2, T3, TResult))
  nameWithType: Observable.Func<T1, T2, T3, TResult>(Expression<Func<T1, T2, T3, TResult>>, Action<T1, T2, T3, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, TResult)(Expression(Of Func(Of T1, T2, T3, TResult)), Action(Of T1, T2, T3, TResult))
- uid: NMF.Expressions.Observable.Func``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  name: Func<T1, T2, T3, T4, TResult>(Expression<Func<T1, T2, T3, T4, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__5_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___
  commentId: M:NMF.Expressions.Observable.Func``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})
  name.vb: Func(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, TResult>(Expression<Func<T1, T2, T3, T4, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
- uid: NMF.Expressions.Observable.Func``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}},System.Action{``0,``1,``2,``3,``4})
  name: Func<T1, T2, T3, T4, TResult>(Expression<Func<T1, T2, T3, T4, TResult>>, Action<T1, T2, T3, T4, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__5_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___System_Action___0___1___2___3___4__
  commentId: M:NMF.Expressions.Observable.Func``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}},System.Action{``0,``1,``2,``3,``4})
  name.vb: Func(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of T1, T2, T3, T4, TResult)), Action(Of T1, T2, T3, T4, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>, System.Action<T1, T2, T3, T4, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)), System.Action(Of T1, T2, T3, T4, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, TResult>(Expression<Func<T1, T2, T3, T4, TResult>>, Action<T1, T2, T3, T4, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of T1, T2, T3, T4, TResult)), Action(Of T1, T2, T3, T4, TResult))
- uid: NMF.Expressions.Observable.Func``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  name: Func<T1, T2, T3, T4, T5, TResult>(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__6_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___
  commentId: M:NMF.Expressions.Observable.Func``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, TResult>(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
- uid: NMF.Expressions.Observable.Func``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}},System.Action{``0,``1,``2,``3,``4,``5})
  name: Func<T1, T2, T3, T4, T5, TResult>(Expression<Func<T1, T2, T3, T4, T5, TResult>>, Action<T1, T2, T3, T4, T5, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__6_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___System_Action___0___1___2___3___4___5__
  commentId: M:NMF.Expressions.Observable.Func``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}},System.Action{``0,``1,``2,``3,``4,``5})
  name.vb: Func(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)), Action(Of T1, T2, T3, T4, T5, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>, System.Action<T1, T2, T3, T4, T5, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)), System.Action(Of T1, T2, T3, T4, T5, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, TResult>(Expression<Func<T1, T2, T3, T4, T5, TResult>>, Action<T1, T2, T3, T4, T5, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)), Action(Of T1, T2, T3, T4, T5, TResult))
- uid: NMF.Expressions.Observable.Func``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  name: Func<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__7_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___
  commentId: M:NMF.Expressions.Observable.Func``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
- uid: NMF.Expressions.Observable.Func``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}},System.Action{``0,``1,``2,``3,``4,``5,``6})
  name: Func<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>, Action<T1, T2, T3, T4, T5, T6, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__7_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___System_Action___0___1___2___3___4___5___6__
  commentId: M:NMF.Expressions.Observable.Func``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}},System.Action{``0,``1,``2,``3,``4,``5,``6})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)), Action(Of T1, T2, T3, T4, T5, T6, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>, Action<T1, T2, T3, T4, T5, T6, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)), Action(Of T1, T2, T3, T4, T5, T6, TResult))
- uid: NMF.Expressions.Observable.Func``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__8_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___
  commentId: M:NMF.Expressions.Observable.Func``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
- uid: NMF.Expressions.Observable.Func``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7})
  name: Func<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__8_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___System_Action___0___1___2___3___4___5___6___7__
  commentId: M:NMF.Expressions.Observable.Func``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
- uid: NMF.Expressions.Observable.Func``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__9_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___
  commentId: M:NMF.Expressions.Observable.Func``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
- uid: NMF.Expressions.Observable.Func``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})
  name: Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Func__9_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7___8___System_Action___0___1___2___3___4___5___6___7___8__
  commentId: M:NMF.Expressions.Observable.Func``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8})
  name.vb: Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  fullName: NMF.Expressions.Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  fullName.vb: NMF.Expressions.Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  nameWithType: Observable.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  nameWithType.vb: Observable.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
- uid: NMF.Expressions.Observable.GreatherThan*
  name: GreatherThan
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_GreatherThan_
  commentId: Overload:NMF.Expressions.Observable.GreatherThan
  isSpec: "True"
  fullName: NMF.Expressions.Observable.GreatherThan
  nameWithType: Observable.GreatherThan
- uid: NMF.Expressions.Observable.GreatherThan``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: GreatherThan<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_GreatherThan__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.GreatherThan``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: GreatherThan(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.GreatherThan<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.GreatherThan(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.GreatherThan<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.GreatherThan(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.GreatherThanOrEquals*
  name: GreatherThanOrEquals
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_GreatherThanOrEquals_
  commentId: Overload:NMF.Expressions.Observable.GreatherThanOrEquals
  isSpec: "True"
  fullName: NMF.Expressions.Observable.GreatherThanOrEquals
  nameWithType: Observable.GreatherThanOrEquals
- uid: NMF.Expressions.Observable.GreatherThanOrEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: GreatherThanOrEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_GreatherThanOrEquals__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.GreatherThanOrEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: GreatherThanOrEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.GreatherThanOrEquals<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.GreatherThanOrEquals(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.GreatherThanOrEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.GreatherThanOrEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.InstanceIOf(NMF.Expressions.INotifyExpression{System.Object},System.Type)
  name: InstanceIOf(INotifyExpression<Object>, Type)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_InstanceIOf_NMF_Expressions_INotifyExpression_System_Object__System_Type_
  commentId: M:NMF.Expressions.Observable.InstanceIOf(NMF.Expressions.INotifyExpression{System.Object},System.Type)
  name.vb: InstanceIOf(INotifyExpression(Of Object), Type)
  fullName: NMF.Expressions.Observable.InstanceIOf(NMF.Expressions.INotifyExpression<System.Object>, System.Type)
  fullName.vb: NMF.Expressions.Observable.InstanceIOf(NMF.Expressions.INotifyExpression(Of System.Object), System.Type)
  nameWithType: Observable.InstanceIOf(INotifyExpression<Object>, Type)
  nameWithType.vb: Observable.InstanceIOf(INotifyExpression(Of Object), Type)
- uid: NMF.Expressions.Observable.InstanceIOf*
  name: InstanceIOf
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_InstanceIOf_
  commentId: Overload:NMF.Expressions.Observable.InstanceIOf
  isSpec: "True"
  fullName: NMF.Expressions.Observable.InstanceIOf
  nameWithType: Observable.InstanceIOf
- uid: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: LeftShift(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LeftShift_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: LeftShift(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.LeftShift(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.LeftShift(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int32})
  name: LeftShift(INotifyExpression<Int64>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LeftShift_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: LeftShift(INotifyExpression(Of Int64), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.LeftShift(INotifyExpression<Int64>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.LeftShift(INotifyExpression(Of Int64), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.Int32})
  name: LeftShift(INotifyExpression<UInt32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LeftShift_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: LeftShift(INotifyExpression(Of UInt32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.LeftShift(INotifyExpression<UInt32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.LeftShift(INotifyExpression(Of UInt32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.Int32})
  name: LeftShift(INotifyExpression<UInt64>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LeftShift_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: LeftShift(INotifyExpression(Of UInt64), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.LeftShift(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.LeftShift(INotifyExpression<UInt64>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.LeftShift(INotifyExpression(Of UInt64), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.LeftShift*
  name: LeftShift
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LeftShift_
  commentId: Overload:NMF.Expressions.Observable.LeftShift
  isSpec: "True"
  fullName: NMF.Expressions.Observable.LeftShift
  nameWithType: Observable.LeftShift
- uid: NMF.Expressions.Observable.LessThan*
  name: LessThan
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LessThan_
  commentId: Overload:NMF.Expressions.Observable.LessThan
  isSpec: "True"
  fullName: NMF.Expressions.Observable.LessThan
  nameWithType: Observable.LessThan
- uid: NMF.Expressions.Observable.LessThan``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: LessThan<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LessThan__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.LessThan``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: LessThan(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.LessThan<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.LessThan(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.LessThan<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.LessThan(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.LessThanOrEquals*
  name: LessThanOrEquals
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LessThanOrEquals_
  commentId: Overload:NMF.Expressions.Observable.LessThanOrEquals
  isSpec: "True"
  fullName: NMF.Expressions.Observable.LessThanOrEquals
  nameWithType: Observable.LessThanOrEquals
- uid: NMF.Expressions.Observable.LessThanOrEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: LessThanOrEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_LessThanOrEquals__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.LessThanOrEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: LessThanOrEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.LessThanOrEquals<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.LessThanOrEquals(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.LessThanOrEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.LessThanOrEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name: Modulo(INotifyExpression<Double>, INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_Double__NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Modulo(INotifyExpression(Of Double), INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.Double>, NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.Double), NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Modulo(INotifyExpression<Double>, INotifyExpression<Double>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of Double), INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Modulo(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Modulo(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Modulo(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Modulo(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Modulo(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Modulo(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name: Modulo(INotifyExpression<Single>, INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_Single__NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Modulo(INotifyExpression(Of Single), INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.Single>, NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.Single), NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Modulo(INotifyExpression<Single>, INotifyExpression<Single>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of Single), INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Modulo(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Modulo(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Modulo(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Modulo(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Modulo(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Modulo(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Modulo(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Modulo(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Modulo*
  name: Modulo
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Modulo_
  commentId: Overload:NMF.Expressions.Observable.Modulo
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Modulo
  nameWithType: Observable.Modulo
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name: Multiply(INotifyExpression<Double>, INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_Double__NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Multiply(INotifyExpression(Of Double), INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.Double>, NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.Double), NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Multiply(INotifyExpression<Double>, INotifyExpression<Double>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of Double), INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Multiply(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Multiply(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Multiply(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Multiply(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Multiply(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Multiply(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name: Multiply(INotifyExpression<Single>, INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_Single__NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Multiply(INotifyExpression(Of Single), INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.Single>, NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.Single), NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Multiply(INotifyExpression<Single>, INotifyExpression<Single>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of Single), INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Multiply(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Multiply(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Multiply(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Multiply(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Multiply(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Multiply(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Multiply(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Multiply(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Multiply*
  name: Multiply
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Multiply_
  commentId: Overload:NMF.Expressions.Observable.Multiply
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Multiply
  nameWithType: Observable.Multiply
- uid: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Double})
  name: Negate(INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Negate_NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Negate(INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Negate(INotifyExpression<Double>)
  nameWithType.vb: Observable.Negate(INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Int32})
  name: Negate(INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Negate_NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Negate(INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Negate(INotifyExpression<Int32>)
  nameWithType.vb: Observable.Negate(INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Int64})
  name: Negate(INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Negate_NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Negate(INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Negate(INotifyExpression<Int64>)
  nameWithType.vb: Observable.Negate(INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Single})
  name: Negate(INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Negate_NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Negate(INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Negate(NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Negate(INotifyExpression<Single>)
  nameWithType.vb: Observable.Negate(INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Negate*
  name: Negate
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Negate_
  commentId: Overload:NMF.Expressions.Observable.Negate
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Negate
  nameWithType: Observable.Negate
- uid: NMF.Expressions.Observable.NewArray*
  name: NewArray
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NewArray_
  commentId: Overload:NMF.Expressions.Observable.NewArray
  isSpec: "True"
  fullName: NMF.Expressions.Observable.NewArray
  nameWithType: Observable.NewArray
- uid: NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32})
  name: NewArray<T>(INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NewArray__1_NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: NewArray(Of T)(INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.NewArray<T>(NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.NewArray(Of T)(NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.NewArray<T>(INotifyExpression<Int32>)
  nameWithType.vb: Observable.NewArray(Of T)(INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: NewArray<T>(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NewArray__1_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: NewArray(Of T)(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.NewArray<T>(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.NewArray(Of T)(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.NewArray<T>(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.NewArray(Of T)(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: NewArray<T>(INotifyExpression<Int32>, INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NewArray__1_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.NewArray``1(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: NewArray(Of T)(INotifyExpression(Of Int32), INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.NewArray<T>(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.NewArray(Of T)(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.NewArray<T>(INotifyExpression<Int32>, INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.NewArray(Of T)(INotifyExpression(Of Int32), INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Not(NMF.Expressions.INotifyExpression{System.Boolean})
  name: Not(INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Not_NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.Not(NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: Not(INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.Not(NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.Not(NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.Not(INotifyExpression<Boolean>)
  nameWithType.vb: Observable.Not(INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.Not*
  name: Not
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Not_
  commentId: Overload:NMF.Expressions.Observable.Not
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Not
  nameWithType: Observable.Not
- uid: NMF.Expressions.Observable.NotEquals*
  name: NotEquals
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NotEquals_
  commentId: Overload:NMF.Expressions.Observable.NotEquals
  isSpec: "True"
  fullName: NMF.Expressions.Observable.NotEquals
  nameWithType: Observable.NotEquals
- uid: NMF.Expressions.Observable.NotEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name: NotEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_NotEquals__1_NMF_Expressions_INotifyExpression___0__NMF_Expressions_INotifyExpression___0__
  commentId: M:NMF.Expressions.Observable.NotEquals``1(NMF.Expressions.INotifyExpression{``0},NMF.Expressions.INotifyExpression{``0})
  name.vb: NotEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
  fullName: NMF.Expressions.Observable.NotEquals<T>(NMF.Expressions.INotifyExpression<T>, NMF.Expressions.INotifyExpression<T>)
  fullName.vb: NMF.Expressions.Observable.NotEquals(Of T)(NMF.Expressions.INotifyExpression(Of T), NMF.Expressions.INotifyExpression(Of T))
  nameWithType: Observable.NotEquals<T>(INotifyExpression<T>, INotifyExpression<T>)
  nameWithType.vb: Observable.NotEquals(Of T)(INotifyExpression(Of T), INotifyExpression(Of T))
- uid: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.Int32})
  name: OnesComplement(INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OnesComplement_NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: OnesComplement(INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.OnesComplement(INotifyExpression<Int32>)
  nameWithType.vb: Observable.OnesComplement(INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.Int64})
  name: OnesComplement(INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OnesComplement_NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: OnesComplement(INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.OnesComplement(INotifyExpression<Int64>)
  nameWithType.vb: Observable.OnesComplement(INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.UInt32})
  name: OnesComplement(INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OnesComplement_NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: OnesComplement(INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.OnesComplement(INotifyExpression<UInt32>)
  nameWithType.vb: Observable.OnesComplement(INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.UInt64})
  name: OnesComplement(INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OnesComplement_NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: OnesComplement(INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.OnesComplement(NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.OnesComplement(INotifyExpression<UInt64>)
  nameWithType.vb: Observable.OnesComplement(INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.OnesComplement*
  name: OnesComplement
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OnesComplement_
  commentId: Overload:NMF.Expressions.Observable.OnesComplement
  isSpec: "True"
  fullName: NMF.Expressions.Observable.OnesComplement
  nameWithType: Observable.OnesComplement
- uid: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name: Or(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: Or(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.Or(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  nameWithType.vb: Observable.Or(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Or(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Or(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Or(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Or(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Or(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Or(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Or(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Or(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Or(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Or(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Or(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Or(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Or(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Or(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Or(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Or(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Or(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Or*
  name: Or
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Or_
  commentId: Overload:NMF.Expressions.Observable.Or
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Or
  nameWithType: Observable.Or
- uid: NMF.Expressions.Observable.OrElse(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name: OrElse(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OrElse_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.OrElse(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: OrElse(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.OrElse(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.OrElse(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.OrElse(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  nameWithType.vb: Observable.OrElse(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.OrElse*
  name: OrElse
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_OrElse_
  commentId: Overload:NMF.Expressions.Observable.OrElse
  isSpec: "True"
  fullName: NMF.Expressions.Observable.OrElse
  nameWithType: Observable.OrElse
- uid: NMF.Expressions.Observable.Recurse*
  name: Recurse
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse_
  commentId: Overload:NMF.Expressions.Observable.Recurse
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Recurse
  nameWithType: Observable.Recurse
- uid: NMF.Expressions.Observable.Recurse``10(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  name: Recurse<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__10_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4___5___6___7___8___9____0___1___2___3___4___5___6___7___8___9___
  commentId: M:NMF.Expressions.Observable.Recurse``10(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})
  name.vb: Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
- uid: NMF.Expressions.Observable.Recurse``2(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1},``0,``1}})
  name: Recurse<T1, TResult>(Expression<Func<Func<T1, TResult>, T1, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__2_System_Linq_Expressions_Expression_System_Func_System_Func___0___1____0___1___
  commentId: M:NMF.Expressions.Observable.Recurse``2(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1},``0,``1}})
  name.vb: Recurse(Of T1, TResult)(Expression(Of Func(Of Func(Of T1, TResult), T1, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, TResult>, T1, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, TResult), T1, TResult)))
  nameWithType: Observable.Recurse<T1, TResult>(Expression<Func<Func<T1, TResult>, T1, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, TResult)(Expression(Of Func(Of Func(Of T1, TResult), T1, TResult)))
- uid: NMF.Expressions.Observable.Recurse``3(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2},``0,``1,``2}})
  name: Recurse<T1, T2, TResult>(Expression<Func<Func<T1, T2, TResult>, T1, T2, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__3_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2____0___1___2___
  commentId: M:NMF.Expressions.Observable.Recurse``3(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2},``0,``1,``2}})
  name.vb: Recurse(Of T1, T2, TResult)(Expression(Of Func(Of Func(Of T1, T2, TResult), T1, T2, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, TResult>, T1, T2, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, TResult), T1, T2, TResult)))
  nameWithType: Observable.Recurse<T1, T2, TResult>(Expression<Func<Func<T1, T2, TResult>, T1, T2, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, TResult)(Expression(Of Func(Of Func(Of T1, T2, TResult), T1, T2, TResult)))
- uid: NMF.Expressions.Observable.Recurse``4(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3},``0,``1,``2,``3}})
  name: Recurse<T1, T2, T3, TResult>(Expression<Func<Func<T1, T2, T3, TResult>, T1, T2, T3, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__4_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3____0___1___2___3___
  commentId: M:NMF.Expressions.Observable.Recurse``4(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3},``0,``1,``2,``3}})
  name.vb: Recurse(Of T1, T2, T3, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, TResult), T1, T2, T3, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, TResult>, T1, T2, T3, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, TResult), T1, T2, T3, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, TResult>(Expression<Func<Func<T1, T2, T3, TResult>, T1, T2, T3, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, TResult), T1, T2, T3, TResult)))
- uid: NMF.Expressions.Observable.Recurse``5(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4}})
  name: Recurse<T1, T2, T3, T4, TResult>(Expression<Func<Func<T1, T2, T3, T4, TResult>, T1, T2, T3, T4, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__5_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4____0___1___2___3___4___
  commentId: M:NMF.Expressions.Observable.Recurse``5(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4}})
  name.vb: Recurse(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, TResult), T1, T2, T3, T4, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, TResult>, T1, T2, T3, T4, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, TResult), T1, T2, T3, T4, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, TResult>(Expression<Func<Func<T1, T2, T3, T4, TResult>, T1, T2, T3, T4, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, TResult), T1, T2, T3, T4, TResult)))
- uid: NMF.Expressions.Observable.Recurse``6(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5}})
  name: Recurse<T1, T2, T3, T4, T5, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, TResult>, T1, T2, T3, T4, T5, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__6_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4___5____0___1___2___3___4___5___
  commentId: M:NMF.Expressions.Observable.Recurse``6(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5}})
  name.vb: Recurse(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, TResult), T1, T2, T3, T4, T5, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, T5, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, T5, TResult>, T1, T2, T3, T4, T5, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, T5, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, T5, TResult), T1, T2, T3, T4, T5, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, T5, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, TResult>, T1, T2, T3, T4, T5, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, T5, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, TResult), T1, T2, T3, T4, T5, TResult)))
- uid: NMF.Expressions.Observable.Recurse``7(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6}})
  name: Recurse<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, TResult>, T1, T2, T3, T4, T5, T6, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__7_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4___5___6____0___1___2___3___4___5___6___
  commentId: M:NMF.Expressions.Observable.Recurse``7(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6}})
  name.vb: Recurse(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, TResult), T1, T2, T3, T4, T5, T6, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, T5, T6, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, T5, T6, TResult>, T1, T2, T3, T4, T5, T6, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, T5, T6, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult), T1, T2, T3, T4, T5, T6, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, T5, T6, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, TResult>, T1, T2, T3, T4, T5, T6, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, T5, T6, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, TResult), T1, T2, T3, T4, T5, T6, TResult)))
- uid: NMF.Expressions.Observable.Recurse``8(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7}})
  name: Recurse<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, TResult>, T1, T2, T3, T4, T5, T6, T7, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__8_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4___5___6___7____0___1___2___3___4___5___6___7___
  commentId: M:NMF.Expressions.Observable.Recurse``8(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7}})
  name.vb: Recurse(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult), T1, T2, T3, T4, T5, T6, T7, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>, T1, T2, T3, T4, T5, T6, T7, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult), T1, T2, T3, T4, T5, T6, T7, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, TResult>, T1, T2, T3, T4, T5, T6, T7, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult), T1, T2, T3, T4, T5, T6, T7, TResult)))
- uid: NMF.Expressions.Observable.Recurse``9(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  name: Recurse<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Recurse__9_System_Linq_Expressions_Expression_System_Func_System_Func___0___1___2___3___4___5___6___7___8____0___1___2___3___4___5___6___7___8___
  commentId: M:NMF.Expressions.Observable.Recurse``9(System.Linq.Expressions.Expression{System.Func{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8}})
  name.vb: Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  fullName: NMF.Expressions.Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(System.Linq.Expressions.Expression<System.Func<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  fullName.vb: NMF.Expressions.Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  nameWithType: Observable.Recurse<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(Expression<Func<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>, T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  nameWithType.vb: Observable.Recurse(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)(Expression(Of Func(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
- uid: NMF.Expressions.Observable.Reversable*
  name: Reversable
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Reversable_
  commentId: Overload:NMF.Expressions.Observable.Reversable
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Reversable
  nameWithType: Observable.Reversable
- uid: NMF.Expressions.Observable.Reversable``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name: Reversable<T>(Expression<Func<T>>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Reversable__1_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NMF.Expressions.Observable.Reversable``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: Reversable(Of T)(Expression(Of Func(Of T)))
  fullName: NMF.Expressions.Observable.Reversable<T>(System.Linq.Expressions.Expression<System.Func<T>>)
  fullName.vb: NMF.Expressions.Observable.Reversable(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T)))
  nameWithType: Observable.Reversable<T>(Expression<Func<T>>)
  nameWithType.vb: Observable.Reversable(Of T)(Expression(Of Func(Of T)))
- uid: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: RightShift(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_RightShift_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: RightShift(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.RightShift(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.RightShift(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int32})
  name: RightShift(INotifyExpression<Int64>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_RightShift_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: RightShift(INotifyExpression(Of Int64), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.RightShift(INotifyExpression<Int64>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.RightShift(INotifyExpression(Of Int64), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.Int32})
  name: RightShift(INotifyExpression<UInt32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_RightShift_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: RightShift(INotifyExpression(Of UInt32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.RightShift(INotifyExpression<UInt32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.RightShift(INotifyExpression(Of UInt32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.Int32})
  name: RightShift(INotifyExpression<UInt64>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_RightShift_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: RightShift(INotifyExpression(Of UInt64), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.RightShift(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.RightShift(INotifyExpression<UInt64>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.RightShift(INotifyExpression(Of UInt64), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.RightShift*
  name: RightShift
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_RightShift_
  commentId: Overload:NMF.Expressions.Observable.RightShift
  isSpec: "True"
  fullName: NMF.Expressions.Observable.RightShift
  nameWithType: Observable.RightShift
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name: Subtract(INotifyExpression<Double>, INotifyExpression<Double>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_Double__NMF_Expressions_INotifyExpression_System_Double__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Double},NMF.Expressions.INotifyExpression{System.Double})
  name.vb: Subtract(INotifyExpression(Of Double), INotifyExpression(Of Double))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.Double>, NMF.Expressions.INotifyExpression<System.Double>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.Double), NMF.Expressions.INotifyExpression(Of System.Double))
  nameWithType: Observable.Subtract(INotifyExpression<Double>, INotifyExpression<Double>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of Double), INotifyExpression(Of Double))
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Subtract(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Subtract(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Subtract(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Subtract(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Subtract(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Subtract(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name: Subtract(INotifyExpression<Single>, INotifyExpression<Single>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_Single__NMF_Expressions_INotifyExpression_System_Single__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.Single},NMF.Expressions.INotifyExpression{System.Single})
  name.vb: Subtract(INotifyExpression(Of Single), INotifyExpression(Of Single))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.Single>, NMF.Expressions.INotifyExpression<System.Single>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.Single), NMF.Expressions.INotifyExpression(Of System.Single))
  nameWithType: Observable.Subtract(INotifyExpression<Single>, INotifyExpression<Single>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of Single), INotifyExpression(Of Single))
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Subtract(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Subtract(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Subtract(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Subtract(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Subtract(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Subtract(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Subtract(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Subtract(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Subtract*
  name: Subtract
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Subtract_
  commentId: Overload:NMF.Expressions.Observable.Subtract
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Subtract
  nameWithType: Observable.Subtract
- uid: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name: Xor(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_NMF_Expressions_INotifyExpression_System_Boolean__NMF_Expressions_INotifyExpression_System_Boolean__
  commentId: M:NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Boolean},NMF.Expressions.INotifyExpression{System.Boolean})
  name.vb: Xor(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
  fullName: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression<System.Boolean>, NMF.Expressions.INotifyExpression<System.Boolean>)
  fullName.vb: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression(Of System.Boolean), NMF.Expressions.INotifyExpression(Of System.Boolean))
  nameWithType: Observable.Xor(INotifyExpression<Boolean>, INotifyExpression<Boolean>)
  nameWithType.vb: Observable.Xor(INotifyExpression(Of Boolean), INotifyExpression(Of Boolean))
- uid: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name: Xor(INotifyExpression<Int32>, INotifyExpression<Int32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_NMF_Expressions_INotifyExpression_System_Int32__NMF_Expressions_INotifyExpression_System_Int32__
  commentId: M:NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Int32},NMF.Expressions.INotifyExpression{System.Int32})
  name.vb: Xor(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
  fullName: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression<System.Int32>, NMF.Expressions.INotifyExpression<System.Int32>)
  fullName.vb: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression(Of System.Int32), NMF.Expressions.INotifyExpression(Of System.Int32))
  nameWithType: Observable.Xor(INotifyExpression<Int32>, INotifyExpression<Int32>)
  nameWithType.vb: Observable.Xor(INotifyExpression(Of Int32), INotifyExpression(Of Int32))
- uid: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name: Xor(INotifyExpression<Int64>, INotifyExpression<Int64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_NMF_Expressions_INotifyExpression_System_Int64__NMF_Expressions_INotifyExpression_System_Int64__
  commentId: M:NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.Int64},NMF.Expressions.INotifyExpression{System.Int64})
  name.vb: Xor(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
  fullName: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression<System.Int64>, NMF.Expressions.INotifyExpression<System.Int64>)
  fullName.vb: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression(Of System.Int64), NMF.Expressions.INotifyExpression(Of System.Int64))
  nameWithType: Observable.Xor(INotifyExpression<Int64>, INotifyExpression<Int64>)
  nameWithType.vb: Observable.Xor(INotifyExpression(Of Int64), INotifyExpression(Of Int64))
- uid: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name: Xor(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_NMF_Expressions_INotifyExpression_System_UInt32__NMF_Expressions_INotifyExpression_System_UInt32__
  commentId: M:NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.UInt32},NMF.Expressions.INotifyExpression{System.UInt32})
  name.vb: Xor(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
  fullName: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression<System.UInt32>, NMF.Expressions.INotifyExpression<System.UInt32>)
  fullName.vb: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression(Of System.UInt32), NMF.Expressions.INotifyExpression(Of System.UInt32))
  nameWithType: Observable.Xor(INotifyExpression<UInt32>, INotifyExpression<UInt32>)
  nameWithType.vb: Observable.Xor(INotifyExpression(Of UInt32), INotifyExpression(Of UInt32))
- uid: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name: Xor(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_NMF_Expressions_INotifyExpression_System_UInt64__NMF_Expressions_INotifyExpression_System_UInt64__
  commentId: M:NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression{System.UInt64},NMF.Expressions.INotifyExpression{System.UInt64})
  name.vb: Xor(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
  fullName: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression<System.UInt64>, NMF.Expressions.INotifyExpression<System.UInt64>)
  fullName.vb: NMF.Expressions.Observable.Xor(NMF.Expressions.INotifyExpression(Of System.UInt64), NMF.Expressions.INotifyExpression(Of System.UInt64))
  nameWithType: Observable.Xor(INotifyExpression<UInt64>, INotifyExpression<UInt64>)
  nameWithType.vb: Observable.Xor(INotifyExpression(Of UInt64), INotifyExpression(Of UInt64))
- uid: NMF.Expressions.Observable.Xor*
  name: Xor
  href: api/Expressions/NMF.Expressions.Observable.html#NMF_Expressions_Observable_Xor_
  commentId: Overload:NMF.Expressions.Observable.Xor
  isSpec: "True"
  fullName: NMF.Expressions.Observable.Xor
  nameWithType: Observable.Xor
- uid: NMF.Expressions.ObservableProxyAttribute
  name: ObservableProxyAttribute
  href: api/Expressions/NMF.Expressions.ObservableProxyAttribute.html
  commentId: T:NMF.Expressions.ObservableProxyAttribute
  fullName: NMF.Expressions.ObservableProxyAttribute
  nameWithType: ObservableProxyAttribute
- uid: NMF.Expressions.ObservableProxyAttribute.#ctor(System.Type,System.String,System.Boolean)
  name: ObservableProxyAttribute(Type, String, Boolean)
  href: api/Expressions/NMF.Expressions.ObservableProxyAttribute.html#NMF_Expressions_ObservableProxyAttribute__ctor_System_Type_System_String_System_Boolean_
  commentId: M:NMF.Expressions.ObservableProxyAttribute.#ctor(System.Type,System.String,System.Boolean)
  fullName: NMF.Expressions.ObservableProxyAttribute.ObservableProxyAttribute(System.Type, System.String, System.Boolean)
  nameWithType: ObservableProxyAttribute.ObservableProxyAttribute(Type, String, Boolean)
- uid: NMF.Expressions.ObservableProxyAttribute.#ctor*
  name: ObservableProxyAttribute
  href: api/Expressions/NMF.Expressions.ObservableProxyAttribute.html#NMF_Expressions_ObservableProxyAttribute__ctor_
  commentId: Overload:NMF.Expressions.ObservableProxyAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservableProxyAttribute.ObservableProxyAttribute
  nameWithType: ObservableProxyAttribute.ObservableProxyAttribute
- uid: NMF.Expressions.ObservableProxyAttribute.IsRecursive
  name: IsRecursive
  href: api/Expressions/NMF.Expressions.ObservableProxyAttribute.html#NMF_Expressions_ObservableProxyAttribute_IsRecursive
  commentId: P:NMF.Expressions.ObservableProxyAttribute.IsRecursive
  fullName: NMF.Expressions.ObservableProxyAttribute.IsRecursive
  nameWithType: ObservableProxyAttribute.IsRecursive
- uid: NMF.Expressions.ObservableProxyAttribute.IsRecursive*
  name: IsRecursive
  href: api/Expressions/NMF.Expressions.ObservableProxyAttribute.html#NMF_Expressions_ObservableProxyAttribute_IsRecursive_
  commentId: Overload:NMF.Expressions.ObservableProxyAttribute.IsRecursive
  isSpec: "True"
  fullName: NMF.Expressions.ObservableProxyAttribute.IsRecursive
  nameWithType: ObservableProxyAttribute.IsRecursive
- uid: NMF.Expressions.ObservingFunc`10
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html
  commentId: T:NMF.Expressions.ObservingFunc`10
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
- uid: NMF.Expressions.ObservingFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9___
  commentId: M:NMF.Expressions.ObservingFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
- uid: NMF.Expressions.ObservingFunc`10.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`10.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_Evaluate__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`10.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`10.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`10.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`10.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`10.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9___
  commentId: M:NMF.Expressions.ObservingFunc`10.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)))
- uid: NMF.Expressions.ObservingFunc`10.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`10.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_InvokeReversable__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`10.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`10.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`10.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`10.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`10.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`10.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`10.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`10.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_Observe__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`10.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`10.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`10.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`10.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`10.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`10.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`10.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`10.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
- uid: NMF.Expressions.ObservingFunc`10.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-10.html#NMF_Expressions_ObservingFunc_10_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`10.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`11
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html
  commentId: T:NMF.Expressions.ObservingFunc`11
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
- uid: NMF.Expressions.ObservingFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10___
  commentId: M:NMF.Expressions.ObservingFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
- uid: NMF.Expressions.ObservingFunc`11.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`11.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_Evaluate__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`11.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`11.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`11.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`11.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`11.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10___
  commentId: M:NMF.Expressions.ObservingFunc`11.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)))
- uid: NMF.Expressions.ObservingFunc`11.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`11.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_InvokeReversable__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`11.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`11.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`11.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`11.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`11.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`11.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`11.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`11.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_Observe__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`11.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`11.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`11.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`11.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`11.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`11.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`11.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`11.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
- uid: NMF.Expressions.ObservingFunc`11.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-11.html#NMF_Expressions_ObservingFunc_11_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`11.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`12
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html
  commentId: T:NMF.Expressions.ObservingFunc`12
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
- uid: NMF.Expressions.ObservingFunc`12.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11___
  commentId: M:NMF.Expressions.ObservingFunc`12.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
- uid: NMF.Expressions.ObservingFunc`12.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`12.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_Evaluate__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`12.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`12.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`12.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`12.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`12.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11___
  commentId: M:NMF.Expressions.ObservingFunc`12.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)))
- uid: NMF.Expressions.ObservingFunc`12.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`12.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`12.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`12.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`12.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`12.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`12.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`12.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`12.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`12.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_Observe__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`12.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`12.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`12.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`12.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`12.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`12.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`12.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`12.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
- uid: NMF.Expressions.ObservingFunc`12.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-12.html#NMF_Expressions_ObservingFunc_12_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`12.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`13
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html
  commentId: T:NMF.Expressions.ObservingFunc`13
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
- uid: NMF.Expressions.ObservingFunc`13.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12___
  commentId: M:NMF.Expressions.ObservingFunc`13.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
- uid: NMF.Expressions.ObservingFunc`13.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`13.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_Evaluate__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`13.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`13.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`13.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`13.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`13.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12___
  commentId: M:NMF.Expressions.ObservingFunc`13.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)))
- uid: NMF.Expressions.ObservingFunc`13.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`13.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`13.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`13.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`13.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`13.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`13.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`13.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`13.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`13.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_Observe__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`13.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`13.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`13.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`13.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`13.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`13.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`13.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`13.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
- uid: NMF.Expressions.ObservingFunc`13.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-13.html#NMF_Expressions_ObservingFunc_13_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`13.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`14
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html
  commentId: T:NMF.Expressions.ObservingFunc`14
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
- uid: NMF.Expressions.ObservingFunc`14.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13___
  commentId: M:NMF.Expressions.ObservingFunc`14.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
- uid: NMF.Expressions.ObservingFunc`14.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`14.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_Evaluate__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`14.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ObservingFunc`14.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`14.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`14.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`14.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13___
  commentId: M:NMF.Expressions.ObservingFunc`14.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)))
- uid: NMF.Expressions.ObservingFunc`14.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`14.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`14.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ObservingFunc`14.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`14.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`14.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`14.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`14.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`14.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`14.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_Observe__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`14.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ObservingFunc`14.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`14.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`14.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`14.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`14.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`14.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ObservingFunc`14.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
- uid: NMF.Expressions.ObservingFunc`14.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-14.html#NMF_Expressions_ObservingFunc_14_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`14.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`15
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html
  commentId: T:NMF.Expressions.ObservingFunc`15
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
- uid: NMF.Expressions.ObservingFunc`15.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14___
  commentId: M:NMF.Expressions.ObservingFunc`15.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
- uid: NMF.Expressions.ObservingFunc`15.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`15.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_Evaluate__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ObservingFunc`15.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: NMF.Expressions.ObservingFunc`15.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`15.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`15.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`15.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14___
  commentId: M:NMF.Expressions.ObservingFunc`15.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)))
- uid: NMF.Expressions.ObservingFunc`15.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`15.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ObservingFunc`15.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: NMF.Expressions.ObservingFunc`15.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__
  commentId: M:NMF.Expressions.ObservingFunc`15.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
- uid: NMF.Expressions.ObservingFunc`15.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`15.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`15.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`15.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`15.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_Observe__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ObservingFunc`15.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: NMF.Expressions.ObservingFunc`15.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__
  commentId: M:NMF.Expressions.ObservingFunc`15.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
- uid: NMF.Expressions.ObservingFunc`15.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`15.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`15.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`15.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14_
  commentId: M:NMF.Expressions.ObservingFunc`15.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
- uid: NMF.Expressions.ObservingFunc`15.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-15.html#NMF_Expressions_ObservingFunc_15_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`15.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`16
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html
  commentId: T:NMF.Expressions.ObservingFunc`16
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
- uid: NMF.Expressions.ObservingFunc`16.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15___
  commentId: M:NMF.Expressions.ObservingFunc`16.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
- uid: NMF.Expressions.ObservingFunc`16.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`16.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_Evaluate__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14_
  commentId: M:NMF.Expressions.ObservingFunc`16.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
- uid: NMF.Expressions.ObservingFunc`16.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__
  commentId: M:NMF.Expressions.ObservingFunc`16.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
- uid: NMF.Expressions.ObservingFunc`16.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`16.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15___
  commentId: M:NMF.Expressions.ObservingFunc`16.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)))
- uid: NMF.Expressions.ObservingFunc`16.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`16.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14_
  commentId: M:NMF.Expressions.ObservingFunc`16.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
- uid: NMF.Expressions.ObservingFunc`16.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__NMF_Expressions_INotifyValue__14__
  commentId: M:NMF.Expressions.ObservingFunc`16.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>, NMF.Expressions.INotifyValue<T15>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14), NMF.Expressions.INotifyValue(Of T15))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
- uid: NMF.Expressions.ObservingFunc`16.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`16.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`16.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`16.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`16.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_Observe__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14_
  commentId: M:NMF.Expressions.ObservingFunc`16.Observe(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
- uid: NMF.Expressions.ObservingFunc`16.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__NMF_Expressions_INotifyValue__14__
  commentId: M:NMF.Expressions.ObservingFunc`16.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>, NMF.Expressions.INotifyValue<T15>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14), NMF.Expressions.INotifyValue(Of T15))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
- uid: NMF.Expressions.ObservingFunc`16.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__
  commentId: M:NMF.Expressions.ObservingFunc`16.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
- uid: NMF.Expressions.ObservingFunc`16.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`16.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15_
  commentId: M:NMF.Expressions.ObservingFunc`16.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
- uid: NMF.Expressions.ObservingFunc`16.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-16.html#NMF_Expressions_ObservingFunc_16_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`16.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`2
  name: ObservingFunc<T1, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html
  commentId: T:NMF.Expressions.ObservingFunc`2
  name.vb: ObservingFunc(Of T1, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult)
  nameWithType: ObservingFunc<T1, TResult>
  nameWithType.vb: ObservingFunc(Of T1, TResult)
- uid: NMF.Expressions.ObservingFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name: ObservingFunc(Expression<Func<T1, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___
  commentId: M:NMF.Expressions.ObservingFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)))
  nameWithType: ObservingFunc<T1, TResult>.ObservingFunc(Expression<Func<T1, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, TResult).ObservingFunc(Expression(Of Func(Of T1, TResult)))
- uid: NMF.Expressions.ObservingFunc`2.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`2.Evaluate(`0)
  name: Evaluate(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Evaluate__0_
  commentId: M:NMF.Expressions.ObservingFunc`2.Evaluate(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Evaluate(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Evaluate(T1)
  nameWithType: ObservingFunc<T1, TResult>.Evaluate(T1)
  nameWithType.vb: ObservingFunc(Of T1, TResult).Evaluate(T1)
- uid: NMF.Expressions.ObservingFunc`2.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Evaluate
  nameWithType: ObservingFunc<T1, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`2.Expression
  name: Expression
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Expression
  commentId: P:NMF.Expressions.ObservingFunc`2.Expression
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Expression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Expression
  nameWithType: ObservingFunc<T1, TResult>.Expression
  nameWithType.vb: ObservingFunc(Of T1, TResult).Expression
- uid: NMF.Expressions.ObservingFunc`2.Expression*
  name: Expression
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Expression_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.Expression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Expression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Expression
  nameWithType: ObservingFunc<T1, TResult>.Expression
  nameWithType.vb: ObservingFunc(Of T1, TResult).Expression
- uid: NMF.Expressions.ObservingFunc`2.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name: FromExpression(Expression<Func<T1, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1___
  commentId: M:NMF.Expressions.ObservingFunc`2.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1}})
  name.vb: FromExpression(Expression(Of Func(Of T1, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)))
  nameWithType: ObservingFunc<T1, TResult>.FromExpression(Expression<Func<T1, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, TResult).FromExpression(Expression(Of Func(Of T1, TResult)))
- uid: NMF.Expressions.ObservingFunc`2.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).FromExpression
  nameWithType: ObservingFunc<T1, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`2.InvokeReversable(`0)
  name: InvokeReversable(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_InvokeReversable__0_
  commentId: M:NMF.Expressions.ObservingFunc`2.InvokeReversable(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.InvokeReversable(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).InvokeReversable(T1)
  nameWithType: ObservingFunc<T1, TResult>.InvokeReversable(T1)
  nameWithType.vb: ObservingFunc(Of T1, TResult).InvokeReversable(T1)
- uid: NMF.Expressions.ObservingFunc`2.InvokeReversable(NMF.Expressions.INotifyValue{`0})
  name: InvokeReversable(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_InvokeReversable_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`2.InvokeReversable(NMF.Expressions.INotifyValue{`0})
  name.vb: InvokeReversable(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, TResult>.InvokeReversable(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, TResult).InvokeReversable(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`2.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`2.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`2.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).IsReversable
  nameWithType: ObservingFunc<T1, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`2.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).IsReversable
  nameWithType: ObservingFunc<T1, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`2.Observe(`0)
  name: Observe(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Observe__0_
  commentId: M:NMF.Expressions.ObservingFunc`2.Observe(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Observe(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Observe(T1)
  nameWithType: ObservingFunc<T1, TResult>.Observe(T1)
  nameWithType.vb: ObservingFunc(Of T1, TResult).Observe(T1)
- uid: NMF.Expressions.ObservingFunc`2.Observe(NMF.Expressions.INotifyValue{`0})
  name: Observe(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Observe_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`2.Observe(NMF.Expressions.INotifyValue{`0})
  name.vb: Observe(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Observe(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Observe(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, TResult>.Observe(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, TResult).Observe(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`2.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Observe
  nameWithType: ObservingFunc<T1, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`2.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1}})~NMF.Expressions.ObservingFunc{`0,`1}
  name: Implicit(Expression<Func<T1, TResult>> to ObservingFunc<T1, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1____NMF_Expressions_ObservingFunc__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`2.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1}})~NMF.Expressions.ObservingFunc{`0,`1}
  name.vb: Widening(Expression(Of Func(Of T1, TResult)) to ObservingFunc(Of T1, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, TResult>> to NMF.Expressions.ObservingFunc<T1, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)) to NMF.Expressions.ObservingFunc(Of T1, TResult))
  nameWithType: ObservingFunc<T1, TResult>.Implicit(Expression<Func<T1, TResult>> to ObservingFunc<T1, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, TResult).Widening(Expression(Of Func(Of T1, TResult)) to ObservingFunc(Of T1, TResult))
- uid: NMF.Expressions.ObservingFunc`2.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-2.html#NMF_Expressions_ObservingFunc_2_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult).Widening
  nameWithType: ObservingFunc<T1, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`3
  name: ObservingFunc<T1, T2, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html
  commentId: T:NMF.Expressions.ObservingFunc`3
  name.vb: ObservingFunc(Of T1, T2, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult)
  nameWithType: ObservingFunc<T1, T2, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult)
- uid: NMF.Expressions.ObservingFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name: ObservingFunc(Expression<Func<T1, T2, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2___
  commentId: M:NMF.Expressions.ObservingFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)))
  nameWithType: ObservingFunc<T1, T2, TResult>.ObservingFunc(Expression<Func<T1, T2, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, TResult)))
- uid: NMF.Expressions.ObservingFunc`3.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`3.Evaluate(`0,`1)
  name: Evaluate(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_Evaluate__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`3.Evaluate(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Evaluate(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Evaluate(T1, T2)
  nameWithType: ObservingFunc<T1, T2, TResult>.Evaluate(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Evaluate(T1, T2)
- uid: NMF.Expressions.ObservingFunc`3.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`3.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`3.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`3.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`3.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`3.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`3.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name: FromExpression(Expression<Func<T1, T2, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2___
  commentId: M:NMF.Expressions.ObservingFunc`3.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)))
  nameWithType: ObservingFunc<T1, T2, TResult>.FromExpression(Expression<Func<T1, T2, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).FromExpression(Expression(Of Func(Of T1, T2, TResult)))
- uid: NMF.Expressions.ObservingFunc`3.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`3.InvokeReversable(`0,`1)
  name: InvokeReversable(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_InvokeReversable__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`3.InvokeReversable(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.InvokeReversable(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).InvokeReversable(T1, T2)
  nameWithType: ObservingFunc<T1, T2, TResult>.InvokeReversable(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).InvokeReversable(T1, T2)
- uid: NMF.Expressions.ObservingFunc`3.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`3.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`3.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`3.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`3.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`3.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`3.Observe(`0,`1)
  name: Observe(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_Observe__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`3.Observe(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Observe(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Observe(T1, T2)
  nameWithType: ObservingFunc<T1, T2, TResult>.Observe(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Observe(T1, T2)
- uid: NMF.Expressions.ObservingFunc`3.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`3.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`3.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`3.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`3.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`3.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`3.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})~NMF.Expressions.ObservingFunc{`0,`1,`2}
  name: Implicit(Expression<Func<T1, T2, TResult>> to ObservingFunc<T1, T2, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2____NMF_Expressions_ObservingFunc__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`3.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}})~NMF.Expressions.ObservingFunc{`0,`1,`2}
  name.vb: Widening(Expression(Of Func(Of T1, T2, TResult)) to ObservingFunc(Of T1, T2, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, TResult))
  nameWithType: ObservingFunc<T1, T2, TResult>.Implicit(Expression<Func<T1, T2, TResult>> to ObservingFunc<T1, T2, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Widening(Expression(Of Func(Of T1, T2, TResult)) to ObservingFunc(Of T1, T2, TResult))
- uid: NMF.Expressions.ObservingFunc`3.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-3.html#NMF_Expressions_ObservingFunc_3_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`3.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`4
  name: ObservingFunc<T1, T2, T3, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html
  commentId: T:NMF.Expressions.ObservingFunc`4
  name.vb: ObservingFunc(Of T1, T2, T3, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult)
- uid: NMF.Expressions.ObservingFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3___
  commentId: M:NMF.Expressions.ObservingFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, TResult)))
- uid: NMF.Expressions.ObservingFunc`4.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`4.Evaluate(`0,`1,`2)
  name: Evaluate(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_Evaluate__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`4.Evaluate(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Evaluate(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Evaluate(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Evaluate(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Evaluate(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`4.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`4.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`4.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`4.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`4.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`4.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`4.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`4.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`4.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`4.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`4.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name: FromExpression(Expression<Func<T1, T2, T3, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3___
  commentId: M:NMF.Expressions.ObservingFunc`4.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.FromExpression(Expression<Func<T1, T2, T3, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, TResult)))
- uid: NMF.Expressions.ObservingFunc`4.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`4.InvokeReversable(`0,`1,`2)
  name: InvokeReversable(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_InvokeReversable__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`4.InvokeReversable(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.InvokeReversable(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.InvokeReversable(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`4.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`4.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`4.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`4.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`4.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`4.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`4.Observe(`0,`1,`2)
  name: Observe(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_Observe__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`4.Observe(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Observe(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Observe(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Observe(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Observe(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`4.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`4.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`4.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`4.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`4.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`4.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`4.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`4.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`4.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3}
  name: Implicit(Expression<Func<T1, T2, T3, TResult>> to ObservingFunc<T1, T2, T3, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3____NMF_Expressions_ObservingFunc__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`4.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, TResult)) to ObservingFunc(Of T1, T2, T3, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Implicit(Expression<Func<T1, T2, T3, TResult>> to ObservingFunc<T1, T2, T3, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Widening(Expression(Of Func(Of T1, T2, T3, TResult)) to ObservingFunc(Of T1, T2, T3, TResult))
- uid: NMF.Expressions.ObservingFunc`4.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-4.html#NMF_Expressions_ObservingFunc_4_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`4.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`5
  name: ObservingFunc<T1, T2, T3, T4, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html
  commentId: T:NMF.Expressions.ObservingFunc`5
  name.vb: ObservingFunc(Of T1, T2, T3, T4, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult)
- uid: NMF.Expressions.ObservingFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4___
  commentId: M:NMF.Expressions.ObservingFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
- uid: NMF.Expressions.ObservingFunc`5.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`5.Evaluate(`0,`1,`2,`3)
  name: Evaluate(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_Evaluate__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`5.Evaluate(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Evaluate(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Evaluate(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Evaluate(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Evaluate(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`5.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`5.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`5.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`5.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4___
  commentId: M:NMF.Expressions.ObservingFunc`5.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, TResult)))
- uid: NMF.Expressions.ObservingFunc`5.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`5.InvokeReversable(`0,`1,`2,`3)
  name: InvokeReversable(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_InvokeReversable__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`5.InvokeReversable(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`5.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`5.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`5.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`5.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`5.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`5.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`5.Observe(`0,`1,`2,`3)
  name: Observe(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_Observe__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`5.Observe(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Observe(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Observe(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Observe(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Observe(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`5.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`5.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`5.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`5.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`5.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`5.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4}
  name: Implicit(Expression<Func<T1, T2, T3, T4, TResult>> to ObservingFunc<T1, T2, T3, T4, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4____NMF_Expressions_ObservingFunc__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`5.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, TResult)) to ObservingFunc(Of T1, T2, T3, T4, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, TResult>> to ObservingFunc<T1, T2, T3, T4, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, TResult)) to ObservingFunc(Of T1, T2, T3, T4, TResult))
- uid: NMF.Expressions.ObservingFunc`5.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-5.html#NMF_Expressions_ObservingFunc_5_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`5.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`6
  name: ObservingFunc<T1, T2, T3, T4, T5, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html
  commentId: T:NMF.Expressions.ObservingFunc`6
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult)
- uid: NMF.Expressions.ObservingFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5___
  commentId: M:NMF.Expressions.ObservingFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
- uid: NMF.Expressions.ObservingFunc`6.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`6.Evaluate(`0,`1,`2,`3,`4)
  name: Evaluate(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_Evaluate__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`6.Evaluate(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Evaluate(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Evaluate(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Evaluate(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Evaluate(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`6.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`6.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`6.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`6.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5___
  commentId: M:NMF.Expressions.ObservingFunc`6.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)))
- uid: NMF.Expressions.ObservingFunc`6.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`6.InvokeReversable(`0,`1,`2,`3,`4)
  name: InvokeReversable(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_InvokeReversable__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`6.InvokeReversable(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`6.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`6.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`6.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`6.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`6.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`6.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`6.Observe(`0,`1,`2,`3,`4)
  name: Observe(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_Observe__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`6.Observe(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`6.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`6.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`6.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`6.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`6.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`6.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5____NMF_Expressions_ObservingFunc__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`6.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, TResult))
- uid: NMF.Expressions.ObservingFunc`6.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-6.html#NMF_Expressions_ObservingFunc_6_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`6.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`7
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html
  commentId: T:NMF.Expressions.ObservingFunc`7
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
- uid: NMF.Expressions.ObservingFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6___
  commentId: M:NMF.Expressions.ObservingFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
- uid: NMF.Expressions.ObservingFunc`7.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`7.Evaluate(`0,`1,`2,`3,`4,`5)
  name: Evaluate(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_Evaluate__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`7.Evaluate(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Evaluate(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Evaluate(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Evaluate(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Evaluate(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`7.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`7.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`7.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`7.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6___
  commentId: M:NMF.Expressions.ObservingFunc`7.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)))
- uid: NMF.Expressions.ObservingFunc`7.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`7.InvokeReversable(`0,`1,`2,`3,`4,`5)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_InvokeReversable__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`7.InvokeReversable(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`7.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`7.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`7.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`7.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`7.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`7.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`7.Observe(`0,`1,`2,`3,`4,`5)
  name: Observe(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_Observe__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`7.Observe(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`7.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`7.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`7.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`7.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`7.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`7.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`7.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult))
- uid: NMF.Expressions.ObservingFunc`7.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-7.html#NMF_Expressions_ObservingFunc_7_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`7.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`8
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html
  commentId: T:NMF.Expressions.ObservingFunc`8
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
- uid: NMF.Expressions.ObservingFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7___
  commentId: M:NMF.Expressions.ObservingFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
- uid: NMF.Expressions.ObservingFunc`8.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`8.Evaluate(`0,`1,`2,`3,`4,`5,`6)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_Evaluate__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`8.Evaluate(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`8.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`8.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`8.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`8.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7___
  commentId: M:NMF.Expressions.ObservingFunc`8.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)))
- uid: NMF.Expressions.ObservingFunc`8.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`8.InvokeReversable(`0,`1,`2,`3,`4,`5,`6)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_InvokeReversable__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`8.InvokeReversable(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`8.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`8.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`8.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`8.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`8.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`8.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`8.Observe(`0,`1,`2,`3,`4,`5,`6)
  name: Observe(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_Observe__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`8.Observe(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`8.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`8.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`8.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`8.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`8.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`8.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`8.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult))
- uid: NMF.Expressions.ObservingFunc`8.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-8.html#NMF_Expressions_ObservingFunc_8_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`8.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).Widening
- uid: NMF.Expressions.ObservingFunc`9
  name: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html
  commentId: T:NMF.Expressions.ObservingFunc`9
  name.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
- uid: NMF.Expressions.ObservingFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name: ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8___
  commentId: M:NMF.Expressions.ObservingFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name.vb: ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
- uid: NMF.Expressions.ObservingFunc`9.#ctor*
  name: ObservingFunc
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9__ctor_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservingFunc
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservingFunc
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservingFunc
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservingFunc
- uid: NMF.Expressions.ObservingFunc`9.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7)
  name: Evaluate(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_Evaluate__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`9.Evaluate(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Evaluate(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Evaluate(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`9.Evaluate*
  name: Evaluate
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_Evaluate_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.Evaluate
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Evaluate
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Evaluate
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Evaluate
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Evaluate
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0)
  name: EvaluatePartial(T1)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1)
  name: EvaluatePartial(T1, T2)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2)
  name: EvaluatePartial(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1__2_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3)
  name: EvaluatePartial(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1__2__3_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4)
  name: EvaluatePartial(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1__2__3__4_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  name: EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name: EvaluatePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: EvaluatePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`9.EvaluatePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`9.EvaluatePartial*
  name: EvaluatePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_EvaluatePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.EvaluatePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.EvaluatePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).EvaluatePartial
- uid: NMF.Expressions.ObservingFunc`9.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name: FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_FromExpression_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8___
  commentId: M:NMF.Expressions.ObservingFunc`9.FromExpression(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})
  name.vb: FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.FromExpression(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).FromExpression(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.FromExpression(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).FromExpression(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)))
- uid: NMF.Expressions.ObservingFunc`9.FromExpression*
  name: FromExpression
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_FromExpression_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.FromExpression
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.FromExpression
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).FromExpression
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.FromExpression
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).FromExpression
- uid: NMF.Expressions.ObservingFunc`9.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_InvokeReversable__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`9.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`9.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`9.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`9.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_InvokeReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable
- uid: NMF.Expressions.ObservingFunc`9.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_IsReversable
  commentId: P:NMF.Expressions.ObservingFunc`9.IsReversable
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`9.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_IsReversable_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
- uid: NMF.Expressions.ObservingFunc`9.Observe(`0,`1,`2,`3,`4,`5,`6,`7)
  name: Observe(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_Observe__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ObservingFunc`9.Observe(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ObservingFunc`9.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_Observe_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ObservingFunc`9.Observe(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ObservingFunc`9.Observe*
  name: Observe
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_Observe_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.Observe
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Observe
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Observe
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name: ObservePartial(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0})
  name.vb: ObservePartial(INotifyValue(Of T1))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ObservingFunc`9.ObservePartial(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ObservingFunc`9.ObservePartial*
  name: ObservePartial
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_ObservePartial_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.ObservePartial
  isSpec: "True"
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ObservePartial
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ObservePartial
- uid: NMF.Expressions.ObservingFunc`9.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8}
  name: Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_op_Implicit_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8____NMF_Expressions_ObservingFunc__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ObservingFunc`9.op_Implicit(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}})~NMF.Expressions.ObservingFunc{`0,`1,`2,`3,`4,`5,`6,`7,`8}
  name.vb: Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Implicit(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>> to NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Widening(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)) to NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Implicit(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>> to ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Widening(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)) to ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
- uid: NMF.Expressions.ObservingFunc`9.op_Implicit*
  name: Implicit
  href: api/Expressions/NMF.Expressions.ObservingFunc-9.html#NMF_Expressions_ObservingFunc_9_op_Implicit_
  commentId: Overload:NMF.Expressions.ObservingFunc`9.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: NMF.Expressions.ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Implicit
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Widening
  nameWithType: ObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.Implicit
  nameWithType.vb: ObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).Widening
- uid: NMF.Expressions.ParallelExecutionEngine
  name: ParallelExecutionEngine
  href: api/Expressions/NMF.Expressions.ParallelExecutionEngine.html
  commentId: T:NMF.Expressions.ParallelExecutionEngine
  fullName: NMF.Expressions.ParallelExecutionEngine
  nameWithType: ParallelExecutionEngine
- uid: NMF.Expressions.ParallelExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name: Execute(List<INotifiable>)
  href: api/Expressions/NMF.Expressions.ParallelExecutionEngine.html#NMF_Expressions_ParallelExecutionEngine_Execute_System_Collections_Generic_List_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.ParallelExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name.vb: Execute(List(Of INotifiable))
  fullName: NMF.Expressions.ParallelExecutionEngine.Execute(System.Collections.Generic.List<NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.ParallelExecutionEngine.Execute(System.Collections.Generic.List(Of NMF.Expressions.INotifiable))
  nameWithType: ParallelExecutionEngine.Execute(List<INotifiable>)
  nameWithType.vb: ParallelExecutionEngine.Execute(List(Of INotifiable))
- uid: NMF.Expressions.ParallelExecutionEngine.Execute*
  name: Execute
  href: api/Expressions/NMF.Expressions.ParallelExecutionEngine.html#NMF_Expressions_ParallelExecutionEngine_Execute_
  commentId: Overload:NMF.Expressions.ParallelExecutionEngine.Execute
  isSpec: "True"
  fullName: NMF.Expressions.ParallelExecutionEngine.Execute
  nameWithType: ParallelExecutionEngine.Execute
- uid: NMF.Expressions.ParameterDataflowAttribute
  name: ParameterDataflowAttribute
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html
  commentId: T:NMF.Expressions.ParameterDataflowAttribute
  fullName: NMF.Expressions.ParameterDataflowAttribute
  nameWithType: ParameterDataflowAttribute
- uid: NMF.Expressions.ParameterDataflowAttribute.#ctor(System.Int32,System.Int32,System.Int32)
  name: ParameterDataflowAttribute(Int32, Int32, Int32)
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:NMF.Expressions.ParameterDataflowAttribute.#ctor(System.Int32,System.Int32,System.Int32)
  fullName: NMF.Expressions.ParameterDataflowAttribute.ParameterDataflowAttribute(System.Int32, System.Int32, System.Int32)
  nameWithType: ParameterDataflowAttribute.ParameterDataflowAttribute(Int32, Int32, Int32)
- uid: NMF.Expressions.ParameterDataflowAttribute.#ctor*
  name: ParameterDataflowAttribute
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute__ctor_
  commentId: Overload:NMF.Expressions.ParameterDataflowAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ParameterDataflowAttribute.ParameterDataflowAttribute
  nameWithType: ParameterDataflowAttribute.ParameterDataflowAttribute
- uid: NMF.Expressions.ParameterDataflowAttribute.FunctionIndex
  name: FunctionIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_FunctionIndex
  commentId: P:NMF.Expressions.ParameterDataflowAttribute.FunctionIndex
  fullName: NMF.Expressions.ParameterDataflowAttribute.FunctionIndex
  nameWithType: ParameterDataflowAttribute.FunctionIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.FunctionIndex*
  name: FunctionIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_FunctionIndex_
  commentId: Overload:NMF.Expressions.ParameterDataflowAttribute.FunctionIndex
  isSpec: "True"
  fullName: NMF.Expressions.ParameterDataflowAttribute.FunctionIndex
  nameWithType: ParameterDataflowAttribute.FunctionIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex
  name: FunctionParameterIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_FunctionParameterIndex
  commentId: P:NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex
  fullName: NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex
  nameWithType: ParameterDataflowAttribute.FunctionParameterIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex*
  name: FunctionParameterIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_FunctionParameterIndex_
  commentId: Overload:NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex
  isSpec: "True"
  fullName: NMF.Expressions.ParameterDataflowAttribute.FunctionParameterIndex
  nameWithType: ParameterDataflowAttribute.FunctionParameterIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.SourceIndex
  name: SourceIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_SourceIndex
  commentId: P:NMF.Expressions.ParameterDataflowAttribute.SourceIndex
  fullName: NMF.Expressions.ParameterDataflowAttribute.SourceIndex
  nameWithType: ParameterDataflowAttribute.SourceIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.SourceIndex*
  name: SourceIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_SourceIndex_
  commentId: Overload:NMF.Expressions.ParameterDataflowAttribute.SourceIndex
  isSpec: "True"
  fullName: NMF.Expressions.ParameterDataflowAttribute.SourceIndex
  nameWithType: ParameterDataflowAttribute.SourceIndex
- uid: NMF.Expressions.ParameterDataflowAttribute.TargetObjectIndex
  name: TargetObjectIndex
  href: api/Expressions/NMF.Expressions.ParameterDataflowAttribute.html#NMF_Expressions_ParameterDataflowAttribute_TargetObjectIndex
  commentId: F:NMF.Expressions.ParameterDataflowAttribute.TargetObjectIndex
  fullName: NMF.Expressions.ParameterDataflowAttribute.TargetObjectIndex
  nameWithType: ParameterDataflowAttribute.TargetObjectIndex
- uid: NMF.Expressions.PropertyChangeListener
  name: PropertyChangeListener
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html
  commentId: T:NMF.Expressions.PropertyChangeListener
  fullName: NMF.Expressions.PropertyChangeListener
  nameWithType: PropertyChangeListener
- uid: NMF.Expressions.PropertyChangeListener.#ctor(NMF.Expressions.INotifiable)
  name: PropertyChangeListener(INotifiable)
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener__ctor_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.PropertyChangeListener.#ctor(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.PropertyChangeListener.PropertyChangeListener(NMF.Expressions.INotifiable)
  nameWithType: PropertyChangeListener.PropertyChangeListener(INotifiable)
- uid: NMF.Expressions.PropertyChangeListener.#ctor*
  name: PropertyChangeListener
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener__ctor_
  commentId: Overload:NMF.Expressions.PropertyChangeListener.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.PropertyChangeListener.PropertyChangeListener
  nameWithType: PropertyChangeListener.PropertyChangeListener
- uid: NMF.Expressions.PropertyChangeListener.AggregateChanges
  name: AggregateChanges()
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_AggregateChanges
  commentId: M:NMF.Expressions.PropertyChangeListener.AggregateChanges
  fullName: NMF.Expressions.PropertyChangeListener.AggregateChanges()
  nameWithType: PropertyChangeListener.AggregateChanges()
- uid: NMF.Expressions.PropertyChangeListener.AggregateChanges*
  name: AggregateChanges
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_AggregateChanges_
  commentId: Overload:NMF.Expressions.PropertyChangeListener.AggregateChanges
  isSpec: "True"
  fullName: NMF.Expressions.PropertyChangeListener.AggregateChanges
  nameWithType: PropertyChangeListener.AggregateChanges
- uid: NMF.Expressions.PropertyChangeListener.Node
  name: Node
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Node
  commentId: P:NMF.Expressions.PropertyChangeListener.Node
  fullName: NMF.Expressions.PropertyChangeListener.Node
  nameWithType: PropertyChangeListener.Node
- uid: NMF.Expressions.PropertyChangeListener.Node*
  name: Node
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Node_
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Node
  isSpec: "True"
  fullName: NMF.Expressions.PropertyChangeListener.Node
  nameWithType: PropertyChangeListener.Node
- uid: NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  name: Subscribe(INotifyPropertyChanged, String)
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Subscribe_System_ComponentModel_INotifyPropertyChanged_System_String_
  commentId: M:NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged,System.String)
  fullName: NMF.Expressions.PropertyChangeListener.Subscribe(System.ComponentModel.INotifyPropertyChanged, System.String)
  nameWithType: PropertyChangeListener.Subscribe(INotifyPropertyChanged, String)
- uid: NMF.Expressions.PropertyChangeListener.Subscribe*
  name: Subscribe
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Subscribe_
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Subscribe
  isSpec: "True"
  fullName: NMF.Expressions.PropertyChangeListener.Subscribe
  nameWithType: PropertyChangeListener.Subscribe
- uid: NMF.Expressions.PropertyChangeListener.Unsubscribe
  name: Unsubscribe()
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Unsubscribe
  commentId: M:NMF.Expressions.PropertyChangeListener.Unsubscribe
  fullName: NMF.Expressions.PropertyChangeListener.Unsubscribe()
  nameWithType: PropertyChangeListener.Unsubscribe()
- uid: NMF.Expressions.PropertyChangeListener.Unsubscribe*
  name: Unsubscribe
  href: api/Expressions/NMF.Expressions.PropertyChangeListener.html#NMF_Expressions_PropertyChangeListener_Unsubscribe_
  commentId: Overload:NMF.Expressions.PropertyChangeListener.Unsubscribe
  isSpec: "True"
  fullName: NMF.Expressions.PropertyChangeListener.Unsubscribe
  nameWithType: PropertyChangeListener.Unsubscribe
- uid: NMF.Expressions.ProxyMethodAttribute
  name: ProxyMethodAttribute
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html
  commentId: T:NMF.Expressions.ProxyMethodAttribute
  fullName: NMF.Expressions.ProxyMethodAttribute
  nameWithType: ProxyMethodAttribute
- uid: NMF.Expressions.ProxyMethodAttribute.#ctor(System.Type,System.String)
  name: ProxyMethodAttribute(Type, String)
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute__ctor_System_Type_System_String_
  commentId: M:NMF.Expressions.ProxyMethodAttribute.#ctor(System.Type,System.String)
  fullName: NMF.Expressions.ProxyMethodAttribute.ProxyMethodAttribute(System.Type, System.String)
  nameWithType: ProxyMethodAttribute.ProxyMethodAttribute(Type, String)
- uid: NMF.Expressions.ProxyMethodAttribute.#ctor*
  name: ProxyMethodAttribute
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute__ctor_
  commentId: Overload:NMF.Expressions.ProxyMethodAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ProxyMethodAttribute.ProxyMethodAttribute
  nameWithType: ProxyMethodAttribute.ProxyMethodAttribute
- uid: NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod(System.Reflection.MethodInfo,System.Type[],System.Reflection.MethodInfo@)
  name: InitializeProxyMethod(MethodInfo, Type[], out MethodInfo)
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_InitializeProxyMethod_System_Reflection_MethodInfo_System_Type___System_Reflection_MethodInfo__
  commentId: M:NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod(System.Reflection.MethodInfo,System.Type[],System.Reflection.MethodInfo@)
  name.vb: InitializeProxyMethod(MethodInfo, Type(), ByRef MethodInfo)
  fullName: NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod(System.Reflection.MethodInfo, System.Type[], out System.Reflection.MethodInfo)
  fullName.vb: NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod(System.Reflection.MethodInfo, System.Type(), ByRef System.Reflection.MethodInfo)
  nameWithType: ProxyMethodAttribute.InitializeProxyMethod(MethodInfo, Type[], out MethodInfo)
  nameWithType.vb: ProxyMethodAttribute.InitializeProxyMethod(MethodInfo, Type(), ByRef MethodInfo)
- uid: NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod*
  name: InitializeProxyMethod
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_InitializeProxyMethod_
  commentId: Overload:NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod
  isSpec: "True"
  fullName: NMF.Expressions.ProxyMethodAttribute.InitializeProxyMethod
  nameWithType: ProxyMethodAttribute.InitializeProxyMethod
- uid: NMF.Expressions.ProxyMethodAttribute.MethodName
  name: MethodName
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_MethodName
  commentId: P:NMF.Expressions.ProxyMethodAttribute.MethodName
  fullName: NMF.Expressions.ProxyMethodAttribute.MethodName
  nameWithType: ProxyMethodAttribute.MethodName
- uid: NMF.Expressions.ProxyMethodAttribute.MethodName*
  name: MethodName
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_MethodName_
  commentId: Overload:NMF.Expressions.ProxyMethodAttribute.MethodName
  isSpec: "True"
  fullName: NMF.Expressions.ProxyMethodAttribute.MethodName
  nameWithType: ProxyMethodAttribute.MethodName
- uid: NMF.Expressions.ProxyMethodAttribute.ProxyType
  name: ProxyType
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_ProxyType
  commentId: P:NMF.Expressions.ProxyMethodAttribute.ProxyType
  fullName: NMF.Expressions.ProxyMethodAttribute.ProxyType
  nameWithType: ProxyMethodAttribute.ProxyType
- uid: NMF.Expressions.ProxyMethodAttribute.ProxyType*
  name: ProxyType
  href: api/Expressions/NMF.Expressions.ProxyMethodAttribute.html#NMF_Expressions_ProxyMethodAttribute_ProxyType_
  commentId: Overload:NMF.Expressions.ProxyMethodAttribute.ProxyType
  isSpec: "True"
  fullName: NMF.Expressions.ProxyMethodAttribute.ProxyType
  nameWithType: ProxyMethodAttribute.ProxyType
- uid: NMF.Expressions.ReversableExtensions
  name: ReversableExtensions
  href: api/Expressions/NMF.Expressions.ReversableExtensions.html
  commentId: T:NMF.Expressions.ReversableExtensions
  fullName: NMF.Expressions.ReversableExtensions
  nameWithType: ReversableExtensions
- uid: NMF.Expressions.ReversableExtensions.AsReversable*
  name: AsReversable
  href: api/Expressions/NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable_
  commentId: Overload:NMF.Expressions.ReversableExtensions.AsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableExtensions.AsReversable
  nameWithType: ReversableExtensions.AsReversable
- uid: NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  name: AsReversable<T>(INotifyValue<T>, Action<T>)
  href: api/Expressions/NMF.Expressions.ReversableExtensions.html#NMF_Expressions_ReversableExtensions_AsReversable__1_NMF_Expressions_INotifyValue___0__System_Action___0__
  commentId: M:NMF.Expressions.ReversableExtensions.AsReversable``1(NMF.Expressions.INotifyValue{``0},System.Action{``0})
  name.vb: AsReversable(Of T)(INotifyValue(Of T), Action(Of T))
  fullName: NMF.Expressions.ReversableExtensions.AsReversable<T>(NMF.Expressions.INotifyValue<T>, System.Action<T>)
  fullName.vb: NMF.Expressions.ReversableExtensions.AsReversable(Of T)(NMF.Expressions.INotifyValue(Of T), System.Action(Of T))
  nameWithType: ReversableExtensions.AsReversable<T>(INotifyValue<T>, Action<T>)
  nameWithType.vb: ReversableExtensions.AsReversable(Of T)(INotifyValue(Of T), Action(Of T))
- uid: NMF.Expressions.ReversableObservingFunc`10
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`10
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9___System_Action__0__1__2__3__4__5__6__7__8__9__
  commentId: M:NMF.Expressions.ReversableObservingFunc`10.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`10.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`10.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`10.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_InvokeReversable__0__1__2__3__4__5__6__7__8_
  commentId: M:NMF.Expressions.ReversableObservingFunc`10.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9)
- uid: NMF.Expressions.ReversableObservingFunc`10.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__
  commentId: M:NMF.Expressions.ReversableObservingFunc`10.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9))
- uid: NMF.Expressions.ReversableObservingFunc`10.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`10.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`10.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`10.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`10.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`10.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`10.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`10.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`10.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-10.html#NMF_Expressions_ReversableObservingFunc_10_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`10.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`11
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`11
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10___System_Action__0__1__2__3__4__5__6__7__8__9__10__
  commentId: M:NMF.Expressions.ReversableObservingFunc`11.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`11.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`11.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`11.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_InvokeReversable__0__1__2__3__4__5__6__7__8__9_
  commentId: M:NMF.Expressions.ReversableObservingFunc`11.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)
- uid: NMF.Expressions.ReversableObservingFunc`11.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__
  commentId: M:NMF.Expressions.ReversableObservingFunc`11.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10))
- uid: NMF.Expressions.ReversableObservingFunc`11.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`11.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`11.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`11.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`11.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`11.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`11.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`11.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`11.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-11.html#NMF_Expressions_ReversableObservingFunc_11_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`11.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`12
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`12
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`12.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11___System_Action__0__1__2__3__4__5__6__7__8__9__10__11__
  commentId: M:NMF.Expressions.ReversableObservingFunc`12.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`12.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`12.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`12.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10_
  commentId: M:NMF.Expressions.ReversableObservingFunc`12.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)
- uid: NMF.Expressions.ReversableObservingFunc`12.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__
  commentId: M:NMF.Expressions.ReversableObservingFunc`12.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11))
- uid: NMF.Expressions.ReversableObservingFunc`12.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`12.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`12.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`12.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`12.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`12.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`12.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`12.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`12.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-12.html#NMF_Expressions_ReversableObservingFunc_12_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`12.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`13
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`13
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`13.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12___System_Action__0__1__2__3__4__5__6__7__8__9__10__11__12__
  commentId: M:NMF.Expressions.ReversableObservingFunc`13.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`13.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`13.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`13.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11_
  commentId: M:NMF.Expressions.ReversableObservingFunc`13.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)
- uid: NMF.Expressions.ReversableObservingFunc`13.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__
  commentId: M:NMF.Expressions.ReversableObservingFunc`13.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12))
- uid: NMF.Expressions.ReversableObservingFunc`13.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`13.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`13.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`13.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`13.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`13.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`13.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`13.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`13.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-13.html#NMF_Expressions_ReversableObservingFunc_13_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`13.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`14
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`14
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`14.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13___System_Action__0__1__2__3__4__5__6__7__8__9__10__11__12__13__
  commentId: M:NMF.Expressions.ReversableObservingFunc`14.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`14.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`14.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`14.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12_
  commentId: M:NMF.Expressions.ReversableObservingFunc`14.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)
- uid: NMF.Expressions.ReversableObservingFunc`14.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__
  commentId: M:NMF.Expressions.ReversableObservingFunc`14.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13))
- uid: NMF.Expressions.ReversableObservingFunc`14.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`14.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`14.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`14.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`14.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`14.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`14.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`14.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`14.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-14.html#NMF_Expressions_ReversableObservingFunc_14_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`14.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`15
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`15
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`15.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14___System_Action__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__
  commentId: M:NMF.Expressions.ReversableObservingFunc`15.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`15.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`15.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`15.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12__13_
  commentId: M:NMF.Expressions.ReversableObservingFunc`15.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)
- uid: NMF.Expressions.ReversableObservingFunc`15.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__
  commentId: M:NMF.Expressions.ReversableObservingFunc`15.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14))
- uid: NMF.Expressions.ReversableObservingFunc`15.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`15.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`15.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`15.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`15.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`15.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`15.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`15.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`15.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-15.html#NMF_Expressions_ReversableObservingFunc_15_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`15.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`16
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`16
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`16.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15___System_Action__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14__15__
  commentId: M:NMF.Expressions.ReversableObservingFunc`16.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`16.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`16.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`16.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_InvokeReversable__0__1__2__3__4__5__6__7__8__9__10__11__12__13__14_
  commentId: M:NMF.Expressions.ReversableObservingFunc`16.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)
- uid: NMF.Expressions.ReversableObservingFunc`16.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__NMF_Expressions_INotifyValue__8__NMF_Expressions_INotifyValue__9__NMF_Expressions_INotifyValue__10__NMF_Expressions_INotifyValue__11__NMF_Expressions_INotifyValue__12__NMF_Expressions_INotifyValue__13__NMF_Expressions_INotifyValue__14__
  commentId: M:NMF.Expressions.ReversableObservingFunc`16.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7},NMF.Expressions.INotifyValue{`8},NMF.Expressions.INotifyValue{`9},NMF.Expressions.INotifyValue{`10},NMF.Expressions.INotifyValue{`11},NMF.Expressions.INotifyValue{`12},NMF.Expressions.INotifyValue{`13},NMF.Expressions.INotifyValue{`14})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>, NMF.Expressions.INotifyValue<T9>, NMF.Expressions.INotifyValue<T10>, NMF.Expressions.INotifyValue<T11>, NMF.Expressions.INotifyValue<T12>, NMF.Expressions.INotifyValue<T13>, NMF.Expressions.INotifyValue<T14>, NMF.Expressions.INotifyValue<T15>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8), NMF.Expressions.INotifyValue(Of T9), NMF.Expressions.INotifyValue(Of T10), NMF.Expressions.INotifyValue(Of T11), NMF.Expressions.INotifyValue(Of T12), NMF.Expressions.INotifyValue(Of T13), NMF.Expressions.INotifyValue(Of T14), NMF.Expressions.INotifyValue(Of T15))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>, INotifyValue<T9>, INotifyValue<T10>, INotifyValue<T11>, INotifyValue<T12>, INotifyValue<T13>, INotifyValue<T14>, INotifyValue<T15>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8), INotifyValue(Of T9), INotifyValue(Of T10), INotifyValue(Of T11), INotifyValue(Of T12), INotifyValue(Of T13), INotifyValue(Of T14), INotifyValue(Of T15))
- uid: NMF.Expressions.ReversableObservingFunc`16.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`16.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`16.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`16.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`16.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`16.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`16.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`16.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`16.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-16.html#NMF_Expressions_ReversableObservingFunc_16_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`16.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`2
  name: ReversableObservingFunc<T1, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`2
  name.vb: ReversableObservingFunc(Of T1, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult)
  nameWithType: ReversableObservingFunc<T1, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Action{`0,`1})
  name: ReversableObservingFunc(Expression<Func<T1, TResult>>, Action<T1, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2__ctor_System_Linq_Expressions_Expression_System_Func__0__1___System_Action__0__1__
  commentId: M:NMF.Expressions.ReversableObservingFunc`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Action{`0,`1})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, TResult)), Action(Of T1, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, TResult>>, System.Action<T1, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, TResult)), System.Action(Of T1, TResult))
  nameWithType: ReversableObservingFunc<T1, TResult>.ReversableObservingFunc(Expression<Func<T1, TResult>>, Action<T1, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, TResult)), Action(Of T1, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`2.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`2.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`2.InvokeReversable(`0)
  name: InvokeReversable(T1)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_InvokeReversable__0_
  commentId: M:NMF.Expressions.ReversableObservingFunc`2.InvokeReversable(`0)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.InvokeReversable(T1)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).InvokeReversable(T1)
  nameWithType: ReversableObservingFunc<T1, TResult>.InvokeReversable(T1)
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).InvokeReversable(T1)
- uid: NMF.Expressions.ReversableObservingFunc`2.InvokeReversable(NMF.Expressions.INotifyValue{`0})
  name: InvokeReversable(INotifyValue<T1>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_InvokeReversable_NMF_Expressions_INotifyValue__0__
  commentId: M:NMF.Expressions.ReversableObservingFunc`2.InvokeReversable(NMF.Expressions.INotifyValue{`0})
  name.vb: InvokeReversable(INotifyValue(Of T1))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1))
  nameWithType: ReversableObservingFunc<T1, TResult>.InvokeReversable(INotifyValue<T1>)
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).InvokeReversable(INotifyValue(Of T1))
- uid: NMF.Expressions.ReversableObservingFunc`2.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`2.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`2.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`2.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`2.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`2.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`2.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`2.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`2.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-2.html#NMF_Expressions_ReversableObservingFunc_2_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`2.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`3
  name: ReversableObservingFunc<T1, T2, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`3
  name.vb: ReversableObservingFunc(Of T1, T2, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}},System.Action{`0,`1,`2})
  name: ReversableObservingFunc(Expression<Func<T1, T2, TResult>>, Action<T1, T2, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2___System_Action__0__1__2__
  commentId: M:NMF.Expressions.ReversableObservingFunc`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2}},System.Action{`0,`1,`2})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, TResult)), Action(Of T1, T2, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, TResult>>, System.Action<T1, T2, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, TResult)), System.Action(Of T1, T2, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, TResult>>, Action<T1, T2, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, TResult)), Action(Of T1, T2, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`3.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`3.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`3.InvokeReversable(`0,`1)
  name: InvokeReversable(T1, T2)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_InvokeReversable__0__1_
  commentId: M:NMF.Expressions.ReversableObservingFunc`3.InvokeReversable(`0,`1)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.InvokeReversable(T1, T2)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable(T1, T2)
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.InvokeReversable(T1, T2)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable(T1, T2)
- uid: NMF.Expressions.ReversableObservingFunc`3.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__
  commentId: M:NMF.Expressions.ReversableObservingFunc`3.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2))
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2))
- uid: NMF.Expressions.ReversableObservingFunc`3.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`3.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`3.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`3.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`3.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`3.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`3.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`3.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`3.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-3.html#NMF_Expressions_ReversableObservingFunc_3_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`3.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`4
  name: ReversableObservingFunc<T1, T2, T3, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`4
  name.vb: ReversableObservingFunc(Of T1, T2, T3, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}},System.Action{`0,`1,`2,`3})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, TResult>>, Action<T1, T2, T3, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3___System_Action__0__1__2__3__
  commentId: M:NMF.Expressions.ReversableObservingFunc`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3}},System.Action{`0,`1,`2,`3})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, TResult)), Action(Of T1, T2, T3, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, TResult>>, System.Action<T1, T2, T3, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, TResult)), System.Action(Of T1, T2, T3, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, TResult>>, Action<T1, T2, T3, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, TResult)), Action(Of T1, T2, T3, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`4.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`4.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`4.InvokeReversable(`0,`1,`2)
  name: InvokeReversable(T1, T2, T3)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_InvokeReversable__0__1__2_
  commentId: M:NMF.Expressions.ReversableObservingFunc`4.InvokeReversable(`0,`1,`2)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable(T1, T2, T3)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(T1, T2, T3)
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable(T1, T2, T3)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(T1, T2, T3)
- uid: NMF.Expressions.ReversableObservingFunc`4.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__
  commentId: M:NMF.Expressions.ReversableObservingFunc`4.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3))
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3))
- uid: NMF.Expressions.ReversableObservingFunc`4.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`4.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`4.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`4.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`4.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`4.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`4.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`4.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`4.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-4.html#NMF_Expressions_ReversableObservingFunc_4_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`4.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`5
  name: ReversableObservingFunc<T1, T2, T3, T4, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`5
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}},System.Action{`0,`1,`2,`3,`4})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, TResult>>, Action<T1, T2, T3, T4, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4___System_Action__0__1__2__3__4__
  commentId: M:NMF.Expressions.ReversableObservingFunc`5.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4}},System.Action{`0,`1,`2,`3,`4})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)), Action(Of T1, T2, T3, T4, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, TResult>>, System.Action<T1, T2, T3, T4, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, TResult)), System.Action(Of T1, T2, T3, T4, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, TResult>>, Action<T1, T2, T3, T4, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, TResult)), Action(Of T1, T2, T3, T4, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`5.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`5.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`5.InvokeReversable(`0,`1,`2,`3)
  name: InvokeReversable(T1, T2, T3, T4)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_InvokeReversable__0__1__2__3_
  commentId: M:NMF.Expressions.ReversableObservingFunc`5.InvokeReversable(`0,`1,`2,`3)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(T1, T2, T3, T4)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(T1, T2, T3, T4)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(T1, T2, T3, T4)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(T1, T2, T3, T4)
- uid: NMF.Expressions.ReversableObservingFunc`5.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__
  commentId: M:NMF.Expressions.ReversableObservingFunc`5.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4))
- uid: NMF.Expressions.ReversableObservingFunc`5.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`5.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`5.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`5.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`5.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`5.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`5.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`5.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`5.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-5.html#NMF_Expressions_ReversableObservingFunc_5_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`5.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`6
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`6
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}},System.Action{`0,`1,`2,`3,`4,`5})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>, Action<T1, T2, T3, T4, T5, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5___System_Action__0__1__2__3__4__5__
  commentId: M:NMF.Expressions.ReversableObservingFunc`6.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5}},System.Action{`0,`1,`2,`3,`4,`5})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)), Action(Of T1, T2, T3, T4, T5, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, TResult>>, System.Action<T1, T2, T3, T4, T5, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, TResult)), System.Action(Of T1, T2, T3, T4, T5, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, TResult>>, Action<T1, T2, T3, T4, T5, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, TResult)), Action(Of T1, T2, T3, T4, T5, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`6.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`6.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`6.InvokeReversable(`0,`1,`2,`3,`4)
  name: InvokeReversable(T1, T2, T3, T4, T5)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_InvokeReversable__0__1__2__3__4_
  commentId: M:NMF.Expressions.ReversableObservingFunc`6.InvokeReversable(`0,`1,`2,`3,`4)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(T1, T2, T3, T4, T5)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(T1, T2, T3, T4, T5)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(T1, T2, T3, T4, T5)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(T1, T2, T3, T4, T5)
- uid: NMF.Expressions.ReversableObservingFunc`6.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__
  commentId: M:NMF.Expressions.ReversableObservingFunc`6.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5))
- uid: NMF.Expressions.ReversableObservingFunc`6.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`6.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`6.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`6.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`6.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`6.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`6.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`6.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`6.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-6.html#NMF_Expressions_ReversableObservingFunc_6_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`6.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`7
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`7
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}},System.Action{`0,`1,`2,`3,`4,`5,`6})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>, Action<T1, T2, T3, T4, T5, T6, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6___System_Action__0__1__2__3__4__5__6__
  commentId: M:NMF.Expressions.ReversableObservingFunc`7.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6}},System.Action{`0,`1,`2,`3,`4,`5,`6})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)), Action(Of T1, T2, T3, T4, T5, T6, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, TResult>>, Action<T1, T2, T3, T4, T5, T6, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, TResult)), Action(Of T1, T2, T3, T4, T5, T6, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`7.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`7.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`7.InvokeReversable(`0,`1,`2,`3,`4,`5)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_InvokeReversable__0__1__2__3__4__5_
  commentId: M:NMF.Expressions.ReversableObservingFunc`7.InvokeReversable(`0,`1,`2,`3,`4,`5)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6)
- uid: NMF.Expressions.ReversableObservingFunc`7.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__
  commentId: M:NMF.Expressions.ReversableObservingFunc`7.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6))
- uid: NMF.Expressions.ReversableObservingFunc`7.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`7.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`7.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`7.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`7.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`7.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`7.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`7.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`7.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-7.html#NMF_Expressions_ReversableObservingFunc_7_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`7.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`8
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`8
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7___System_Action__0__1__2__3__4__5__6__7__
  commentId: M:NMF.Expressions.ReversableObservingFunc`8.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`8.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`8.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`8.InvokeReversable(`0,`1,`2,`3,`4,`5,`6)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_InvokeReversable__0__1__2__3__4__5__6_
  commentId: M:NMF.Expressions.ReversableObservingFunc`8.InvokeReversable(`0,`1,`2,`3,`4,`5,`6)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7)
- uid: NMF.Expressions.ReversableObservingFunc`8.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__
  commentId: M:NMF.Expressions.ReversableObservingFunc`8.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7))
- uid: NMF.Expressions.ReversableObservingFunc`8.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`8.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`8.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`8.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`8.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`8.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`8.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`8.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`8.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-8.html#NMF_Expressions_ReversableObservingFunc_8_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`8.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`9
  name: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html
  commentId: T:NMF.Expressions.ReversableObservingFunc`9
  name.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)
- uid: NMF.Expressions.ReversableObservingFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8})
  name: ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9__ctor_System_Linq_Expressions_Expression_System_Func__0__1__2__3__4__5__6__7__8___System_Action__0__1__2__3__4__5__6__7__8__
  commentId: M:NMF.Expressions.ReversableObservingFunc`9.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8}},System.Action{`0,`1,`2,`3,`4,`5,`6,`7,`8})
  name.vb: ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ReversableObservingFunc(System.Linq.Expressions.Expression<System.Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, System.Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ReversableObservingFunc(System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), System.Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ReversableObservingFunc(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult>>, Action<T1, T2, T3, T4, T5, T6, T7, T8, TResult>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ReversableObservingFunc(Expression(Of Func(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult)), Action(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult))
- uid: NMF.Expressions.ReversableObservingFunc`9.#ctor*
  name: ReversableObservingFunc
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9__ctor_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`9.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ReversableObservingFunc
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ReversableObservingFunc
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.ReversableObservingFunc
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).ReversableObservingFunc
- uid: NMF.Expressions.ReversableObservingFunc`9.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7)
  name: InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_InvokeReversable__0__1__2__3__4__5__6__7_
  commentId: M:NMF.Expressions.ReversableObservingFunc`9.InvokeReversable(`0,`1,`2,`3,`4,`5,`6,`7)
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(T1, T2, T3, T4, T5, T6, T7, T8)
- uid: NMF.Expressions.ReversableObservingFunc`9.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name: InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_InvokeReversable_NMF_Expressions_INotifyValue__0__NMF_Expressions_INotifyValue__1__NMF_Expressions_INotifyValue__2__NMF_Expressions_INotifyValue__3__NMF_Expressions_INotifyValue__4__NMF_Expressions_INotifyValue__5__NMF_Expressions_INotifyValue__6__NMF_Expressions_INotifyValue__7__
  commentId: M:NMF.Expressions.ReversableObservingFunc`9.InvokeReversable(NMF.Expressions.INotifyValue{`0},NMF.Expressions.INotifyValue{`1},NMF.Expressions.INotifyValue{`2},NMF.Expressions.INotifyValue{`3},NMF.Expressions.INotifyValue{`4},NMF.Expressions.INotifyValue{`5},NMF.Expressions.INotifyValue{`6},NMF.Expressions.INotifyValue{`7})
  name.vb: InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(NMF.Expressions.INotifyValue<T1>, NMF.Expressions.INotifyValue<T2>, NMF.Expressions.INotifyValue<T3>, NMF.Expressions.INotifyValue<T4>, NMF.Expressions.INotifyValue<T5>, NMF.Expressions.INotifyValue<T6>, NMF.Expressions.INotifyValue<T7>, NMF.Expressions.INotifyValue<T8>)
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(NMF.Expressions.INotifyValue(Of T1), NMF.Expressions.INotifyValue(Of T2), NMF.Expressions.INotifyValue(Of T3), NMF.Expressions.INotifyValue(Of T4), NMF.Expressions.INotifyValue(Of T5), NMF.Expressions.INotifyValue(Of T6), NMF.Expressions.INotifyValue(Of T7), NMF.Expressions.INotifyValue(Of T8))
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable(INotifyValue<T1>, INotifyValue<T2>, INotifyValue<T3>, INotifyValue<T4>, INotifyValue<T5>, INotifyValue<T6>, INotifyValue<T7>, INotifyValue<T8>)
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable(INotifyValue(Of T1), INotifyValue(Of T2), INotifyValue(Of T3), INotifyValue(Of T4), INotifyValue(Of T5), INotifyValue(Of T6), INotifyValue(Of T7), INotifyValue(Of T8))
- uid: NMF.Expressions.ReversableObservingFunc`9.InvokeReversable*
  name: InvokeReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_InvokeReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`9.InvokeReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.InvokeReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).InvokeReversable
- uid: NMF.Expressions.ReversableObservingFunc`9.IsReversable
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_IsReversable
  commentId: P:NMF.Expressions.ReversableObservingFunc`9.IsReversable
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`9.IsReversable*
  name: IsReversable
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_IsReversable_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`9.IsReversable
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.IsReversable
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).IsReversable
- uid: NMF.Expressions.ReversableObservingFunc`9.UpdateHandler
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_UpdateHandler
  commentId: P:NMF.Expressions.ReversableObservingFunc`9.UpdateHandler
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).UpdateHandler
- uid: NMF.Expressions.ReversableObservingFunc`9.UpdateHandler*
  name: UpdateHandler
  href: api/Expressions/NMF.Expressions.ReversableObservingFunc-9.html#NMF_Expressions_ReversableObservingFunc_9_UpdateHandler_
  commentId: Overload:NMF.Expressions.ReversableObservingFunc`9.UpdateHandler
  isSpec: "True"
  fullName: NMF.Expressions.ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.UpdateHandler
  fullName.vb: NMF.Expressions.ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).UpdateHandler
  nameWithType: ReversableObservingFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>.UpdateHandler
  nameWithType.vb: ReversableObservingFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult).UpdateHandler
- uid: NMF.Expressions.ReverseComparer`1
  name: ReverseComparer<T>
  href: api/Expressions/NMF.Expressions.ReverseComparer-1.html
  commentId: T:NMF.Expressions.ReverseComparer`1
  name.vb: ReverseComparer(Of T)
  fullName: NMF.Expressions.ReverseComparer<T>
  fullName.vb: NMF.Expressions.ReverseComparer(Of T)
  nameWithType: ReverseComparer<T>
  nameWithType.vb: ReverseComparer(Of T)
- uid: NMF.Expressions.ReverseComparer`1.#ctor(System.Collections.Generic.IComparer{`0})
  name: ReverseComparer(IComparer<T>)
  href: api/Expressions/NMF.Expressions.ReverseComparer-1.html#NMF_Expressions_ReverseComparer_1__ctor_System_Collections_Generic_IComparer__0__
  commentId: M:NMF.Expressions.ReverseComparer`1.#ctor(System.Collections.Generic.IComparer{`0})
  name.vb: ReverseComparer(IComparer(Of T))
  fullName: NMF.Expressions.ReverseComparer<T>.ReverseComparer(System.Collections.Generic.IComparer<T>)
  fullName.vb: NMF.Expressions.ReverseComparer(Of T).ReverseComparer(System.Collections.Generic.IComparer(Of T))
  nameWithType: ReverseComparer<T>.ReverseComparer(IComparer<T>)
  nameWithType.vb: ReverseComparer(Of T).ReverseComparer(IComparer(Of T))
- uid: NMF.Expressions.ReverseComparer`1.#ctor*
  name: ReverseComparer
  href: api/Expressions/NMF.Expressions.ReverseComparer-1.html#NMF_Expressions_ReverseComparer_1__ctor_
  commentId: Overload:NMF.Expressions.ReverseComparer`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ReverseComparer<T>.ReverseComparer
  fullName.vb: NMF.Expressions.ReverseComparer(Of T).ReverseComparer
  nameWithType: ReverseComparer<T>.ReverseComparer
  nameWithType.vb: ReverseComparer(Of T).ReverseComparer
- uid: NMF.Expressions.ReverseComparer`1.Compare(`0,`0)
  name: Compare(T, T)
  href: api/Expressions/NMF.Expressions.ReverseComparer-1.html#NMF_Expressions_ReverseComparer_1_Compare__0__0_
  commentId: M:NMF.Expressions.ReverseComparer`1.Compare(`0,`0)
  fullName: NMF.Expressions.ReverseComparer<T>.Compare(T, T)
  fullName.vb: NMF.Expressions.ReverseComparer(Of T).Compare(T, T)
  nameWithType: ReverseComparer<T>.Compare(T, T)
  nameWithType.vb: ReverseComparer(Of T).Compare(T, T)
- uid: NMF.Expressions.ReverseComparer`1.Compare*
  name: Compare
  href: api/Expressions/NMF.Expressions.ReverseComparer-1.html#NMF_Expressions_ReverseComparer_1_Compare_
  commentId: Overload:NMF.Expressions.ReverseComparer`1.Compare
  isSpec: "True"
  fullName: NMF.Expressions.ReverseComparer<T>.Compare
  fullName.vb: NMF.Expressions.ReverseComparer(Of T).Compare
  nameWithType: ReverseComparer<T>.Compare
  nameWithType.vb: ReverseComparer(Of T).Compare
- uid: NMF.Expressions.SequentialExecutionEngine
  name: SequentialExecutionEngine
  href: api/Expressions/NMF.Expressions.SequentialExecutionEngine.html
  commentId: T:NMF.Expressions.SequentialExecutionEngine
  fullName: NMF.Expressions.SequentialExecutionEngine
  nameWithType: SequentialExecutionEngine
- uid: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name: Execute(List<INotifiable>)
  href: api/Expressions/NMF.Expressions.SequentialExecutionEngine.html#NMF_Expressions_SequentialExecutionEngine_Execute_System_Collections_Generic_List_NMF_Expressions_INotifiable__
  commentId: M:NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List{NMF.Expressions.INotifiable})
  name.vb: Execute(List(Of INotifiable))
  fullName: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List<NMF.Expressions.INotifiable>)
  fullName.vb: NMF.Expressions.SequentialExecutionEngine.Execute(System.Collections.Generic.List(Of NMF.Expressions.INotifiable))
  nameWithType: SequentialExecutionEngine.Execute(List<INotifiable>)
  nameWithType.vb: SequentialExecutionEngine.Execute(List(Of INotifiable))
- uid: NMF.Expressions.SequentialExecutionEngine.Execute*
  name: Execute
  href: api/Expressions/NMF.Expressions.SequentialExecutionEngine.html#NMF_Expressions_SequentialExecutionEngine_Execute_
  commentId: Overload:NMF.Expressions.SequentialExecutionEngine.Execute
  isSpec: "True"
  fullName: NMF.Expressions.SequentialExecutionEngine.Execute
  nameWithType: SequentialExecutionEngine.Execute
- uid: NMF.Expressions.SetExpressionRewriter
  name: SetExpressionRewriter
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html
  commentId: T:NMF.Expressions.SetExpressionRewriter
  fullName: NMF.Expressions.SetExpressionRewriter
  nameWithType: SetExpressionRewriter
- uid: NMF.Expressions.SetExpressionRewriter.#ctor(System.Linq.Expressions.Expression)
  name: SetExpressionRewriter(Expression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter__ctor_System_Linq_Expressions_Expression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.#ctor(System.Linq.Expressions.Expression)
  fullName: NMF.Expressions.SetExpressionRewriter.SetExpressionRewriter(System.Linq.Expressions.Expression)
  nameWithType: SetExpressionRewriter.SetExpressionRewriter(Expression)
- uid: NMF.Expressions.SetExpressionRewriter.#ctor*
  name: SetExpressionRewriter
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter__ctor_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.SetExpressionRewriter
  nameWithType: SetExpressionRewriter.SetExpressionRewriter
- uid: NMF.Expressions.SetExpressionRewriter.CreateSetter(System.Linq.Expressions.LambdaExpression)
  name: CreateSetter(LambdaExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_CreateSetter_System_Linq_Expressions_LambdaExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.CreateSetter(System.Linq.Expressions.LambdaExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.CreateSetter(System.Linq.Expressions.LambdaExpression)
  nameWithType: SetExpressionRewriter.CreateSetter(LambdaExpression)
- uid: NMF.Expressions.SetExpressionRewriter.CreateSetter*
  name: CreateSetter
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_CreateSetter_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.CreateSetter
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.CreateSetter
  nameWithType: SetExpressionRewriter.CreateSetter
- uid: NMF.Expressions.SetExpressionRewriter.CreateSetter``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name: CreateSetter<TValue>(Expression<Func<TValue>>)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_CreateSetter__1_System_Linq_Expressions_Expression_System_Func___0___
  commentId: M:NMF.Expressions.SetExpressionRewriter.CreateSetter``1(System.Linq.Expressions.Expression{System.Func{``0}})
  name.vb: CreateSetter(Of TValue)(Expression(Of Func(Of TValue)))
  fullName: NMF.Expressions.SetExpressionRewriter.CreateSetter<TValue>(System.Linq.Expressions.Expression<System.Func<TValue>>)
  fullName.vb: NMF.Expressions.SetExpressionRewriter.CreateSetter(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TValue)))
  nameWithType: SetExpressionRewriter.CreateSetter<TValue>(Expression<Func<TValue>>)
  nameWithType.vb: SetExpressionRewriter.CreateSetter(Of TValue)(Expression(Of Func(Of TValue)))
- uid: NMF.Expressions.SetExpressionRewriter.CreateSetter``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: CreateSetter<T, TValue>(Expression<Func<T, TValue>>)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_CreateSetter__2_System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Expressions.SetExpressionRewriter.CreateSetter``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: CreateSetter(Of T, TValue)(Expression(Of Func(Of T, TValue)))
  fullName: NMF.Expressions.SetExpressionRewriter.CreateSetter<T, TValue>(System.Linq.Expressions.Expression<System.Func<T, TValue>>)
  fullName.vb: NMF.Expressions.SetExpressionRewriter.CreateSetter(Of T, TValue)(System.Linq.Expressions.Expression(Of System.Func(Of T, TValue)))
  nameWithType: SetExpressionRewriter.CreateSetter<T, TValue>(Expression<Func<T, TValue>>)
  nameWithType.vb: SetExpressionRewriter.CreateSetter(Of T, TValue)(Expression(Of Func(Of T, TValue)))
- uid: NMF.Expressions.SetExpressionRewriter.Value
  name: Value
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_Value
  commentId: P:NMF.Expressions.SetExpressionRewriter.Value
  fullName: NMF.Expressions.SetExpressionRewriter.Value
  nameWithType: SetExpressionRewriter.Value
- uid: NMF.Expressions.SetExpressionRewriter.Value*
  name: Value
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_Value_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.Value
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.Value
  nameWithType: SetExpressionRewriter.Value
- uid: NMF.Expressions.SetExpressionRewriter.Visit(System.Linq.Expressions.Expression)
  name: Visit(Expression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_Visit_System_Linq_Expressions_Expression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.Visit(System.Linq.Expressions.Expression)
  fullName: NMF.Expressions.SetExpressionRewriter.Visit(System.Linq.Expressions.Expression)
  nameWithType: SetExpressionRewriter.Visit(Expression)
- uid: NMF.Expressions.SetExpressionRewriter.Visit*
  name: Visit
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_Visit_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.Visit
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.Visit
  nameWithType: SetExpressionRewriter.Visit
- uid: NMF.Expressions.SetExpressionRewriter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  name: VisitBinary(BinaryExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitBinary_System_Linq_Expressions_BinaryExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitBinary(System.Linq.Expressions.BinaryExpression)
  nameWithType: SetExpressionRewriter.VisitBinary(BinaryExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitBinary*
  name: VisitBinary
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitBinary_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitBinary
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitBinary
  nameWithType: SetExpressionRewriter.VisitBinary
- uid: NMF.Expressions.SetExpressionRewriter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  name: VisitConditional(ConditionalExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitConditional_System_Linq_Expressions_ConditionalExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  nameWithType: SetExpressionRewriter.VisitConditional(ConditionalExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitConditional*
  name: VisitConditional
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitConditional_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitConditional
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitConditional
  nameWithType: SetExpressionRewriter.VisitConditional
- uid: NMF.Expressions.SetExpressionRewriter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  name: VisitDefault(DefaultExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitDefault_System_Linq_Expressions_DefaultExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitDefault(System.Linq.Expressions.DefaultExpression)
  nameWithType: SetExpressionRewriter.VisitDefault(DefaultExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitDefault*
  name: VisitDefault
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitDefault_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitDefault
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitDefault
  nameWithType: SetExpressionRewriter.VisitDefault
- uid: NMF.Expressions.SetExpressionRewriter.VisitElementInit(System.Linq.Expressions.ElementInit)
  name: VisitElementInit(ElementInit)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitElementInit_System_Linq_Expressions_ElementInit_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitElementInit(System.Linq.Expressions.ElementInit)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitElementInit(System.Linq.Expressions.ElementInit)
  nameWithType: SetExpressionRewriter.VisitElementInit(ElementInit)
- uid: NMF.Expressions.SetExpressionRewriter.VisitElementInit*
  name: VisitElementInit
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitElementInit_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitElementInit
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitElementInit
  nameWithType: SetExpressionRewriter.VisitElementInit
- uid: NMF.Expressions.SetExpressionRewriter.VisitIndex(System.Linq.Expressions.IndexExpression)
  name: VisitIndex(IndexExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitIndex_System_Linq_Expressions_IndexExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitIndex(System.Linq.Expressions.IndexExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitIndex(System.Linq.Expressions.IndexExpression)
  nameWithType: SetExpressionRewriter.VisitIndex(IndexExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitIndex*
  name: VisitIndex
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitIndex_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitIndex
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitIndex
  nameWithType: SetExpressionRewriter.VisitIndex
- uid: NMF.Expressions.SetExpressionRewriter.VisitListInit(System.Linq.Expressions.ListInitExpression)
  name: VisitListInit(ListInitExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitListInit_System_Linq_Expressions_ListInitExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitListInit(System.Linq.Expressions.ListInitExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitListInit(System.Linq.Expressions.ListInitExpression)
  nameWithType: SetExpressionRewriter.VisitListInit(ListInitExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitListInit*
  name: VisitListInit
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitListInit_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitListInit
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitListInit
  nameWithType: SetExpressionRewriter.VisitListInit
- uid: NMF.Expressions.SetExpressionRewriter.VisitMember(System.Linq.Expressions.MemberExpression)
  name: VisitMember(MemberExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMember_System_Linq_Expressions_MemberExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMember(System.Linq.Expressions.MemberExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMember(System.Linq.Expressions.MemberExpression)
  nameWithType: SetExpressionRewriter.VisitMember(MemberExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMember*
  name: VisitMember
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMember_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMember
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMember
  nameWithType: SetExpressionRewriter.VisitMember
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  name: VisitMemberAssignment(MemberAssignment)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberAssignment_System_Linq_Expressions_MemberAssignment_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  nameWithType: SetExpressionRewriter.VisitMemberAssignment(MemberAssignment)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment*
  name: VisitMemberAssignment
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberAssignment_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberAssignment
  nameWithType: SetExpressionRewriter.VisitMemberAssignment
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  name: VisitMemberInit(MemberInitExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberInit_System_Linq_Expressions_MemberInitExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  nameWithType: SetExpressionRewriter.VisitMemberInit(MemberInitExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberInit*
  name: VisitMemberInit
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberInit_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMemberInit
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberInit
  nameWithType: SetExpressionRewriter.VisitMemberInit
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  name: VisitMemberListBinding(MemberListBinding)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberListBinding_System_Linq_Expressions_MemberListBinding_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  nameWithType: SetExpressionRewriter.VisitMemberListBinding(MemberListBinding)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding*
  name: VisitMemberListBinding
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberListBinding_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberListBinding
  nameWithType: SetExpressionRewriter.VisitMemberListBinding
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  name: VisitMemberMemberBinding(MemberMemberBinding)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberMemberBinding_System_Linq_Expressions_MemberMemberBinding_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  nameWithType: SetExpressionRewriter.VisitMemberMemberBinding(MemberMemberBinding)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding*
  name: VisitMemberMemberBinding
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMemberMemberBinding_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMemberMemberBinding
  nameWithType: SetExpressionRewriter.VisitMemberMemberBinding
- uid: NMF.Expressions.SetExpressionRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  name: VisitMethodCall(MethodCallExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  nameWithType: SetExpressionRewriter.VisitMethodCall(MethodCallExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitMethodCall*
  name: VisitMethodCall
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitMethodCall_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitMethodCall
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitMethodCall
  nameWithType: SetExpressionRewriter.VisitMethodCall
- uid: NMF.Expressions.SetExpressionRewriter.VisitNew(System.Linq.Expressions.NewExpression)
  name: VisitNew(NewExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitNew_System_Linq_Expressions_NewExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitNew(System.Linq.Expressions.NewExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitNew(System.Linq.Expressions.NewExpression)
  nameWithType: SetExpressionRewriter.VisitNew(NewExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitNew*
  name: VisitNew
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitNew_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitNew
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitNew
  nameWithType: SetExpressionRewriter.VisitNew
- uid: NMF.Expressions.SetExpressionRewriter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  name: VisitNewArray(NewArrayExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitNewArray_System_Linq_Expressions_NewArrayExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  nameWithType: SetExpressionRewriter.VisitNewArray(NewArrayExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitNewArray*
  name: VisitNewArray
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitNewArray_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitNewArray
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitNewArray
  nameWithType: SetExpressionRewriter.VisitNewArray
- uid: NMF.Expressions.SetExpressionRewriter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  name: VisitParameter(ParameterExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitParameter_System_Linq_Expressions_ParameterExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitParameter(System.Linq.Expressions.ParameterExpression)
  nameWithType: SetExpressionRewriter.VisitParameter(ParameterExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitParameter*
  name: VisitParameter
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitParameter_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitParameter
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitParameter
  nameWithType: SetExpressionRewriter.VisitParameter
- uid: NMF.Expressions.SetExpressionRewriter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  name: VisitUnary(UnaryExpression)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitUnary_System_Linq_Expressions_UnaryExpression_
  commentId: M:NMF.Expressions.SetExpressionRewriter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  fullName: NMF.Expressions.SetExpressionRewriter.VisitUnary(System.Linq.Expressions.UnaryExpression)
  nameWithType: SetExpressionRewriter.VisitUnary(UnaryExpression)
- uid: NMF.Expressions.SetExpressionRewriter.VisitUnary*
  name: VisitUnary
  href: api/Expressions/NMF.Expressions.SetExpressionRewriter.html#NMF_Expressions_SetExpressionRewriter_VisitUnary_
  commentId: Overload:NMF.Expressions.SetExpressionRewriter.VisitUnary
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriter.VisitUnary
  nameWithType: SetExpressionRewriter.VisitUnary
- uid: NMF.Expressions.SetExpressionRewriterAttribute
  name: SetExpressionRewriterAttribute
  href: api/Expressions/NMF.Expressions.SetExpressionRewriterAttribute.html
  commentId: T:NMF.Expressions.SetExpressionRewriterAttribute
  fullName: NMF.Expressions.SetExpressionRewriterAttribute
  nameWithType: SetExpressionRewriterAttribute
- uid: NMF.Expressions.SetExpressionRewriterAttribute.#ctor(System.Type,System.String)
  name: SetExpressionRewriterAttribute(Type, String)
  href: api/Expressions/NMF.Expressions.SetExpressionRewriterAttribute.html#NMF_Expressions_SetExpressionRewriterAttribute__ctor_System_Type_System_String_
  commentId: M:NMF.Expressions.SetExpressionRewriterAttribute.#ctor(System.Type,System.String)
  fullName: NMF.Expressions.SetExpressionRewriterAttribute.SetExpressionRewriterAttribute(System.Type, System.String)
  nameWithType: SetExpressionRewriterAttribute.SetExpressionRewriterAttribute(Type, String)
- uid: NMF.Expressions.SetExpressionRewriterAttribute.#ctor*
  name: SetExpressionRewriterAttribute
  href: api/Expressions/NMF.Expressions.SetExpressionRewriterAttribute.html#NMF_Expressions_SetExpressionRewriterAttribute__ctor_
  commentId: Overload:NMF.Expressions.SetExpressionRewriterAttribute.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.SetExpressionRewriterAttribute.SetExpressionRewriterAttribute
  nameWithType: SetExpressionRewriterAttribute.SetExpressionRewriterAttribute
- uid: NMF.Expressions.SingleSuccessorList
  name: SingleSuccessorList
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html
  commentId: T:NMF.Expressions.SingleSuccessorList
  fullName: NMF.Expressions.SingleSuccessorList
  nameWithType: SingleSuccessorList
- uid: NMF.Expressions.SingleSuccessorList.Attached
  name: Attached
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Attached
  commentId: E:NMF.Expressions.SingleSuccessorList.Attached
  fullName: NMF.Expressions.SingleSuccessorList.Attached
  nameWithType: SingleSuccessorList.Attached
- uid: NMF.Expressions.SingleSuccessorList.Count
  name: Count
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Count
  commentId: P:NMF.Expressions.SingleSuccessorList.Count
  fullName: NMF.Expressions.SingleSuccessorList.Count
  nameWithType: SingleSuccessorList.Count
- uid: NMF.Expressions.SingleSuccessorList.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Count_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.Count
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.Count
  nameWithType: SingleSuccessorList.Count
- uid: NMF.Expressions.SingleSuccessorList.Detached
  name: Detached
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Detached
  commentId: E:NMF.Expressions.SingleSuccessorList.Detached
  fullName: NMF.Expressions.SingleSuccessorList.Detached
  nameWithType: SingleSuccessorList.Detached
- uid: NMF.Expressions.SingleSuccessorList.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_GetEnumerator
  commentId: M:NMF.Expressions.SingleSuccessorList.GetEnumerator
  fullName: NMF.Expressions.SingleSuccessorList.GetEnumerator()
  nameWithType: SingleSuccessorList.GetEnumerator()
- uid: NMF.Expressions.SingleSuccessorList.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_GetEnumerator_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.GetEnumerator
  nameWithType: SingleSuccessorList.GetEnumerator
- uid: NMF.Expressions.SingleSuccessorList.HasSuccessors
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_HasSuccessors
  commentId: P:NMF.Expressions.SingleSuccessorList.HasSuccessors
  fullName: NMF.Expressions.SingleSuccessorList.HasSuccessors
  nameWithType: SingleSuccessorList.HasSuccessors
- uid: NMF.Expressions.SingleSuccessorList.HasSuccessors*
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_HasSuccessors_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.HasSuccessors
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.HasSuccessors
  nameWithType: SingleSuccessorList.HasSuccessors
- uid: NMF.Expressions.SingleSuccessorList.IsAttached
  name: IsAttached
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_IsAttached
  commentId: P:NMF.Expressions.SingleSuccessorList.IsAttached
  fullName: NMF.Expressions.SingleSuccessorList.IsAttached
  nameWithType: SingleSuccessorList.IsAttached
- uid: NMF.Expressions.SingleSuccessorList.IsAttached*
  name: IsAttached
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_IsAttached_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.IsAttached
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.IsAttached
  nameWithType: SingleSuccessorList.IsAttached
- uid: NMF.Expressions.SingleSuccessorList.Item(System.Int32)
  name: Item[Int32]
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Item_System_Int32_
  commentId: P:NMF.Expressions.SingleSuccessorList.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: NMF.Expressions.SingleSuccessorList.Item[System.Int32]
  fullName.vb: NMF.Expressions.SingleSuccessorList.Item(System.Int32)
  nameWithType: SingleSuccessorList.Item[Int32]
  nameWithType.vb: SingleSuccessorList.Item(Int32)
- uid: NMF.Expressions.SingleSuccessorList.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Item_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.Item
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.Item
  nameWithType: SingleSuccessorList.Item
- uid: NMF.Expressions.SingleSuccessorList.Set(NMF.Expressions.INotifiable)
  name: Set(INotifiable)
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Set_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.SingleSuccessorList.Set(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.SingleSuccessorList.Set(NMF.Expressions.INotifiable)
  nameWithType: SingleSuccessorList.Set(INotifiable)
- uid: NMF.Expressions.SingleSuccessorList.Set*
  name: Set
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Set_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.Set
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.Set
  nameWithType: SingleSuccessorList.Set
- uid: NMF.Expressions.SingleSuccessorList.SetDummy
  name: SetDummy()
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_SetDummy
  commentId: M:NMF.Expressions.SingleSuccessorList.SetDummy
  fullName: NMF.Expressions.SingleSuccessorList.SetDummy()
  nameWithType: SingleSuccessorList.SetDummy()
- uid: NMF.Expressions.SingleSuccessorList.SetDummy*
  name: SetDummy
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_SetDummy_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.SetDummy
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.SetDummy
  nameWithType: SingleSuccessorList.SetDummy
- uid: NMF.Expressions.SingleSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.SingleSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.SingleSuccessorList.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SingleSuccessorList.IEnumerable.GetEnumerator()
  nameWithType.vb: SingleSuccessorList.System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.SingleSuccessorList.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.SingleSuccessorList.System.Collections.IEnumerable.GetEnumerator
  nameWithType: SingleSuccessorList.IEnumerable.GetEnumerator
  nameWithType.vb: SingleSuccessorList.System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.SingleSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  name: Unset(INotifiable, Boolean)
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Unset_NMF_Expressions_INotifiable_System_Boolean_
  commentId: M:NMF.Expressions.SingleSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  fullName: NMF.Expressions.SingleSuccessorList.Unset(NMF.Expressions.INotifiable, System.Boolean)
  nameWithType: SingleSuccessorList.Unset(INotifiable, Boolean)
- uid: NMF.Expressions.SingleSuccessorList.Unset*
  name: Unset
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_Unset_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.Unset
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.Unset
  nameWithType: SingleSuccessorList.Unset
- uid: NMF.Expressions.SingleSuccessorList.UnsetAll
  name: UnsetAll()
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_UnsetAll
  commentId: M:NMF.Expressions.SingleSuccessorList.UnsetAll
  fullName: NMF.Expressions.SingleSuccessorList.UnsetAll()
  nameWithType: SingleSuccessorList.UnsetAll()
- uid: NMF.Expressions.SingleSuccessorList.UnsetAll*
  name: UnsetAll
  href: api/Expressions/NMF.Expressions.SingleSuccessorList.html#NMF_Expressions_SingleSuccessorList_UnsetAll_
  commentId: Overload:NMF.Expressions.SingleSuccessorList.UnsetAll
  isSpec: "True"
  fullName: NMF.Expressions.SingleSuccessorList.UnsetAll
  nameWithType: SingleSuccessorList.UnsetAll
- uid: NMF.Expressions.SingletonSuccessorList
  name: SingletonSuccessorList
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html
  commentId: T:NMF.Expressions.SingletonSuccessorList
  fullName: NMF.Expressions.SingletonSuccessorList
  nameWithType: SingletonSuccessorList
- uid: NMF.Expressions.SingletonSuccessorList.Count
  name: Count
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Count
  commentId: P:NMF.Expressions.SingletonSuccessorList.Count
  fullName: NMF.Expressions.SingletonSuccessorList.Count
  nameWithType: SingletonSuccessorList.Count
- uid: NMF.Expressions.SingletonSuccessorList.Count*
  name: Count
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Count_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.Count
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.Count
  nameWithType: SingletonSuccessorList.Count
- uid: NMF.Expressions.SingletonSuccessorList.GetEnumerator
  name: GetEnumerator()
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_GetEnumerator
  commentId: M:NMF.Expressions.SingletonSuccessorList.GetEnumerator
  fullName: NMF.Expressions.SingletonSuccessorList.GetEnumerator()
  nameWithType: SingletonSuccessorList.GetEnumerator()
- uid: NMF.Expressions.SingletonSuccessorList.GetEnumerator*
  name: GetEnumerator
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_GetEnumerator_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.GetEnumerator
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.GetEnumerator
  nameWithType: SingletonSuccessorList.GetEnumerator
- uid: NMF.Expressions.SingletonSuccessorList.HasSuccessors
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_HasSuccessors
  commentId: P:NMF.Expressions.SingletonSuccessorList.HasSuccessors
  fullName: NMF.Expressions.SingletonSuccessorList.HasSuccessors
  nameWithType: SingletonSuccessorList.HasSuccessors
- uid: NMF.Expressions.SingletonSuccessorList.HasSuccessors*
  name: HasSuccessors
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_HasSuccessors_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.HasSuccessors
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.HasSuccessors
  nameWithType: SingletonSuccessorList.HasSuccessors
- uid: NMF.Expressions.SingletonSuccessorList.Instance
  name: Instance
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Instance
  commentId: P:NMF.Expressions.SingletonSuccessorList.Instance
  fullName: NMF.Expressions.SingletonSuccessorList.Instance
  nameWithType: SingletonSuccessorList.Instance
- uid: NMF.Expressions.SingletonSuccessorList.Instance*
  name: Instance
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Instance_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.Instance
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.Instance
  nameWithType: SingletonSuccessorList.Instance
- uid: NMF.Expressions.SingletonSuccessorList.IsAttached
  name: IsAttached
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_IsAttached
  commentId: P:NMF.Expressions.SingletonSuccessorList.IsAttached
  fullName: NMF.Expressions.SingletonSuccessorList.IsAttached
  nameWithType: SingletonSuccessorList.IsAttached
- uid: NMF.Expressions.SingletonSuccessorList.IsAttached*
  name: IsAttached
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_IsAttached_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.IsAttached
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.IsAttached
  nameWithType: SingletonSuccessorList.IsAttached
- uid: NMF.Expressions.SingletonSuccessorList.Item(System.Int32)
  name: Item[Int32]
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Item_System_Int32_
  commentId: P:NMF.Expressions.SingletonSuccessorList.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: NMF.Expressions.SingletonSuccessorList.Item[System.Int32]
  fullName.vb: NMF.Expressions.SingletonSuccessorList.Item(System.Int32)
  nameWithType: SingletonSuccessorList.Item[Int32]
  nameWithType.vb: SingletonSuccessorList.Item(Int32)
- uid: NMF.Expressions.SingletonSuccessorList.Item*
  name: Item
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Item_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.Item
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.Item
  nameWithType: SingletonSuccessorList.Item
- uid: NMF.Expressions.SingletonSuccessorList.NMF#Expressions#ISuccessorList#Attached
  name: ISuccessorList.Attached
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_NMF_Expressions_ISuccessorList_Attached
  commentId: E:NMF.Expressions.SingletonSuccessorList.NMF#Expressions#ISuccessorList#Attached
  name.vb: NMF.Expressions.ISuccessorList.Attached
  fullName: NMF.Expressions.SingletonSuccessorList.NMF.Expressions.ISuccessorList.Attached
  nameWithType: SingletonSuccessorList.ISuccessorList.Attached
  nameWithType.vb: SingletonSuccessorList.NMF.Expressions.ISuccessorList.Attached
- uid: NMF.Expressions.SingletonSuccessorList.NMF#Expressions#ISuccessorList#Detached
  name: ISuccessorList.Detached
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_NMF_Expressions_ISuccessorList_Detached
  commentId: E:NMF.Expressions.SingletonSuccessorList.NMF#Expressions#ISuccessorList#Detached
  name.vb: NMF.Expressions.ISuccessorList.Detached
  fullName: NMF.Expressions.SingletonSuccessorList.NMF.Expressions.ISuccessorList.Detached
  nameWithType: SingletonSuccessorList.ISuccessorList.Detached
  nameWithType.vb: SingletonSuccessorList.NMF.Expressions.ISuccessorList.Detached
- uid: NMF.Expressions.SingletonSuccessorList.Set(NMF.Expressions.INotifiable)
  name: Set(INotifiable)
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Set_NMF_Expressions_INotifiable_
  commentId: M:NMF.Expressions.SingletonSuccessorList.Set(NMF.Expressions.INotifiable)
  fullName: NMF.Expressions.SingletonSuccessorList.Set(NMF.Expressions.INotifiable)
  nameWithType: SingletonSuccessorList.Set(INotifiable)
- uid: NMF.Expressions.SingletonSuccessorList.Set*
  name: Set
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Set_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.Set
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.Set
  nameWithType: SingletonSuccessorList.Set
- uid: NMF.Expressions.SingletonSuccessorList.SetDummy
  name: SetDummy()
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_SetDummy
  commentId: M:NMF.Expressions.SingletonSuccessorList.SetDummy
  fullName: NMF.Expressions.SingletonSuccessorList.SetDummy()
  nameWithType: SingletonSuccessorList.SetDummy()
- uid: NMF.Expressions.SingletonSuccessorList.SetDummy*
  name: SetDummy
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_SetDummy_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.SetDummy
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.SetDummy
  nameWithType: SingletonSuccessorList.SetDummy
- uid: NMF.Expressions.SingletonSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Expressions.SingletonSuccessorList.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Expressions.SingletonSuccessorList.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SingletonSuccessorList.IEnumerable.GetEnumerator()
  nameWithType.vb: SingletonSuccessorList.System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Expressions.SingletonSuccessorList.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Expressions.SingletonSuccessorList.System.Collections.IEnumerable.GetEnumerator
  nameWithType: SingletonSuccessorList.IEnumerable.GetEnumerator
  nameWithType.vb: SingletonSuccessorList.System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Expressions.SingletonSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  name: Unset(INotifiable, Boolean)
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Unset_NMF_Expressions_INotifiable_System_Boolean_
  commentId: M:NMF.Expressions.SingletonSuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  fullName: NMF.Expressions.SingletonSuccessorList.Unset(NMF.Expressions.INotifiable, System.Boolean)
  nameWithType: SingletonSuccessorList.Unset(INotifiable, Boolean)
- uid: NMF.Expressions.SingletonSuccessorList.Unset*
  name: Unset
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_Unset_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.Unset
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.Unset
  nameWithType: SingletonSuccessorList.Unset
- uid: NMF.Expressions.SingletonSuccessorList.UnsetAll
  name: UnsetAll()
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_UnsetAll
  commentId: M:NMF.Expressions.SingletonSuccessorList.UnsetAll
  fullName: NMF.Expressions.SingletonSuccessorList.UnsetAll()
  nameWithType: SingletonSuccessorList.UnsetAll()
- uid: NMF.Expressions.SingletonSuccessorList.UnsetAll*
  name: UnsetAll
  href: api/Expressions/NMF.Expressions.SingletonSuccessorList.html#NMF_Expressions_SingletonSuccessorList_UnsetAll_
  commentId: Overload:NMF.Expressions.SingletonSuccessorList.UnsetAll
  isSpec: "True"
  fullName: NMF.Expressions.SingletonSuccessorList.UnsetAll
  nameWithType: SingletonSuccessorList.UnsetAll
- uid: NMF.Expressions.UnchangedNotificationResult
  name: UnchangedNotificationResult
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html
  commentId: T:NMF.Expressions.UnchangedNotificationResult
  fullName: NMF.Expressions.UnchangedNotificationResult
  nameWithType: UnchangedNotificationResult
- uid: NMF.Expressions.UnchangedNotificationResult.Changed
  name: Changed
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Changed
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Changed
  fullName: NMF.Expressions.UnchangedNotificationResult.Changed
  nameWithType: UnchangedNotificationResult.Changed
- uid: NMF.Expressions.UnchangedNotificationResult.Changed*
  name: Changed
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Changed_
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Changed
  isSpec: "True"
  fullName: NMF.Expressions.UnchangedNotificationResult.Changed
  nameWithType: UnchangedNotificationResult.Changed
- uid: NMF.Expressions.UnchangedNotificationResult.FreeReference
  name: FreeReference()
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_FreeReference
  commentId: M:NMF.Expressions.UnchangedNotificationResult.FreeReference
  fullName: NMF.Expressions.UnchangedNotificationResult.FreeReference()
  nameWithType: UnchangedNotificationResult.FreeReference()
- uid: NMF.Expressions.UnchangedNotificationResult.FreeReference*
  name: FreeReference
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_FreeReference_
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.FreeReference
  isSpec: "True"
  fullName: NMF.Expressions.UnchangedNotificationResult.FreeReference
  nameWithType: UnchangedNotificationResult.FreeReference
- uid: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  name: IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  fullName: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences(System.Int32)
  nameWithType: UnchangedNotificationResult.IncreaseReferences(Int32)
- uid: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences*
  name: IncreaseReferences
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_IncreaseReferences_
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.IncreaseReferences
  isSpec: "True"
  fullName: NMF.Expressions.UnchangedNotificationResult.IncreaseReferences
  nameWithType: UnchangedNotificationResult.IncreaseReferences
- uid: NMF.Expressions.UnchangedNotificationResult.Instance
  name: Instance
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Instance
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Instance
  fullName: NMF.Expressions.UnchangedNotificationResult.Instance
  nameWithType: UnchangedNotificationResult.Instance
- uid: NMF.Expressions.UnchangedNotificationResult.Instance*
  name: Instance
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Instance_
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Instance
  isSpec: "True"
  fullName: NMF.Expressions.UnchangedNotificationResult.Instance
  nameWithType: UnchangedNotificationResult.Instance
- uid: NMF.Expressions.UnchangedNotificationResult.Source
  name: Source
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Source
  commentId: P:NMF.Expressions.UnchangedNotificationResult.Source
  fullName: NMF.Expressions.UnchangedNotificationResult.Source
  nameWithType: UnchangedNotificationResult.Source
- uid: NMF.Expressions.UnchangedNotificationResult.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.UnchangedNotificationResult.html#NMF_Expressions_UnchangedNotificationResult_Source_
  commentId: Overload:NMF.Expressions.UnchangedNotificationResult.Source
  isSpec: "True"
  fullName: NMF.Expressions.UnchangedNotificationResult.Source
  nameWithType: UnchangedNotificationResult.Source
- uid: NMF.Expressions.ValueChangedEventArgs
  name: ValueChangedEventArgs
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
- uid: NMF.Expressions.ValueChangedEventArgs.#ctor(System.Object,System.Object)
  name: ValueChangedEventArgs(Object, Object)
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs__ctor_System_Object_System_Object_
  commentId: M:NMF.Expressions.ValueChangedEventArgs.#ctor(System.Object,System.Object)
  fullName: NMF.Expressions.ValueChangedEventArgs.ValueChangedEventArgs(System.Object, System.Object)
  nameWithType: ValueChangedEventArgs.ValueChangedEventArgs(Object, Object)
- uid: NMF.Expressions.ValueChangedEventArgs.#ctor*
  name: ValueChangedEventArgs
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs__ctor_
  commentId: Overload:NMF.Expressions.ValueChangedEventArgs.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedEventArgs.ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs.ValueChangedEventArgs
- uid: NMF.Expressions.ValueChangedEventArgs.NewValue
  name: NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs_NewValue
  commentId: P:NMF.Expressions.ValueChangedEventArgs.NewValue
  fullName: NMF.Expressions.ValueChangedEventArgs.NewValue
  nameWithType: ValueChangedEventArgs.NewValue
- uid: NMF.Expressions.ValueChangedEventArgs.NewValue*
  name: NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs_NewValue_
  commentId: Overload:NMF.Expressions.ValueChangedEventArgs.NewValue
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedEventArgs.NewValue
  nameWithType: ValueChangedEventArgs.NewValue
- uid: NMF.Expressions.ValueChangedEventArgs.OldValue
  name: OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs_OldValue
  commentId: P:NMF.Expressions.ValueChangedEventArgs.OldValue
  fullName: NMF.Expressions.ValueChangedEventArgs.OldValue
  nameWithType: ValueChangedEventArgs.OldValue
- uid: NMF.Expressions.ValueChangedEventArgs.OldValue*
  name: OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedEventArgs.html#NMF_Expressions_ValueChangedEventArgs_OldValue_
  commentId: Overload:NMF.Expressions.ValueChangedEventArgs.OldValue
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedEventArgs.OldValue
  nameWithType: ValueChangedEventArgs.OldValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1
  name: ValueChangedNotificationResult<T>
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html
  commentId: T:NMF.Expressions.ValueChangedNotificationResult`1
  name.vb: ValueChangedNotificationResult(Of T)
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T)
  nameWithType: ValueChangedNotificationResult<T>
  nameWithType.vb: ValueChangedNotificationResult(Of T)
- uid: NMF.Expressions.ValueChangedNotificationResult`1.#ctor(NMF.Expressions.INotifiable,`0,`0)
  name: ValueChangedNotificationResult(INotifiable, T, T)
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1__ctor_NMF_Expressions_INotifiable__0__0_
  commentId: M:NMF.Expressions.ValueChangedNotificationResult`1.#ctor(NMF.Expressions.INotifiable,`0,`0)
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.ValueChangedNotificationResult(NMF.Expressions.INotifiable, T, T)
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).ValueChangedNotificationResult(NMF.Expressions.INotifiable, T, T)
  nameWithType: ValueChangedNotificationResult<T>.ValueChangedNotificationResult(INotifiable, T, T)
  nameWithType.vb: ValueChangedNotificationResult(Of T).ValueChangedNotificationResult(INotifiable, T, T)
- uid: NMF.Expressions.ValueChangedNotificationResult`1.#ctor*
  name: ValueChangedNotificationResult
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1__ctor_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.#ctor
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.ValueChangedNotificationResult
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).ValueChangedNotificationResult
  nameWithType: ValueChangedNotificationResult<T>.ValueChangedNotificationResult
  nameWithType.vb: ValueChangedNotificationResult(Of T).ValueChangedNotificationResult
- uid: NMF.Expressions.ValueChangedNotificationResult`1.Changed
  name: Changed
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_Changed
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.Changed
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.Changed
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).Changed
  nameWithType: ValueChangedNotificationResult<T>.Changed
  nameWithType.vb: ValueChangedNotificationResult(Of T).Changed
- uid: NMF.Expressions.ValueChangedNotificationResult`1.Changed*
  name: Changed
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_Changed_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.Changed
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.Changed
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).Changed
  nameWithType: ValueChangedNotificationResult<T>.Changed
  nameWithType.vb: ValueChangedNotificationResult(Of T).Changed
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NewValue
  name: NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NewValue
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.NewValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NewValue
  nameWithType: ValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NewValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NewValue*
  name: NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NewValue_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.NewValue
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NewValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NewValue
  nameWithType: ValueChangedNotificationResult<T>.NewValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NewValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#FreeReference
  name: INotificationResult.FreeReference()
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_INotificationResult_FreeReference
  commentId: M:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#FreeReference
  name.vb: NMF.Expressions.INotificationResult.FreeReference()
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.INotificationResult.FreeReference()
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.FreeReference()
  nameWithType: ValueChangedNotificationResult<T>.INotificationResult.FreeReference()
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.FreeReference()
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#FreeReference*
  name: INotificationResult.FreeReference
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_INotificationResult_FreeReference_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#FreeReference
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.FreeReference
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.INotificationResult.FreeReference
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.FreeReference
  nameWithType: ValueChangedNotificationResult<T>.INotificationResult.FreeReference
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.FreeReference
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name: INotificationResult.IncreaseReferences(Int32)
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_INotificationResult_IncreaseReferences_System_Int32_
  commentId: M:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#IncreaseReferences(System.Int32)
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.IncreaseReferences(System.Int32)
  nameWithType: ValueChangedNotificationResult<T>.INotificationResult.IncreaseReferences(Int32)
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.IncreaseReferences(Int32)
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#IncreaseReferences*
  name: INotificationResult.IncreaseReferences
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_INotificationResult_IncreaseReferences_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#INotificationResult#IncreaseReferences
  isSpec: "True"
  name.vb: NMF.Expressions.INotificationResult.IncreaseReferences
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.INotificationResult.IncreaseReferences
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.IncreaseReferences
  nameWithType: ValueChangedNotificationResult<T>.INotificationResult.IncreaseReferences
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.INotificationResult.IncreaseReferences
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_IValueChangedNotificationResult_NewValue
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: ValueChangedNotificationResult<T>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#NewValue*
  name: IValueChangedNotificationResult.NewValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_IValueChangedNotificationResult_NewValue_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#NewValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.IValueChangedNotificationResult.NewValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
  nameWithType: ValueChangedNotificationResult<T>.IValueChangedNotificationResult.NewValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.NewValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_IValueChangedNotificationResult_OldValue
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: ValueChangedNotificationResult<T>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#OldValue*
  name: IValueChangedNotificationResult.OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_NMF_Expressions_IValueChangedNotificationResult_OldValue_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.NMF#Expressions#IValueChangedNotificationResult#OldValue
  isSpec: "True"
  name.vb: NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.NMF.Expressions.IValueChangedNotificationResult.OldValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
  nameWithType: ValueChangedNotificationResult<T>.IValueChangedNotificationResult.OldValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).NMF.Expressions.IValueChangedNotificationResult.OldValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.OldValue
  name: OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_OldValue
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.OldValue
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).OldValue
  nameWithType: ValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).OldValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.OldValue*
  name: OldValue
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_OldValue_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.OldValue
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.OldValue
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).OldValue
  nameWithType: ValueChangedNotificationResult<T>.OldValue
  nameWithType.vb: ValueChangedNotificationResult(Of T).OldValue
- uid: NMF.Expressions.ValueChangedNotificationResult`1.Source
  name: Source
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_Source
  commentId: P:NMF.Expressions.ValueChangedNotificationResult`1.Source
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.Source
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).Source
  nameWithType: ValueChangedNotificationResult<T>.Source
  nameWithType.vb: ValueChangedNotificationResult(Of T).Source
- uid: NMF.Expressions.ValueChangedNotificationResult`1.Source*
  name: Source
  href: api/Expressions/NMF.Expressions.ValueChangedNotificationResult-1.html#NMF_Expressions_ValueChangedNotificationResult_1_Source_
  commentId: Overload:NMF.Expressions.ValueChangedNotificationResult`1.Source
  isSpec: "True"
  fullName: NMF.Expressions.ValueChangedNotificationResult<T>.Source
  fullName.vb: NMF.Expressions.ValueChangedNotificationResult(Of T).Source
  nameWithType: ValueChangedNotificationResult<T>.Source
  nameWithType.vb: ValueChangedNotificationResult(Of T).Source
- uid: NMF.Synchronizations
  name: NMF.Synchronizations
  href: api/Synchronizations/NMF.Synchronizations.html
  commentId: N:NMF.Synchronizations
  fullName: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  name: BothGuardedSynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.BothGuardedSynchronizationJob`2
  name.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight)
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`0,`1,System.Boolean})
  name: BothGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, TRight, Boolean>)
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2__ctor_NMF_Synchronizations_ISynchronizationJob__0__1__ObservingFunc__0__1_System_Boolean__
  commentId: M:NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`0,`1,System.Boolean})
  name.vb: BothGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, TRight, Boolean))
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, TRight, System.Boolean>)
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).BothGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, TRight, System.Boolean))
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, TRight, Boolean>)
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).BothGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, TRight, Boolean))
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor*
  name: BothGuardedSynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2__ctor_
  commentId: Overload:NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).BothGuardedSynchronizationJob
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).BothGuardedSynchronizationJob
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  commentId: M:NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker*
  name: CreateTracker
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2_CreateTracker_
  commentId: Overload:NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker
  isSpec: "True"
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.Guard
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2_Guard
  commentId: P:NMF.Synchronizations.BothGuardedSynchronizationJob`2.Guard
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.Guard*
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2_Guard_
  commentId: Overload:NMF.Synchronizations.BothGuardedSynchronizationJob`2.Guard
  isSpec: "True"
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2
  name: GuardedSynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob`2
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1})
  name: GuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>)
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2__ctor_NMF_Synchronizations_ISynchronizationJob__0__1__
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1})
  name.vb: GuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight))
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.GuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).GuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight))
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.GuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).GuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight))
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.#ctor*
  name: GuardedSynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2__ctor_
  commentId: Overload:NMF.Synchronizations.GuardedSynchronizationJob`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.GuardedSynchronizationJob
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).GuardedSynchronizationJob
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.GuardedSynchronizationJob
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).GuardedSynchronizationJob
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker*
  name: CreateTracker
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_
  commentId: Overload:NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker
  isSpec: "True"
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Inner
  name: Inner
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Inner
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob`2.Inner
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Inner
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Inner
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Inner
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Inner
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Inner*
  name: Inner
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Inner_
  commentId: Overload:NMF.Synchronizations.GuardedSynchronizationJob`2.Inner
  isSpec: "True"
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Inner
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Inner
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Inner
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Inner
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_IsEarly
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly*
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_IsEarly_
  commentId: Overload:NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  isSpec: "True"
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform*
  name: Perform
  href: api/Synchronizations/NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_
  commentId: Overload:NMF.Synchronizations.GuardedSynchronizationJob`2.Perform
  isSpec: "True"
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform
- uid: NMF.Synchronizations.IConverter`2
  name: IConverter<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.IConverter-2.html
  commentId: T:NMF.Synchronizations.IConverter`2
  name.vb: IConverter(Of TLeft, TRight)
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight)
  nameWithType: IConverter<TLeft, TRight>
  nameWithType.vb: IConverter(Of TLeft, TRight)
- uid: NMF.Synchronizations.IConverter`2.ConvertLeftToRight(`0,`1)
  name: ConvertLeftToRight(TLeft, TRight)
  href: api/Synchronizations/NMF.Synchronizations.IConverter-2.html#NMF_Synchronizations_IConverter_2_ConvertLeftToRight__0__1_
  commentId: M:NMF.Synchronizations.IConverter`2.ConvertLeftToRight(`0,`1)
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>.ConvertLeftToRight(TLeft, TRight)
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight).ConvertLeftToRight(TLeft, TRight)
  nameWithType: IConverter<TLeft, TRight>.ConvertLeftToRight(TLeft, TRight)
  nameWithType.vb: IConverter(Of TLeft, TRight).ConvertLeftToRight(TLeft, TRight)
- uid: NMF.Synchronizations.IConverter`2.ConvertLeftToRight*
  name: ConvertLeftToRight
  href: api/Synchronizations/NMF.Synchronizations.IConverter-2.html#NMF_Synchronizations_IConverter_2_ConvertLeftToRight_
  commentId: Overload:NMF.Synchronizations.IConverter`2.ConvertLeftToRight
  isSpec: "True"
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>.ConvertLeftToRight
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight).ConvertLeftToRight
  nameWithType: IConverter<TLeft, TRight>.ConvertLeftToRight
  nameWithType.vb: IConverter(Of TLeft, TRight).ConvertLeftToRight
- uid: NMF.Synchronizations.IConverter`2.ConvertRightToLeft(`1,`0)
  name: ConvertRightToLeft(TRight, TLeft)
  href: api/Synchronizations/NMF.Synchronizations.IConverter-2.html#NMF_Synchronizations_IConverter_2_ConvertRightToLeft__1__0_
  commentId: M:NMF.Synchronizations.IConverter`2.ConvertRightToLeft(`1,`0)
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>.ConvertRightToLeft(TRight, TLeft)
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight).ConvertRightToLeft(TRight, TLeft)
  nameWithType: IConverter<TLeft, TRight>.ConvertRightToLeft(TRight, TLeft)
  nameWithType.vb: IConverter(Of TLeft, TRight).ConvertRightToLeft(TRight, TLeft)
- uid: NMF.Synchronizations.IConverter`2.ConvertRightToLeft*
  name: ConvertRightToLeft
  href: api/Synchronizations/NMF.Synchronizations.IConverter-2.html#NMF_Synchronizations_IConverter_2_ConvertRightToLeft_
  commentId: Overload:NMF.Synchronizations.IConverter`2.ConvertRightToLeft
  isSpec: "True"
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>.ConvertRightToLeft
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight).ConvertRightToLeft
  nameWithType: IConverter<TLeft, TRight>.ConvertRightToLeft
  nameWithType.vb: IConverter(Of TLeft, TRight).ConvertRightToLeft
- uid: NMF.Synchronizations.ISynchronizationContext
  name: ISynchronizationContext
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationContext.html
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
  nameWithType: ISynchronizationContext
- uid: NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  name: ChangePropagation
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_ChangePropagation
  commentId: P:NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  fullName: NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  nameWithType: ISynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.ISynchronizationContext.ChangePropagation*
  name: ChangePropagation
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_ChangePropagation_
  commentId: Overload:NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  isSpec: "True"
  fullName: NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  nameWithType: ISynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.ISynchronizationContext.Direction
  name: Direction
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_Direction
  commentId: P:NMF.Synchronizations.ISynchronizationContext.Direction
  fullName: NMF.Synchronizations.ISynchronizationContext.Direction
  nameWithType: ISynchronizationContext.Direction
- uid: NMF.Synchronizations.ISynchronizationContext.Direction*
  name: Direction
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_Direction_
  commentId: Overload:NMF.Synchronizations.ISynchronizationContext.Direction
  isSpec: "True"
  fullName: NMF.Synchronizations.ISynchronizationContext.Direction
  nameWithType: ISynchronizationContext.Direction
- uid: NMF.Synchronizations.ISynchronizationJob`2
  name: ISynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.ISynchronizationJob`2
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  nameWithType: ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.ISynchronizationJob`2.IsEarly
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationJob-2.html#NMF_Synchronizations_ISynchronizationJob_2_IsEarly
  commentId: P:NMF.Synchronizations.ISynchronizationJob`2.IsEarly
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: ISynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.ISynchronizationJob`2.IsEarly*
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationJob-2.html#NMF_Synchronizations_ISynchronizationJob_2_IsEarly_
  commentId: Overload:NMF.Synchronizations.ISynchronizationJob`2.IsEarly
  isSpec: "True"
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: ISynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.ISynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationJob-2.html#NMF_Synchronizations_ISynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.ISynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: ISynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
- uid: NMF.Synchronizations.ISynchronizationJob`2.Perform*
  name: Perform
  href: api/Synchronizations/NMF.Synchronizations.ISynchronizationJob-2.html#NMF_Synchronizations_ISynchronizationJob_2_Perform_
  commentId: Overload:NMF.Synchronizations.ISynchronizationJob`2.Perform
  isSpec: "True"
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>.Perform
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight).Perform
  nameWithType: ISynchronizationJob<TLeft, TRight>.Perform
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight).Perform
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  name: LeftGuardedSynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  name.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight)
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`0,System.Boolean})
  name: LeftGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, Boolean>)
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2__ctor_NMF_Synchronizations_ISynchronizationJob__0__1__ObservingFunc__0_System_Boolean__
  commentId: M:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`0,System.Boolean})
  name.vb: LeftGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, Boolean))
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.LeftGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, System.Boolean>)
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).LeftGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, System.Boolean))
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.LeftGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, Boolean>)
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).LeftGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, Boolean))
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.#ctor*
  name: LeftGuardedSynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2__ctor_
  commentId: Overload:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.LeftGuardedSynchronizationJob
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).LeftGuardedSynchronizationJob
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.LeftGuardedSynchronizationJob
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).LeftGuardedSynchronizationJob
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  commentId: M:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.CreateTracker*
  name: CreateTracker
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2_CreateTracker_
  commentId: Overload:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.CreateTracker
  isSpec: "True"
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.Guard
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2_Guard
  commentId: P:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.Guard
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2.Guard*
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.LeftGuardedSynchronizationJob-2.html#NMF_Synchronizations_LeftGuardedSynchronizationJob_2_Guard_
  commentId: Overload:NMF.Synchronizations.LeftGuardedSynchronizationJob`2.Guard
  isSpec: "True"
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3
  name: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html
  commentId: T:NMF.Synchronizations.OneWayPropertySynchronizationJob`3
  name.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`2}},System.Action{`1,`2},System.Boolean)
  name: OneWayPropertySynchronizationJob(Expression<Func<TSource, TValue>>, Action<TTarget, TValue>, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3__ctor_System_Linq_Expressions_Expression_System_Func__0__2___System_Action__1__2__System_Boolean_
  commentId: M:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`2}},System.Action{`1,`2},System.Boolean)
  name.vb: OneWayPropertySynchronizationJob(Expression(Of Func(Of TSource, TValue)), Action(Of TTarget, TValue), Boolean)
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.OneWayPropertySynchronizationJob(System.Linq.Expressions.Expression<System.Func<TSource, TValue>>, System.Action<TTarget, TValue>, System.Boolean)
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).OneWayPropertySynchronizationJob(System.Linq.Expressions.Expression(Of System.Func(Of TSource, TValue)), System.Action(Of TTarget, TValue), System.Boolean)
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.OneWayPropertySynchronizationJob(Expression<Func<TSource, TValue>>, Action<TTarget, TValue>, Boolean)
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).OneWayPropertySynchronizationJob(Expression(Of Func(Of TSource, TValue)), Action(Of TTarget, TValue), Boolean)
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.#ctor*
  name: OneWayPropertySynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3__ctor_
  commentId: Overload:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.OneWayPropertySynchronizationJob
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).OneWayPropertySynchronizationJob
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.OneWayPropertySynchronizationJob
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).OneWayPropertySynchronizationJob
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.IsEarly
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3_IsEarly
  commentId: P:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.IsEarly
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.IsEarly
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).IsEarly
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.IsEarly
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).IsEarly
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.IsEarly*
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3_IsEarly_
  commentId: Overload:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.IsEarly
  isSpec: "True"
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.IsEarly
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).IsEarly
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.IsEarly
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).IsEarly
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.Perform(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(TSource, TTarget, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3_Perform__0__1_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.Perform(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.Perform(TSource, TTarget, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).Perform(TSource, TTarget, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.Perform(TSource, TTarget, ISynchronizationContext)
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).Perform(TSource, TTarget, ISynchronizationContext)
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3.Perform*
  name: Perform
  href: api/Synchronizations/NMF.Synchronizations.OneWayPropertySynchronizationJob-3.html#NMF_Synchronizations_OneWayPropertySynchronizationJob_3_Perform_
  commentId: Overload:NMF.Synchronizations.OneWayPropertySynchronizationJob`3.Perform
  isSpec: "True"
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.Perform
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).Perform
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>.Perform
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue).Perform
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2
  name: OpaqueSynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.OpaqueSynchronizationJob`2
  name.vb: OpaqueSynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight)
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.#ctor(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable})
  name: OpaqueSynchronizationJob(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>)
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2__ctor_System_Func__0__1_NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_System_IDisposable__
  commentId: M:NMF.Synchronizations.OpaqueSynchronizationJob`2.#ctor(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable})
  name.vb: OpaqueSynchronizationJob(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable))
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.OpaqueSynchronizationJob(System.Func<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>)
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).OpaqueSynchronizationJob(System.Func(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable))
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.OpaqueSynchronizationJob(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>)
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).OpaqueSynchronizationJob(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable))
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.#ctor*
  name: OpaqueSynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2__ctor_
  commentId: Overload:NMF.Synchronizations.OpaqueSynchronizationJob`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.OpaqueSynchronizationJob
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).OpaqueSynchronizationJob
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.OpaqueSynchronizationJob
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).OpaqueSynchronizationJob
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.Action
  name: Action
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_Action
  commentId: P:NMF.Synchronizations.OpaqueSynchronizationJob`2.Action
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.Action
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).Action
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.Action
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).Action
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.Action*
  name: Action
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_Action_
  commentId: Overload:NMF.Synchronizations.OpaqueSynchronizationJob`2.Action
  isSpec: "True"
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.Action
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).Action
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.Action
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).Action
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.IsEarly
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_IsEarly
  commentId: P:NMF.Synchronizations.OpaqueSynchronizationJob`2.IsEarly
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.IsEarly*
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_IsEarly_
  commentId: Overload:NMF.Synchronizations.OpaqueSynchronizationJob`2.IsEarly
  isSpec: "True"
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.IsEarly
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).IsEarly
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.OpaqueSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2.Perform*
  name: Perform
  href: api/Synchronizations/NMF.Synchronizations.OpaqueSynchronizationJob-2.html#NMF_Synchronizations_OpaqueSynchronizationJob_2_Perform_
  commentId: Overload:NMF.Synchronizations.OpaqueSynchronizationJob`2.Perform
  isSpec: "True"
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>.Perform
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight).Perform
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>.Perform
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight).Perform
- uid: NMF.Synchronizations.PropertySynchronizationJob`3
  name: PropertySynchronizationJob<TLeft, TRight, TValue>
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html
  commentId: T:NMF.Synchronizations.PropertySynchronizationJob`3
  name.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`2}},System.Linq.Expressions.Expression{System.Func{`1,`2}},System.Boolean)
  name: PropertySynchronizationJob(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3__ctor_System_Linq_Expressions_Expression_System_Func__0__2___System_Linq_Expressions_Expression_System_Func__1__2___System_Boolean_
  commentId: M:NMF.Synchronizations.PropertySynchronizationJob`3.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`2}},System.Linq.Expressions.Expression{System.Func{`1,`2}},System.Boolean)
  name.vb: PropertySynchronizationJob(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Boolean)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PropertySynchronizationJob(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Boolean)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PropertySynchronizationJob(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Boolean)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PropertySynchronizationJob(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Boolean)
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PropertySynchronizationJob(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Boolean)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.#ctor*
  name: PropertySynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3__ctor_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PropertySynchronizationJob
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PropertySynchronizationJob
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PropertySynchronizationJob
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PropertySynchronizationJob
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.IsEarly
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_IsEarly
  commentId: P:NMF.Synchronizations.PropertySynchronizationJob`3.IsEarly
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.IsEarly
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).IsEarly
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.IsEarly
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).IsEarly
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.IsEarly*
  name: IsEarly
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_IsEarly_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.IsEarly
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.IsEarly
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).IsEarly
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.IsEarly
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).IsEarly
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.PropertySynchronizationJob`3.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.Perform*
  name: Perform
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_Perform_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.Perform
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.Perform
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).Perform
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.Perform
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).Perform
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformNoChangePropagation(`0,`1,NMF.Synchronizations.SynchronizationDirection)
  name: PerformNoChangePropagation(TLeft, TRight, SynchronizationDirection)
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformNoChangePropagation__0__1_NMF_Synchronizations_SynchronizationDirection_
  commentId: M:NMF.Synchronizations.PropertySynchronizationJob`3.PerformNoChangePropagation(`0,`1,NMF.Synchronizations.SynchronizationDirection)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformNoChangePropagation(TLeft, TRight, NMF.Synchronizations.SynchronizationDirection)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformNoChangePropagation(TLeft, TRight, NMF.Synchronizations.SynchronizationDirection)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformNoChangePropagation(TLeft, TRight, SynchronizationDirection)
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformNoChangePropagation(TLeft, TRight, SynchronizationDirection)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformNoChangePropagation*
  name: PerformNoChangePropagation
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformNoChangePropagation_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.PerformNoChangePropagation
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformNoChangePropagation
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformNoChangePropagation
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformNoChangePropagation
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformNoChangePropagation
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformOneWay(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: PerformOneWay(TLeft, TRight, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformOneWay__0__1_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.PropertySynchronizationJob`3.PerformOneWay(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformOneWay(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformOneWay(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformOneWay(TLeft, TRight, ISynchronizationContext)
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformOneWay(TLeft, TRight, ISynchronizationContext)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformOneWay*
  name: PerformOneWay
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformOneWay_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.PerformOneWay
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformOneWay
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformOneWay
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformOneWay
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformOneWay
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformTwoWay(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: PerformTwoWay(TLeft, TRight, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformTwoWay__0__1_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.PropertySynchronizationJob`3.PerformTwoWay(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformTwoWay(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformTwoWay(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformTwoWay(TLeft, TRight, ISynchronizationContext)
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformTwoWay(TLeft, TRight, ISynchronizationContext)
- uid: NMF.Synchronizations.PropertySynchronizationJob`3.PerformTwoWay*
  name: PerformTwoWay
  href: api/Synchronizations/NMF.Synchronizations.PropertySynchronizationJob-3.html#NMF_Synchronizations_PropertySynchronizationJob_3_PerformTwoWay_
  commentId: Overload:NMF.Synchronizations.PropertySynchronizationJob`3.PerformTwoWay
  isSpec: "True"
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>.PerformTwoWay
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformTwoWay
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>.PerformTwoWay
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue).PerformTwoWay
- uid: NMF.Synchronizations.ReflectiveSynchronization
  name: ReflectiveSynchronization
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html
  commentId: T:NMF.Synchronizations.ReflectiveSynchronization
  fullName: NMF.Synchronizations.ReflectiveSynchronization
  nameWithType: ReflectiveSynchronization
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules
  name: CreateCustomSynchronizationRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateCustomSynchronizationRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules()
  nameWithType: ReflectiveSynchronization.CreateCustomSynchronizationRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules*
  name: CreateCustomSynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateCustomSynchronizationRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomSynchronizationRules
  nameWithType: ReflectiveSynchronization.CreateCustomSynchronizationRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules
  name: CreateCustomTransformationRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateCustomTransformationRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules()
  nameWithType: ReflectiveSynchronization.CreateCustomTransformationRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules*
  name: CreateCustomTransformationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateCustomTransformationRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateCustomTransformationRules
  nameWithType: ReflectiveSynchronization.CreateCustomTransformationRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules
  name: CreateDefaultSynchronizationRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateDefaultSynchronizationRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules()
  nameWithType: ReflectiveSynchronization.CreateDefaultSynchronizationRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules*
  name: CreateDefaultSynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateDefaultSynchronizationRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultSynchronizationRules
  nameWithType: ReflectiveSynchronization.CreateDefaultSynchronizationRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules
  name: CreateDefaultTransformationRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateDefaultTransformationRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules()
  nameWithType: ReflectiveSynchronization.CreateDefaultTransformationRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules*
  name: CreateDefaultTransformationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateDefaultTransformationRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateDefaultTransformationRules
  nameWithType: ReflectiveSynchronization.CreateDefaultTransformationRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateRules
  name: CreateRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.CreateRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateRules()
  nameWithType: ReflectiveSynchronization.CreateRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.CreateRules*
  name: CreateRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_CreateRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.CreateRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.CreateRules
  nameWithType: ReflectiveSynchronization.CreateRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType(System.Type)
  name: GetRuleForRuleType(Type)
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_GetRuleForRuleType_System_Type_
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType(System.Type)
  fullName: NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType(System.Type)
  nameWithType: ReflectiveSynchronization.GetRuleForRuleType(Type)
- uid: NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType*
  name: GetRuleForRuleType
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_GetRuleForRuleType_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.GetRuleForRuleType
  nameWithType: ReflectiveSynchronization.GetRuleForRuleType
- uid: NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType(System.Type)
  name: GetRulesForRuleType(Type)
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_GetRulesForRuleType_System_Type_
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType(System.Type)
  fullName: NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType(System.Type)
  nameWithType: ReflectiveSynchronization.GetRulesForRuleType(Type)
- uid: NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType*
  name: GetRulesForRuleType
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_GetRulesForRuleType_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.GetRulesForRuleType
  nameWithType: ReflectiveSynchronization.GetRulesForRuleType
- uid: NMF.Synchronizations.ReflectiveSynchronization.RegisterRules
  name: RegisterRules()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_RegisterRules
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.RegisterRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.RegisterRules()
  nameWithType: ReflectiveSynchronization.RegisterRules()
- uid: NMF.Synchronizations.ReflectiveSynchronization.RegisterRules*
  name: RegisterRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_RegisterRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.RegisterRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.RegisterRules
  nameWithType: ReflectiveSynchronization.RegisterRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.Rule*
  name: Rule
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_Rule_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.Rule
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.Rule
  nameWithType: ReflectiveSynchronization.Rule
- uid: NMF.Synchronizations.ReflectiveSynchronization.Rule``1
  name: Rule<TRule>()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_Rule__1
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NMF.Synchronizations.ReflectiveSynchronization.Rule<TRule>()
  fullName.vb: NMF.Synchronizations.ReflectiveSynchronization.Rule(Of TRule)()
  nameWithType: ReflectiveSynchronization.Rule<TRule>()
  nameWithType.vb: ReflectiveSynchronization.Rule(Of TRule)()
- uid: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule*
  name: SynchronizationRule
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_SynchronizationRule_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule
  nameWithType: ReflectiveSynchronization.SynchronizationRule
- uid: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule``1
  name: SynchronizationRule<TRule>()
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_SynchronizationRule__1
  commentId: M:NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule``1
  name.vb: SynchronizationRule(Of TRule)()
  fullName: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule<TRule>()
  fullName.vb: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRule(Of TRule)()
  nameWithType: ReflectiveSynchronization.SynchronizationRule<TRule>()
  nameWithType.vb: ReflectiveSynchronization.SynchronizationRule(Of TRule)()
- uid: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules
  name: SynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_SynchronizationRules
  commentId: P:NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules
  fullName: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules
  nameWithType: ReflectiveSynchronization.SynchronizationRules
- uid: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules*
  name: SynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.ReflectiveSynchronization.html#NMF_Synchronizations_ReflectiveSynchronization_SynchronizationRules_
  commentId: Overload:NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.ReflectiveSynchronization.SynchronizationRules
  nameWithType: ReflectiveSynchronization.SynchronizationRules
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  name: RightGuardedSynchronizationJob<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html
  commentId: T:NMF.Synchronizations.RightGuardedSynchronizationJob`2
  name.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight)
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`1,System.Boolean})
  name: RightGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TRight, Boolean>)
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2__ctor_NMF_Synchronizations_ISynchronizationJob__0__1__ObservingFunc__1_System_Boolean__
  commentId: M:NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},ObservingFunc{`1,System.Boolean})
  name.vb: RightGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TRight, Boolean))
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>, ObservingFunc<TRight, System.Boolean>)
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).RightGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TRight, System.Boolean))
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TRight, Boolean>)
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).RightGuardedSynchronizationJob(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TRight, Boolean))
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor*
  name: RightGuardedSynchronizationJob
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2__ctor_
  commentId: Overload:NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).RightGuardedSynchronizationJob
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).RightGuardedSynchronizationJob
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  commentId: M:NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker*
  name: CreateTracker
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2_CreateTracker_
  commentId: Overload:NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker
  isSpec: "True"
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.Guard
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2_Guard
  commentId: P:NMF.Synchronizations.RightGuardedSynchronizationJob`2.Guard
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.Guard*
  name: Guard
  href: api/Synchronizations/NMF.Synchronizations.RightGuardedSynchronizationJob-2.html#NMF_Synchronizations_RightGuardedSynchronizationJob_2_Guard_
  commentId: Overload:NMF.Synchronizations.RightGuardedSynchronizationJob`2.Guard
  isSpec: "True"
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.Guard
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).Guard
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.Guard
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).Guard
- uid: NMF.Synchronizations.Synchronization
  name: Synchronization
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html
  commentId: T:NMF.Synchronizations.Synchronization
  fullName: NMF.Synchronizations.Synchronization
  nameWithType: Synchronization
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature(System.Type,System.Type)
  name: GetSynchronizationRuleForSignature(Type, Type)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRuleForSignature_System_Type_System_Type_
  commentId: M:NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature(System.Type,System.Type)
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature(System.Type, System.Type)
  nameWithType: Synchronization.GetSynchronizationRuleForSignature(Type, Type)
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature*
  name: GetSynchronizationRuleForSignature
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRuleForSignature_
  commentId: Overload:NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForSignature
  nameWithType: Synchronization.GetSynchronizationRuleForSignature
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType(System.Type)
  name: GetSynchronizationRuleForType(Type)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRuleForType_System_Type_
  commentId: M:NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType(System.Type)
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType(System.Type)
  nameWithType: Synchronization.GetSynchronizationRuleForType(Type)
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType*
  name: GetSynchronizationRuleForType
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRuleForType_
  commentId: Overload:NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRuleForType
  nameWithType: Synchronization.GetSynchronizationRuleForType
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature(System.Type,System.Type)
  name: GetSynchronizationRulesForSignature(Type, Type)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRulesForSignature_System_Type_System_Type_
  commentId: M:NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature(System.Type,System.Type)
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature(System.Type, System.Type)
  nameWithType: Synchronization.GetSynchronizationRulesForSignature(Type, Type)
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature*
  name: GetSynchronizationRulesForSignature
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRulesForSignature_
  commentId: Overload:NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForSignature
  nameWithType: Synchronization.GetSynchronizationRulesForSignature
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType(System.Type)
  name: GetSynchronizationRulesForType(Type)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRulesForType_System_Type_
  commentId: M:NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType(System.Type)
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType(System.Type)
  nameWithType: Synchronization.GetSynchronizationRulesForType(Type)
- uid: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType*
  name: GetSynchronizationRulesForType
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_GetSynchronizationRulesForType_
  commentId: Overload:NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.GetSynchronizationRulesForType
  nameWithType: Synchronization.GetSynchronizationRulesForType
- uid: NMF.Synchronizations.Synchronization.RegisterRules
  name: RegisterRules()
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_RegisterRules
  commentId: M:NMF.Synchronizations.Synchronization.RegisterRules
  fullName: NMF.Synchronizations.Synchronization.RegisterRules()
  nameWithType: Synchronization.RegisterRules()
- uid: NMF.Synchronizations.Synchronization.RegisterRules*
  name: RegisterRules
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_RegisterRules_
  commentId: Overload:NMF.Synchronizations.Synchronization.RegisterRules
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.RegisterRules
  nameWithType: Synchronization.RegisterRules
- uid: NMF.Synchronizations.Synchronization.SynchronizationRules
  name: SynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_SynchronizationRules
  commentId: P:NMF.Synchronizations.Synchronization.SynchronizationRules
  fullName: NMF.Synchronizations.Synchronization.SynchronizationRules
  nameWithType: Synchronization.SynchronizationRules
- uid: NMF.Synchronizations.Synchronization.SynchronizationRules*
  name: SynchronizationRules
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_SynchronizationRules_
  commentId: Overload:NMF.Synchronizations.Synchronization.SynchronizationRules
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.SynchronizationRules
  nameWithType: Synchronization.SynchronizationRules
- uid: NMF.Synchronizations.Synchronization.Synchronize*
  name: Synchronize
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_Synchronize_
  commentId: Overload:NMF.Synchronizations.Synchronization.Synchronize
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.Synchronize
  nameWithType: Synchronization.Synchronize
- uid: NMF.Synchronizations.Synchronization.Synchronize``2(``0@,``1@,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name: Synchronize<TLeft, TRight>(ref TLeft, ref TRight, SynchronizationDirection, ChangePropagationMode)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_Synchronize__2___0____1__NMF_Synchronizations_SynchronizationDirection_ChangePropagationMode_
  commentId: M:NMF.Synchronizations.Synchronization.Synchronize``2(``0@,``1@,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name.vb: Synchronize(Of TLeft, TRight)(ByRef TLeft, ByRef TRight, SynchronizationDirection, ChangePropagationMode)
  fullName: NMF.Synchronizations.Synchronization.Synchronize<TLeft, TRight>(ref TLeft, ref TRight, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  fullName.vb: NMF.Synchronizations.Synchronization.Synchronize(Of TLeft, TRight)(ByRef TLeft, ByRef TRight, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  nameWithType: Synchronization.Synchronize<TLeft, TRight>(ref TLeft, ref TRight, SynchronizationDirection, ChangePropagationMode)
  nameWithType.vb: Synchronization.Synchronize(Of TLeft, TRight)(ByRef TLeft, ByRef TRight, SynchronizationDirection, ChangePropagationMode)
- uid: NMF.Synchronizations.Synchronization.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},``0@,``1@,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name: Synchronize<TLeft, TRight>(SynchronizationRule<TLeft, TRight>, ref TLeft, ref TRight, SynchronizationDirection, ChangePropagationMode)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_Synchronize__2_NMF_Synchronizations_SynchronizationRule___0___1____0____1__NMF_Synchronizations_SynchronizationDirection_ChangePropagationMode_
  commentId: M:NMF.Synchronizations.Synchronization.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},``0@,``1@,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name.vb: Synchronize(Of TLeft, TRight)(SynchronizationRule(Of TLeft, TRight), ByRef TLeft, ByRef TRight, SynchronizationDirection, ChangePropagationMode)
  fullName: NMF.Synchronizations.Synchronization.Synchronize<TLeft, TRight>(NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, ref TLeft, ref TRight, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  fullName.vb: NMF.Synchronizations.Synchronization.Synchronize(Of TLeft, TRight)(NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), ByRef TLeft, ByRef TRight, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  nameWithType: Synchronization.Synchronize<TLeft, TRight>(SynchronizationRule<TLeft, TRight>, ref TLeft, ref TRight, SynchronizationDirection, ChangePropagationMode)
  nameWithType.vb: Synchronization.Synchronize(Of TLeft, TRight)(SynchronizationRule(Of TLeft, TRight), ByRef TLeft, ByRef TRight, SynchronizationDirection, ChangePropagationMode)
- uid: NMF.Synchronizations.Synchronization.SynchronizeMany*
  name: SynchronizeMany
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_SynchronizeMany_
  commentId: Overload:NMF.Synchronizations.Synchronization.SynchronizeMany
  isSpec: "True"
  fullName: NMF.Synchronizations.Synchronization.SynchronizeMany
  nameWithType: Synchronization.SynchronizeMany
- uid: NMF.Synchronizations.Synchronization.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``1},NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name: SynchronizeMany<TLeft, TRight>(SynchronizationRule<TLeft, TRight>, ICollection<TLeft>, ICollection<TRight>, SynchronizationDirection, ChangePropagationMode)
  href: api/Synchronizations/NMF.Synchronizations.Synchronization.html#NMF_Synchronizations_Synchronization_SynchronizeMany__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Collections_Generic_ICollection___0__System_Collections_Generic_ICollection___1__NMF_Synchronizations_SynchronizationDirection_ChangePropagationMode_
  commentId: M:NMF.Synchronizations.Synchronization.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``1},NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name.vb: SynchronizeMany(Of TLeft, TRight)(SynchronizationRule(Of TLeft, TRight), ICollection(Of TLeft), ICollection(Of TRight), SynchronizationDirection, ChangePropagationMode)
  fullName: NMF.Synchronizations.Synchronization.SynchronizeMany<TLeft, TRight>(NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, System.Collections.Generic.ICollection<TLeft>, System.Collections.Generic.ICollection<TRight>, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  fullName.vb: NMF.Synchronizations.Synchronization.SynchronizeMany(Of TLeft, TRight)(NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), System.Collections.Generic.ICollection(Of TLeft), System.Collections.Generic.ICollection(Of TRight), NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  nameWithType: Synchronization.SynchronizeMany<TLeft, TRight>(SynchronizationRule<TLeft, TRight>, ICollection<TLeft>, ICollection<TRight>, SynchronizationDirection, ChangePropagationMode)
  nameWithType.vb: Synchronization.SynchronizeMany(Of TLeft, TRight)(SynchronizationRule(Of TLeft, TRight), ICollection(Of TLeft), ICollection(Of TRight), SynchronizationDirection, ChangePropagationMode)
- uid: NMF.Synchronizations.SynchronizationComputation`2
  name: SynchronizationComputation<TIn, TOut>
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  name.vb: SynchronizationComputation(Of TIn, TOut)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  nameWithType: SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
- uid: NMF.Synchronizations.SynchronizationComputation`2.#ctor(TransformationRuleBase{`0,`1},TransformationRuleBase{`1,`0},IComputationContext,`0)
  name: SynchronizationComputation(TransformationRuleBase<TIn, TOut>, TransformationRuleBase<TOut, TIn>, IComputationContext, TIn)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2__ctor_TransformationRuleBase__0__1__TransformationRuleBase__1__0__IComputationContext__0_
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.#ctor(TransformationRuleBase{`0,`1},TransformationRuleBase{`1,`0},IComputationContext,`0)
  name.vb: SynchronizationComputation(TransformationRuleBase(Of TIn, TOut), TransformationRuleBase(Of TOut, TIn), IComputationContext, TIn)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationComputation(TransformationRuleBase<TIn, TOut>, TransformationRuleBase<TOut, TIn>, IComputationContext, TIn)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationComputation(TransformationRuleBase(Of TIn, TOut), TransformationRuleBase(Of TOut, TIn), IComputationContext, TIn)
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationComputation(TransformationRuleBase<TIn, TOut>, TransformationRuleBase<TOut, TIn>, IComputationContext, TIn)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationComputation(TransformationRuleBase(Of TIn, TOut), TransformationRuleBase(Of TOut, TIn), IComputationContext, TIn)
- uid: NMF.Synchronizations.SynchronizationComputation`2.#ctor*
  name: SynchronizationComputation
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2__ctor_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationComputation
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationComputation
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationComputation
- uid: NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput(`1)
  name: AcceptNewOutput(TOut)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_AcceptNewOutput__1_
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput(`1)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AcceptNewOutput(TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AcceptNewOutput(TOut)
  nameWithType: SynchronizationComputation<TIn, TOut>.AcceptNewOutput(TOut)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AcceptNewOutput(TOut)
- uid: NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput*
  name: AcceptNewOutput
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_AcceptNewOutput_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AcceptNewOutput
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AcceptNewOutput
  nameWithType: SynchronizationComputation<TIn, TOut>.AcceptNewOutput
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AcceptNewOutput
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  name: Dependencies
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dependencies
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dependencies
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dependencies
  nameWithType: SynchronizationComputation<TIn, TOut>.Dependencies
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dependencies
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dependencies*
  name: Dependencies
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dependencies_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dependencies
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dependencies
  nameWithType: SynchronizationComputation<TIn, TOut>.Dependencies
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dependencies
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dispose
  name: Dispose()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dispose
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Dispose
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dispose()
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dispose()
  nameWithType: SynchronizationComputation<TIn, TOut>.Dispose()
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dispose()
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dispose*
  name: Dispose
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dispose_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Dispose
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dispose
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dispose
  nameWithType: SynchronizationComputation<TIn, TOut>.Dispose
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dispose
- uid: NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable(System.Action{`0,`1})
  name: DoWhenOutputIsAvailable(Action<TIn, TOut>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_DoWhenOutputIsAvailable_System_Action__0__1__
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable(System.Action{`0,`1})
  name.vb: DoWhenOutputIsAvailable(Action(Of TIn, TOut))
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable(System.Action<TIn, TOut>)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable(System.Action(Of TIn, TOut))
  nameWithType: SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable(Action<TIn, TOut>)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable(Action(Of TIn, TOut))
- uid: NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable*
  name: DoWhenOutputIsAvailable
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_DoWhenOutputIsAvailable_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable
  nameWithType: SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable
- uid: NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_ExecutionMetaData
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
  nameWithType: SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_ExecutionMetaData_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
  nameWithType: SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_GetInput_System_Int32_
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.GetInput(System.Int32)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetInput(System.Int32)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetInput(System.Int32)
  nameWithType: SynchronizationComputation<TIn, TOut>.GetInput(Int32)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetInput(Int32)
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetInput*
  name: GetInput
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_GetInput_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.GetInput
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetInput
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetInput
  nameWithType: SynchronizationComputation<TIn, TOut>.GetInput
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetInput
- uid: NMF.Synchronizations.SynchronizationComputation`2.Input
  name: Input
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Input
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Input
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Input
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Input
  nameWithType: SynchronizationComputation<TIn, TOut>.Input
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Input
- uid: NMF.Synchronizations.SynchronizationComputation`2.Input*
  name: Input
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Input_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Input
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Input
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Input
  nameWithType: SynchronizationComputation<TIn, TOut>.Input
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Input
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  name: IsOriginalComputation
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_IsOriginalComputation
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation*
  name: IsOriginalComputation
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_IsOriginalComputation_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
- uid: NMF.Synchronizations.SynchronizationComputation`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Notify_System_Collections_Generic_IList_INotificationResult__
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Notify(System.Collections.Generic.IList<INotificationResult>)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Notify(System.Collections.Generic.IList(Of INotificationResult))
  nameWithType: SynchronizationComputation<TIn, TOut>.Notify(IList<INotificationResult>)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Notify(IList(Of INotificationResult))
- uid: NMF.Synchronizations.SynchronizationComputation`2.Notify*
  name: Notify
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Notify_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Notify
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Notify
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Notify
  nameWithType: SynchronizationComputation<TIn, TOut>.Notify
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Notify
- uid: NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  name: OmitCandidateSearch
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OmitCandidateSearch
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
  nameWithType: SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
- uid: NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch*
  name: OmitCandidateSearch
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OmitCandidateSearch_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
  nameWithType: SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
- uid: NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged(ValueChangedEventArgs)
  name: OnOutputChanged(ValueChangedEventArgs)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OnOutputChanged_ValueChangedEventArgs_
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged(ValueChangedEventArgs)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OnOutputChanged(ValueChangedEventArgs)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OnOutputChanged(ValueChangedEventArgs)
  nameWithType: SynchronizationComputation<TIn, TOut>.OnOutputChanged(ValueChangedEventArgs)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OnOutputChanged(ValueChangedEventArgs)
- uid: NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged*
  name: OnOutputChanged
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OnOutputChanged_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OnOutputChanged
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OnOutputChanged
  nameWithType: SynchronizationComputation<TIn, TOut>.OnOutputChanged
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OnOutputChanged
- uid: NMF.Synchronizations.SynchronizationComputation`2.Opposite
  name: Opposite
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Opposite
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Opposite
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Opposite
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Opposite
  nameWithType: SynchronizationComputation<TIn, TOut>.Opposite
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Opposite
- uid: NMF.Synchronizations.SynchronizationComputation`2.Opposite*
  name: Opposite
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Opposite_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Opposite
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Opposite
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Opposite
  nameWithType: SynchronizationComputation<TIn, TOut>.Opposite
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Opposite
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputChanged
  name: OutputChanged
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OutputChanged
  commentId: E:NMF.Synchronizations.SynchronizationComputation`2.OutputChanged
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputChanged
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputChanged
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputChanged
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputChanged
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  name: OutputCore
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OutputCore
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputCore
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputCore
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputCore
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputCore*
  name: OutputCore
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OutputCore_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputCore
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputCore
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputCore
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Synchronizations.SynchronizationComputation`2.Successors
  name: Successors
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Successors
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Successors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Successors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Successors
  nameWithType: SynchronizationComputation<TIn, TOut>.Successors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Successors
- uid: NMF.Synchronizations.SynchronizationComputation`2.Successors*
  name: Successors
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Successors_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Successors
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Successors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Successors
  nameWithType: SynchronizationComputation<TIn, TOut>.Successors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Successors
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  name: SynchronizationContext
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationContext
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationContext
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationContext
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationContext
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext*
  name: SynchronizationContext
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationContext_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationContext
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationContext
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationContext
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  name: SynchronizationRule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationRule
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationRule
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationRule
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationRule
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationRule
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule*
  name: SynchronizationRule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationRule_
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationRule
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationRule
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationRule
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationRule
- uid: NMF.Synchronizations.SynchronizationContext
  name: SynchronizationContext
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html
  commentId: T:NMF.Synchronizations.SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationContext
  nameWithType: SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationContext.#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  name: SynchronizationContext(Synchronization, SynchronizationDirection, ChangePropagationMode)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext__ctor_NMF_Synchronizations_Synchronization_NMF_Synchronizations_SynchronizationDirection_ChangePropagationMode_
  commentId: M:NMF.Synchronizations.SynchronizationContext.#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,ChangePropagationMode)
  fullName: NMF.Synchronizations.SynchronizationContext.SynchronizationContext(NMF.Synchronizations.Synchronization, NMF.Synchronizations.SynchronizationDirection, ChangePropagationMode)
  nameWithType: SynchronizationContext.SynchronizationContext(Synchronization, SynchronizationDirection, ChangePropagationMode)
- uid: NMF.Synchronizations.SynchronizationContext.#ctor*
  name: SynchronizationContext
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext__ctor_
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationContext.SynchronizationContext
  nameWithType: SynchronizationContext.SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationContext.ChangePropagation
  name: ChangePropagation
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_ChangePropagation
  commentId: P:NMF.Synchronizations.SynchronizationContext.ChangePropagation
  fullName: NMF.Synchronizations.SynchronizationContext.ChangePropagation
  nameWithType: SynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.SynchronizationContext.ChangePropagation*
  name: ChangePropagation
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_ChangePropagation_
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.ChangePropagation
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationContext.ChangePropagation
  nameWithType: SynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.SynchronizationContext.Direction
  name: Direction
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_Direction
  commentId: P:NMF.Synchronizations.SynchronizationContext.Direction
  fullName: NMF.Synchronizations.SynchronizationContext.Direction
  nameWithType: SynchronizationContext.Direction
- uid: NMF.Synchronizations.SynchronizationContext.Direction*
  name: Direction
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_Direction_
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.Direction
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationContext.Direction
  nameWithType: SynchronizationContext.Direction
- uid: NMF.Synchronizations.SynchronizationDirection
  name: SynchronizationDirection
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
  nameWithType: SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  name: LeftToRight
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_LeftToRight
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRight
  nameWithType: SynchronizationDirection.LeftToRight
- uid: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  name: LeftToRightForced
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_LeftToRightForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftToRightForced
  nameWithType: SynchronizationDirection.LeftToRightForced
- uid: NMF.Synchronizations.SynchronizationDirection.LeftWins
  name: LeftWins
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_LeftWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.LeftWins
  fullName: NMF.Synchronizations.SynchronizationDirection.LeftWins
  nameWithType: SynchronizationDirection.LeftWins
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  name: RightToLeft
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_RightToLeft
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeft
  nameWithType: SynchronizationDirection.RightToLeft
- uid: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  name: RightToLeftForced
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_RightToLeftForced
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  fullName: NMF.Synchronizations.SynchronizationDirection.RightToLeftForced
  nameWithType: SynchronizationDirection.RightToLeftForced
- uid: NMF.Synchronizations.SynchronizationDirection.RightWins
  name: RightWins
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirection.html#NMF_Synchronizations_SynchronizationDirection_RightWins
  commentId: F:NMF.Synchronizations.SynchronizationDirection.RightWins
  fullName: NMF.Synchronizations.SynchronizationDirection.RightWins
  nameWithType: SynchronizationDirection.RightWins
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions
  name: SynchronizationDirectionExtensions
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirectionExtensions.html
  commentId: T:NMF.Synchronizations.SynchronizationDirectionExtensions
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions
  nameWithType: SynchronizationDirectionExtensions
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  name: IsLeftToRight(SynchronizationDirection)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_NMF_Synchronizations_SynchronizationDirection_
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight(NMF.Synchronizations.SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight(SynchronizationDirection)
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight*
  name: IsLeftToRight
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsLeftToRight_
  commentId: Overload:NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsLeftToRight
  nameWithType: SynchronizationDirectionExtensions.IsLeftToRight
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  name: IsRightToLeft(SynchronizationDirection)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_NMF_Synchronizations_SynchronizationDirection_
  commentId: M:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft(NMF.Synchronizations.SynchronizationDirection)
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft(SynchronizationDirection)
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft*
  name: IsRightToLeft
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationDirectionExtensions.html#NMF_Synchronizations_SynchronizationDirectionExtensions_IsRightToLeft_
  commentId: Overload:NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions.IsRightToLeft
  nameWithType: SynchronizationDirectionExtensions.IsRightToLeft
- uid: NMF.Synchronizations.SynchronizationExtensions
  name: SynchronizationExtensions
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationExtensions.html
  commentId: T:NMF.Synchronizations.SynchronizationExtensions
  fullName: NMF.Synchronizations.SynchronizationExtensions
  nameWithType: SynchronizationExtensions
- uid: NMF.Synchronizations.SynchronizationExtensions.SyncRule*
  name: SyncRule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationExtensions.html#NMF_Synchronizations_SynchronizationExtensions_SyncRule_
  commentId: Overload:NMF.Synchronizations.SynchronizationExtensions.SyncRule
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationExtensions.SyncRule
  nameWithType: SynchronizationExtensions.SyncRule
- uid: NMF.Synchronizations.SynchronizationExtensions.SyncRule``1(GeneralTransformationRule)
  name: SyncRule<TRule>(GeneralTransformationRule)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationExtensions.html#NMF_Synchronizations_SynchronizationExtensions_SyncRule__1_GeneralTransformationRule_
  commentId: M:NMF.Synchronizations.SynchronizationExtensions.SyncRule``1(GeneralTransformationRule)
  name.vb: SyncRule(Of TRule)(GeneralTransformationRule)
  fullName: NMF.Synchronizations.SynchronizationExtensions.SyncRule<TRule>(GeneralTransformationRule)
  fullName.vb: NMF.Synchronizations.SynchronizationExtensions.SyncRule(Of TRule)(GeneralTransformationRule)
  nameWithType: SynchronizationExtensions.SyncRule<TRule>(GeneralTransformationRule)
  nameWithType.vb: SynchronizationExtensions.SyncRule(Of TRule)(GeneralTransformationRule)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4
  name: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html
  commentId: T:NMF.Synchronizations.SynchronizationMultipleDependency`4
  name.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.#ctor(NMF.Synchronizations.SynchronizationRule{`0,`1},NMF.Synchronizations.SynchronizationRule{`2,`3},System.Linq.Expressions.Expression{System.Func{`0,ICollectionExpression{`2}}},System.Linq.Expressions.Expression{System.Func{`1,ICollectionExpression{`3}}})
  name: SynchronizationMultipleDependency(SynchronizationRule<TLeft, TRight>, SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4__ctor_NMF_Synchronizations_SynchronizationRule__0__1__NMF_Synchronizations_SynchronizationRule__2__3__System_Linq_Expressions_Expression_System_Func__0_ICollectionExpression__2____System_Linq_Expressions_Expression_System_Func__1_ICollectionExpression__3____
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.#ctor(NMF.Synchronizations.SynchronizationRule{`0,`1},NMF.Synchronizations.SynchronizationRule{`2,`3},System.Linq.Expressions.Expression{System.Func{`0,ICollectionExpression{`2}}},System.Linq.Expressions.Expression{System.Func{`1,ICollectionExpression{`3}}})
  name.vb: SynchronizationMultipleDependency(SynchronizationRule(Of TLeft, TRight), SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizationMultipleDependency(NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, ICollectionExpression<TDepRight>>>)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizationMultipleDependency(NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, ICollectionExpression(Of TDepRight))))
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizationMultipleDependency(SynchronizationRule<TLeft, TRight>, SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizationMultipleDependency(SynchronizationRule(Of TLeft, TRight), SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.#ctor*
  name: SynchronizationMultipleDependency
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4__ctor_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizationMultipleDependency
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizationMultipleDependency
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizationMultipleDependency
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizationMultipleDependency
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateLeftToRightDependency
  name: CreateLeftToRightDependency()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_CreateLeftToRightDependency
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateLeftToRightDependency
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateLeftToRightDependency()
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateLeftToRightDependency()
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateLeftToRightDependency()
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateLeftToRightDependency()
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateLeftToRightDependency*
  name: CreateLeftToRightDependency
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_CreateLeftToRightDependency_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateLeftToRightDependency
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateLeftToRightDependency
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateLeftToRightDependency
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateLeftToRightDependency
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateLeftToRightDependency
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateRightToLeftDependency
  name: CreateRightToLeftDependency()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_CreateRightToLeftDependency
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateRightToLeftDependency
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateRightToLeftDependency()
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateRightToLeftDependency()
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateRightToLeftDependency()
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateRightToLeftDependency()
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateRightToLeftDependency*
  name: CreateRightToLeftDependency
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_CreateRightToLeftDependency_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.CreateRightToLeftDependency
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateRightToLeftDependency
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateRightToLeftDependency
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.CreateRightToLeftDependency
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).CreateRightToLeftDependency
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleLeftToRightDependency(Computation)
  name: HandleLeftToRightDependency(Computation)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_HandleLeftToRightDependency_Computation_
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleLeftToRightDependency(Computation)
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleLeftToRightDependency(Computation)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleLeftToRightDependency(Computation)
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleLeftToRightDependency(Computation)
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleLeftToRightDependency(Computation)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleLeftToRightDependency*
  name: HandleLeftToRightDependency
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_HandleLeftToRightDependency_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleLeftToRightDependency
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleLeftToRightDependency
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleLeftToRightDependency
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleLeftToRightDependency
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleLeftToRightDependency
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleRightToLeftDependency(Computation)
  name: HandleRightToLeftDependency(Computation)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_HandleRightToLeftDependency_Computation_
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleRightToLeftDependency(Computation)
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleRightToLeftDependency(Computation)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleRightToLeftDependency(Computation)
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleRightToLeftDependency(Computation)
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleRightToLeftDependency(Computation)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleRightToLeftDependency*
  name: HandleRightToLeftDependency
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_HandleRightToLeftDependency_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.HandleRightToLeftDependency
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleRightToLeftDependency
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleRightToLeftDependency
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.HandleRightToLeftDependency
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).HandleRightToLeftDependency
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeLTRCollections(System.Collections.Generic.ICollection{`2},System.Collections.Generic.ICollection{`3},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeLTRCollections(ICollection<TDepLeft>, ICollection<TDepRight>, ISynchronizationContext, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_SynchronizeLTRCollections_System_Collections_Generic_ICollection__2__System_Collections_Generic_ICollection__3__NMF_Synchronizations_ISynchronizationContext_System_Boolean_
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeLTRCollections(System.Collections.Generic.ICollection{`2},System.Collections.Generic.ICollection{`3},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name.vb: SynchronizeLTRCollections(ICollection(Of TDepLeft), ICollection(Of TDepRight), ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeLTRCollections(System.Collections.Generic.ICollection<TDepLeft>, System.Collections.Generic.ICollection<TDepRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeLTRCollections(System.Collections.Generic.ICollection(Of TDepLeft), System.Collections.Generic.ICollection(Of TDepRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeLTRCollections(ICollection<TDepLeft>, ICollection<TDepRight>, ISynchronizationContext, Boolean)
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeLTRCollections(ICollection(Of TDepLeft), ICollection(Of TDepRight), ISynchronizationContext, Boolean)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeLTRCollections*
  name: SynchronizeLTRCollections
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_SynchronizeLTRCollections_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeLTRCollections
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeLTRCollections
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeLTRCollections
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeLTRCollections
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeLTRCollections
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeRTLCollections(System.Collections.Generic.ICollection{`2},System.Collections.Generic.ICollection{`3},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeRTLCollections(ICollection<TDepLeft>, ICollection<TDepRight>, ISynchronizationContext, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_SynchronizeRTLCollections_System_Collections_Generic_ICollection__2__System_Collections_Generic_ICollection__3__NMF_Synchronizations_ISynchronizationContext_System_Boolean_
  commentId: M:NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeRTLCollections(System.Collections.Generic.ICollection{`2},System.Collections.Generic.ICollection{`3},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name.vb: SynchronizeRTLCollections(ICollection(Of TDepLeft), ICollection(Of TDepRight), ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeRTLCollections(System.Collections.Generic.ICollection<TDepLeft>, System.Collections.Generic.ICollection<TDepRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeRTLCollections(System.Collections.Generic.ICollection(Of TDepLeft), System.Collections.Generic.ICollection(Of TDepRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeRTLCollections(ICollection<TDepLeft>, ICollection<TDepRight>, ISynchronizationContext, Boolean)
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeRTLCollections(ICollection(Of TDepLeft), ICollection(Of TDepRight), ISynchronizationContext, Boolean)
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeRTLCollections*
  name: SynchronizeRTLCollections
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationMultipleDependency-4.html#NMF_Synchronizations_SynchronizationMultipleDependency_4_SynchronizeRTLCollections_
  commentId: Overload:NMF.Synchronizations.SynchronizationMultipleDependency`4.SynchronizeRTLCollections
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeRTLCollections
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeRTLCollections
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>.SynchronizeRTLCollections
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight).SynchronizeRTLCollections
- uid: NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<TLeft, TRight>
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  name.vb: SynchronizationRule(Of TLeft, TRight)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  nameWithType: SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
- uid: NMF.Synchronizations.SynchronizationRule`2.#ctor
  name: SynchronizationRule()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2__ctor
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.#ctor
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationRule()
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationRule()
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationRule()
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationRule()
- uid: NMF.Synchronizations.SynchronizationRule`2.#ctor*
  name: SynchronizationRule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2__ctor_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationRule
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationRule
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationRule
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationRule
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, out Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_CreateLeftOutput__1_System_Collections_Generic_IEnumerable__0__NMF_Synchronizations_ISynchronizationContext_System_Boolean__
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name.vb: CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, ByRef Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable<TLeft>, NMF.Synchronizations.ISynchronizationContext, out System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable(Of TLeft), NMF.Synchronizations.ISynchronizationContext, ByRef System.Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, out Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, ByRef Boolean)
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput*
  name: CreateLeftOutput
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_CreateLeftOutput_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, out Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_CreateRightOutput__0_System_Collections_Generic_IEnumerable__1__NMF_Synchronizations_ISynchronizationContext_System_Boolean__
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name.vb: CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, ByRef Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable<TRight>, NMF.Synchronizations.ISynchronizationContext, out System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable(Of TRight), NMF.Synchronizations.ISynchronizationContext, ByRef System.Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, out Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, ByRef Boolean)
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput*
  name: CreateRightOutput
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_CreateRightOutput_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateRightOutput
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  name: LeftToRight
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_LeftToRight
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftToRight
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftToRight*
  name: LeftToRight
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_LeftToRight_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftToRight
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftType
  name: LeftType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftType
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftType
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftType*
  name: LeftType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_LeftType_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.LeftType
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftType
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftType
- uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_MarkInstantiatingFor_NMF_Synchronizations_SynchronizationRuleBase_System_Linq_Expressions_Expression_System_Func__0_System_Boolean___System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name.vb: MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_MarkInstantiatingFor_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
  nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
- uid: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  name: OutputDelayLevel
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_OutputDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel*
  name: OutputDelayLevel
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_OutputDelayLevel_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  name: RightToLeft
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_RightToLeft
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightToLeft
  nameWithType: SynchronizationRule<TLeft, TRight>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule`2.RightToLeft*
  name: RightToLeft
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_RightToLeft_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightToLeft
  nameWithType: SynchronizationRule<TLeft, TRight>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule`2.RightType
  name: RightType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_RightType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightType
  nameWithType: SynchronizationRule<TLeft, TRight>.RightType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightType
- uid: NMF.Synchronizations.SynchronizationRule`2.RightType*
  name: RightType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_RightType_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.RightType
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightType
  nameWithType: SynchronizationRule<TLeft, TRight>.RightType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightType
- uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_ShouldCorrespond__0__1_NMF_Synchronizations_ISynchronizationContext_
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
- uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond*
  name: ShouldCorrespond
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_ShouldCorrespond_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
  nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  name: SynchronizationJobs
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizationJobs
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs*
  name: SynchronizationJobs
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizationJobs_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize*
  name: Synchronize
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.Synchronize
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___System_Linq_Expressions_Expression_System_Func__0__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Action__0___0__System_Linq_Expressions_Expression_System_Func__1___1___System_Action__1___1__System_Linq_Expressions_Expression_System_Func__0__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Action__0___0__System_Linq_Expressions_Expression_System_Func__1___1___System_Linq_Expressions_Expression_System_Func__0__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___1___System_Action__1___1__System_Linq_Expressions_Expression_System_Func__0__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_Synchronize__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___1___System_Linq_Expressions_Expression_System_Func__0__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeCollectionsLeftToRight_System_Collections_Generic_ICollection__1__System_Collections_Generic_ICollection__0__NMF_Synchronizations_ISynchronizationContext_System_Boolean_
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name.vb: SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection<TRight>, System.Collections.Generic.ICollection<TLeft>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection(Of TRight), System.Collections.Generic.ICollection(Of TLeft), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight*
  name: SynchronizeCollectionsLeftToRight
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeCollectionsLeftToRight_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeCollectionsRightToLeft_System_Collections_Generic_ICollection__0__System_Collections_Generic_ICollection__1__NMF_Synchronizations_ISynchronizationContext_System_Boolean_
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name.vb: SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection<TLeft>, System.Collections.Generic.ICollection<TRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection(Of TLeft), System.Collections.Generic.ICollection(Of TRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft*
  name: SynchronizeCollectionsRightToLeft
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeCollectionsRightToLeft_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate*
  name: SynchronizeLate
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLate_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLate
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLate__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly*
  name: SynchronizeLateLeftToRightOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateLeftToRightOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Action__1___0__
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly*
  name: SynchronizeLateRightToLeftOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateRightToLeftOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateRightToLeftOnly__1_System_Action__0___0__System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLateRightToLeftOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly*
  name: SynchronizeLeftToRightOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Action__1___0__
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Action__1___0__System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeLeftToRightOnly__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___1___System_Linq_Expressions_Expression_System_Func__0_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany*
  name: SynchronizeMany
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeMany_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,ICollectionExpression{``1}}})
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeMany__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0_ICollectionExpression___0____System_Linq_Expressions_Expression_System_Func__1_ICollectionExpression___1____
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,ICollectionExpression{``1}}})
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, ICollectionExpression<TDepRight>>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, ICollectionExpression(Of TDepRight))))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly*
  name: SynchronizeManyLeftToRightOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeManyLeftToRightOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeManyLeftToRightOnly__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0_IEnumerableExpression___0____System_Linq_Expressions_Expression_System_Func__1_System_Collections_Generic_ICollection___1____
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Collections.Generic.ICollection<TDepRight>>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Collections.Generic.ICollection(Of TDepRight))))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly*
  name: SynchronizeManyRightToLeftOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeManyRightToLeftOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,IEnumerableExpression{``1}}})
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeManyRightToLeftOnly__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0_System_Collections_Generic_ICollection___0____System_Linq_Expressions_Expression_System_Func__1_IEnumerableExpression___1____
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,IEnumerableExpression{``1}}})
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, IEnumerableExpression<TDepRight>>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable})
  name: SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeOpaque_System_Func__0__1_NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_System_IDisposable__
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable})
  name.vb: SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(System.Func<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(System.Func(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque*
  name: SynchronizeOpaque
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeOpaque_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly*
  name: SynchronizeRightToLeftOnly
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly__1_System_Action__0___0__System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly__1_System_Action__0___0__System_Linq_Expressions_Expression_System_Func__1___0___System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly__1_System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___0___System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_SynchronizeRightToLeftOnly__2_NMF_Synchronizations_SynchronizationRule___0___1__System_Linq_Expressions_Expression_System_Func__0___0___System_Linq_Expressions_Expression_System_Func__1___1___System_Linq_Expressions_Expression_System_Func__1_System_Boolean___
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
- uid: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  name: TransformationDelayLevel
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_TransformationDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel*
  name: TransformationDelayLevel
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRule-2.html#NMF_Synchronizations_SynchronizationRule_2_TransformationDelayLevel_
  commentId: Overload:NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRuleBase
  name: SynchronizationRuleBase
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor
  name: SynchronizationRuleBase()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase__ctor
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase()
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase()
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor*
  name: SynchronizationRuleBase
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase__ctor_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  name: DeclareSynchronization()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_DeclareSynchronization
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization()
  nameWithType: SynchronizationRuleBase.DeclareSynchronization()
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization*
  name: DeclareSynchronization
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_DeclareSynchronization_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  nameWithType: SynchronizationRuleBase.DeclareSynchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  name: LeftType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  nameWithType: SynchronizationRuleBase.LeftType
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType*
  name: LeftType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_LeftType_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  nameWithType: SynchronizationRuleBase.LeftType
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType
  name: RightType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_RightType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
  nameWithType: SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType*
  name: RightType
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_RightType_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.RightType
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
  nameWithType: SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule*
  name: Rule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Rule_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Rule
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule
  nameWithType: SynchronizationRuleBase.Rule
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  name: Rule<TRule>()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Rule__1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)()
  nameWithType: SynchronizationRuleBase.Rule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.Rule(Of TRule)()
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  name: Synchronization
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Synchronization
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization*
  name: Synchronization
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Synchronization_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule*
  name: SyncRule
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_SyncRule_
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.SyncRule
  isSpec: "True"
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule
  nameWithType: SynchronizationRuleBase.SyncRule
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  name: SyncRule<TRule>()
  href: api/Synchronizations/NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_SyncRule__1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  name.vb: SyncRule(Of TRule)()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)()
  nameWithType: SynchronizationRuleBase.SyncRule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.SyncRule(Of TRule)()
- uid: NMF.Transformations
  name: NMF.Transformations
  href: api/Transformations/NMF.Transformations.html
  commentId: N:NMF.Transformations
  fullName: NMF.Transformations
  nameWithType: NMF.Transformations
- uid: NMF.Transformations.AbstractTransformationRule`2
  name: AbstractTransformationRule<TIn, TOut>
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-2.html
  commentId: T:NMF.Transformations.AbstractTransformationRule`2
  name.vb: AbstractTransformationRule(Of TIn, TOut)
  fullName: NMF.Transformations.AbstractTransformationRule<TIn, TOut>
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn, TOut)
  nameWithType: AbstractTransformationRule<TIn, TOut>
  nameWithType.vb: AbstractTransformationRule(Of TIn, TOut)
- uid: NMF.Transformations.AbstractTransformationRule`2.CreateOutput(`0,NMF.Transformations.Core.ITransformationContext)
  name: CreateOutput(TIn, ITransformationContext)
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-2.html#NMF_Transformations_AbstractTransformationRule_2_CreateOutput__0_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.AbstractTransformationRule`2.CreateOutput(`0,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.AbstractTransformationRule<TIn, TOut>.CreateOutput(TIn, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn, TOut).CreateOutput(TIn, NMF.Transformations.Core.ITransformationContext)
  nameWithType: AbstractTransformationRule<TIn, TOut>.CreateOutput(TIn, ITransformationContext)
  nameWithType.vb: AbstractTransformationRule(Of TIn, TOut).CreateOutput(TIn, ITransformationContext)
- uid: NMF.Transformations.AbstractTransformationRule`2.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-2.html#NMF_Transformations_AbstractTransformationRule_2_CreateOutput_
  commentId: Overload:NMF.Transformations.AbstractTransformationRule`2.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.AbstractTransformationRule<TIn, TOut>.CreateOutput
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn, TOut).CreateOutput
  nameWithType: AbstractTransformationRule<TIn, TOut>.CreateOutput
  nameWithType.vb: AbstractTransformationRule(Of TIn, TOut).CreateOutput
- uid: NMF.Transformations.AbstractTransformationRule`3
  name: AbstractTransformationRule<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-3.html
  commentId: T:NMF.Transformations.AbstractTransformationRule`3
  name.vb: AbstractTransformationRule(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.AbstractTransformationRule<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn1, TIn2, TOut)
  nameWithType: AbstractTransformationRule<TIn1, TIn2, TOut>
  nameWithType.vb: AbstractTransformationRule(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.AbstractTransformationRule`3.CreateOutput(`0,`1,NMF.Transformations.Core.ITransformationContext)
  name: CreateOutput(TIn1, TIn2, ITransformationContext)
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-3.html#NMF_Transformations_AbstractTransformationRule_3_CreateOutput__0__1_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.AbstractTransformationRule`3.CreateOutput(`0,`1,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.AbstractTransformationRule<TIn1, TIn2, TOut>.CreateOutput(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn1, TIn2, TOut).CreateOutput(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  nameWithType: AbstractTransformationRule<TIn1, TIn2, TOut>.CreateOutput(TIn1, TIn2, ITransformationContext)
  nameWithType.vb: AbstractTransformationRule(Of TIn1, TIn2, TOut).CreateOutput(TIn1, TIn2, ITransformationContext)
- uid: NMF.Transformations.AbstractTransformationRule`3.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.AbstractTransformationRule-3.html#NMF_Transformations_AbstractTransformationRule_3_CreateOutput_
  commentId: Overload:NMF.Transformations.AbstractTransformationRule`3.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.AbstractTransformationRule<TIn1, TIn2, TOut>.CreateOutput
  fullName.vb: NMF.Transformations.AbstractTransformationRule(Of TIn1, TIn2, TOut).CreateOutput
  nameWithType: AbstractTransformationRule<TIn1, TIn2, TOut>.CreateOutput
  nameWithType.vb: AbstractTransformationRule(Of TIn1, TIn2, TOut).CreateOutput
- uid: NMF.Transformations.ChangePropagationMode
  name: ChangePropagationMode
  href: api/Transformations/NMF.Transformations.ChangePropagationMode.html
  commentId: T:NMF.Transformations.ChangePropagationMode
  fullName: NMF.Transformations.ChangePropagationMode
  nameWithType: ChangePropagationMode
- uid: NMF.Transformations.ChangePropagationMode.None
  name: None
  href: api/Transformations/NMF.Transformations.ChangePropagationMode.html#NMF_Transformations_ChangePropagationMode_None
  commentId: F:NMF.Transformations.ChangePropagationMode.None
  fullName: NMF.Transformations.ChangePropagationMode.None
  nameWithType: ChangePropagationMode.None
- uid: NMF.Transformations.ChangePropagationMode.OneWay
  name: OneWay
  href: api/Transformations/NMF.Transformations.ChangePropagationMode.html#NMF_Transformations_ChangePropagationMode_OneWay
  commentId: F:NMF.Transformations.ChangePropagationMode.OneWay
  fullName: NMF.Transformations.ChangePropagationMode.OneWay
  nameWithType: ChangePropagationMode.OneWay
- uid: NMF.Transformations.ChangePropagationMode.TwoWay
  name: TwoWay
  href: api/Transformations/NMF.Transformations.ChangePropagationMode.html#NMF_Transformations_ChangePropagationMode_TwoWay
  commentId: F:NMF.Transformations.ChangePropagationMode.TwoWay
  fullName: NMF.Transformations.ChangePropagationMode.TwoWay
  nameWithType: ChangePropagationMode.TwoWay
- uid: NMF.Transformations.ComputationBase
  name: ComputationBase
  href: api/Transformations/NMF.Transformations.ComputationBase.html
  commentId: T:NMF.Transformations.ComputationBase
  fullName: NMF.Transformations.ComputationBase
  nameWithType: ComputationBase
- uid: NMF.Transformations.ComputationBase.#ctor(NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object[])
  name: ComputationBase(GeneralTransformationRule, IComputationContext, Object[])
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase__ctor_NMF_Transformations_Core_GeneralTransformationRule_NMF_Transformations_Core_IComputationContext_System_Object___
  commentId: M:NMF.Transformations.ComputationBase.#ctor(NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext,System.Object[])
  name.vb: ComputationBase(GeneralTransformationRule, IComputationContext, Object())
  fullName: NMF.Transformations.ComputationBase.ComputationBase(NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext, System.Object[])
  fullName.vb: NMF.Transformations.ComputationBase.ComputationBase(NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext, System.Object())
  nameWithType: ComputationBase.ComputationBase(GeneralTransformationRule, IComputationContext, Object[])
  nameWithType.vb: ComputationBase.ComputationBase(GeneralTransformationRule, IComputationContext, Object())
- uid: NMF.Transformations.ComputationBase.#ctor*
  name: ComputationBase
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase__ctor_
  commentId: Overload:NMF.Transformations.ComputationBase.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase.ComputationBase
  nameWithType: ComputationBase.ComputationBase
- uid: NMF.Transformations.ComputationBase.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase_GetInput_System_Int32_
  commentId: M:NMF.Transformations.ComputationBase.GetInput(System.Int32)
  fullName: NMF.Transformations.ComputationBase.GetInput(System.Int32)
  nameWithType: ComputationBase.GetInput(Int32)
- uid: NMF.Transformations.ComputationBase.GetInput*
  name: GetInput
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase_GetInput_
  commentId: Overload:NMF.Transformations.ComputationBase.GetInput
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase.GetInput
  nameWithType: ComputationBase.GetInput
- uid: NMF.Transformations.ComputationBase.Input
  name: Input
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase_Input
  commentId: P:NMF.Transformations.ComputationBase.Input
  fullName: NMF.Transformations.ComputationBase.Input
  nameWithType: ComputationBase.Input
- uid: NMF.Transformations.ComputationBase.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.ComputationBase.html#NMF_Transformations_ComputationBase_Input_
  commentId: Overload:NMF.Transformations.ComputationBase.Input
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase.Input
  nameWithType: ComputationBase.Input
- uid: NMF.Transformations.ComputationBase`1
  name: ComputationBase<TIn>
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html
  commentId: T:NMF.Transformations.ComputationBase`1
  name.vb: ComputationBase(Of TIn)
  fullName: NMF.Transformations.ComputationBase<TIn>
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn)
  nameWithType: ComputationBase<TIn>
  nameWithType.vb: ComputationBase(Of TIn)
- uid: NMF.Transformations.ComputationBase`1.#ctor(NMF.Transformations.GeneralTransformationRule{`0},NMF.Transformations.Core.IComputationContext,`0)
  name: ComputationBase(GeneralTransformationRule<TIn>, IComputationContext, TIn)
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1__ctor_NMF_Transformations_GeneralTransformationRule__0__NMF_Transformations_Core_IComputationContext__0_
  commentId: M:NMF.Transformations.ComputationBase`1.#ctor(NMF.Transformations.GeneralTransformationRule{`0},NMF.Transformations.Core.IComputationContext,`0)
  name.vb: ComputationBase(GeneralTransformationRule(Of TIn), IComputationContext, TIn)
  fullName: NMF.Transformations.ComputationBase<TIn>.ComputationBase(NMF.Transformations.GeneralTransformationRule<TIn>, NMF.Transformations.Core.IComputationContext, TIn)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).ComputationBase(NMF.Transformations.GeneralTransformationRule(Of TIn), NMF.Transformations.Core.IComputationContext, TIn)
  nameWithType: ComputationBase<TIn>.ComputationBase(GeneralTransformationRule<TIn>, IComputationContext, TIn)
  nameWithType.vb: ComputationBase(Of TIn).ComputationBase(GeneralTransformationRule(Of TIn), IComputationContext, TIn)
- uid: NMF.Transformations.ComputationBase`1.#ctor*
  name: ComputationBase
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1__ctor_
  commentId: Overload:NMF.Transformations.ComputationBase`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn>.ComputationBase
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).ComputationBase
  nameWithType: ComputationBase<TIn>.ComputationBase
  nameWithType.vb: ComputationBase(Of TIn).ComputationBase
- uid: NMF.Transformations.ComputationBase`1.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_GetInput_System_Int32_
  commentId: M:NMF.Transformations.ComputationBase`1.GetInput(System.Int32)
  fullName: NMF.Transformations.ComputationBase<TIn>.GetInput(System.Int32)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).GetInput(System.Int32)
  nameWithType: ComputationBase<TIn>.GetInput(Int32)
  nameWithType.vb: ComputationBase(Of TIn).GetInput(Int32)
- uid: NMF.Transformations.ComputationBase`1.GetInput*
  name: GetInput
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_GetInput_
  commentId: Overload:NMF.Transformations.ComputationBase`1.GetInput
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn>.GetInput
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).GetInput
  nameWithType: ComputationBase<TIn>.GetInput
  nameWithType.vb: ComputationBase(Of TIn).GetInput
- uid: NMF.Transformations.ComputationBase`1.Input
  name: Input
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_Input
  commentId: P:NMF.Transformations.ComputationBase`1.Input
  fullName: NMF.Transformations.ComputationBase<TIn>.Input
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).Input
  nameWithType: ComputationBase<TIn>.Input
  nameWithType.vb: ComputationBase(Of TIn).Input
- uid: NMF.Transformations.ComputationBase`1.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_Input_
  commentId: Overload:NMF.Transformations.ComputationBase`1.Input
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn>.Input
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).Input
  nameWithType: ComputationBase<TIn>.Input
  nameWithType.vb: ComputationBase(Of TIn).Input
- uid: NMF.Transformations.ComputationBase`1.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_TransformationRule
  commentId: P:NMF.Transformations.ComputationBase`1.TransformationRule
  fullName: NMF.Transformations.ComputationBase<TIn>.TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).TransformationRule
  nameWithType: ComputationBase<TIn>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn).TransformationRule
- uid: NMF.Transformations.ComputationBase`1.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.ComputationBase-1.html#NMF_Transformations_ComputationBase_1_TransformationRule_
  commentId: Overload:NMF.Transformations.ComputationBase`1.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn>.TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn).TransformationRule
  nameWithType: ComputationBase<TIn>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn).TransformationRule
- uid: NMF.Transformations.ComputationBase`2
  name: ComputationBase<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html
  commentId: T:NMF.Transformations.ComputationBase`2
  name.vb: ComputationBase(Of TIn1, TIn2)
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2)
  nameWithType: ComputationBase<TIn1, TIn2>
  nameWithType.vb: ComputationBase(Of TIn1, TIn2)
- uid: NMF.Transformations.ComputationBase`2.#ctor(NMF.Transformations.GeneralTransformationRule{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  name: ComputationBase(GeneralTransformationRule<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2__ctor_NMF_Transformations_GeneralTransformationRule__0__1__NMF_Transformations_Core_IComputationContext__0__1_
  commentId: M:NMF.Transformations.ComputationBase`2.#ctor(NMF.Transformations.GeneralTransformationRule{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  name.vb: ComputationBase(GeneralTransformationRule(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.ComputationBase(NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).ComputationBase(NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  nameWithType: ComputationBase<TIn1, TIn2>.ComputationBase(GeneralTransformationRule<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).ComputationBase(GeneralTransformationRule(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
- uid: NMF.Transformations.ComputationBase`2.#ctor*
  name: ComputationBase
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2__ctor_
  commentId: Overload:NMF.Transformations.ComputationBase`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.ComputationBase
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).ComputationBase
  nameWithType: ComputationBase<TIn1, TIn2>.ComputationBase
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).ComputationBase
- uid: NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_GetInput_System_Int32_
  commentId: M:NMF.Transformations.ComputationBase`2.GetInput(System.Int32)
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput(System.Int32)
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput(System.Int32)
  nameWithType: ComputationBase<TIn1, TIn2>.GetInput(Int32)
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).GetInput(Int32)
- uid: NMF.Transformations.ComputationBase`2.GetInput*
  name: GetInput
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_GetInput_
  commentId: Overload:NMF.Transformations.ComputationBase`2.GetInput
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.GetInput
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).GetInput
  nameWithType: ComputationBase<TIn1, TIn2>.GetInput
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).GetInput
- uid: NMF.Transformations.ComputationBase`2.Input1
  name: Input1
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_Input1
  commentId: P:NMF.Transformations.ComputationBase`2.Input1
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input1
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input1
  nameWithType: ComputationBase<TIn1, TIn2>.Input1
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.ComputationBase`2.Input1*
  name: Input1
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_Input1_
  commentId: Overload:NMF.Transformations.ComputationBase`2.Input1
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input1
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input1
  nameWithType: ComputationBase<TIn1, TIn2>.Input1
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.ComputationBase`2.Input2
  name: Input2
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_Input2
  commentId: P:NMF.Transformations.ComputationBase`2.Input2
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input2
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input2
  nameWithType: ComputationBase<TIn1, TIn2>.Input2
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.ComputationBase`2.Input2*
  name: Input2
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_Input2_
  commentId: Overload:NMF.Transformations.ComputationBase`2.Input2
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.Input2
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).Input2
  nameWithType: ComputationBase<TIn1, TIn2>.Input2
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.ComputationBase`2.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_TransformationRule
  commentId: P:NMF.Transformations.ComputationBase`2.TransformationRule
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).TransformationRule
  nameWithType: ComputationBase<TIn1, TIn2>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.ComputationBase`2.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.ComputationBase-2.html#NMF_Transformations_ComputationBase_2_TransformationRule_
  commentId: Overload:NMF.Transformations.ComputationBase`2.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.ComputationBase<TIn1, TIn2>.TransformationRule
  fullName.vb: NMF.Transformations.ComputationBase(Of TIn1, TIn2).TransformationRule
  nameWithType: ComputationBase<TIn1, TIn2>.TransformationRule
  nameWithType.vb: ComputationBase(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.Core
  name: NMF.Transformations.Core
  href: api/Transformations/NMF.Transformations.Core.html
  commentId: N:NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
- uid: NMF.Transformations.Core.AbstractTrace
  name: AbstractTrace
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html
  commentId: T:NMF.Transformations.Core.AbstractTrace
  fullName: NMF.Transformations.Core.AbstractTrace
  nameWithType: AbstractTrace
- uid: NMF.Transformations.Core.AbstractTrace.Computations
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_Computations
  commentId: P:NMF.Transformations.Core.AbstractTrace.Computations
  fullName: NMF.Transformations.Core.AbstractTrace.Computations
  nameWithType: AbstractTrace.Computations
- uid: NMF.Transformations.Core.AbstractTrace.Computations*
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_Computations_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.Computations
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.Computations
  nameWithType: AbstractTrace.Computations
- uid: NMF.Transformations.Core.AbstractTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  name: PublishEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_PublishEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.AbstractTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.AbstractTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: AbstractTrace.PublishEntry(ITraceEntry)
- uid: NMF.Transformations.Core.AbstractTrace.PublishEntry*
  name: PublishEntry
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_PublishEntry_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.PublishEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.PublishEntry
  nameWithType: AbstractTrace.PublishEntry
- uid: NMF.Transformations.Core.AbstractTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  name: RevokeEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_RevokeEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.AbstractTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.AbstractTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: AbstractTrace.RevokeEntry(ITraceEntry)
- uid: NMF.Transformations.Core.AbstractTrace.RevokeEntry*
  name: RevokeEntry
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_RevokeEntry_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.RevokeEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.RevokeEntry
  nameWithType: AbstractTrace.RevokeEntry
- uid: NMF.Transformations.Core.AbstractTrace.Trace(System.Object[])
  name: Trace(Object[])
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_Trace_System_Object___
  commentId: M:NMF.Transformations.Core.AbstractTrace.Trace(System.Object[])
  name.vb: Trace(Object())
  fullName: NMF.Transformations.Core.AbstractTrace.Trace(System.Object[])
  fullName.vb: NMF.Transformations.Core.AbstractTrace.Trace(System.Object())
  nameWithType: AbstractTrace.Trace(Object[])
  nameWithType.vb: AbstractTrace.Trace(Object())
- uid: NMF.Transformations.Core.AbstractTrace.Trace*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_Trace_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.Trace
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.Trace
  nameWithType: AbstractTrace.Trace
- uid: NMF.Transformations.Core.AbstractTrace.TraceAll(System.Type[],System.Type)
  name: TraceAll(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceAll_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.AbstractTrace.TraceAll(System.Type[],System.Type)
  name.vb: TraceAll(Type(), Type)
  fullName: NMF.Transformations.Core.AbstractTrace.TraceAll(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.AbstractTrace.TraceAll(System.Type(), System.Type)
  nameWithType: AbstractTrace.TraceAll(Type[], Type)
  nameWithType.vb: AbstractTrace.TraceAll(Type(), Type)
- uid: NMF.Transformations.Core.AbstractTrace.TraceAll*
  name: TraceAll
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceAll_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.TraceAll
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.TraceAll
  nameWithType: AbstractTrace.TraceAll
- uid: NMF.Transformations.Core.AbstractTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  name: TraceAllIn(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceAllIn_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.AbstractTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.AbstractTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: AbstractTrace.TraceAllIn(GeneralTransformationRule)
- uid: NMF.Transformations.Core.AbstractTrace.TraceAllIn*
  name: TraceAllIn
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceAllIn_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.TraceAllIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.TraceAllIn
  nameWithType: AbstractTrace.TraceAllIn
- uid: NMF.Transformations.Core.AbstractTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: TraceIn(GeneralTransformationRule, Object[])
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceIn_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  commentId: M:NMF.Transformations.Core.AbstractTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name.vb: TraceIn(GeneralTransformationRule, Object())
  fullName: NMF.Transformations.Core.AbstractTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  fullName.vb: NMF.Transformations.Core.AbstractTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  nameWithType: AbstractTrace.TraceIn(GeneralTransformationRule, Object[])
  nameWithType.vb: AbstractTrace.TraceIn(GeneralTransformationRule, Object())
- uid: NMF.Transformations.Core.AbstractTrace.TraceIn*
  name: TraceIn
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceIn_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.TraceIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.TraceIn
  nameWithType: AbstractTrace.TraceIn
- uid: NMF.Transformations.Core.AbstractTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceMany(Type[], Type, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceMany_System_Type___System_Type_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.AbstractTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceMany(Type(), Type, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.AbstractTrace.TraceMany(System.Type[], System.Type, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.AbstractTrace.TraceMany(System.Type(), System.Type, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: AbstractTrace.TraceMany(Type[], Type, IEnumerable<Object[]>)
  nameWithType.vb: AbstractTrace.TraceMany(Type(), Type, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.AbstractTrace.TraceMany*
  name: TraceMany
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceMany_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.TraceMany
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.TraceMany
  nameWithType: AbstractTrace.TraceMany
- uid: NMF.Transformations.Core.AbstractTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceManyIn_NMF_Transformations_Core_GeneralTransformationRule_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.AbstractTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.AbstractTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.AbstractTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: AbstractTrace.TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  nameWithType.vb: AbstractTrace.TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.AbstractTrace.TraceManyIn*
  name: TraceManyIn
  href: api/Transformations/NMF.Transformations.Core.AbstractTrace.html#NMF_Transformations_Core_AbstractTrace_TraceManyIn_
  commentId: Overload:NMF.Transformations.Core.AbstractTrace.TraceManyIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.AbstractTrace.TraceManyIn
  nameWithType: AbstractTrace.TraceManyIn
- uid: NMF.Transformations.Core.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Core.Computation.html
  commentId: T:NMF.Transformations.Core.Computation
  fullName: NMF.Transformations.Core.Computation
  nameWithType: Computation
- uid: NMF.Transformations.Core.Computation.#ctor(NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)
  name: Computation(GeneralTransformationRule, IComputationContext)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation__ctor_NMF_Transformations_Core_GeneralTransformationRule_NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.Core.Computation.#ctor(NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.IComputationContext)
  fullName: NMF.Transformations.Core.Computation.Computation(NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.IComputationContext)
  nameWithType: Computation.Computation(GeneralTransformationRule, IComputationContext)
- uid: NMF.Transformations.Core.Computation.#ctor*
  name: Computation
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation__ctor_
  commentId: Overload:NMF.Transformations.Core.Computation.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.Computation
  nameWithType: Computation.Computation
- uid: NMF.Transformations.Core.Computation.Computed
  name: Computed
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Computed
  commentId: E:NMF.Transformations.Core.Computation.Computed
  fullName: NMF.Transformations.Core.Computation.Computed
  nameWithType: Computation.Computed
- uid: NMF.Transformations.Core.Computation.Context
  name: Context
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Context
  commentId: P:NMF.Transformations.Core.Computation.Context
  fullName: NMF.Transformations.Core.Computation.Context
  nameWithType: Computation.Context
- uid: NMF.Transformations.Core.Computation.Context*
  name: Context
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Context_
  commentId: Overload:NMF.Transformations.Core.Computation.Context
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.Context
  nameWithType: Computation.Context
- uid: NMF.Transformations.Core.Computation.CreateInputArray
  name: CreateInputArray()
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_CreateInputArray
  commentId: M:NMF.Transformations.Core.Computation.CreateInputArray
  fullName: NMF.Transformations.Core.Computation.CreateInputArray()
  nameWithType: Computation.CreateInputArray()
- uid: NMF.Transformations.Core.Computation.CreateInputArray*
  name: CreateInputArray
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_CreateInputArray_
  commentId: Overload:NMF.Transformations.Core.Computation.CreateInputArray
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.CreateInputArray
  nameWithType: Computation.CreateInputArray
- uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  name: CreateOutput(IEnumerable)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_CreateOutput_System_Collections_IEnumerable_
  commentId: M:NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  fullName: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  nameWithType: Computation.CreateOutput(IEnumerable)
- uid: NMF.Transformations.Core.Computation.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_CreateOutput_
  commentId: Overload:NMF.Transformations.Core.Computation.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.CreateOutput
  nameWithType: Computation.CreateOutput
- uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  name: DelayOutputAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_DelayOutputAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  nameWithType: Computation.DelayOutputAtLeast(Byte)
- uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast*
  name: DelayOutputAtLeast
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_DelayOutputAtLeast_
  commentId: Overload:NMF.Transformations.Core.Computation.DelayOutputAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast
  nameWithType: Computation.DelayOutputAtLeast
- uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  name: DelayTransformationAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_DelayTransformationAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  nameWithType: Computation.DelayTransformationAtLeast(Byte)
- uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast*
  name: DelayTransformationAtLeast
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_DelayTransformationAtLeast_
  commentId: Overload:NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast
  nameWithType: Computation.DelayTransformationAtLeast
- uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_GetInput_System_Int32_
  commentId: M:NMF.Transformations.Core.Computation.GetInput(System.Int32)
  fullName: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  nameWithType: Computation.GetInput(Int32)
- uid: NMF.Transformations.Core.Computation.GetInput*
  name: GetInput
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_GetInput_
  commentId: Overload:NMF.Transformations.Core.Computation.GetInput
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.GetInput
  nameWithType: Computation.GetInput
- uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  name: InitializeOutput(Object)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_InitializeOutput_System_Object_
  commentId: M:NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  fullName: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  nameWithType: Computation.InitializeOutput(Object)
- uid: NMF.Transformations.Core.Computation.InitializeOutput*
  name: InitializeOutput
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_InitializeOutput_
  commentId: Overload:NMF.Transformations.Core.Computation.InitializeOutput
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.InitializeOutput
  nameWithType: Computation.InitializeOutput
- uid: NMF.Transformations.Core.Computation.InputArguments
  name: InputArguments
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_InputArguments
  commentId: P:NMF.Transformations.Core.Computation.InputArguments
  fullName: NMF.Transformations.Core.Computation.InputArguments
  nameWithType: Computation.InputArguments
- uid: NMF.Transformations.Core.Computation.InputArguments*
  name: InputArguments
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_InputArguments_
  commentId: Overload:NMF.Transformations.Core.Computation.InputArguments
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.InputArguments
  nameWithType: Computation.InputArguments
- uid: NMF.Transformations.Core.Computation.IsDelayed
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_IsDelayed
  commentId: P:NMF.Transformations.Core.Computation.IsDelayed
  fullName: NMF.Transformations.Core.Computation.IsDelayed
  nameWithType: Computation.IsDelayed
- uid: NMF.Transformations.Core.Computation.IsDelayed*
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_IsDelayed_
  commentId: Overload:NMF.Transformations.Core.Computation.IsDelayed
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.IsDelayed
  nameWithType: Computation.IsDelayed
- uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  name: MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_MarkRequire_NMF_Transformations_Core_Computation_System_Boolean_NMF_Transformations_Core_ITransformationRuleDependency_
  commentId: M:NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  fullName: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean, NMF.Transformations.Core.ITransformationRuleDependency)
  nameWithType: Computation.MarkRequire(Computation, Boolean, ITransformationRuleDependency)
- uid: NMF.Transformations.Core.Computation.MarkRequire*
  name: MarkRequire
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_MarkRequire_
  commentId: Overload:NMF.Transformations.Core.Computation.MarkRequire
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.MarkRequire
  nameWithType: Computation.MarkRequire
- uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  name: IPersistor.Persist(Object)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_NMF_Transformations_Core_IPersistor_Persist_System_Object_
  commentId: M:NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist(System.Object)
  name.vb: NMF.Transformations.Core.IPersistor.Persist(Object)
  fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist(System.Object)
  nameWithType: Computation.IPersistor.Persist(Object)
  nameWithType.vb: Computation.NMF.Transformations.Core.IPersistor.Persist(Object)
- uid: NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist*
  name: IPersistor.Persist
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_NMF_Transformations_Core_IPersistor_Persist_
  commentId: Overload:NMF.Transformations.Core.Computation.NMF#Transformations#Core#IPersistor#Persist
  isSpec: "True"
  name.vb: NMF.Transformations.Core.IPersistor.Persist
  fullName: NMF.Transformations.Core.Computation.NMF.Transformations.Core.IPersistor.Persist
  nameWithType: Computation.IPersistor.Persist
  nameWithType.vb: Computation.NMF.Transformations.Core.IPersistor.Persist
- uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  name: OnComputed(EventArgs)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OnComputed_System_EventArgs_
  commentId: M:NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  nameWithType: Computation.OnComputed(EventArgs)
- uid: NMF.Transformations.Core.Computation.OnComputed*
  name: OnComputed
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OnComputed_
  commentId: Overload:NMF.Transformations.Core.Computation.OnComputed
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.OnComputed
  nameWithType: Computation.OnComputed
- uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  name: OnOutputInitialized(EventArgs)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OnOutputInitialized_System_EventArgs_
  commentId: M:NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  nameWithType: Computation.OnOutputInitialized(EventArgs)
- uid: NMF.Transformations.Core.Computation.OnOutputInitialized*
  name: OnOutputInitialized
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OnOutputInitialized_
  commentId: Overload:NMF.Transformations.Core.Computation.OnOutputInitialized
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.OnOutputInitialized
  nameWithType: Computation.OnOutputInitialized
- uid: NMF.Transformations.Core.Computation.Output
  name: Output
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Output
  commentId: P:NMF.Transformations.Core.Computation.Output
  fullName: NMF.Transformations.Core.Computation.Output
  nameWithType: Computation.Output
- uid: NMF.Transformations.Core.Computation.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Output_
  commentId: Overload:NMF.Transformations.Core.Computation.Output
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.Output
  nameWithType: Computation.Output
- uid: NMF.Transformations.Core.Computation.OutputCore
  name: OutputCore
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OutputCore
  commentId: P:NMF.Transformations.Core.Computation.OutputCore
  fullName: NMF.Transformations.Core.Computation.OutputCore
  nameWithType: Computation.OutputCore
- uid: NMF.Transformations.Core.Computation.OutputCore*
  name: OutputCore
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OutputCore_
  commentId: Overload:NMF.Transformations.Core.Computation.OutputCore
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.OutputCore
  nameWithType: Computation.OutputCore
- uid: NMF.Transformations.Core.Computation.OutputInitialized
  name: OutputInitialized
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_OutputInitialized
  commentId: E:NMF.Transformations.Core.Computation.OutputInitialized
  fullName: NMF.Transformations.Core.Computation.OutputInitialized
  nameWithType: Computation.OutputInitialized
- uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  name: SetBaseComputation(Computation)
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_SetBaseComputation_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  nameWithType: Computation.SetBaseComputation(Computation)
- uid: NMF.Transformations.Core.Computation.SetBaseComputation*
  name: SetBaseComputation
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_SetBaseComputation_
  commentId: Overload:NMF.Transformations.Core.Computation.SetBaseComputation
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.SetBaseComputation
  nameWithType: Computation.SetBaseComputation
- uid: NMF.Transformations.Core.Computation.ThrowDelayedException
  name: ThrowDelayedException()
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_ThrowDelayedException
  commentId: M:NMF.Transformations.Core.Computation.ThrowDelayedException
  fullName: NMF.Transformations.Core.Computation.ThrowDelayedException()
  nameWithType: Computation.ThrowDelayedException()
- uid: NMF.Transformations.Core.Computation.ThrowDelayedException*
  name: ThrowDelayedException
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_ThrowDelayedException_
  commentId: Overload:NMF.Transformations.Core.Computation.ThrowDelayedException
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.ThrowDelayedException
  nameWithType: Computation.ThrowDelayedException
- uid: NMF.Transformations.Core.Computation.Transform
  name: Transform()
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Transform
  commentId: M:NMF.Transformations.Core.Computation.Transform
  fullName: NMF.Transformations.Core.Computation.Transform()
  nameWithType: Computation.Transform()
- uid: NMF.Transformations.Core.Computation.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_Transform_
  commentId: Overload:NMF.Transformations.Core.Computation.Transform
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.Transform
  nameWithType: Computation.Transform
- uid: NMF.Transformations.Core.Computation.TransformationContext
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_TransformationContext
  commentId: P:NMF.Transformations.Core.Computation.TransformationContext
  fullName: NMF.Transformations.Core.Computation.TransformationContext
  nameWithType: Computation.TransformationContext
- uid: NMF.Transformations.Core.Computation.TransformationContext*
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_TransformationContext_
  commentId: Overload:NMF.Transformations.Core.Computation.TransformationContext
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.TransformationContext
  nameWithType: Computation.TransformationContext
- uid: NMF.Transformations.Core.Computation.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_TransformationRule
  commentId: P:NMF.Transformations.Core.Computation.TransformationRule
  fullName: NMF.Transformations.Core.Computation.TransformationRule
  nameWithType: Computation.TransformationRule
- uid: NMF.Transformations.Core.Computation.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Core.Computation.html#NMF_Transformations_Core_Computation_TransformationRule_
  commentId: Overload:NMF.Transformations.Core.Computation.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Core.Computation.TransformationRule
  nameWithType: Computation.TransformationRule
- uid: NMF.Transformations.Core.ComputationContext
  name: ComputationContext
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html
  commentId: T:NMF.Transformations.Core.ComputationContext
  fullName: NMF.Transformations.Core.ComputationContext
  nameWithType: ComputationContext
- uid: NMF.Transformations.Core.ComputationContext.#ctor(NMF.Transformations.Core.ITransformationContext)
  name: ComputationContext(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext__ctor_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Core.ComputationContext.#ctor(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Core.ComputationContext.ComputationContext(NMF.Transformations.Core.ITransformationContext)
  nameWithType: ComputationContext.ComputationContext(ITransformationContext)
- uid: NMF.Transformations.Core.ComputationContext.#ctor*
  name: ComputationContext
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext__ctor_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.ComputationContext
  nameWithType: ComputationContext.ComputationContext
- uid: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  name: ConnectWith(Computation)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_ConnectWith_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.ComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  nameWithType: ComputationContext.ConnectWith(Computation)
- uid: NMF.Transformations.Core.ComputationContext.ConnectWith*
  name: ConnectWith
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_ConnectWith_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.ConnectWith
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.ConnectWith
  nameWithType: ComputationContext.ConnectWith
- uid: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  name: DelayOutputAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_DelayOutputAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast(System.Byte)
  nameWithType: ComputationContext.DelayOutputAtLeast(Byte)
- uid: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast*
  name: DelayOutputAtLeast
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_DelayOutputAtLeast_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.DelayOutputAtLeast
  nameWithType: ComputationContext.DelayOutputAtLeast
- uid: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  name: DelayTransformationAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_DelayTransformationAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast(System.Byte)
  nameWithType: ComputationContext.DelayTransformationAtLeast(Byte)
- uid: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast*
  name: DelayTransformationAtLeast
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_DelayTransformationAtLeast_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.DelayTransformationAtLeast
  nameWithType: ComputationContext.DelayTransformationAtLeast
- uid: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  name: InitializeOutput(Object)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_InitializeOutput_System_Object_
  commentId: M:NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  fullName: NMF.Transformations.Core.ComputationContext.InitializeOutput(System.Object)
  nameWithType: ComputationContext.InitializeOutput(Object)
- uid: NMF.Transformations.Core.ComputationContext.InitializeOutput*
  name: InitializeOutput
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_InitializeOutput_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.InitializeOutput
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.InitializeOutput
  nameWithType: ComputationContext.InitializeOutput
- uid: NMF.Transformations.Core.ComputationContext.IsDelayed
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_IsDelayed
  commentId: P:NMF.Transformations.Core.ComputationContext.IsDelayed
  fullName: NMF.Transformations.Core.ComputationContext.IsDelayed
  nameWithType: ComputationContext.IsDelayed
- uid: NMF.Transformations.Core.ComputationContext.IsDelayed*
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_IsDelayed_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.IsDelayed
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.IsDelayed
  nameWithType: ComputationContext.IsDelayed
- uid: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  name: MarkRequire(Computation, Boolean)
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MarkRequire_NMF_Transformations_Core_Computation_System_Boolean_
  commentId: M:NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  fullName: NMF.Transformations.Core.ComputationContext.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean)
  nameWithType: ComputationContext.MarkRequire(Computation, Boolean)
- uid: NMF.Transformations.Core.ComputationContext.MarkRequire*
  name: MarkRequire
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MarkRequire_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.MarkRequire
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.MarkRequire
  nameWithType: ComputationContext.MarkRequire
- uid: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  name: MinOutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MinOutputDelayLevel
  commentId: P:NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  fullName: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  nameWithType: ComputationContext.MinOutputDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel*
  name: MinOutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MinOutputDelayLevel_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.MinOutputDelayLevel
  nameWithType: ComputationContext.MinOutputDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  name: MinTransformDelayLevel
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MinTransformDelayLevel
  commentId: P:NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  fullName: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  nameWithType: ComputationContext.MinTransformDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel*
  name: MinTransformDelayLevel
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_MinTransformDelayLevel_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.MinTransformDelayLevel
  nameWithType: ComputationContext.MinTransformDelayLevel
- uid: NMF.Transformations.Core.ComputationContext.TransformationContext
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_TransformationContext
  commentId: P:NMF.Transformations.Core.ComputationContext.TransformationContext
  fullName: NMF.Transformations.Core.ComputationContext.TransformationContext
  nameWithType: ComputationContext.TransformationContext
- uid: NMF.Transformations.Core.ComputationContext.TransformationContext*
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.ComputationContext.html#NMF_Transformations_Core_ComputationContext_TransformationContext_
  commentId: Overload:NMF.Transformations.Core.ComputationContext.TransformationContext
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationContext.TransformationContext
  nameWithType: ComputationContext.TransformationContext
- uid: NMF.Transformations.Core.ComputationEventArgs
  name: ComputationEventArgs
  href: api/Transformations/NMF.Transformations.Core.ComputationEventArgs.html
  commentId: T:NMF.Transformations.Core.ComputationEventArgs
  fullName: NMF.Transformations.Core.ComputationEventArgs
  nameWithType: ComputationEventArgs
- uid: NMF.Transformations.Core.ComputationEventArgs.#ctor(NMF.Transformations.Core.Computation)
  name: ComputationEventArgs(Computation)
  href: api/Transformations/NMF.Transformations.Core.ComputationEventArgs.html#NMF_Transformations_Core_ComputationEventArgs__ctor_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.ComputationEventArgs.#ctor(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.ComputationEventArgs.ComputationEventArgs(NMF.Transformations.Core.Computation)
  nameWithType: ComputationEventArgs.ComputationEventArgs(Computation)
- uid: NMF.Transformations.Core.ComputationEventArgs.#ctor*
  name: ComputationEventArgs
  href: api/Transformations/NMF.Transformations.Core.ComputationEventArgs.html#NMF_Transformations_Core_ComputationEventArgs__ctor_
  commentId: Overload:NMF.Transformations.Core.ComputationEventArgs.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationEventArgs.ComputationEventArgs
  nameWithType: ComputationEventArgs.ComputationEventArgs
- uid: NMF.Transformations.Core.ComputationEventArgs.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Core.ComputationEventArgs.html#NMF_Transformations_Core_ComputationEventArgs_Computation
  commentId: P:NMF.Transformations.Core.ComputationEventArgs.Computation
  fullName: NMF.Transformations.Core.ComputationEventArgs.Computation
  nameWithType: ComputationEventArgs.Computation
- uid: NMF.Transformations.Core.ComputationEventArgs.Computation*
  name: Computation
  href: api/Transformations/NMF.Transformations.Core.ComputationEventArgs.html#NMF_Transformations_Core_ComputationEventArgs_Computation_
  commentId: Overload:NMF.Transformations.Core.ComputationEventArgs.Computation
  isSpec: "True"
  fullName: NMF.Transformations.Core.ComputationEventArgs.Computation
  nameWithType: ComputationEventArgs.Computation
- uid: NMF.Transformations.Core.Dependency
  name: Dependency
  href: api/Transformations/NMF.Transformations.Core.Dependency.html
  commentId: T:NMF.Transformations.Core.Dependency
  fullName: NMF.Transformations.Core.Dependency
  nameWithType: Dependency
- uid: NMF.Transformations.Core.Dependency.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_ExecuteBefore
  commentId: P:NMF.Transformations.Core.Dependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.ExecuteBefore
  nameWithType: Dependency.ExecuteBefore
- uid: NMF.Transformations.Core.Dependency.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Core.Dependency.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Core.Dependency.ExecuteBefore
  nameWithType: Dependency.ExecuteBefore
- uid: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.Dependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: Dependency.HandleDependency(Computation)
- uid: NMF.Transformations.Core.Dependency.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_HandleDependency_
  commentId: Overload:NMF.Transformations.Core.Dependency.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Core.Dependency.HandleDependency
  nameWithType: Dependency.HandleDependency
- uid: NMF.Transformations.Core.Dependency.NeedOutput
  name: NeedOutput
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_NeedOutput
  commentId: P:NMF.Transformations.Core.Dependency.NeedOutput
  fullName: NMF.Transformations.Core.Dependency.NeedOutput
  nameWithType: Dependency.NeedOutput
- uid: NMF.Transformations.Core.Dependency.NeedOutput*
  name: NeedOutput
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_NeedOutput_
  commentId: Overload:NMF.Transformations.Core.Dependency.NeedOutput
  isSpec: "True"
  fullName: NMF.Transformations.Core.Dependency.NeedOutput
  nameWithType: Dependency.NeedOutput
- uid: NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  name: ITransformationRuleDependency.ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_NMF_Transformations_Core_ITransformationRuleDependency_ExecuteBefore
  commentId: P:NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType: Dependency.ITransformationRuleDependency.ExecuteBefore
  nameWithType.vb: Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
- uid: NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore*
  name: ITransformationRuleDependency.ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.Dependency.html#NMF_Transformations_Core_Dependency_NMF_Transformations_Core_ITransformationRuleDependency_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Core.Dependency.NMF#Transformations#Core#ITransformationRuleDependency#ExecuteBefore
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType: Dependency.ITransformationRuleDependency.ExecuteBefore
  nameWithType.vb: Dependency.NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
- uid: NMF.Transformations.Core.GeneralTransformationRule
  name: GeneralTransformationRule
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html
  commentId: T:NMF.Transformations.Core.GeneralTransformationRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule
  nameWithType: GeneralTransformationRule
- uid: NMF.Transformations.Core.GeneralTransformationRule.#ctor
  name: GeneralTransformationRule()
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule__ctor
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.#ctor
  fullName: NMF.Transformations.Core.GeneralTransformationRule.GeneralTransformationRule()
  nameWithType: GeneralTransformationRule.GeneralTransformationRule()
- uid: NMF.Transformations.Core.GeneralTransformationRule.#ctor*
  name: GeneralTransformationRule
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule__ctor_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.GeneralTransformationRule
  nameWithType: GeneralTransformationRule.GeneralTransformationRule
- uid: NMF.Transformations.Core.GeneralTransformationRule.BaseRule
  name: BaseRule
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_BaseRule
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.BaseRule
  fullName: NMF.Transformations.Core.GeneralTransformationRule.BaseRule
  nameWithType: GeneralTransformationRule.BaseRule
- uid: NMF.Transformations.Core.GeneralTransformationRule.BaseRule*
  name: BaseRule
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_BaseRule_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.BaseRule
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.BaseRule
  nameWithType: GeneralTransformationRule.BaseRule
- uid: NMF.Transformations.Core.GeneralTransformationRule.Call(NMF.Transformations.Core.GeneralTransformationRule)
  name: Call(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Call_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.Call(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Call(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: GeneralTransformationRule.Call(GeneralTransformationRule)
- uid: NMF.Transformations.Core.GeneralTransformationRule.Call*
  name: Call
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Call_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.Call
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Call
  nameWithType: GeneralTransformationRule.Call
- uid: NMF.Transformations.Core.GeneralTransformationRule.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.Core.GeneralTransformationRule.CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: GeneralTransformationRule.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: GeneralTransformationRule.CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.Core.GeneralTransformationRule.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_CreateComputation_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.CreateComputation
  nameWithType: GeneralTransformationRule.CreateComputation
- uid: NMF.Transformations.Core.GeneralTransformationRule.Dependencies
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Dependencies
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.Dependencies
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Dependencies
  nameWithType: GeneralTransformationRule.Dependencies
- uid: NMF.Transformations.Core.GeneralTransformationRule.Dependencies*
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Dependencies_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.Dependencies
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Dependencies
  nameWithType: GeneralTransformationRule.Dependencies
- uid: NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput(NMF.Transformations.Core.Computation)
  name: HasCompliantInput(Computation)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_HasCompliantInput_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput(NMF.Transformations.Core.Computation)
  nameWithType: GeneralTransformationRule.HasCompliantInput(Computation)
- uid: NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput*
  name: HasCompliantInput
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_HasCompliantInput_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.HasCompliantInput
  nameWithType: GeneralTransformationRule.HasCompliantInput
- uid: NMF.Transformations.Core.GeneralTransformationRule.InputType
  name: InputType
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_InputType
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.InputType
  fullName: NMF.Transformations.Core.GeneralTransformationRule.InputType
  nameWithType: GeneralTransformationRule.InputType
- uid: NMF.Transformations.Core.GeneralTransformationRule.InputType*
  name: InputType
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_InputType_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.InputType
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.InputType
  nameWithType: GeneralTransformationRule.InputType
- uid: NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating(NMF.Transformations.Core.Computation)
  name: IsInstantiating(Computation)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_IsInstantiating_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating(NMF.Transformations.Core.Computation)
  nameWithType: GeneralTransformationRule.IsInstantiating(Computation)
- uid: NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating*
  name: IsInstantiating
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_IsInstantiating_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.IsInstantiating
  nameWithType: GeneralTransformationRule.IsInstantiating
- uid: NMF.Transformations.Core.GeneralTransformationRule.IsUnique
  name: IsUnique
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_IsUnique
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.IsUnique
  fullName: NMF.Transformations.Core.GeneralTransformationRule.IsUnique
  nameWithType: GeneralTransformationRule.IsUnique
- uid: NMF.Transformations.Core.GeneralTransformationRule.IsUnique*
  name: IsUnique
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_IsUnique_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.IsUnique
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.IsUnique
  nameWithType: GeneralTransformationRule.IsUnique
- uid: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule)
  name: MarkInstantiatingFor(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: GeneralTransformationRule.MarkInstantiatingFor(GeneralTransformationRule)
- uid: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{NMF.Transformations.Core.Computation})
  name: MarkInstantiatingFor(GeneralTransformationRule, Predicate<Computation>)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate_NMF_Transformations_Core_Computation__
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{NMF.Transformations.Core.Computation})
  name.vb: MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Computation))
  fullName: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<NMF.Transformations.Core.Computation>)
  fullName.vb: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of NMF.Transformations.Core.Computation))
  nameWithType: GeneralTransformationRule.MarkInstantiatingFor(GeneralTransformationRule, Predicate<Computation>)
  nameWithType.vb: GeneralTransformationRule.MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Computation))
- uid: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.MarkInstantiatingFor
  nameWithType: GeneralTransformationRule.MarkInstantiatingFor
- uid: NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation
  nameWithType: GeneralTransformationRule.NeedDependenciesForOutputCreation
- uid: NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.NeedDependenciesForOutputCreation
  nameWithType: GeneralTransformationRule.NeedDependenciesForOutputCreation
- uid: NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel
  name: OutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_OutputDelayLevel
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel
  fullName: NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel
  nameWithType: GeneralTransformationRule.OutputDelayLevel
- uid: NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel*
  name: OutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_OutputDelayLevel_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.OutputDelayLevel
  nameWithType: GeneralTransformationRule.OutputDelayLevel
- uid: NMF.Transformations.Core.GeneralTransformationRule.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_OutputType
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.OutputType
  fullName: NMF.Transformations.Core.GeneralTransformationRule.OutputType
  nameWithType: GeneralTransformationRule.OutputType
- uid: NMF.Transformations.Core.GeneralTransformationRule.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_OutputType_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.OutputType
  nameWithType: GeneralTransformationRule.OutputType
- uid: NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies
  name: RegisterDependencies()
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_RegisterDependencies
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies
  fullName: NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies()
  nameWithType: GeneralTransformationRule.RegisterDependencies()
- uid: NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies*
  name: RegisterDependencies
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_RegisterDependencies_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.RegisterDependencies
  nameWithType: GeneralTransformationRule.RegisterDependencies
- uid: NMF.Transformations.Core.GeneralTransformationRule.Require(NMF.Transformations.Core.GeneralTransformationRule)
  name: Require(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Require_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.GeneralTransformationRule.Require(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Require(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: GeneralTransformationRule.Require(GeneralTransformationRule)
- uid: NMF.Transformations.Core.GeneralTransformationRule.Require*
  name: Require
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Require_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.Require
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Require
  nameWithType: GeneralTransformationRule.Require
- uid: NMF.Transformations.Core.GeneralTransformationRule.Transformation
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Transformation
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.Transformation
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Transformation
  nameWithType: GeneralTransformationRule.Transformation
- uid: NMF.Transformations.Core.GeneralTransformationRule.Transformation*
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_Transformation_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.Transformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.Transformation
  nameWithType: GeneralTransformationRule.Transformation
- uid: NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel
  name: TransformationDelayLevel
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_TransformationDelayLevel
  commentId: P:NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel
  fullName: NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel
  nameWithType: GeneralTransformationRule.TransformationDelayLevel
- uid: NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel*
  name: TransformationDelayLevel
  href: api/Transformations/NMF.Transformations.Core.GeneralTransformationRule.html#NMF_Transformations_Core_GeneralTransformationRule_TransformationDelayLevel_
  commentId: Overload:NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.GeneralTransformationRule.TransformationDelayLevel
  nameWithType: GeneralTransformationRule.TransformationDelayLevel
- uid: NMF.Transformations.Core.IComputationContext
  name: IComputationContext
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html
  commentId: T:NMF.Transformations.Core.IComputationContext
  fullName: NMF.Transformations.Core.IComputationContext
  nameWithType: IComputationContext
- uid: NMF.Transformations.Core.IComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  name: ConnectWith(Computation)
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_ConnectWith_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.IComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.IComputationContext.ConnectWith(NMF.Transformations.Core.Computation)
  nameWithType: IComputationContext.ConnectWith(Computation)
- uid: NMF.Transformations.Core.IComputationContext.ConnectWith*
  name: ConnectWith
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_ConnectWith_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.ConnectWith
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.ConnectWith
  nameWithType: IComputationContext.ConnectWith
- uid: NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast(System.Byte)
  name: DelayOutputAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_DelayOutputAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast(System.Byte)
  nameWithType: IComputationContext.DelayOutputAtLeast(Byte)
- uid: NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast*
  name: DelayOutputAtLeast
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_DelayOutputAtLeast_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.DelayOutputAtLeast
  nameWithType: IComputationContext.DelayOutputAtLeast
- uid: NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast(System.Byte)
  name: DelayTransformationAtLeast(Byte)
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_DelayTransformationAtLeast_System_Byte_
  commentId: M:NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast(System.Byte)
  fullName: NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast(System.Byte)
  nameWithType: IComputationContext.DelayTransformationAtLeast(Byte)
- uid: NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast*
  name: DelayTransformationAtLeast
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_DelayTransformationAtLeast_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.DelayTransformationAtLeast
  nameWithType: IComputationContext.DelayTransformationAtLeast
- uid: NMF.Transformations.Core.IComputationContext.InitializeOutput(System.Object)
  name: InitializeOutput(Object)
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_InitializeOutput_System_Object_
  commentId: M:NMF.Transformations.Core.IComputationContext.InitializeOutput(System.Object)
  fullName: NMF.Transformations.Core.IComputationContext.InitializeOutput(System.Object)
  nameWithType: IComputationContext.InitializeOutput(Object)
- uid: NMF.Transformations.Core.IComputationContext.InitializeOutput*
  name: InitializeOutput
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_InitializeOutput_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.InitializeOutput
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.InitializeOutput
  nameWithType: IComputationContext.InitializeOutput
- uid: NMF.Transformations.Core.IComputationContext.IsDelayed
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_IsDelayed
  commentId: P:NMF.Transformations.Core.IComputationContext.IsDelayed
  fullName: NMF.Transformations.Core.IComputationContext.IsDelayed
  nameWithType: IComputationContext.IsDelayed
- uid: NMF.Transformations.Core.IComputationContext.IsDelayed*
  name: IsDelayed
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_IsDelayed_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.IsDelayed
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.IsDelayed
  nameWithType: IComputationContext.IsDelayed
- uid: NMF.Transformations.Core.IComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  name: MarkRequire(Computation, Boolean)
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MarkRequire_NMF_Transformations_Core_Computation_System_Boolean_
  commentId: M:NMF.Transformations.Core.IComputationContext.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean)
  fullName: NMF.Transformations.Core.IComputationContext.MarkRequire(NMF.Transformations.Core.Computation, System.Boolean)
  nameWithType: IComputationContext.MarkRequire(Computation, Boolean)
- uid: NMF.Transformations.Core.IComputationContext.MarkRequire*
  name: MarkRequire
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MarkRequire_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.MarkRequire
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.MarkRequire
  nameWithType: IComputationContext.MarkRequire
- uid: NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel
  name: MinOutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MinOutputDelayLevel
  commentId: P:NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel
  fullName: NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel
  nameWithType: IComputationContext.MinOutputDelayLevel
- uid: NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel*
  name: MinOutputDelayLevel
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MinOutputDelayLevel_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.MinOutputDelayLevel
  nameWithType: IComputationContext.MinOutputDelayLevel
- uid: NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel
  name: MinTransformDelayLevel
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MinTransformDelayLevel
  commentId: P:NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel
  fullName: NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel
  nameWithType: IComputationContext.MinTransformDelayLevel
- uid: NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel*
  name: MinTransformDelayLevel
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_MinTransformDelayLevel_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.MinTransformDelayLevel
  nameWithType: IComputationContext.MinTransformDelayLevel
- uid: NMF.Transformations.Core.IComputationContext.TransformationContext
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_TransformationContext
  commentId: P:NMF.Transformations.Core.IComputationContext.TransformationContext
  fullName: NMF.Transformations.Core.IComputationContext.TransformationContext
  nameWithType: IComputationContext.TransformationContext
- uid: NMF.Transformations.Core.IComputationContext.TransformationContext*
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.IComputationContext.html#NMF_Transformations_Core_IComputationContext_TransformationContext_
  commentId: Overload:NMF.Transformations.Core.IComputationContext.TransformationContext
  isSpec: "True"
  fullName: NMF.Transformations.Core.IComputationContext.TransformationContext
  nameWithType: IComputationContext.TransformationContext
- uid: NMF.Transformations.Core.IPersistor
  name: IPersistor
  href: api/Transformations/NMF.Transformations.Core.IPersistor.html
  commentId: T:NMF.Transformations.Core.IPersistor
  fullName: NMF.Transformations.Core.IPersistor
  nameWithType: IPersistor
- uid: NMF.Transformations.Core.IPersistor.Persist(System.Object)
  name: Persist(Object)
  href: api/Transformations/NMF.Transformations.Core.IPersistor.html#NMF_Transformations_Core_IPersistor_Persist_System_Object_
  commentId: M:NMF.Transformations.Core.IPersistor.Persist(System.Object)
  fullName: NMF.Transformations.Core.IPersistor.Persist(System.Object)
  nameWithType: IPersistor.Persist(Object)
- uid: NMF.Transformations.Core.IPersistor.Persist*
  name: Persist
  href: api/Transformations/NMF.Transformations.Core.IPersistor.html#NMF_Transformations_Core_IPersistor_Persist_
  commentId: Overload:NMF.Transformations.Core.IPersistor.Persist
  isSpec: "True"
  fullName: NMF.Transformations.Core.IPersistor.Persist
  nameWithType: IPersistor.Persist
- uid: NMF.Transformations.Core.ITraceEntry
  name: ITraceEntry
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html
  commentId: T:NMF.Transformations.Core.ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
  nameWithType: ITraceEntry
- uid: NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  name: GetInput(Int32)
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_GetInput_System_Int32_
  commentId: M:NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  fullName: NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  nameWithType: ITraceEntry.GetInput(Int32)
- uid: NMF.Transformations.Core.ITraceEntry.GetInput*
  name: GetInput
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_GetInput_
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.GetInput
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITraceEntry.GetInput
  nameWithType: ITraceEntry.GetInput
- uid: NMF.Transformations.Core.ITraceEntry.Output
  name: Output
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_Output
  commentId: P:NMF.Transformations.Core.ITraceEntry.Output
  fullName: NMF.Transformations.Core.ITraceEntry.Output
  nameWithType: ITraceEntry.Output
- uid: NMF.Transformations.Core.ITraceEntry.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_Output_
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.Output
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITraceEntry.Output
  nameWithType: ITraceEntry.Output
- uid: NMF.Transformations.Core.ITraceEntry.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_TransformationRule
  commentId: P:NMF.Transformations.Core.ITraceEntry.TransformationRule
  fullName: NMF.Transformations.Core.ITraceEntry.TransformationRule
  nameWithType: ITraceEntry.TransformationRule
- uid: NMF.Transformations.Core.ITraceEntry.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Core.ITraceEntry.html#NMF_Transformations_Core_ITraceEntry_TransformationRule_
  commentId: Overload:NMF.Transformations.Core.ITraceEntry.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITraceEntry.TransformationRule
  nameWithType: ITraceEntry.TransformationRule
- uid: NMF.Transformations.Core.ITransformationContext
  name: ITransformationContext
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html
  commentId: T:NMF.Transformations.Core.ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
  nameWithType: ITransformationContext
- uid: NMF.Transformations.Core.ITransformationContext.Bag
  name: Bag
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Bag
  commentId: P:NMF.Transformations.Core.ITransformationContext.Bag
  fullName: NMF.Transformations.Core.ITransformationContext.Bag
  nameWithType: ITransformationContext.Bag
- uid: NMF.Transformations.Core.ITransformationContext.Bag*
  name: Bag
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Bag_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Bag
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Bag
  nameWithType: ITransformationContext.Bag
- uid: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  name: CallTransformation(GeneralTransformationRule, Object[], IEnumerable)
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___System_Collections_IEnumerable_
  commentId: M:NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, System.Object[], System.Collections.IEnumerable)
  fullName.vb: NMF.Transformations.Core.ITransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, System.Object(), System.Collections.IEnumerable)
  nameWithType: ITransformationContext.CallTransformation(GeneralTransformationRule, Object[], IEnumerable)
  nameWithType.vb: ITransformationContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
- uid: NMF.Transformations.Core.ITransformationContext.CallTransformation*
  name: CallTransformation
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_CallTransformation_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.CallTransformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.CallTransformation
  nameWithType: ITransformationContext.CallTransformation
- uid: NMF.Transformations.Core.ITransformationContext.ComputationCompleted
  name: ComputationCompleted
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_ComputationCompleted
  commentId: E:NMF.Transformations.Core.ITransformationContext.ComputationCompleted
  fullName: NMF.Transformations.Core.ITransformationContext.ComputationCompleted
  nameWithType: ITransformationContext.ComputationCompleted
- uid: NMF.Transformations.Core.ITransformationContext.Computations
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Computations
  commentId: P:NMF.Transformations.Core.ITransformationContext.Computations
  fullName: NMF.Transformations.Core.ITransformationContext.Computations
  nameWithType: ITransformationContext.Computations
- uid: NMF.Transformations.Core.ITransformationContext.Computations*
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Computations_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Computations
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Computations
  nameWithType: ITransformationContext.Computations
- uid: NMF.Transformations.Core.ITransformationContext.Data
  name: Data
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Data
  commentId: P:NMF.Transformations.Core.ITransformationContext.Data
  fullName: NMF.Transformations.Core.ITransformationContext.Data
  nameWithType: ITransformationContext.Data
- uid: NMF.Transformations.Core.ITransformationContext.Data*
  name: Data
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Data_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Data
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Data
  nameWithType: ITransformationContext.Data
- uid: NMF.Transformations.Core.ITransformationContext.Input
  name: Input
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Input
  commentId: P:NMF.Transformations.Core.ITransformationContext.Input
  fullName: NMF.Transformations.Core.ITransformationContext.Input
  nameWithType: ITransformationContext.Input
- uid: NMF.Transformations.Core.ITransformationContext.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Input_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Input
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Input
  nameWithType: ITransformationContext.Input
- uid: NMF.Transformations.Core.ITransformationContext.Inputs
  name: Inputs
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Inputs
  commentId: P:NMF.Transformations.Core.ITransformationContext.Inputs
  fullName: NMF.Transformations.Core.ITransformationContext.Inputs
  nameWithType: ITransformationContext.Inputs
- uid: NMF.Transformations.Core.ITransformationContext.Inputs*
  name: Inputs
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Inputs_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Inputs
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Inputs
  nameWithType: ITransformationContext.Inputs
- uid: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  name: IsThreadSafe
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_IsThreadSafe
  commentId: P:NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  fullName: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  nameWithType: ITransformationContext.IsThreadSafe
- uid: NMF.Transformations.Core.ITransformationContext.IsThreadSafe*
  name: IsThreadSafe
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_IsThreadSafe_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  nameWithType: ITransformationContext.IsThreadSafe
- uid: NMF.Transformations.Core.ITransformationContext.Outputs
  name: Outputs
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Outputs
  commentId: P:NMF.Transformations.Core.ITransformationContext.Outputs
  fullName: NMF.Transformations.Core.ITransformationContext.Outputs
  nameWithType: ITransformationContext.Outputs
- uid: NMF.Transformations.Core.ITransformationContext.Outputs*
  name: Outputs
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Outputs_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Outputs
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Outputs
  nameWithType: ITransformationContext.Outputs
- uid: NMF.Transformations.Core.ITransformationContext.Trace
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Trace
  commentId: P:NMF.Transformations.Core.ITransformationContext.Trace
  fullName: NMF.Transformations.Core.ITransformationContext.Trace
  nameWithType: ITransformationContext.Trace
- uid: NMF.Transformations.Core.ITransformationContext.Trace*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Trace_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Trace
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Trace
  nameWithType: ITransformationContext.Trace
- uid: NMF.Transformations.Core.ITransformationContext.Transformation
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Transformation
  commentId: P:NMF.Transformations.Core.ITransformationContext.Transformation
  fullName: NMF.Transformations.Core.ITransformationContext.Transformation
  nameWithType: ITransformationContext.Transformation
- uid: NMF.Transformations.Core.ITransformationContext.Transformation*
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.ITransformationContext.html#NMF_Transformations_Core_ITransformationContext_Transformation_
  commentId: Overload:NMF.Transformations.Core.ITransformationContext.Transformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationContext.Transformation
  nameWithType: ITransformationContext.Transformation
- uid: NMF.Transformations.Core.ITransformationEngineContext
  name: ITransformationEngineContext
  href: api/Transformations/NMF.Transformations.Core.ITransformationEngineContext.html
  commentId: T:NMF.Transformations.Core.ITransformationEngineContext
  fullName: NMF.Transformations.Core.ITransformationEngineContext
  nameWithType: ITransformationEngineContext
- uid: NMF.Transformations.Core.ITransformationEngineContext.ExecutePending
  name: ExecutePending()
  href: api/Transformations/NMF.Transformations.Core.ITransformationEngineContext.html#NMF_Transformations_Core_ITransformationEngineContext_ExecutePending
  commentId: M:NMF.Transformations.Core.ITransformationEngineContext.ExecutePending
  fullName: NMF.Transformations.Core.ITransformationEngineContext.ExecutePending()
  nameWithType: ITransformationEngineContext.ExecutePending()
- uid: NMF.Transformations.Core.ITransformationEngineContext.ExecutePending*
  name: ExecutePending
  href: api/Transformations/NMF.Transformations.Core.ITransformationEngineContext.html#NMF_Transformations_Core_ITransformationEngineContext_ExecutePending_
  commentId: Overload:NMF.Transformations.Core.ITransformationEngineContext.ExecutePending
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationEngineContext.ExecutePending
  nameWithType: ITransformationEngineContext.ExecutePending
- uid: NMF.Transformations.Core.ITransformationPattern
  name: ITransformationPattern
  href: api/Transformations/NMF.Transformations.Core.ITransformationPattern.html
  commentId: T:NMF.Transformations.Core.ITransformationPattern
  fullName: NMF.Transformations.Core.ITransformationPattern
  nameWithType: ITransformationPattern
- uid: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  name: CreatePattern(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Core.ITransformationPattern.html#NMF_Transformations_Core_ITransformationPattern_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Core.ITransformationPattern.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType: ITransformationPattern.CreatePattern(ITransformationContext)
- uid: NMF.Transformations.Core.ITransformationPattern.CreatePattern*
  name: CreatePattern
  href: api/Transformations/NMF.Transformations.Core.ITransformationPattern.html#NMF_Transformations_Core_ITransformationPattern_CreatePattern_
  commentId: Overload:NMF.Transformations.Core.ITransformationPattern.CreatePattern
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationPattern.CreatePattern
  nameWithType: ITransformationPattern.CreatePattern
- uid: NMF.Transformations.Core.ITransformationPatternContext
  name: ITransformationPatternContext
  href: api/Transformations/NMF.Transformations.Core.ITransformationPatternContext.html
  commentId: T:NMF.Transformations.Core.ITransformationPatternContext
  fullName: NMF.Transformations.Core.ITransformationPatternContext
  nameWithType: ITransformationPatternContext
- uid: NMF.Transformations.Core.ITransformationPatternContext.Begin
  name: Begin()
  href: api/Transformations/NMF.Transformations.Core.ITransformationPatternContext.html#NMF_Transformations_Core_ITransformationPatternContext_Begin
  commentId: M:NMF.Transformations.Core.ITransformationPatternContext.Begin
  fullName: NMF.Transformations.Core.ITransformationPatternContext.Begin()
  nameWithType: ITransformationPatternContext.Begin()
- uid: NMF.Transformations.Core.ITransformationPatternContext.Begin*
  name: Begin
  href: api/Transformations/NMF.Transformations.Core.ITransformationPatternContext.html#NMF_Transformations_Core_ITransformationPatternContext_Begin_
  commentId: Overload:NMF.Transformations.Core.ITransformationPatternContext.Begin
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationPatternContext.Begin
  nameWithType: ITransformationPatternContext.Begin
- uid: NMF.Transformations.Core.ITransformationPatternContext.Finish
  name: Finish()
  href: api/Transformations/NMF.Transformations.Core.ITransformationPatternContext.html#NMF_Transformations_Core_ITransformationPatternContext_Finish
  commentId: M:NMF.Transformations.Core.ITransformationPatternContext.Finish
  fullName: NMF.Transformations.Core.ITransformationPatternContext.Finish()
  nameWithType: ITransformationPatternContext.Finish()
- uid: NMF.Transformations.Core.ITransformationPatternContext.Finish*
  name: Finish
  href: api/Transformations/NMF.Transformations.Core.ITransformationPatternContext.html#NMF_Transformations_Core_ITransformationPatternContext_Finish_
  commentId: Overload:NMF.Transformations.Core.ITransformationPatternContext.Finish
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationPatternContext.Finish
  nameWithType: ITransformationPatternContext.Finish
- uid: NMF.Transformations.Core.ITransformationRuleDependency
  name: ITransformationRuleDependency
  href: api/Transformations/NMF.Transformations.Core.ITransformationRuleDependency.html
  commentId: T:NMF.Transformations.Core.ITransformationRuleDependency
  fullName: NMF.Transformations.Core.ITransformationRuleDependency
  nameWithType: ITransformationRuleDependency
- uid: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.ITransformationRuleDependency.html#NMF_Transformations_Core_ITransformationRuleDependency_ExecuteBefore
  commentId: P:NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType: ITransformationRuleDependency.ExecuteBefore
- uid: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.ITransformationRuleDependency.html#NMF_Transformations_Core_ITransformationRuleDependency_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.ExecuteBefore
  nameWithType: ITransformationRuleDependency.ExecuteBefore
- uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Core.ITransformationRuleDependency.html#NMF_Transformations_Core_ITransformationRuleDependency_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: ITransformationRuleDependency.HandleDependency(Computation)
- uid: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Core.ITransformationRuleDependency.html#NMF_Transformations_Core_ITransformationRuleDependency_HandleDependency_
  commentId: Overload:NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  nameWithType: ITransformationRuleDependency.HandleDependency
- uid: NMF.Transformations.Core.ITransformationRulePattern
  name: ITransformationRulePattern
  href: api/Transformations/NMF.Transformations.Core.ITransformationRulePattern.html
  commentId: T:NMF.Transformations.Core.ITransformationRulePattern
  fullName: NMF.Transformations.Core.ITransformationRulePattern
  nameWithType: ITransformationRulePattern
- uid: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Core.ITransformationRulePattern.html#NMF_Transformations_Core_ITransformationRulePattern_TargetRule
  commentId: P:NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Core.ITransformationRulePattern.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Core.ITransformationRulePattern.html#NMF_Transformations_Core_ITransformationRulePattern_TargetRule_
  commentId: Overload:NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Core.ITransformationTrace
  name: ITransformationTrace
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html
  commentId: T:NMF.Transformations.Core.ITransformationTrace
  fullName: NMF.Transformations.Core.ITransformationTrace
  nameWithType: ITransformationTrace
- uid: NMF.Transformations.Core.ITransformationTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  name: PublishEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_PublishEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.ITransformationTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.ITransformationTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: ITransformationTrace.PublishEntry(ITraceEntry)
- uid: NMF.Transformations.Core.ITransformationTrace.PublishEntry*
  name: PublishEntry
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_PublishEntry_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.PublishEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.PublishEntry
  nameWithType: ITransformationTrace.PublishEntry
- uid: NMF.Transformations.Core.ITransformationTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  name: RevokeEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_RevokeEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.ITransformationTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.ITransformationTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: ITransformationTrace.RevokeEntry(ITraceEntry)
- uid: NMF.Transformations.Core.ITransformationTrace.RevokeEntry*
  name: RevokeEntry
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_RevokeEntry_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.RevokeEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.RevokeEntry
  nameWithType: ITransformationTrace.RevokeEntry
- uid: NMF.Transformations.Core.ITransformationTrace.Trace(System.Object[])
  name: Trace(Object[])
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_Trace_System_Object___
  commentId: M:NMF.Transformations.Core.ITransformationTrace.Trace(System.Object[])
  name.vb: Trace(Object())
  fullName: NMF.Transformations.Core.ITransformationTrace.Trace(System.Object[])
  fullName.vb: NMF.Transformations.Core.ITransformationTrace.Trace(System.Object())
  nameWithType: ITransformationTrace.Trace(Object[])
  nameWithType.vb: ITransformationTrace.Trace(Object())
- uid: NMF.Transformations.Core.ITransformationTrace.Trace*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_Trace_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.Trace
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.Trace
  nameWithType: ITransformationTrace.Trace
- uid: NMF.Transformations.Core.ITransformationTrace.TraceAll(System.Type[],System.Type)
  name: TraceAll(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceAll_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.ITransformationTrace.TraceAll(System.Type[],System.Type)
  name.vb: TraceAll(Type(), Type)
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceAll(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.ITransformationTrace.TraceAll(System.Type(), System.Type)
  nameWithType: ITransformationTrace.TraceAll(Type[], Type)
  nameWithType.vb: ITransformationTrace.TraceAll(Type(), Type)
- uid: NMF.Transformations.Core.ITransformationTrace.TraceAll*
  name: TraceAll
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceAll_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.TraceAll
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceAll
  nameWithType: ITransformationTrace.TraceAll
- uid: NMF.Transformations.Core.ITransformationTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  name: TraceAllIn(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceAllIn_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.ITransformationTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: ITransformationTrace.TraceAllIn(GeneralTransformationRule)
- uid: NMF.Transformations.Core.ITransformationTrace.TraceAllIn*
  name: TraceAllIn
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceAllIn_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.TraceAllIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceAllIn
  nameWithType: ITransformationTrace.TraceAllIn
- uid: NMF.Transformations.Core.ITransformationTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: TraceIn(GeneralTransformationRule, Object[])
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceIn_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  commentId: M:NMF.Transformations.Core.ITransformationTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name.vb: TraceIn(GeneralTransformationRule, Object())
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  fullName.vb: NMF.Transformations.Core.ITransformationTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  nameWithType: ITransformationTrace.TraceIn(GeneralTransformationRule, Object[])
  nameWithType.vb: ITransformationTrace.TraceIn(GeneralTransformationRule, Object())
- uid: NMF.Transformations.Core.ITransformationTrace.TraceIn*
  name: TraceIn
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceIn_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.TraceIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceIn
  nameWithType: ITransformationTrace.TraceIn
- uid: NMF.Transformations.Core.ITransformationTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceMany(Type[], Type, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceMany_System_Type___System_Type_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.ITransformationTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceMany(Type(), Type, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceMany(System.Type[], System.Type, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.ITransformationTrace.TraceMany(System.Type(), System.Type, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: ITransformationTrace.TraceMany(Type[], Type, IEnumerable<Object[]>)
  nameWithType.vb: ITransformationTrace.TraceMany(Type(), Type, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.ITransformationTrace.TraceMany*
  name: TraceMany
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceMany_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.TraceMany
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceMany
  nameWithType: ITransformationTrace.TraceMany
- uid: NMF.Transformations.Core.ITransformationTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceManyIn_NMF_Transformations_Core_GeneralTransformationRule_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.ITransformationTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.ITransformationTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: ITransformationTrace.TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  nameWithType.vb: ITransformationTrace.TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.ITransformationTrace.TraceManyIn*
  name: TraceManyIn
  href: api/Transformations/NMF.Transformations.Core.ITransformationTrace.html#NMF_Transformations_Core_ITransformationTrace_TraceManyIn_
  commentId: Overload:NMF.Transformations.Core.ITransformationTrace.TraceManyIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.ITransformationTrace.TraceManyIn
  nameWithType: ITransformationTrace.TraceManyIn
- uid: NMF.Transformations.Core.MultipleDependency
  name: MultipleDependency
  href: api/Transformations/NMF.Transformations.Core.MultipleDependency.html
  commentId: T:NMF.Transformations.Core.MultipleDependency
  fullName: NMF.Transformations.Core.MultipleDependency
  nameWithType: MultipleDependency
- uid: NMF.Transformations.Core.MultipleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Core.MultipleDependency.html#NMF_Transformations_Core_MultipleDependency_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.MultipleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.MultipleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: MultipleDependency.HandleDependency(Computation)
- uid: NMF.Transformations.Core.MultipleDependency.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Core.MultipleDependency.html#NMF_Transformations_Core_MultipleDependency_HandleDependency_
  commentId: Overload:NMF.Transformations.Core.MultipleDependency.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Core.MultipleDependency.HandleDependency
  nameWithType: MultipleDependency.HandleDependency
- uid: NMF.Transformations.Core.OutputDependency
  name: OutputDependency
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html
  commentId: T:NMF.Transformations.Core.OutputDependency
  fullName: NMF.Transformations.Core.OutputDependency
  nameWithType: OutputDependency
- uid: NMF.Transformations.Core.OutputDependency.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_ExecuteBefore
  commentId: P:NMF.Transformations.Core.OutputDependency.ExecuteBefore
  fullName: NMF.Transformations.Core.OutputDependency.ExecuteBefore
  nameWithType: OutputDependency.ExecuteBefore
- uid: NMF.Transformations.Core.OutputDependency.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Core.OutputDependency.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Core.OutputDependency.ExecuteBefore
  nameWithType: OutputDependency.ExecuteBefore
- uid: NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  name: HandleReadyComputation(Computation)
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_HandleReadyComputation_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.OutputDependency.HandleReadyComputation(NMF.Transformations.Core.Computation)
  nameWithType: OutputDependency.HandleReadyComputation(Computation)
- uid: NMF.Transformations.Core.OutputDependency.HandleReadyComputation*
  name: HandleReadyComputation
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_HandleReadyComputation_
  commentId: Overload:NMF.Transformations.Core.OutputDependency.HandleReadyComputation
  isSpec: "True"
  fullName: NMF.Transformations.Core.OutputDependency.HandleReadyComputation
  nameWithType: OutputDependency.HandleReadyComputation
- uid: NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  name: ITransformationRuleDependency.HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_NMF_Transformations_Core_ITransformationRuleDependency_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency(NMF.Transformations.Core.Computation)
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(Computation)
  fullName: NMF.Transformations.Core.OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: OutputDependency.ITransformationRuleDependency.HandleDependency(Computation)
  nameWithType.vb: OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency(Computation)
- uid: NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency*
  name: ITransformationRuleDependency.HandleDependency
  href: api/Transformations/NMF.Transformations.Core.OutputDependency.html#NMF_Transformations_Core_OutputDependency_NMF_Transformations_Core_ITransformationRuleDependency_HandleDependency_
  commentId: Overload:NMF.Transformations.Core.OutputDependency.NMF#Transformations#Core#ITransformationRuleDependency#HandleDependency
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  fullName: NMF.Transformations.Core.OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
  nameWithType: OutputDependency.ITransformationRuleDependency.HandleDependency
  nameWithType.vb: OutputDependency.NMF.Transformations.Core.ITransformationRuleDependency.HandleDependency
- uid: NMF.Transformations.Core.SingleDependency
  name: SingleDependency
  href: api/Transformations/NMF.Transformations.Core.SingleDependency.html
  commentId: T:NMF.Transformations.Core.SingleDependency
  fullName: NMF.Transformations.Core.SingleDependency
  nameWithType: SingleDependency
- uid: NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Core.SingleDependency.html#NMF_Transformations_Core_SingleDependency_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.SingleDependency.HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: SingleDependency.HandleDependency(Computation)
- uid: NMF.Transformations.Core.SingleDependency.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Core.SingleDependency.html#NMF_Transformations_Core_SingleDependency_HandleDependency_
  commentId: Overload:NMF.Transformations.Core.SingleDependency.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Core.SingleDependency.HandleDependency
  nameWithType: SingleDependency.HandleDependency
- uid: NMF.Transformations.Core.Trace
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.Trace.html
  commentId: T:NMF.Transformations.Core.Trace
  fullName: NMF.Transformations.Core.Trace
  nameWithType: Trace
- uid: NMF.Transformations.Core.Trace.#ctor
  name: Trace()
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace__ctor
  commentId: M:NMF.Transformations.Core.Trace.#ctor
  fullName: NMF.Transformations.Core.Trace.Trace()
  nameWithType: Trace.Trace()
- uid: NMF.Transformations.Core.Trace.#ctor(System.Collections.Generic.ICollection{NMF.Transformations.Core.ITraceEntry})
  name: Trace(ICollection<ITraceEntry>)
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace__ctor_System_Collections_Generic_ICollection_NMF_Transformations_Core_ITraceEntry__
  commentId: M:NMF.Transformations.Core.Trace.#ctor(System.Collections.Generic.ICollection{NMF.Transformations.Core.ITraceEntry})
  name.vb: Trace(ICollection(Of ITraceEntry))
  fullName: NMF.Transformations.Core.Trace.Trace(System.Collections.Generic.ICollection<NMF.Transformations.Core.ITraceEntry>)
  fullName.vb: NMF.Transformations.Core.Trace.Trace(System.Collections.Generic.ICollection(Of NMF.Transformations.Core.ITraceEntry))
  nameWithType: Trace.Trace(ICollection<ITraceEntry>)
  nameWithType.vb: Trace.Trace(ICollection(Of ITraceEntry))
- uid: NMF.Transformations.Core.Trace.#ctor*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace__ctor_
  commentId: Overload:NMF.Transformations.Core.Trace.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.Trace.Trace
  nameWithType: Trace.Trace
- uid: NMF.Transformations.Core.Trace.Computations
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_Computations
  commentId: P:NMF.Transformations.Core.Trace.Computations
  fullName: NMF.Transformations.Core.Trace.Computations
  nameWithType: Trace.Computations
- uid: NMF.Transformations.Core.Trace.Computations*
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_Computations_
  commentId: Overload:NMF.Transformations.Core.Trace.Computations
  isSpec: "True"
  fullName: NMF.Transformations.Core.Trace.Computations
  nameWithType: Trace.Computations
- uid: NMF.Transformations.Core.Trace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  name: PublishEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_PublishEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.Trace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.Trace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: Trace.PublishEntry(ITraceEntry)
- uid: NMF.Transformations.Core.Trace.PublishEntry*
  name: PublishEntry
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_PublishEntry_
  commentId: Overload:NMF.Transformations.Core.Trace.PublishEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.Trace.PublishEntry
  nameWithType: Trace.PublishEntry
- uid: NMF.Transformations.Core.Trace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  name: RevokeEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_RevokeEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.Trace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.Trace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: Trace.RevokeEntry(ITraceEntry)
- uid: NMF.Transformations.Core.Trace.RevokeEntry*
  name: RevokeEntry
  href: api/Transformations/NMF.Transformations.Core.Trace.html#NMF_Transformations_Core_Trace_RevokeEntry_
  commentId: Overload:NMF.Transformations.Core.Trace.RevokeEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.Trace.RevokeEntry
  nameWithType: Trace.RevokeEntry
- uid: NMF.Transformations.Core.TraceEntryExtensions
  name: TraceEntryExtensions
  href: api/Transformations/NMF.Transformations.Core.TraceEntryExtensions.html
  commentId: T:NMF.Transformations.Core.TraceEntryExtensions
  fullName: NMF.Transformations.Core.TraceEntryExtensions
  nameWithType: TraceEntryExtensions
- uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  name: CreateInputArray(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray(NMF.Transformations.Core.ITraceEntry)
  nameWithType: TraceEntryExtensions.CreateInputArray(ITraceEntry)
- uid: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray*
  name: CreateInputArray
  href: api/Transformations/NMF.Transformations.Core.TraceEntryExtensions.html#NMF_Transformations_Core_TraceEntryExtensions_CreateInputArray_
  commentId: Overload:NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
  isSpec: "True"
  fullName: NMF.Transformations.Core.TraceEntryExtensions.CreateInputArray
  nameWithType: TraceEntryExtensions.CreateInputArray
- uid: NMF.Transformations.Core.Transformation
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.Transformation.html
  commentId: T:NMF.Transformations.Core.Transformation
  fullName: NMF.Transformations.Core.Transformation
  nameWithType: Transformation
- uid: NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath(NMF.Transformations.Core.Computation)
  name: ComputeInstantiatingTransformationRulePath(Computation)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_ComputeInstantiatingTransformationRulePath_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath(NMF.Transformations.Core.Computation)
  nameWithType: Transformation.ComputeInstantiatingTransformationRulePath(Computation)
- uid: NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath*
  name: ComputeInstantiatingTransformationRulePath
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_ComputeInstantiatingTransformationRulePath_
  commentId: Overload:NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.ComputeInstantiatingTransformationRulePath
  nameWithType: Transformation.ComputeInstantiatingTransformationRulePath
- uid: NMF.Transformations.Core.Transformation.CreateContext
  name: CreateContext()
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateContext
  commentId: M:NMF.Transformations.Core.Transformation.CreateContext
  fullName: NMF.Transformations.Core.Transformation.CreateContext()
  nameWithType: Transformation.CreateContext()
- uid: NMF.Transformations.Core.Transformation.CreateContext*
  name: CreateContext
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateContext_
  commentId: Overload:NMF.Transformations.Core.Transformation.CreateContext
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.CreateContext
  nameWithType: Transformation.CreateContext
- uid: NMF.Transformations.Core.Transformation.CreateRules
  name: CreateRules()
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateRules
  commentId: M:NMF.Transformations.Core.Transformation.CreateRules
  fullName: NMF.Transformations.Core.Transformation.CreateRules()
  nameWithType: Transformation.CreateRules()
- uid: NMF.Transformations.Core.Transformation.CreateRules*
  name: CreateRules
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateRules_
  commentId: Overload:NMF.Transformations.Core.Transformation.CreateRules
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.CreateRules
  nameWithType: Transformation.CreateRules
- uid: NMF.Transformations.Core.Transformation.CreateRulesInternal
  name: CreateRulesInternal()
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateRulesInternal
  commentId: M:NMF.Transformations.Core.Transformation.CreateRulesInternal
  fullName: NMF.Transformations.Core.Transformation.CreateRulesInternal()
  nameWithType: Transformation.CreateRulesInternal()
- uid: NMF.Transformations.Core.Transformation.CreateRulesInternal*
  name: CreateRulesInternal
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_CreateRulesInternal_
  commentId: Overload:NMF.Transformations.Core.Transformation.CreateRulesInternal
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.CreateRulesInternal
  nameWithType: Transformation.CreateRulesInternal
- uid: NMF.Transformations.Core.Transformation.GetRuleForRuleType(System.Type)
  name: GetRuleForRuleType(Type)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRuleForRuleType_System_Type_
  commentId: M:NMF.Transformations.Core.Transformation.GetRuleForRuleType(System.Type)
  fullName: NMF.Transformations.Core.Transformation.GetRuleForRuleType(System.Type)
  nameWithType: Transformation.GetRuleForRuleType(Type)
- uid: NMF.Transformations.Core.Transformation.GetRuleForRuleType*
  name: GetRuleForRuleType
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRuleForRuleType_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRuleForRuleType
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRuleForRuleType
  nameWithType: Transformation.GetRuleForRuleType
- uid: NMF.Transformations.Core.Transformation.GetRuleForTypeSignature(System.Type[],System.Type)
  name: GetRuleForTypeSignature(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRuleForTypeSignature_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.Transformation.GetRuleForTypeSignature(System.Type[],System.Type)
  name.vb: GetRuleForTypeSignature(Type(), Type)
  fullName: NMF.Transformations.Core.Transformation.GetRuleForTypeSignature(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.Transformation.GetRuleForTypeSignature(System.Type(), System.Type)
  nameWithType: Transformation.GetRuleForTypeSignature(Type[], Type)
  nameWithType.vb: Transformation.GetRuleForTypeSignature(Type(), Type)
- uid: NMF.Transformations.Core.Transformation.GetRuleForTypeSignature*
  name: GetRuleForTypeSignature
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRuleForTypeSignature_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRuleForTypeSignature
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRuleForTypeSignature
  nameWithType: Transformation.GetRuleForTypeSignature
- uid: NMF.Transformations.Core.Transformation.GetRulesExact(System.Type[],System.Type)
  name: GetRulesExact(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesExact_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.Transformation.GetRulesExact(System.Type[],System.Type)
  name.vb: GetRulesExact(Type(), Type)
  fullName: NMF.Transformations.Core.Transformation.GetRulesExact(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.Transformation.GetRulesExact(System.Type(), System.Type)
  nameWithType: Transformation.GetRulesExact(Type[], Type)
  nameWithType.vb: Transformation.GetRulesExact(Type(), Type)
- uid: NMF.Transformations.Core.Transformation.GetRulesExact*
  name: GetRulesExact
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesExact_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRulesExact
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRulesExact
  nameWithType: Transformation.GetRulesExact
- uid: NMF.Transformations.Core.Transformation.GetRulesForInputTypes(System.Type[])
  name: GetRulesForInputTypes(Type[])
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForInputTypes_System_Type___
  commentId: M:NMF.Transformations.Core.Transformation.GetRulesForInputTypes(System.Type[])
  name.vb: GetRulesForInputTypes(Type())
  fullName: NMF.Transformations.Core.Transformation.GetRulesForInputTypes(System.Type[])
  fullName.vb: NMF.Transformations.Core.Transformation.GetRulesForInputTypes(System.Type())
  nameWithType: Transformation.GetRulesForInputTypes(Type[])
  nameWithType.vb: Transformation.GetRulesForInputTypes(Type())
- uid: NMF.Transformations.Core.Transformation.GetRulesForInputTypes*
  name: GetRulesForInputTypes
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForInputTypes_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRulesForInputTypes
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRulesForInputTypes
  nameWithType: Transformation.GetRulesForInputTypes
- uid: NMF.Transformations.Core.Transformation.GetRulesForRuleType(System.Type)
  name: GetRulesForRuleType(Type)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForRuleType_System_Type_
  commentId: M:NMF.Transformations.Core.Transformation.GetRulesForRuleType(System.Type)
  fullName: NMF.Transformations.Core.Transformation.GetRulesForRuleType(System.Type)
  nameWithType: Transformation.GetRulesForRuleType(Type)
- uid: NMF.Transformations.Core.Transformation.GetRulesForRuleType*
  name: GetRulesForRuleType
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForRuleType_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRulesForRuleType
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRulesForRuleType
  nameWithType: Transformation.GetRulesForRuleType
- uid: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[],System.Type)
  name: GetRulesForTypeSignature(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForTypeSignature_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[],System.Type)
  name.vb: GetRulesForTypeSignature(Type(), Type)
  fullName: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type(), System.Type)
  nameWithType: Transformation.GetRulesForTypeSignature(Type[], Type)
  nameWithType.vb: Transformation.GetRulesForTypeSignature(Type(), Type)
- uid: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[],System.Type,System.Boolean)
  name: GetRulesForTypeSignature(Type[], Type, Boolean)
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForTypeSignature_System_Type___System_Type_System_Boolean_
  commentId: M:NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[],System.Type,System.Boolean)
  name.vb: GetRulesForTypeSignature(Type(), Type, Boolean)
  fullName: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type[], System.Type, System.Boolean)
  fullName.vb: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature(System.Type(), System.Type, System.Boolean)
  nameWithType: Transformation.GetRulesForTypeSignature(Type[], Type, Boolean)
  nameWithType.vb: Transformation.GetRulesForTypeSignature(Type(), Type, Boolean)
- uid: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature*
  name: GetRulesForTypeSignature
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_GetRulesForTypeSignature_
  commentId: Overload:NMF.Transformations.Core.Transformation.GetRulesForTypeSignature
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.GetRulesForTypeSignature
  nameWithType: Transformation.GetRulesForTypeSignature
- uid: NMF.Transformations.Core.Transformation.Initialize
  name: Initialize()
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Initialize
  commentId: M:NMF.Transformations.Core.Transformation.Initialize
  fullName: NMF.Transformations.Core.Transformation.Initialize()
  nameWithType: Transformation.Initialize()
- uid: NMF.Transformations.Core.Transformation.Initialize*
  name: Initialize
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Initialize_
  commentId: Overload:NMF.Transformations.Core.Transformation.Initialize
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.Initialize
  nameWithType: Transformation.Initialize
- uid: NMF.Transformations.Core.Transformation.IsInitialized
  name: IsInitialized
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_IsInitialized
  commentId: P:NMF.Transformations.Core.Transformation.IsInitialized
  fullName: NMF.Transformations.Core.Transformation.IsInitialized
  nameWithType: Transformation.IsInitialized
- uid: NMF.Transformations.Core.Transformation.IsInitialized*
  name: IsInitialized
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_IsInitialized_
  commentId: Overload:NMF.Transformations.Core.Transformation.IsInitialized
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.IsInitialized
  nameWithType: Transformation.IsInitialized
- uid: NMF.Transformations.Core.Transformation.IsRulesRegistered
  name: IsRulesRegistered
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_IsRulesRegistered
  commentId: P:NMF.Transformations.Core.Transformation.IsRulesRegistered
  fullName: NMF.Transformations.Core.Transformation.IsRulesRegistered
  nameWithType: Transformation.IsRulesRegistered
- uid: NMF.Transformations.Core.Transformation.IsRulesRegistered*
  name: IsRulesRegistered
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_IsRulesRegistered_
  commentId: Overload:NMF.Transformations.Core.Transformation.IsRulesRegistered
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.IsRulesRegistered
  nameWithType: Transformation.IsRulesRegistered
- uid: NMF.Transformations.Core.Transformation.MaxOutputDelay
  name: MaxOutputDelay
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_MaxOutputDelay
  commentId: P:NMF.Transformations.Core.Transformation.MaxOutputDelay
  fullName: NMF.Transformations.Core.Transformation.MaxOutputDelay
  nameWithType: Transformation.MaxOutputDelay
- uid: NMF.Transformations.Core.Transformation.MaxOutputDelay*
  name: MaxOutputDelay
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_MaxOutputDelay_
  commentId: Overload:NMF.Transformations.Core.Transformation.MaxOutputDelay
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.MaxOutputDelay
  nameWithType: Transformation.MaxOutputDelay
- uid: NMF.Transformations.Core.Transformation.MaxTransformationDelay
  name: MaxTransformationDelay
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_MaxTransformationDelay
  commentId: P:NMF.Transformations.Core.Transformation.MaxTransformationDelay
  fullName: NMF.Transformations.Core.Transformation.MaxTransformationDelay
  nameWithType: Transformation.MaxTransformationDelay
- uid: NMF.Transformations.Core.Transformation.MaxTransformationDelay*
  name: MaxTransformationDelay
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_MaxTransformationDelay_
  commentId: Overload:NMF.Transformations.Core.Transformation.MaxTransformationDelay
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.MaxTransformationDelay
  nameWithType: Transformation.MaxTransformationDelay
- uid: NMF.Transformations.Core.Transformation.Patterns
  name: Patterns
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Patterns
  commentId: P:NMF.Transformations.Core.Transformation.Patterns
  fullName: NMF.Transformations.Core.Transformation.Patterns
  nameWithType: Transformation.Patterns
- uid: NMF.Transformations.Core.Transformation.Patterns*
  name: Patterns
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Patterns_
  commentId: Overload:NMF.Transformations.Core.Transformation.Patterns
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.Patterns
  nameWithType: Transformation.Patterns
- uid: NMF.Transformations.Core.Transformation.RegisterRules
  name: RegisterRules()
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_RegisterRules
  commentId: M:NMF.Transformations.Core.Transformation.RegisterRules
  fullName: NMF.Transformations.Core.Transformation.RegisterRules()
  nameWithType: Transformation.RegisterRules()
- uid: NMF.Transformations.Core.Transformation.RegisterRules*
  name: RegisterRules
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_RegisterRules_
  commentId: Overload:NMF.Transformations.Core.Transformation.RegisterRules
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.RegisterRules
  nameWithType: Transformation.RegisterRules
- uid: NMF.Transformations.Core.Transformation.Rules
  name: Rules
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Rules
  commentId: P:NMF.Transformations.Core.Transformation.Rules
  fullName: NMF.Transformations.Core.Transformation.Rules
  nameWithType: Transformation.Rules
- uid: NMF.Transformations.Core.Transformation.Rules*
  name: Rules
  href: api/Transformations/NMF.Transformations.Core.Transformation.html#NMF_Transformations_Core_Transformation_Rules_
  commentId: Overload:NMF.Transformations.Core.Transformation.Rules
  isSpec: "True"
  fullName: NMF.Transformations.Core.Transformation.Rules
  nameWithType: Transformation.Rules
- uid: NMF.Transformations.Core.TransformationContext
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html
  commentId: T:NMF.Transformations.Core.TransformationContext
  fullName: NMF.Transformations.Core.TransformationContext
  nameWithType: TransformationContext
- uid: NMF.Transformations.Core.TransformationContext.#ctor(NMF.Transformations.Core.Transformation)
  name: TransformationContext(Transformation)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext__ctor_NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.Core.TransformationContext.#ctor(NMF.Transformations.Core.Transformation)
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContext(NMF.Transformations.Core.Transformation)
  nameWithType: TransformationContext.TransformationContext(Transformation)
- uid: NMF.Transformations.Core.TransformationContext.#ctor*
  name: TransformationContext
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext__ctor_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContext
  nameWithType: TransformationContext.TransformationContext
- uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  name: AddTraceEntry(Computation)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_AddTraceEntry_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  nameWithType: TransformationContext.AddTraceEntry(Computation)
- uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry*
  name: AddTraceEntry
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_AddTraceEntry_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.AddTraceEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.AddTraceEntry
  nameWithType: TransformationContext.AddTraceEntry
- uid: NMF.Transformations.Core.TransformationContext.Bag
  name: Bag
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Bag
  commentId: P:NMF.Transformations.Core.TransformationContext.Bag
  fullName: NMF.Transformations.Core.TransformationContext.Bag
  nameWithType: TransformationContext.Bag
- uid: NMF.Transformations.Core.TransformationContext.Bag*
  name: Bag
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Bag_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Bag
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Bag
  nameWithType: TransformationContext.Bag
- uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  name: CallPendingDependencies()
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CallPendingDependencies
  commentId: M:NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  fullName: NMF.Transformations.Core.TransformationContext.CallPendingDependencies()
  nameWithType: TransformationContext.CallPendingDependencies()
- uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies*
  name: CallPendingDependencies
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CallPendingDependencies_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  nameWithType: TransformationContext.CallPendingDependencies
- uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  name: CallTransformation(GeneralTransformationRule, Object[], IEnumerable)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CallTransformation_NMF_Transformations_Core_GeneralTransformationRule_System_Object___System_Collections_IEnumerable_
  commentId: M:NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, System.Object[], System.Collections.IEnumerable)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, System.Object(), System.Collections.IEnumerable)
  nameWithType: TransformationContext.CallTransformation(GeneralTransformationRule, Object[], IEnumerable)
  nameWithType.vb: TransformationContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
- uid: NMF.Transformations.Core.TransformationContext.CallTransformation*
  name: CallTransformation
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CallTransformation_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.CallTransformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.CallTransformation
  nameWithType: TransformationContext.CallTransformation
- uid: NMF.Transformations.Core.TransformationContext.ComputationCompleted
  name: ComputationCompleted
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ComputationCompleted
  commentId: E:NMF.Transformations.Core.TransformationContext.ComputationCompleted
  fullName: NMF.Transformations.Core.TransformationContext.ComputationCompleted
  nameWithType: TransformationContext.ComputationCompleted
- uid: NMF.Transformations.Core.TransformationContext.Computations
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Computations
  commentId: P:NMF.Transformations.Core.TransformationContext.Computations
  fullName: NMF.Transformations.Core.TransformationContext.Computations
  nameWithType: TransformationContext.Computations
- uid: NMF.Transformations.Core.TransformationContext.Computations*
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Computations_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Computations
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Computations
  nameWithType: TransformationContext.Computations
- uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  name: CreateComputationContext(Object[], GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CreateComputationContext_System_Object___NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: CreateComputationContext(Object(), GeneralTransformationRule)
  fullName: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[], NMF.Transformations.Core.GeneralTransformationRule)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object(), NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: TransformationContext.CreateComputationContext(Object[], GeneralTransformationRule)
  nameWithType.vb: TransformationContext.CreateComputationContext(Object(), GeneralTransformationRule)
- uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext*
  name: CreateComputationContext
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CreateComputationContext_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.CreateComputationContext
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.CreateComputationContext
  nameWithType: TransformationContext.CreateComputationContext
- uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  name: CreateDelayedOutputs()
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CreateDelayedOutputs
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  fullName: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs()
  nameWithType: TransformationContext.CreateDelayedOutputs()
- uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs*
  name: CreateDelayedOutputs
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_CreateDelayedOutputs_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  nameWithType: TransformationContext.CreateDelayedOutputs
- uid: NMF.Transformations.Core.TransformationContext.Data
  name: Data
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Data
  commentId: P:NMF.Transformations.Core.TransformationContext.Data
  fullName: NMF.Transformations.Core.TransformationContext.Data
  nameWithType: TransformationContext.Data
- uid: NMF.Transformations.Core.TransformationContext.Data*
  name: Data
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Data_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Data
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Data
  nameWithType: TransformationContext.Data
- uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  name: ExecuteLevel(IList<Computation>)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecuteLevel_System_Collections_Generic_IList_NMF_Transformations_Core_Computation__
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  name.vb: ExecuteLevel(IList(Of Computation))
  fullName: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList<NMF.Transformations.Core.Computation>)
  fullName.vb: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList(Of NMF.Transformations.Core.Computation))
  nameWithType: TransformationContext.ExecuteLevel(IList<Computation>)
  nameWithType.vb: TransformationContext.ExecuteLevel(IList(Of Computation))
- uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel*
  name: ExecuteLevel
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecuteLevel_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.ExecuteLevel
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.ExecuteLevel
  nameWithType: TransformationContext.ExecuteLevel
- uid: NMF.Transformations.Core.TransformationContext.ExecutePending
  name: ExecutePending()
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecutePending
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePending
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePending()
  nameWithType: TransformationContext.ExecutePending()
- uid: NMF.Transformations.Core.TransformationContext.ExecutePending*
  name: ExecutePending
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecutePending_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.ExecutePending
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePending
  nameWithType: TransformationContext.ExecutePending
- uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  name: ExecutePendingComputations()
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecutePendingComputations
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations()
  nameWithType: TransformationContext.ExecutePendingComputations()
- uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations*
  name: ExecutePendingComputations
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_ExecutePendingComputations_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  nameWithType: TransformationContext.ExecutePendingComputations
- uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  name: GetRule(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_GetRule_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  name.vb: GetRule(Type(), Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRule(System.Type(), System.Type)
  nameWithType: TransformationContext.GetRule(Type[], Type)
  nameWithType.vb: TransformationContext.GetRule(Type(), Type)
- uid: NMF.Transformations.Core.TransformationContext.GetRule*
  name: GetRule
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_GetRule_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.GetRule
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.GetRule
  nameWithType: TransformationContext.GetRule
- uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  name: GetRules(Type[], Type)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_GetRules_System_Type___System_Type_
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  name.vb: GetRules(Type(), Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[], System.Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRules(System.Type(), System.Type)
  nameWithType: TransformationContext.GetRules(Type[], Type)
  nameWithType.vb: TransformationContext.GetRules(Type(), Type)
- uid: NMF.Transformations.Core.TransformationContext.GetRules*
  name: GetRules
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_GetRules_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.GetRules
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.GetRules
  nameWithType: TransformationContext.GetRules
- uid: NMF.Transformations.Core.TransformationContext.Input
  name: Input
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Input
  commentId: P:NMF.Transformations.Core.TransformationContext.Input
  fullName: NMF.Transformations.Core.TransformationContext.Input
  nameWithType: TransformationContext.Input
- uid: NMF.Transformations.Core.TransformationContext.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Input_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Input
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Input
  nameWithType: TransformationContext.Input
- uid: NMF.Transformations.Core.TransformationContext.Inputs
  name: Inputs
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Inputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Inputs
  fullName: NMF.Transformations.Core.TransformationContext.Inputs
  nameWithType: TransformationContext.Inputs
- uid: NMF.Transformations.Core.TransformationContext.Inputs*
  name: Inputs
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Inputs_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Inputs
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Inputs
  nameWithType: TransformationContext.Inputs
- uid: NMF.Transformations.Core.TransformationContext.NMF#Transformations#Core#ITransformationContext#IsThreadSafe
  name: ITransformationContext.IsThreadSafe
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_NMF_Transformations_Core_ITransformationContext_IsThreadSafe
  commentId: P:NMF.Transformations.Core.TransformationContext.NMF#Transformations#Core#ITransformationContext#IsThreadSafe
  name.vb: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  fullName: NMF.Transformations.Core.TransformationContext.NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  nameWithType: TransformationContext.ITransformationContext.IsThreadSafe
  nameWithType.vb: TransformationContext.NMF.Transformations.Core.ITransformationContext.IsThreadSafe
- uid: NMF.Transformations.Core.TransformationContext.NMF#Transformations#Core#ITransformationContext#IsThreadSafe*
  name: ITransformationContext.IsThreadSafe
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_NMF_Transformations_Core_ITransformationContext_IsThreadSafe_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.NMF#Transformations#Core#ITransformationContext#IsThreadSafe
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  fullName: NMF.Transformations.Core.TransformationContext.NMF.Transformations.Core.ITransformationContext.IsThreadSafe
  nameWithType: TransformationContext.ITransformationContext.IsThreadSafe
  nameWithType.vb: TransformationContext.NMF.Transformations.Core.ITransformationContext.IsThreadSafe
- uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  name: OnComputationCompleted(ComputationEventArgs)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_OnComputationCompleted_NMF_Transformations_Core_ComputationEventArgs_
  commentId: M:NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  fullName: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  nameWithType: TransformationContext.OnComputationCompleted(ComputationEventArgs)
- uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted*
  name: OnComputationCompleted
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_OnComputationCompleted_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.OnComputationCompleted
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.OnComputationCompleted
  nameWithType: TransformationContext.OnComputationCompleted
- uid: NMF.Transformations.Core.TransformationContext.Output
  name: Output
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Output
  commentId: P:NMF.Transformations.Core.TransformationContext.Output
  fullName: NMF.Transformations.Core.TransformationContext.Output
  nameWithType: TransformationContext.Output
- uid: NMF.Transformations.Core.TransformationContext.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Output_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Output
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Output
  nameWithType: TransformationContext.Output
- uid: NMF.Transformations.Core.TransformationContext.Outputs
  name: Outputs
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Outputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Outputs
  fullName: NMF.Transformations.Core.TransformationContext.Outputs
  nameWithType: TransformationContext.Outputs
- uid: NMF.Transformations.Core.TransformationContext.Outputs*
  name: Outputs
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Outputs_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Outputs
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Outputs
  nameWithType: TransformationContext.Outputs
- uid: NMF.Transformations.Core.TransformationContext.Trace
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Trace
  commentId: P:NMF.Transformations.Core.TransformationContext.Trace
  fullName: NMF.Transformations.Core.TransformationContext.Trace
  nameWithType: TransformationContext.Trace
- uid: NMF.Transformations.Core.TransformationContext.Trace*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Trace_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Trace
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Trace
  nameWithType: TransformationContext.Trace
- uid: NMF.Transformations.Core.TransformationContext.Transformation
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Transformation
  commentId: P:NMF.Transformations.Core.TransformationContext.Transformation
  fullName: NMF.Transformations.Core.TransformationContext.Transformation
  nameWithType: TransformationContext.Transformation
- uid: NMF.Transformations.Core.TransformationContext.Transformation*
  name: Transformation
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.html#NMF_Transformations_Core_TransformationContext_Transformation_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.Transformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.Transformation
  nameWithType: TransformationContext.Transformation
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace
  name: TransformationContext.TransformationContextTrace
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html
  commentId: T:NMF.Transformations.Core.TransformationContext.TransformationContextTrace
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace
  nameWithType: TransformationContext.TransformationContextTrace
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.#ctor(NMF.Transformations.Core.TransformationContext)
  name: TransformationContextTrace(TransformationContext)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace__ctor_NMF_Transformations_Core_TransformationContext_
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.#ctor(NMF.Transformations.Core.TransformationContext)
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TransformationContextTrace(NMF.Transformations.Core.TransformationContext)
  nameWithType: TransformationContext.TransformationContextTrace.TransformationContextTrace(TransformationContext)
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.#ctor*
  name: TransformationContextTrace
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace__ctor_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TransformationContextTrace
  nameWithType: TransformationContext.TransformationContextTrace.TransformationContextTrace
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_Computations
  commentId: P:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations
  nameWithType: TransformationContext.TransformationContextTrace.Computations
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations*
  name: Computations
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_Computations_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Computations
  nameWithType: TransformationContext.TransformationContextTrace.Computations
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  name: PublishEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_PublishEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: TransformationContext.TransformationContextTrace.PublishEntry(ITraceEntry)
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry*
  name: PublishEntry
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_PublishEntry_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.PublishEntry
  nameWithType: TransformationContext.TransformationContextTrace.PublishEntry
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  name: RevokeEntry(ITraceEntry)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_RevokeEntry_NMF_Transformations_Core_ITraceEntry_
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry(NMF.Transformations.Core.ITraceEntry)
  nameWithType: TransformationContext.TransformationContextTrace.RevokeEntry(ITraceEntry)
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry*
  name: RevokeEntry
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_RevokeEntry_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.RevokeEntry
  nameWithType: TransformationContext.TransformationContextTrace.RevokeEntry
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace(System.Object[])
  name: Trace(Object[])
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_Trace_System_Object___
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace(System.Object[])
  name.vb: Trace(Object())
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace(System.Object[])
  fullName.vb: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace(System.Object())
  nameWithType: TransformationContext.TransformationContextTrace.Trace(Object[])
  nameWithType.vb: TransformationContext.TransformationContextTrace.Trace(Object())
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace*
  name: Trace
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_Trace_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.Trace
  nameWithType: TransformationContext.TransformationContextTrace.Trace
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  name: TraceAllIn(GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceAllIn_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn(NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: TransformationContext.TransformationContextTrace.TraceAllIn(GeneralTransformationRule)
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn*
  name: TraceAllIn
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceAllIn_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceAllIn
  nameWithType: TransformationContext.TransformationContextTrace.TraceAllIn
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: TraceIn(GeneralTransformationRule, Object[])
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceIn_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name.vb: TraceIn(GeneralTransformationRule, Object())
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  fullName.vb: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn(NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  nameWithType: TransformationContext.TransformationContextTrace.TraceIn(GeneralTransformationRule, Object[])
  nameWithType.vb: TransformationContext.TransformationContextTrace.TraceIn(GeneralTransformationRule, Object())
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn*
  name: TraceIn
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceIn_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceIn
  nameWithType: TransformationContext.TransformationContextTrace.TraceIn
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceMany(Type[], Type, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceMany_System_Type___System_Type_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany(System.Type[],System.Type,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceMany(Type(), Type, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany(System.Type[], System.Type, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany(System.Type(), System.Type, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: TransformationContext.TransformationContextTrace.TraceMany(Type[], Type, IEnumerable<Object[]>)
  nameWithType.vb: TransformationContext.TransformationContextTrace.TraceMany(Type(), Type, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany*
  name: TraceMany
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceMany_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceMany
  nameWithType: TransformationContext.TransformationContextTrace.TraceMany
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name: TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceManyIn_NMF_Transformations_Core_GeneralTransformationRule_System_Collections_Generic_IEnumerable_System_Object____
  commentId: M:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule,System.Collections.Generic.IEnumerable{System.Object[]})
  name.vb: TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable<System.Object[]>)
  fullName.vb: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn(NMF.Transformations.Core.GeneralTransformationRule, System.Collections.Generic.IEnumerable(Of System.Object()))
  nameWithType: TransformationContext.TransformationContextTrace.TraceManyIn(GeneralTransformationRule, IEnumerable<Object[]>)
  nameWithType.vb: TransformationContext.TransformationContextTrace.TraceManyIn(GeneralTransformationRule, IEnumerable(Of Object()))
- uid: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn*
  name: TraceManyIn
  href: api/Transformations/NMF.Transformations.Core.TransformationContext.TransformationContextTrace.html#NMF_Transformations_Core_TransformationContext_TransformationContextTrace_TraceManyIn_
  commentId: Overload:NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContext.TransformationContextTrace.TraceManyIn
  nameWithType: TransformationContext.TransformationContextTrace.TraceManyIn
- uid: NMF.Transformations.Core.TransformationContextExtensions
  name: TransformationContextExtensions
  href: api/Transformations/NMF.Transformations.Core.TransformationContextExtensions.html
  commentId: T:NMF.Transformations.Core.TransformationContextExtensions
  fullName: NMF.Transformations.Core.TransformationContextExtensions
  nameWithType: TransformationContextExtensions
- uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: CallTransformation(ITransformationContext, GeneralTransformationRule, Object[])
  href: api/Transformations/NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_NMF_Transformations_Core_ITransformationContext_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  commentId: M:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name.vb: CallTransformation(ITransformationContext, GeneralTransformationRule, Object())
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  fullName.vb: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation(NMF.Transformations.Core.ITransformationContext, NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  nameWithType: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, Object[])
  nameWithType.vb: TransformationContextExtensions.CallTransformation(ITransformationContext, GeneralTransformationRule, Object())
- uid: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation*
  name: CallTransformation
  href: api/Transformations/NMF.Transformations.Core.TransformationContextExtensions.html#NMF_Transformations_Core_TransformationContextExtensions_CallTransformation_
  commentId: Overload:NMF.Transformations.Core.TransformationContextExtensions.CallTransformation
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationContextExtensions.CallTransformation
  nameWithType: TransformationContextExtensions.CallTransformation
- uid: NMF.Transformations.Core.TransformationRunner
  name: TransformationRunner
  href: api/Transformations/NMF.Transformations.Core.TransformationRunner.html
  commentId: T:NMF.Transformations.Core.TransformationRunner
  fullName: NMF.Transformations.Core.TransformationRunner
  nameWithType: TransformationRunner
- uid: NMF.Transformations.Core.TransformationRunner.Transform(System.Object[],System.Collections.IEnumerable,NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationEngineContext)
  name: Transform(Object[], IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.Core.TransformationRunner.html#NMF_Transformations_Core_TransformationRunner_Transform_System_Object___System_Collections_IEnumerable_NMF_Transformations_Core_GeneralTransformationRule_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.Core.TransformationRunner.Transform(System.Object[],System.Collections.IEnumerable,NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Transform(Object(), IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  fullName: NMF.Transformations.Core.TransformationRunner.Transform(System.Object[], System.Collections.IEnumerable, NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.Core.TransformationRunner.Transform(System.Object(), System.Collections.IEnumerable, NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationRunner.Transform(Object[], IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  nameWithType.vb: TransformationRunner.Transform(Object(), IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
- uid: NMF.Transformations.Core.TransformationRunner.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.Core.TransformationRunner.html#NMF_Transformations_Core_TransformationRunner_Transform_
  commentId: Overload:NMF.Transformations.Core.TransformationRunner.Transform
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationRunner.Transform
  nameWithType: TransformationRunner.Transform
- uid: NMF.Transformations.Core.TransformationRunner.TransformMany(System.Collections.Generic.IEnumerable{System.Object[]},System.Collections.IEnumerable,NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationEngineContext)
  name: TransformMany(IEnumerable<Object[]>, IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.Core.TransformationRunner.html#NMF_Transformations_Core_TransformationRunner_TransformMany_System_Collections_Generic_IEnumerable_System_Object____System_Collections_IEnumerable_NMF_Transformations_Core_GeneralTransformationRule_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.Core.TransformationRunner.TransformMany(System.Collections.Generic.IEnumerable{System.Object[]},System.Collections.IEnumerable,NMF.Transformations.Core.GeneralTransformationRule,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: TransformMany(IEnumerable(Of Object()), IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  fullName: NMF.Transformations.Core.TransformationRunner.TransformMany(System.Collections.Generic.IEnumerable<System.Object[]>, System.Collections.IEnumerable, NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.Core.TransformationRunner.TransformMany(System.Collections.Generic.IEnumerable(Of System.Object()), System.Collections.IEnumerable, NMF.Transformations.Core.GeneralTransformationRule, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationRunner.TransformMany(IEnumerable<Object[]>, IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
  nameWithType.vb: TransformationRunner.TransformMany(IEnumerable(Of Object()), IEnumerable, GeneralTransformationRule, ITransformationEngineContext)
- uid: NMF.Transformations.Core.TransformationRunner.TransformMany*
  name: TransformMany
  href: api/Transformations/NMF.Transformations.Core.TransformationRunner.html#NMF_Transformations_Core_TransformationRunner_TransformMany_
  commentId: Overload:NMF.Transformations.Core.TransformationRunner.TransformMany
  isSpec: "True"
  fullName: NMF.Transformations.Core.TransformationRunner.TransformMany
  nameWithType: TransformationRunner.TransformMany
- uid: NMF.Transformations.GeneralTransformationRule`1
  name: GeneralTransformationRule<TIn>
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html
  commentId: T:NMF.Transformations.GeneralTransformationRule`1
  name.vb: GeneralTransformationRule(Of TIn)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn)
  nameWithType: GeneralTransformationRule<TIn>
  nameWithType.vb: GeneralTransformationRule(Of TIn)
- uid: NMF.Transformations.GeneralTransformationRule`1.Call(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Object[]})
  name: Call(GeneralTransformationRule, Func<TIn, Object[]>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0_System_Object____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Object[]})
  name.vb: Call(GeneralTransformationRule, Func(Of TIn, Object()))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn, System.Object[]>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn, System.Object()))
  nameWithType: GeneralTransformationRule<TIn>.Call(GeneralTransformationRule, Func<TIn, Object[]>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(GeneralTransformationRule, Func(Of TIn, Object()))
- uid: NMF.Transformations.GeneralTransformationRule`1.Call*
  name: Call
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.Call
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call
  nameWithType: GeneralTransformationRule<TIn>.Call
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call
- uid: NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0})
  name: Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0})
  name.vb: Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0},System.Predicate{`0})
  name: Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0___0__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0},System.Predicate{`0})
  name.vb: Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TRequiredInput>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TRequiredInput), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{`0})
  name: Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call__1_NMF_Transformations_GeneralTransformationRule___0__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{`0})
  name.vb: Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1})
  name: Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0___0__System_Func__0___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn>.Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`1.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1},System.Predicate{`0})
  name: Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Call__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0___0__System_Func__0___1__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1},System.Predicate{`0})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Call<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Call(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallByType*
  name: CallByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallByType
  nameWithType: GeneralTransformationRule<TIn>.CallByType
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallByType
- uid: NMF.Transformations.GeneralTransformationRule`1.CallByType``1(System.Func{`0,``0})
  name: CallByType<TRequiredInput>(Func<TIn, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallByType__1_System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallByType``1(System.Func{`0,``0})
  name.vb: CallByType(Of TRequiredInput)(Func(Of TIn, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallByType<TRequiredInput>(System.Func<TIn, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallByType(Of TRequiredInput)(System.Func(Of TIn, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.CallByType<TRequiredInput>(Func<TIn, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallByType(Of TRequiredInput)(Func(Of TIn, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallByType``2(System.Func{`0,``0},System.Func{`0,``1})
  name: CallByType<TRequiredInput1, TRequiredInput2>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallByType__2_System_Func__0___0__System_Func__0___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallByType``2(System.Func{`0,``0},System.Func{`0,``1})
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn>.CallByType<TRequiredInput1, TRequiredInput2>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,`0},System.Boolean)
  name: CallFor(GeneralTransformationRule, Func<Computation, TIn>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation__0__System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,`0},System.Boolean)
  name.vb: CallFor(GeneralTransformationRule, Func(Of Computation, TIn), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, TIn>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, TIn), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn>.CallFor(GeneralTransformationRule, Func<Computation, TIn>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(GeneralTransformationRule, Func(Of Computation, TIn), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,`0},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name: CallFor(GeneralTransformationRule, Func<Computation, TIn>, Predicate<Computation>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation__0__System_Predicate_NMF_Transformations_Core_Computation__System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,`0},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name.vb: CallFor(GeneralTransformationRule, Func(Of Computation, TIn), Predicate(Of Computation), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, TIn>, System.Predicate<NMF.Transformations.Core.Computation>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, TIn), System.Predicate(Of NMF.Transformations.Core.Computation), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn>.CallFor(GeneralTransformationRule, Func<Computation, TIn>, Predicate<Computation>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(GeneralTransformationRule, Func(Of Computation, TIn), Predicate(Of Computation), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor*
  name: CallFor
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallFor
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor
  nameWithType: GeneralTransformationRule<TIn>.CallFor
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0})
  name: CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0})
  name.vb: CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Predicate{``0})
  name: CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0__0__System_Predicate___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Predicate{``0})
  name.vb: CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, TIn>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, TIn), System.Predicate(Of TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn>, Predicate<TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``1(System.Func{``0,`0})
  name: CallFor<TRequiredInput>(Func<TRequiredInput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__1_System_Func___0__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``1(System.Func{``0,`0})
  name.vb: CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(System.Func<TRequiredInput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(System.Func(Of TRequiredInput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(Func<TRequiredInput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``1(System.Func{``0,`0},System.Predicate{``0})
  name: CallFor<TRequiredInput>(Func<TRequiredInput, TIn>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__1_System_Func___0__0__System_Predicate___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``1(System.Func{``0,`0},System.Predicate{``0})
  name.vb: CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(System.Func<TRequiredInput, TIn>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(System.Func(Of TRequiredInput, TIn), System.Predicate(Of TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput>(Func<TRequiredInput, TIn>, Predicate<TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0})
  name: CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1__0__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``2(System.Func{``0,``1,`0})
  name: CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__2_System_Func___0___1__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``2(System.Func{``0,``1,`0})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallFor__2_System_Func___0___1__0__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{`0}},System.Boolean)
  name: CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<TIn>>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Collections_Generic_IEnumerable__0___System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{`0}},System.Boolean)
  name.vb: CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of TIn)), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable<TIn>>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable(Of TIn)), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn>.CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<TIn>>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of TIn)), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{`0}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name: CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<TIn>>, Predicate<Computation>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Collections_Generic_IEnumerable__0___System_Predicate_NMF_Transformations_Core_Computation__System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{`0}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name.vb: CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of TIn)), Predicate(Of Computation), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable<TIn>>, System.Predicate<NMF.Transformations.Core.Computation>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable(Of TIn)), System.Predicate(Of NMF.Transformations.Core.Computation), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn>.CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<TIn>>, Predicate<Computation>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of TIn)), Predicate(Of Computation), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach*
  name: CallForEach
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallForEach
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach
  nameWithType: GeneralTransformationRule<TIn>.CallForEach
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0})
  name: CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0_System_Collections_Generic_IEnumerable__0___System_Predicate___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0})
  name.vb: CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Predicate(Of TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__1_System_Func___0_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0})
  name: CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__1_System_Func___0_System_Collections_Generic_IEnumerable__0___System_Predicate___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0})
  name.vb: CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Predicate(Of TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__2_System_Func___0___1_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEach__2_System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive*
  name: CallForEachOutputSensitive
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__2_System_Func___0___1_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__2_System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,``2,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2_System_Collections_Generic_IEnumerable__0___System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__3_System_Func___0___1___2_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,``2,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForEachOutputSensitive__3_System_Func___0___1___2_System_Collections_Generic_IEnumerable__0___System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive*
  name: CallForOutputSensitive
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1__0__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, TIn>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, TIn), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(System.Func{``0,``1,`0})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__2_System_Func___0___1__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(System.Func{``0,``1,`0})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__2_System_Func___0___1__0__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, TIn>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, TIn), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2__0__System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__3_System_Func___0___1___2__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallForOutputSensitive__3_System_Func___0___1___2__0__System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Collections.Generic.IEnumerable{System.Object[]}})
  name: CallMany(GeneralTransformationRule, Func<TIn, IEnumerable<Object[]>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallMany_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: CallMany(GeneralTransformationRule, Func(Of TIn, IEnumerable(Of Object())))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: GeneralTransformationRule<TIn>.CallMany(GeneralTransformationRule, Func<TIn, IEnumerable<Object[]>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallMany(GeneralTransformationRule, Func(Of TIn, IEnumerable(Of Object())))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallMany*
  name: CallMany
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallMany_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallMany
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallMany
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallMany
  nameWithType: GeneralTransformationRule<TIn>.CallMany
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallMany
- uid: NMF.Transformations.GeneralTransformationRule`1.CallMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name: CallMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallMany__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallMany<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallMany(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn>.CallMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallMany__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallMany<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallMany(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn>.CallMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallManyByType*
  name: CallManyByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallManyByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.CallManyByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallManyByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallManyByType
  nameWithType: GeneralTransformationRule<TIn>.CallManyByType
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallManyByType
- uid: NMF.Transformations.GeneralTransformationRule`1.CallManyByType``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name: CallManyByType<TRequiredInput>(Func<TIn, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallManyByType__1_System_Func__0_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallManyByType``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallManyByType(Of TRequiredInput)(Func(Of TIn, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallManyByType<TRequiredInput>(System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallManyByType(Of TRequiredInput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn>.CallManyByType<TRequiredInput>(Func<TIn, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallManyByType(Of TRequiredInput)(Func(Of TIn, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`1.CallManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_CallManyByType__2_System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.CallManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.CallManyByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).CallManyByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn>.CallManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).CallManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`1.InputType
  name: InputType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_InputType
  commentId: P:NMF.Transformations.GeneralTransformationRule`1.InputType
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.InputType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).InputType
  nameWithType: GeneralTransformationRule<TIn>.InputType
  nameWithType.vb: GeneralTransformationRule(Of TIn).InputType
- uid: NMF.Transformations.GeneralTransformationRule`1.InputType*
  name: InputType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_InputType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.InputType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.InputType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).InputType
  nameWithType: GeneralTransformationRule<TIn>.InputType
  nameWithType.vb: GeneralTransformationRule(Of TIn).InputType
- uid: NMF.Transformations.GeneralTransformationRule`1.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{`0})
  name: MarkInstantiatingFor(GeneralTransformationRule, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{`0})
  name.vb: MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.MarkInstantiatingFor(GeneralTransformationRule, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.MarkInstantiatingFor
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).MarkInstantiatingFor
  nameWithType: GeneralTransformationRule<TIn>.MarkInstantiatingFor
  nameWithType.vb: GeneralTransformationRule(Of TIn).MarkInstantiatingFor
- uid: NMF.Transformations.GeneralTransformationRule`1.Require(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Object[]})
  name: Require(GeneralTransformationRule, Func<TIn, Object[]>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0_System_Object____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Object[]})
  name.vb: Require(GeneralTransformationRule, Func(Of TIn, Object()))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn, System.Object[]>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn, System.Object()))
  nameWithType: GeneralTransformationRule<TIn>.Require(GeneralTransformationRule, Func<TIn, Object[]>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(GeneralTransformationRule, Func(Of TIn, Object()))
- uid: NMF.Transformations.GeneralTransformationRule`1.Require*
  name: Require
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.Require
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require
  nameWithType: GeneralTransformationRule<TIn>.Require
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require
- uid: NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0})
  name: Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0})
  name.vb: Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0},System.Predicate{`0})
  name: Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0___0__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,``0},System.Predicate{`0})
  name.vb: Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TRequiredInput>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TRequiredInput), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TRequiredInput>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TRequiredInput), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{`0})
  name: Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require__1_NMF_Transformations_GeneralTransformationRule___0__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{`0})
  name.vb: Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1})
  name: Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0___0__System_Func__0___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn>.Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`1.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1},System.Predicate{`0})
  name: Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Require__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0___0__System_Func__0___1__System_Predicate__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,``0},System.Func{`0,``1},System.Predicate{`0})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Predicate(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Require<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Require(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Predicate(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Predicate<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Predicate(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireByType*
  name: RequireByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.RequireByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireByType
  nameWithType: GeneralTransformationRule<TIn>.RequireByType
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireByType
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireByType``1
  name: RequireByType<TRequiredInput>()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireByType__1
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireByType``1
  name.vb: RequireByType(Of TRequiredInput)()
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireByType<TRequiredInput>()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput)()
  nameWithType: GeneralTransformationRule<TIn>.RequireByType<TRequiredInput>()
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput)()
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireByType``1(System.Func{`0,``0})
  name: RequireByType<TRequiredInput>(Func<TIn, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireByType__1_System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireByType``1(System.Func{`0,``0})
  name.vb: RequireByType(Of TRequiredInput)(Func(Of TIn, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireByType<TRequiredInput>(System.Func<TIn, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput)(System.Func(Of TIn, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn>.RequireByType<TRequiredInput>(Func<TIn, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput)(Func(Of TIn, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireByType``2(System.Func{`0,``0},System.Func{`0,``1})
  name: RequireByType<TRequiredInput1, TRequiredInput2>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireByType__2_System_Func__0___0__System_Func__0___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireByType``2(System.Func{`0,``0},System.Func{`0,``1})
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn>.RequireByType<TRequiredInput1, TRequiredInput2>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Collections.Generic.IEnumerable{System.Object[]}})
  name: RequireMany(GeneralTransformationRule, Func<TIn, IEnumerable<Object[]>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireMany_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: RequireMany(GeneralTransformationRule, Func(Of TIn, IEnumerable(Of Object())))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: GeneralTransformationRule<TIn>.RequireMany(GeneralTransformationRule, Func<TIn, IEnumerable<Object[]>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireMany(GeneralTransformationRule, Func(Of TIn, IEnumerable(Of Object())))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireMany*
  name: RequireMany
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireMany_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.RequireMany
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireMany
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireMany
  nameWithType: GeneralTransformationRule<TIn>.RequireMany
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireMany
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name: RequireMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireMany__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name.vb: RequireMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireMany<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireMany(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn>.RequireMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: RequireMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireMany__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: RequireMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireMany<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireMany(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn>.RequireMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireManyByType*
  name: RequireManyByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireManyByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.RequireManyByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireManyByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireManyByType
  nameWithType: GeneralTransformationRule<TIn>.RequireManyByType
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireManyByType
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireManyByType``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name: RequireManyByType<TRequiredInput>(Func<TIn, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireManyByType__1_System_Func__0_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireManyByType``1(System.Func{`0,System.Collections.Generic.IEnumerable{``0}})
  name.vb: RequireManyByType(Of TRequiredInput)(Func(Of TIn, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireManyByType<TRequiredInput>(System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireManyByType(Of TRequiredInput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn>.RequireManyByType<TRequiredInput>(Func<TIn, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireManyByType(Of TRequiredInput)(Func(Of TIn, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`1.RequireManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: RequireManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_RequireManyByType__2_System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.RequireManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: RequireManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.RequireManyByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).RequireManyByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn>.RequireManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).RequireManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`1.Rule*
  name: Rule
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Rule_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.Rule
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Rule
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Rule
  nameWithType: GeneralTransformationRule<TIn>.Rule
  nameWithType.vb: GeneralTransformationRule(Of TIn).Rule
- uid: NMF.Transformations.GeneralTransformationRule`1.Rule``1
  name: Rule<TRule>()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_Rule__1
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.Rule<TRule>()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).Rule(Of TRule)()
  nameWithType: GeneralTransformationRule<TIn>.Rule<TRule>()
  nameWithType.vb: GeneralTransformationRule(Of TIn).Rule(Of TRule)()
- uid: NMF.Transformations.GeneralTransformationRule`1.ToString
  name: ToString()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_ToString
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.ToString
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.ToString()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).ToString()
  nameWithType: GeneralTransformationRule<TIn>.ToString()
  nameWithType.vb: GeneralTransformationRule(Of TIn).ToString()
- uid: NMF.Transformations.GeneralTransformationRule`1.ToString*
  name: ToString
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_ToString_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.ToString
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.ToString
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).ToString
  nameWithType: GeneralTransformationRule<TIn>.ToString
  nameWithType.vb: GeneralTransformationRule(Of TIn).ToString
- uid: NMF.Transformations.GeneralTransformationRule`1.TraceInput*
  name: TraceInput
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_TraceInput_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.TraceInput
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.TraceInput
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).TraceInput
  nameWithType: GeneralTransformationRule<TIn>.TraceInput
  nameWithType.vb: GeneralTransformationRule(Of TIn).TraceInput
- uid: NMF.Transformations.GeneralTransformationRule`1.TraceInput``1(NMF.Transformations.TraceEntryGroup{``0,`0},System.Func{`0,``0})
  name: TraceInput<TKey>(TraceEntryGroup<TKey, TIn>, Func<TIn, TKey>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_TraceInput__1_NMF_Transformations_TraceEntryGroup___0__0__System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.TraceInput``1(NMF.Transformations.TraceEntryGroup{``0,`0},System.Func{`0,``0})
  name.vb: TraceInput(Of TKey)(TraceEntryGroup(Of TKey, TIn), Func(Of TIn, TKey))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.TraceInput<TKey>(NMF.Transformations.TraceEntryGroup<TKey, TIn>, System.Func<TIn, TKey>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).TraceInput(Of TKey)(NMF.Transformations.TraceEntryGroup(Of TKey, TIn), System.Func(Of TIn, TKey))
  nameWithType: GeneralTransformationRule<TIn>.TraceInput<TKey>(TraceEntryGroup<TKey, TIn>, Func<TIn, TKey>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).TraceInput(Of TKey)(TraceEntryGroup(Of TKey, TIn), Func(Of TIn, TKey))
- uid: NMF.Transformations.GeneralTransformationRule`1.TraceInput``1(System.Func{`0,``0})
  name: TraceInput<TKey>(Func<TIn, TKey>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_TraceInput__1_System_Func__0___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.TraceInput``1(System.Func{`0,``0})
  name.vb: TraceInput(Of TKey)(Func(Of TIn, TKey))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.TraceInput<TKey>(System.Func<TIn, TKey>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).TraceInput(Of TKey)(System.Func(Of TIn, TKey))
  nameWithType: GeneralTransformationRule<TIn>.TraceInput<TKey>(Func<TIn, TKey>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).TraceInput(Of TKey)(Func(Of TIn, TKey))
- uid: NMF.Transformations.GeneralTransformationRule`1.WithPattern(NMF.Transformations.ITransformationRulePattern{`0})
  name: WithPattern(ITransformationRulePattern<TIn>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_WithPattern_NMF_Transformations_ITransformationRulePattern__0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.WithPattern(NMF.Transformations.ITransformationRulePattern{`0})
  name.vb: WithPattern(ITransformationRulePattern(Of TIn))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.WithPattern(NMF.Transformations.ITransformationRulePattern<TIn>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).WithPattern(NMF.Transformations.ITransformationRulePattern(Of TIn))
  nameWithType: GeneralTransformationRule<TIn>.WithPattern(ITransformationRulePattern<TIn>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).WithPattern(ITransformationRulePattern(Of TIn))
- uid: NMF.Transformations.GeneralTransformationRule`1.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{`0}})
  name: WithPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_WithPattern_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{`0}})
  name.vb: WithPattern(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.WithPattern(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).WithPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.WithPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).WithPattern(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{`0}})
  name: WithPattern(Func<ITransformationContext, IEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_WithPattern_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`1.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{`0}})
  name.vb: WithPattern(Func(Of ITransformationContext, IEnumerable(Of TIn)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.WithPattern(System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).WithPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of TIn)))
  nameWithType: GeneralTransformationRule<TIn>.WithPattern(Func<ITransformationContext, IEnumerable<TIn>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn).WithPattern(Func(Of ITransformationContext, IEnumerable(Of TIn)))
- uid: NMF.Transformations.GeneralTransformationRule`1.WithPattern*
  name: WithPattern
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-1.html#NMF_Transformations_GeneralTransformationRule_1_WithPattern_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`1.WithPattern
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn>.WithPattern
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn).WithPattern
  nameWithType: GeneralTransformationRule<TIn>.WithPattern
  nameWithType.vb: GeneralTransformationRule(Of TIn).WithPattern
- uid: NMF.Transformations.GeneralTransformationRule`2
  name: GeneralTransformationRule<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html
  commentId: T:NMF.Transformations.GeneralTransformationRule`2
  name.vb: GeneralTransformationRule(Of TIn1, TIn2)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2)
  nameWithType: GeneralTransformationRule<TIn1, TIn2>
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2)
- uid: NMF.Transformations.GeneralTransformationRule`2.Call(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Object[]})
  name: Call(GeneralTransformationRule, Func<TIn1, TIn2, Object[]>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0__1_System_Object____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Call(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Object[]})
  name.vb: Call(GeneralTransformationRule, Func(Of TIn1, TIn2, Object()))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn1, TIn2, System.Object[]>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn1, TIn2, System.Object()))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call(GeneralTransformationRule, Func<TIn1, TIn2, Object[]>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call(GeneralTransformationRule, Func(Of TIn1, TIn2, Object()))
- uid: NMF.Transformations.GeneralTransformationRule`2.Call(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name: Call(GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call_NMF_Transformations_GeneralTransformationRule__0__1__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Call(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name.vb: Call(GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call(NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call(NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call(GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call(GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.Call*
  name: Call
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.Call
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call
- uid: NMF.Transformations.GeneralTransformationRule`2.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name: Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Call``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name.vb: Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`2.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1})
  name: Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call__2_NMF_Transformations_GeneralTransformationRule___0___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`2.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Call__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Call``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Call<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Call(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallByType*
  name: CallByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallByType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallByType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallByType
- uid: NMF.Transformations.GeneralTransformationRule`2.CallByType``1(System.Func{`0,`1,``0})
  name: CallByType<TRequiredInput>(Func<TIn1, TIn2, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallByType__1_System_Func__0__1___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallByType``1(System.Func{`0,`1,``0})
  name.vb: CallByType(Of TRequiredInput)(Func(Of TIn1, TIn2, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput>(System.Func<TIn1, TIn2, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput)(System.Func(Of TIn1, TIn2, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput>(Func<TIn1, TIn2, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput)(Func(Of TIn1, TIn2, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallByType``2
  name: CallByType<TRequiredInput1, TRequiredInput2>()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallByType__2
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallByType``2
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2)()
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput1, TRequiredInput2>()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput1, TRequiredInput2)()
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput1, TRequiredInput2>()
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput1, TRequiredInput2)()
- uid: NMF.Transformations.GeneralTransformationRule`2.CallByType``2(System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: CallByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallByType__2_System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallByType``2(System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Tuple{`0,`1}},System.Boolean)
  name: CallFor(GeneralTransformationRule, Func<Computation, Tuple<TIn1, TIn2>>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Tuple__0__1___System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Tuple{`0,`1}},System.Boolean)
  name.vb: CallFor(GeneralTransformationRule, Func(Of Computation, Tuple(Of TIn1, TIn2)), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Tuple<TIn1, TIn2>>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Tuple(Of TIn1, TIn2)), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor(GeneralTransformationRule, Func<Computation, Tuple<TIn1, TIn2>>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(GeneralTransformationRule, Func(Of Computation, Tuple(Of TIn1, TIn2)), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Tuple{`0,`1}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name: CallFor(GeneralTransformationRule, Func<Computation, Tuple<TIn1, TIn2>>, Predicate<Computation>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Tuple__0__1___System_Predicate_NMF_Transformations_Core_Computation__System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Tuple{`0,`1}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name.vb: CallFor(GeneralTransformationRule, Func(Of Computation, Tuple(Of TIn1, TIn2)), Predicate(Of Computation), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Tuple<TIn1, TIn2>>, System.Predicate<NMF.Transformations.Core.Computation>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Tuple(Of TIn1, TIn2)), System.Predicate(Of NMF.Transformations.Core.Computation), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor(GeneralTransformationRule, Func<Computation, Tuple<TIn1, TIn2>>, Predicate<Computation>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(GeneralTransformationRule, Func(Of Computation, Tuple(Of TIn1, TIn2)), Predicate(Of Computation), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor*
  name: CallFor
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallFor
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Func{``0,`1})
  name: CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0__0__System_Func___0__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Func{``0,`1})
  name.vb: CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean})
  name: CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0__0__System_Func___0__1__System_Func___0_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean})
  name.vb: CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Func<TRequiredInput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Func(Of TRequiredInput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``1(System.Func{``0,`0},System.Func{``0,`1})
  name: CallFor<TRequiredInput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__1_System_Func___0__0__System_Func___0__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``1(System.Func{``0,`0},System.Func{``0,`1})
  name.vb: CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``1(System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean})
  name: CallFor<TRequiredInput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__1_System_Func___0__0__System_Func___0__1__System_Func___0_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``1(System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean})
  name.vb: CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Func<TRequiredInput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Func(Of TRequiredInput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name: CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1__0__System_Func___0___1__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name: CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__2_System_Func___0___1__0__System_Func___0___1__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallFor__2_System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallFor``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallFor<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallFor(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Boolean)
  name: CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<Tuple<TIn1, TIn2>>>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Boolean)
  name.vb: CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of Tuple(Of TIn1, TIn2))), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<Tuple<TIn1, TIn2>>>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of Tuple(Of TIn1, TIn2))), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name: CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<Tuple<TIn1, TIn2>>>, Predicate<Computation>, Boolean)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach_NMF_Transformations_Core_GeneralTransformationRule_System_Func_NMF_Transformations_Core_Computation_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Predicate_NMF_Transformations_Core_Computation__System_Boolean_
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach(NMF.Transformations.Core.GeneralTransformationRule,System.Func{NMF.Transformations.Core.Computation,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Predicate{NMF.Transformations.Core.Computation},System.Boolean)
  name.vb: CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of Tuple(Of TIn1, TIn2))), Predicate(Of Computation), Boolean)
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func<NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Predicate<NMF.Transformations.Core.Computation>, System.Boolean)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of NMF.Transformations.Core.Computation, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Predicate(Of NMF.Transformations.Core.Computation), System.Boolean)
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach(GeneralTransformationRule, Func<Computation, IEnumerable<Tuple<TIn1, TIn2>>>, Predicate<Computation>, Boolean)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(GeneralTransformationRule, Func(Of Computation, IEnumerable(Of Tuple(Of TIn1, TIn2))), Predicate(Of Computation), Boolean)
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach*
  name: CallForEach
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallForEach
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean})
  name: CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__1_NMF_Transformations_GeneralTransformationRule___0__System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__1_System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean})
  name: CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__1_System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``1(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__2_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name: CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEach__2_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEach``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEach<TRequiredInput1, TRequiredInput2>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEach(Of TRequiredInput1, TRequiredInput2)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive*
  name: CallForEachOutputSensitive
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__2_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__2_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``2(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,``2,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__3_System_Func___0___1___2_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,``2,System.Boolean})
  name: CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForEachOutputSensitive__3_System_Func___0___1___2_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForEachOutputSensitive``3(System.Func{``0,``1,``2,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForEachOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForEachOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive*
  name: CallForOutputSensitive
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1__0__System_Func___0___1__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, TIn1>, System.Func<TRequiredInput, TRequiredOutput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, TIn1), System.Func(Of TRequiredInput, TRequiredOutput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TRequiredOutput, TIn1>, System.Func<TRequiredInput, TRequiredOutput, TIn2>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TRequiredOutput, TIn1), System.Func(Of TRequiredInput, TRequiredOutput, TIn2), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__2_System_Func___0___1__0__System_Func___0___1__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, TIn1>, System.Func<TRequiredInput, TRequiredOutput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, TIn1), System.Func(Of TRequiredInput, TRequiredOutput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__2_System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``2(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2), Func(Of TRequiredInput, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TRequiredOutput, TIn1>, System.Func<TRequiredInput, TRequiredOutput, TIn2>, System.Func<TRequiredInput, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TRequiredOutput, TIn1), System.Func(Of TRequiredInput, TRequiredOutput, TIn2), System.Func(Of TRequiredInput, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TRequiredOutput, TIn1>, Func<TRequiredInput, TRequiredOutput, TIn2>, Func<TRequiredInput, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TRequiredOutput, TIn1), Func(Of TRequiredInput, TRequiredOutput, TIn2), Func(Of TRequiredInput, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2__0__System_Func___0___1___2__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1},System.Func{``0,``1,``2,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1___2__0__System_Func___0___1___2__1__System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__3_System_Func___0___1___2__0__System_Func___0___1___2__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1},System.Func{``0,``1,``2,System.Boolean})
  name: CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallForOutputSensitive__3_System_Func___0___1___2__0__System_Func___0___1___2__1__System_Func___0___1___2_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallForOutputSensitive``3(System.Func{``0,``1,``2,`0},System.Func{``0,``1,``2,`1},System.Func{``0,``1,``2,System.Boolean})
  name.vb: CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallForOutputSensitive<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2>, Func<TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallForOutputSensitive(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, TIn2), Func(Of TRequiredInput1, TRequiredInput2, TRequiredOutput, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Object[]}})
  name: CallMany(GeneralTransformationRule, Func<TIn1, TIn2, IEnumerable<Object[]>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallMany_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: CallMany(GeneralTransformationRule, Func(Of TIn1, TIn2, IEnumerable(Of Object())))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallMany(GeneralTransformationRule, Func<TIn1, TIn2, IEnumerable<Object[]>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallMany(GeneralTransformationRule, Func(Of TIn1, TIn2, IEnumerable(Of Object())))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallMany*
  name: CallMany
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallMany_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallMany
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallMany
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallMany
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallMany
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallMany
- uid: NMF.Transformations.GeneralTransformationRule`2.CallMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name: CallMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallMany__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallMany<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallMany(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallMany__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallMany<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallMany(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallManyByType*
  name: CallManyByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallManyByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.CallManyByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallManyByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallManyByType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallManyByType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallManyByType
- uid: NMF.Transformations.GeneralTransformationRule`2.CallManyByType``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name: CallManyByType<TRequiredInput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallManyByType__1_System_Func__0__1_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallManyByType``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallManyByType(Of TRequiredInput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallManyByType<TRequiredInput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallManyByType(Of TRequiredInput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallManyByType<TRequiredInput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallManyByType(Of TRequiredInput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`2.CallManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_CallManyByType__2_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.CallManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.CallManyByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).CallManyByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.CallManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).CallManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.InputType
  name: InputType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_InputType
  commentId: P:NMF.Transformations.GeneralTransformationRule`2.InputType
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.InputType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).InputType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.InputType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).InputType
- uid: NMF.Transformations.GeneralTransformationRule`2.InputType*
  name: InputType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_InputType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.InputType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.InputType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).InputType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.InputType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).InputType
- uid: NMF.Transformations.GeneralTransformationRule`2.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Boolean})
  name: MarkInstantiatingFor(GeneralTransformationRule, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Boolean})
  name.vb: MarkInstantiatingFor(GeneralTransformationRule, Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.MarkInstantiatingFor(GeneralTransformationRule, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).MarkInstantiatingFor(GeneralTransformationRule, Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.MarkInstantiatingFor
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).MarkInstantiatingFor
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.MarkInstantiatingFor
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).MarkInstantiatingFor
- uid: NMF.Transformations.GeneralTransformationRule`2.Require(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Object[]})
  name: Require(GeneralTransformationRule, Func<TIn1, TIn2, Object[]>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Require_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0__1_System_Object____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Require(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Object[]})
  name.vb: Require(GeneralTransformationRule, Func(Of TIn1, TIn2, Object()))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Require(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn1, TIn2, System.Object[]>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Require(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn1, TIn2, System.Object()))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Require(GeneralTransformationRule, Func<TIn1, TIn2, Object[]>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Require(GeneralTransformationRule, Func(Of TIn1, TIn2, Object()))
- uid: NMF.Transformations.GeneralTransformationRule`2.Require(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name: Require(GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Require_NMF_Transformations_GeneralTransformationRule__0__1__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Require(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name.vb: Require(GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Require(NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Require(NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Require(GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Require(GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.GeneralTransformationRule`2.Require*
  name: Require
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Require_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.Require
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Require
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Require
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Require
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Require
- uid: NMF.Transformations.GeneralTransformationRule`2.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name: Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Require__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Require``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name.vb: Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Require<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Require(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Require<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Require(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`2.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Require__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Require``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Require<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Require(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Require<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Require(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireByType*
  name: RequireByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.RequireByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireByType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireByType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireByType
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireByType``1(System.Func{`0,`1,``0})
  name: RequireByType<TRequiredInput>(Func<TIn1, TIn2, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireByType__1_System_Func__0__1___0__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireByType``1(System.Func{`0,`1,``0})
  name.vb: RequireByType(Of TRequiredInput)(Func(Of TIn1, TIn2, TRequiredInput))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput>(System.Func<TIn1, TIn2, TRequiredInput>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput)(System.Func(Of TIn1, TIn2, TRequiredInput))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput>(Func<TIn1, TIn2, TRequiredInput>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput)(Func(Of TIn1, TIn2, TRequiredInput))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireByType``2
  name: RequireByType<TRequiredInput1, TRequiredInput2>()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireByType__2
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireByType``2
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2)()
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput1, TRequiredInput2>()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput1, TRequiredInput2)()
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput1, TRequiredInput2>()
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput1, TRequiredInput2)()
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireByType``2(System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: RequireByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireByType__2_System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireByType``2(System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Object[]}})
  name: RequireMany(GeneralTransformationRule, Func<TIn1, TIn2, IEnumerable<Object[]>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireMany_NMF_Transformations_Core_GeneralTransformationRule_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireMany(NMF.Transformations.Core.GeneralTransformationRule,System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: RequireMany(GeneralTransformationRule, Func(Of TIn1, TIn2, IEnumerable(Of Object())))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireMany(NMF.Transformations.Core.GeneralTransformationRule, System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireMany(GeneralTransformationRule, Func<TIn1, TIn2, IEnumerable<Object[]>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireMany(GeneralTransformationRule, Func(Of TIn1, TIn2, IEnumerable(Of Object())))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireMany*
  name: RequireMany
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireMany_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.RequireMany
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireMany
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireMany
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireMany
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireMany
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name: RequireMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireMany__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireMany``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name.vb: RequireMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireMany<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireMany(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireMany<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireMany(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: RequireMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireMany__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireMany``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: RequireMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireMany<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireMany(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireMany<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireMany(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireManyByType*
  name: RequireManyByType
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireManyByType_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.RequireManyByType
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireManyByType
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireManyByType
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireManyByType``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name: RequireManyByType<TRequiredInput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireManyByType__1_System_Func__0__1_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireManyByType``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name.vb: RequireManyByType(Of TRequiredInput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireManyByType<TRequiredInput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType(Of TRequiredInput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireManyByType<TRequiredInput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType(Of TRequiredInput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.GeneralTransformationRule`2.RequireManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: RequireManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_RequireManyByType__2_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.RequireManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: RequireManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.RequireManyByType<TRequiredInput1, TRequiredInput2>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.RequireManyByType<TRequiredInput1, TRequiredInput2>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).RequireManyByType(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.Rule*
  name: Rule
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Rule_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.Rule
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Rule
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Rule
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Rule
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Rule
- uid: NMF.Transformations.GeneralTransformationRule`2.Rule``1
  name: Rule<TRule>()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_Rule__1
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.Rule<TRule>()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).Rule(Of TRule)()
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.Rule<TRule>()
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).Rule(Of TRule)()
- uid: NMF.Transformations.GeneralTransformationRule`2.ToString
  name: ToString()
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_ToString
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.ToString
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.ToString()
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).ToString()
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.ToString()
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).ToString()
- uid: NMF.Transformations.GeneralTransformationRule`2.ToString*
  name: ToString
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_ToString_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.ToString
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.ToString
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).ToString
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.ToString
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).ToString
- uid: NMF.Transformations.GeneralTransformationRule`2.WithPattern(NMF.Transformations.ITransformationRulePattern{`0,`1})
  name: WithPattern(ITransformationRulePattern<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_WithPattern_NMF_Transformations_ITransformationRulePattern__0__1__
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.WithPattern(NMF.Transformations.ITransformationRulePattern{`0,`1})
  name.vb: WithPattern(ITransformationRulePattern(Of TIn1, TIn2))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.WithPattern(NMF.Transformations.ITransformationRulePattern<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).WithPattern(NMF.Transformations.ITransformationRulePattern(Of TIn1, TIn2))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.WithPattern(ITransformationRulePattern<TIn1, TIn2>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).WithPattern(ITransformationRulePattern(Of TIn1, TIn2))
- uid: NMF.Transformations.GeneralTransformationRule`2.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{System.Tuple{`0,`1}}})
  name: WithPattern(Func<ITransformationContext, INotifyEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_WithPattern_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{System.Tuple{`0,`1}}})
  name.vb: WithPattern(Func(Of ITransformationContext, INotifyEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.WithPattern(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).WithPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.WithPattern(Func<ITransformationContext, INotifyEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).WithPattern(Func(Of ITransformationContext, INotifyEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: WithPattern(Func<ITransformationContext, IEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_WithPattern_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.GeneralTransformationRule`2.WithPattern(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: WithPattern(Func(Of ITransformationContext, IEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.WithPattern(System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).WithPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.WithPattern(Func<ITransformationContext, IEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).WithPattern(Func(Of ITransformationContext, IEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.GeneralTransformationRule`2.WithPattern*
  name: WithPattern
  href: api/Transformations/NMF.Transformations.GeneralTransformationRule-2.html#NMF_Transformations_GeneralTransformationRule_2_WithPattern_
  commentId: Overload:NMF.Transformations.GeneralTransformationRule`2.WithPattern
  isSpec: "True"
  fullName: NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>.WithPattern
  fullName.vb: NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2).WithPattern
  nameWithType: GeneralTransformationRule<TIn1, TIn2>.WithPattern
  nameWithType.vb: GeneralTransformationRule(Of TIn1, TIn2).WithPattern
- uid: NMF.Transformations.InPlaceComputation
  name: InPlaceComputation
  href: api/Transformations/NMF.Transformations.InPlaceComputation.html
  commentId: T:NMF.Transformations.InPlaceComputation
  fullName: NMF.Transformations.InPlaceComputation
  nameWithType: InPlaceComputation
- uid: NMF.Transformations.InPlaceComputation.#ctor(NMF.Transformations.InPlaceTransformationRuleBase,NMF.Transformations.Core.IComputationContext,System.Object[])
  name: InPlaceComputation(InPlaceTransformationRuleBase, IComputationContext, Object[])
  href: api/Transformations/NMF.Transformations.InPlaceComputation.html#NMF_Transformations_InPlaceComputation__ctor_NMF_Transformations_InPlaceTransformationRuleBase_NMF_Transformations_Core_IComputationContext_System_Object___
  commentId: M:NMF.Transformations.InPlaceComputation.#ctor(NMF.Transformations.InPlaceTransformationRuleBase,NMF.Transformations.Core.IComputationContext,System.Object[])
  name.vb: InPlaceComputation(InPlaceTransformationRuleBase, IComputationContext, Object())
  fullName: NMF.Transformations.InPlaceComputation.InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase, NMF.Transformations.Core.IComputationContext, System.Object[])
  fullName.vb: NMF.Transformations.InPlaceComputation.InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase, NMF.Transformations.Core.IComputationContext, System.Object())
  nameWithType: InPlaceComputation.InPlaceComputation(InPlaceTransformationRuleBase, IComputationContext, Object[])
  nameWithType.vb: InPlaceComputation.InPlaceComputation(InPlaceTransformationRuleBase, IComputationContext, Object())
- uid: NMF.Transformations.InPlaceComputation.#ctor*
  name: InPlaceComputation
  href: api/Transformations/NMF.Transformations.InPlaceComputation.html#NMF_Transformations_InPlaceComputation__ctor_
  commentId: Overload:NMF.Transformations.InPlaceComputation.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceComputation.InPlaceComputation
  nameWithType: InPlaceComputation.InPlaceComputation
- uid: NMF.Transformations.InPlaceComputation`1
  name: InPlaceComputation<TIn>
  href: api/Transformations/NMF.Transformations.InPlaceComputation-1.html
  commentId: T:NMF.Transformations.InPlaceComputation`1
  name.vb: InPlaceComputation(Of TIn)
  fullName: NMF.Transformations.InPlaceComputation<TIn>
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn)
  nameWithType: InPlaceComputation<TIn>
  nameWithType.vb: InPlaceComputation(Of TIn)
- uid: NMF.Transformations.InPlaceComputation`1.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0},NMF.Transformations.Core.IComputationContext,`0)
  name: InPlaceComputation(InPlaceTransformationRuleBase<TIn>, IComputationContext, TIn)
  href: api/Transformations/NMF.Transformations.InPlaceComputation-1.html#NMF_Transformations_InPlaceComputation_1__ctor_NMF_Transformations_InPlaceTransformationRuleBase__0__NMF_Transformations_Core_IComputationContext__0_
  commentId: M:NMF.Transformations.InPlaceComputation`1.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0},NMF.Transformations.Core.IComputationContext,`0)
  name.vb: InPlaceComputation(InPlaceTransformationRuleBase(Of TIn), IComputationContext, TIn)
  fullName: NMF.Transformations.InPlaceComputation<TIn>.InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase<TIn>, NMF.Transformations.Core.IComputationContext, TIn)
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn).InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase(Of TIn), NMF.Transformations.Core.IComputationContext, TIn)
  nameWithType: InPlaceComputation<TIn>.InPlaceComputation(InPlaceTransformationRuleBase<TIn>, IComputationContext, TIn)
  nameWithType.vb: InPlaceComputation(Of TIn).InPlaceComputation(InPlaceTransformationRuleBase(Of TIn), IComputationContext, TIn)
- uid: NMF.Transformations.InPlaceComputation`1.#ctor*
  name: InPlaceComputation
  href: api/Transformations/NMF.Transformations.InPlaceComputation-1.html#NMF_Transformations_InPlaceComputation_1__ctor_
  commentId: Overload:NMF.Transformations.InPlaceComputation`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceComputation<TIn>.InPlaceComputation
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn).InPlaceComputation
  nameWithType: InPlaceComputation<TIn>.InPlaceComputation
  nameWithType.vb: InPlaceComputation(Of TIn).InPlaceComputation
- uid: NMF.Transformations.InPlaceComputation`2
  name: InPlaceComputation<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.InPlaceComputation-2.html
  commentId: T:NMF.Transformations.InPlaceComputation`2
  name.vb: InPlaceComputation(Of TIn1, TIn2)
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2)
  nameWithType: InPlaceComputation<TIn1, TIn2>
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2)
- uid: NMF.Transformations.InPlaceComputation`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  name: InPlaceComputation(InPlaceTransformationRuleBase<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  href: api/Transformations/NMF.Transformations.InPlaceComputation-2.html#NMF_Transformations_InPlaceComputation_2__ctor_NMF_Transformations_InPlaceTransformationRuleBase__0__1__NMF_Transformations_Core_IComputationContext__0__1_
  commentId: M:NMF.Transformations.InPlaceComputation`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0,`1)
  name.vb: InPlaceComputation(InPlaceTransformationRuleBase(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>.InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>, NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2).InPlaceComputation(NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2), NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  nameWithType: InPlaceComputation<TIn1, TIn2>.InPlaceComputation(InPlaceTransformationRuleBase<TIn1, TIn2>, IComputationContext, TIn1, TIn2)
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2).InPlaceComputation(InPlaceTransformationRuleBase(Of TIn1, TIn2), IComputationContext, TIn1, TIn2)
- uid: NMF.Transformations.InPlaceComputation`2.#ctor*
  name: InPlaceComputation
  href: api/Transformations/NMF.Transformations.InPlaceComputation-2.html#NMF_Transformations_InPlaceComputation_2__ctor_
  commentId: Overload:NMF.Transformations.InPlaceComputation`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceComputation<TIn1, TIn2>.InPlaceComputation
  fullName.vb: NMF.Transformations.InPlaceComputation(Of TIn1, TIn2).InPlaceComputation
  nameWithType: InPlaceComputation<TIn1, TIn2>.InPlaceComputation
  nameWithType.vb: InPlaceComputation(Of TIn1, TIn2).InPlaceComputation
- uid: NMF.Transformations.InPlaceTransformationRule
  name: InPlaceTransformationRule
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html
  commentId: T:NMF.Transformations.InPlaceTransformationRule
  fullName: NMF.Transformations.InPlaceTransformationRule
  nameWithType: InPlaceTransformationRule
- uid: NMF.Transformations.InPlaceTransformationRule.#ctor
  name: InPlaceTransformationRule()
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule__ctor
  commentId: M:NMF.Transformations.InPlaceTransformationRule.#ctor
  fullName: NMF.Transformations.InPlaceTransformationRule.InPlaceTransformationRule()
  nameWithType: InPlaceTransformationRule.InPlaceTransformationRule()
- uid: NMF.Transformations.InPlaceTransformationRule.#ctor*
  name: InPlaceTransformationRule
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule__ctor_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule.InPlaceTransformationRule
  nameWithType: InPlaceTransformationRule.InPlaceTransformationRule
- uid: NMF.Transformations.InPlaceTransformationRule.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule.CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: InPlaceTransformationRule.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: InPlaceTransformationRule.CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.InPlaceTransformationRule.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_CreateComputation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule.CreateComputation
  nameWithType: InPlaceTransformationRule.CreateComputation
- uid: NMF.Transformations.InPlaceTransformationRule.Init(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name: Init(Object[], ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_Init_System_Object___NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule.Init(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name.vb: Init(Object(), ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule.Init(System.Object[], NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule.Init(System.Object(), NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule.Init(Object[], ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule.Init(Object(), ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule.Init*
  name: Init
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_Init_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule.Init
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule.Init
  nameWithType: InPlaceTransformationRule.Init
- uid: NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule.NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule.NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule.NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule.Transform(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name: Transform(Object[], ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_Transform_System_Object___NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule.Transform(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name.vb: Transform(Object(), ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule.Transform(System.Object[], NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule.Transform(System.Object(), NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule.Transform(Object[], ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule.Transform(Object(), ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule.html#NMF_Transformations_InPlaceTransformationRule_Transform_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule.Transform
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule.Transform
  nameWithType: InPlaceTransformationRule.Transform
- uid: NMF.Transformations.InPlaceTransformationRule`1
  name: InPlaceTransformationRule<TIn>
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html
  commentId: T:NMF.Transformations.InPlaceTransformationRule`1
  name.vb: InPlaceTransformationRule(Of TIn)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn)
  nameWithType: InPlaceTransformationRule<TIn>
  nameWithType.vb: InPlaceTransformationRule(Of TIn)
- uid: NMF.Transformations.InPlaceTransformationRule`1.#ctor
  name: InPlaceTransformationRule()
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1__ctor
  commentId: M:NMF.Transformations.InPlaceTransformationRule`1.#ctor
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.InPlaceTransformationRule()
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).InPlaceTransformationRule()
  nameWithType: InPlaceTransformationRule<TIn>.InPlaceTransformationRule()
  nameWithType.vb: InPlaceTransformationRule(Of TIn).InPlaceTransformationRule()
- uid: NMF.Transformations.InPlaceTransformationRule`1.#ctor*
  name: InPlaceTransformationRule
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1__ctor_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.InPlaceTransformationRule
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).InPlaceTransformationRule
  nameWithType: InPlaceTransformationRule<TIn>.InPlaceTransformationRule
  nameWithType.vb: InPlaceTransformationRule(Of TIn).InPlaceTransformationRule
- uid: NMF.Transformations.InPlaceTransformationRule`1.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`1.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: InPlaceTransformationRule<TIn>.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn).CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`1.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_CreateComputation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`1.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.CreateComputation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).CreateComputation
  nameWithType: InPlaceTransformationRule<TIn>.CreateComputation
  nameWithType.vb: InPlaceTransformationRule(Of TIn).CreateComputation
- uid: NMF.Transformations.InPlaceTransformationRule`1.Init(`0,NMF.Transformations.Core.ITransformationContext)
  name: Init(TIn, ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_Init__0_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`1.Init(`0,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.Init(TIn, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).Init(TIn, NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule<TIn>.Init(TIn, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn).Init(TIn, ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`1.Init*
  name: Init
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_Init_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`1.Init
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.Init
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).Init
  nameWithType: InPlaceTransformationRule<TIn>.Init
  nameWithType.vb: InPlaceTransformationRule(Of TIn).Init
- uid: NMF.Transformations.InPlaceTransformationRule`1.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.InPlaceTransformationRule`1.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule<TIn>.NeedDependenciesForOutputCreation
  nameWithType.vb: InPlaceTransformationRule(Of TIn).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule`1.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`1.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule<TIn>.NeedDependenciesForOutputCreation
  nameWithType.vb: InPlaceTransformationRule(Of TIn).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule`1.Transform(`0,NMF.Transformations.Core.ITransformationContext)
  name: Transform(TIn, ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_Transform__0_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`1.Transform(`0,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.Transform(TIn, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).Transform(TIn, NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule<TIn>.Transform(TIn, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn).Transform(TIn, ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`1.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-1.html#NMF_Transformations_InPlaceTransformationRule_1_Transform_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`1.Transform
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn>.Transform
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn).Transform
  nameWithType: InPlaceTransformationRule<TIn>.Transform
  nameWithType.vb: InPlaceTransformationRule(Of TIn).Transform
- uid: NMF.Transformations.InPlaceTransformationRule`2
  name: InPlaceTransformationRule<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html
  commentId: T:NMF.Transformations.InPlaceTransformationRule`2
  name.vb: InPlaceTransformationRule(Of TIn1, TIn2)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2)
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2)
- uid: NMF.Transformations.InPlaceTransformationRule`2.#ctor
  name: InPlaceTransformationRule()
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2__ctor
  commentId: M:NMF.Transformations.InPlaceTransformationRule`2.#ctor
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.InPlaceTransformationRule()
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).InPlaceTransformationRule()
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.InPlaceTransformationRule()
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).InPlaceTransformationRule()
- uid: NMF.Transformations.InPlaceTransformationRule`2.#ctor*
  name: InPlaceTransformationRule
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2__ctor_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.InPlaceTransformationRule
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).InPlaceTransformationRule
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.InPlaceTransformationRule
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).InPlaceTransformationRule
- uid: NMF.Transformations.InPlaceTransformationRule`2.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`2.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`2.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_CreateComputation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`2.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.CreateComputation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).CreateComputation
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.CreateComputation
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).CreateComputation
- uid: NMF.Transformations.InPlaceTransformationRule`2.Init(`0,`1,NMF.Transformations.Core.ITransformationContext)
  name: Init(TIn1, TIn2, ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_Init__0__1_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`2.Init(`0,`1,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.Init(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).Init(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.Init(TIn1, TIn2, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).Init(TIn1, TIn2, ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`2.Init*
  name: Init
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_Init_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`2.Init
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.Init
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).Init
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.Init
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).Init
- uid: NMF.Transformations.InPlaceTransformationRule`2.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.InPlaceTransformationRule`2.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.NeedDependenciesForOutputCreation
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule`2.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`2.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).NeedDependenciesForOutputCreation
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.NeedDependenciesForOutputCreation
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.InPlaceTransformationRule`2.Transform(`0,`1,NMF.Transformations.Core.ITransformationContext)
  name: Transform(TIn1, TIn2, ITransformationContext)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_Transform__0__1_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.InPlaceTransformationRule`2.Transform(`0,`1,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.Transform(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).Transform(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.Transform(TIn1, TIn2, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).Transform(TIn1, TIn2, ITransformationContext)
- uid: NMF.Transformations.InPlaceTransformationRule`2.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRule-2.html#NMF_Transformations_InPlaceTransformationRule_2_Transform_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRule`2.Transform
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRule<TIn1, TIn2>.Transform
  fullName.vb: NMF.Transformations.InPlaceTransformationRule(Of TIn1, TIn2).Transform
  nameWithType: InPlaceTransformationRule<TIn1, TIn2>.Transform
  nameWithType.vb: InPlaceTransformationRule(Of TIn1, TIn2).Transform
- uid: NMF.Transformations.InPlaceTransformationRuleBase
  name: InPlaceTransformationRuleBase
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase.html
  commentId: T:NMF.Transformations.InPlaceTransformationRuleBase
  fullName: NMF.Transformations.InPlaceTransformationRuleBase
  nameWithType: InPlaceTransformationRuleBase
- uid: NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name: MarkInstantiatingFor(GeneralTransformationRule, Predicate<Object[]>)
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase.html#NMF_Transformations_InPlaceTransformationRuleBase_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate_System_Object____
  commentId: M:NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name.vb: MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Object()))
  fullName: NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<System.Object[]>)
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of System.Object()))
  nameWithType: InPlaceTransformationRuleBase.MarkInstantiatingFor(GeneralTransformationRule, Predicate<Object[]>)
  nameWithType.vb: InPlaceTransformationRuleBase.MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Object()))
- uid: NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase.html#NMF_Transformations_InPlaceTransformationRuleBase_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRuleBase.MarkInstantiatingFor
  nameWithType: InPlaceTransformationRuleBase.MarkInstantiatingFor
- uid: NMF.Transformations.InPlaceTransformationRuleBase.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase.html#NMF_Transformations_InPlaceTransformationRuleBase_OutputType
  commentId: P:NMF.Transformations.InPlaceTransformationRuleBase.OutputType
  fullName: NMF.Transformations.InPlaceTransformationRuleBase.OutputType
  nameWithType: InPlaceTransformationRuleBase.OutputType
- uid: NMF.Transformations.InPlaceTransformationRuleBase.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase.html#NMF_Transformations_InPlaceTransformationRuleBase_OutputType_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRuleBase.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRuleBase.OutputType
  nameWithType: InPlaceTransformationRuleBase.OutputType
- uid: NMF.Transformations.InPlaceTransformationRuleBase`1
  name: InPlaceTransformationRuleBase<T>
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-1.html
  commentId: T:NMF.Transformations.InPlaceTransformationRuleBase`1
  name.vb: InPlaceTransformationRuleBase(Of T)
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<T>
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of T)
  nameWithType: InPlaceTransformationRuleBase<T>
  nameWithType.vb: InPlaceTransformationRuleBase(Of T)
- uid: NMF.Transformations.InPlaceTransformationRuleBase`1.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-1.html#NMF_Transformations_InPlaceTransformationRuleBase_1_OutputType
  commentId: P:NMF.Transformations.InPlaceTransformationRuleBase`1.OutputType
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<T>.OutputType
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of T).OutputType
  nameWithType: InPlaceTransformationRuleBase<T>.OutputType
  nameWithType.vb: InPlaceTransformationRuleBase(Of T).OutputType
- uid: NMF.Transformations.InPlaceTransformationRuleBase`1.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-1.html#NMF_Transformations_InPlaceTransformationRuleBase_1_OutputType_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRuleBase`1.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<T>.OutputType
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of T).OutputType
  nameWithType: InPlaceTransformationRuleBase<T>.OutputType
  nameWithType.vb: InPlaceTransformationRuleBase(Of T).OutputType
- uid: NMF.Transformations.InPlaceTransformationRuleBase`2
  name: InPlaceTransformationRuleBase<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-2.html
  commentId: T:NMF.Transformations.InPlaceTransformationRuleBase`2
  name.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2)
  nameWithType: InPlaceTransformationRuleBase<TIn1, TIn2>
  nameWithType.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2)
- uid: NMF.Transformations.InPlaceTransformationRuleBase`2.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-2.html#NMF_Transformations_InPlaceTransformationRuleBase_2_OutputType
  commentId: P:NMF.Transformations.InPlaceTransformationRuleBase`2.OutputType
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>.OutputType
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2).OutputType
  nameWithType: InPlaceTransformationRuleBase<TIn1, TIn2>.OutputType
  nameWithType.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2).OutputType
- uid: NMF.Transformations.InPlaceTransformationRuleBase`2.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.InPlaceTransformationRuleBase-2.html#NMF_Transformations_InPlaceTransformationRuleBase_2_OutputType_
  commentId: Overload:NMF.Transformations.InPlaceTransformationRuleBase`2.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>.OutputType
  fullName.vb: NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2).OutputType
  nameWithType: InPlaceTransformationRuleBase<TIn1, TIn2>.OutputType
  nameWithType.vb: InPlaceTransformationRuleBase(Of TIn1, TIn2).OutputType
- uid: NMF.Transformations.ITransformationRulePattern`1
  name: ITransformationRulePattern<TIn>
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-1.html
  commentId: T:NMF.Transformations.ITransformationRulePattern`1
  name.vb: ITransformationRulePattern(Of TIn)
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn)
  nameWithType: ITransformationRulePattern<TIn>
  nameWithType.vb: ITransformationRulePattern(Of TIn)
- uid: NMF.Transformations.ITransformationRulePattern`1.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-1.html#NMF_Transformations_ITransformationRulePattern_1_TargetRule
  commentId: P:NMF.Transformations.ITransformationRulePattern`1.TargetRule
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>.TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn).TargetRule
  nameWithType: ITransformationRulePattern<TIn>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn).TargetRule
- uid: NMF.Transformations.ITransformationRulePattern`1.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-1.html#NMF_Transformations_ITransformationRulePattern_1_TargetRule_
  commentId: Overload:NMF.Transformations.ITransformationRulePattern`1.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.ITransformationRulePattern<TIn>.TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn).TargetRule
  nameWithType: ITransformationRulePattern<TIn>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn).TargetRule
- uid: NMF.Transformations.ITransformationRulePattern`2
  name: ITransformationRulePattern<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-2.html
  commentId: T:NMF.Transformations.ITransformationRulePattern`2
  name.vb: ITransformationRulePattern(Of TIn1, TIn2)
  fullName: NMF.Transformations.ITransformationRulePattern<TIn1, TIn2>
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn1, TIn2)
  nameWithType: ITransformationRulePattern<TIn1, TIn2>
  nameWithType.vb: ITransformationRulePattern(Of TIn1, TIn2)
- uid: NMF.Transformations.ITransformationRulePattern`2.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-2.html#NMF_Transformations_ITransformationRulePattern_2_TargetRule
  commentId: P:NMF.Transformations.ITransformationRulePattern`2.TargetRule
  fullName: NMF.Transformations.ITransformationRulePattern<TIn1, TIn2>.TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn1, TIn2).TargetRule
  nameWithType: ITransformationRulePattern<TIn1, TIn2>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn1, TIn2).TargetRule
- uid: NMF.Transformations.ITransformationRulePattern`2.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.ITransformationRulePattern-2.html#NMF_Transformations_ITransformationRulePattern_2_TargetRule_
  commentId: Overload:NMF.Transformations.ITransformationRulePattern`2.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.ITransformationRulePattern<TIn1, TIn2>.TargetRule
  fullName.vb: NMF.Transformations.ITransformationRulePattern(Of TIn1, TIn2).TargetRule
  nameWithType: ITransformationRulePattern<TIn1, TIn2>.TargetRule
  nameWithType.vb: ITransformationRulePattern(Of TIn1, TIn2).TargetRule
- uid: NMF.Transformations.Linq
  name: NMF.Transformations.Linq
  href: api/Transformations/NMF.Transformations.Linq.html
  commentId: N:NMF.Transformations.Linq
  fullName: NMF.Transformations.Linq
  nameWithType: NMF.Transformations.Linq
- uid: NMF.Transformations.Linq.IncrementalExtensions
  name: IncrementalExtensions
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html
  commentId: T:NMF.Transformations.Linq.IncrementalExtensions
  fullName: NMF.Transformations.Linq.IncrementalExtensions
  nameWithType: IncrementalExtensions
- uid: NMF.Transformations.Linq.IncrementalExtensions.Select*
  name: Select
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_Select_
  commentId: Overload:NMF.Transformations.Linq.IncrementalExtensions.Select
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalExtensions.Select
  nameWithType: IncrementalExtensions.Select
- uid: NMF.Transformations.Linq.IncrementalExtensions.Select``2(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name: Select<T1, T2>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, T2>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_Select__2_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable___0___System_Linq_Expressions_Expression_System_Func___0___1___
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.Select``2(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  name.vb: Select(Of T1, T2)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, T2)))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.Select<T1, T2>(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<T1>>, System.Linq.Expressions.Expression<System.Func<T1, T2>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.Select(Of T1, T2)(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of T1)), System.Linq.Expressions.Expression(Of System.Func(Of T1, T2)))
  nameWithType: IncrementalExtensions.Select<T1, T2>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, T2>>)
  nameWithType.vb: IncrementalExtensions.Select(Of T1, T2)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, T2)))
- uid: NMF.Transformations.Linq.IncrementalExtensions.SelectMany*
  name: SelectMany
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_SelectMany_
  commentId: Overload:NMF.Transformations.Linq.IncrementalExtensions.SelectMany
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalExtensions.SelectMany
  nameWithType: IncrementalExtensions.SelectMany
- uid: NMF.Transformations.Linq.IncrementalExtensions.SelectMany``2(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{``1}}}})
  name: SelectMany<T1, T2>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, Func<ITransformationContext, IEnumerable<T2>>>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_SelectMany__2_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable___0___System_Linq_Expressions_Expression_System_Func___0_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable___1_____
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.SelectMany``2(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{``1}}}})
  name.vb: SelectMany(Of T1, T2)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, Func(Of ITransformationContext, IEnumerable(Of T2)))))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.SelectMany<T1, T2>(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<T1>>, System.Linq.Expressions.Expression<System.Func<T1, System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<T2>>>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.SelectMany(Of T1, T2)(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of T1)), System.Linq.Expressions.Expression(Of System.Func(Of T1, System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of T2)))))
  nameWithType: IncrementalExtensions.SelectMany<T1, T2>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, Func<ITransformationContext, IEnumerable<T2>>>>)
  nameWithType.vb: IncrementalExtensions.SelectMany(Of T1, T2)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, Func(Of ITransformationContext, IEnumerable(Of T2)))))
- uid: NMF.Transformations.Linq.IncrementalExtensions.SelectMany``3(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{``1}}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name: SelectMany<T1, T2, T3>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, Func<ITransformationContext, IEnumerable<T2>>>>, Expression<Func<T1, T2, T3>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_SelectMany__3_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable___0___System_Linq_Expressions_Expression_System_Func___0_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable___1_____System_Linq_Expressions_Expression_System_Func___0___1___2___
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.SelectMany``3(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{``1}}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  name.vb: SelectMany(Of T1, T2, T3)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, Func(Of ITransformationContext, IEnumerable(Of T2)))), Expression(Of Func(Of T1, T2, T3)))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.SelectMany<T1, T2, T3>(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<T1>>, System.Linq.Expressions.Expression<System.Func<T1, System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<T2>>>>, System.Linq.Expressions.Expression<System.Func<T1, T2, T3>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.SelectMany(Of T1, T2, T3)(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of T1)), System.Linq.Expressions.Expression(Of System.Func(Of T1, System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of T2)))), System.Linq.Expressions.Expression(Of System.Func(Of T1, T2, T3)))
  nameWithType: IncrementalExtensions.SelectMany<T1, T2, T3>(Func<ITransformationContext, INotifyEnumerable<T1>>, Expression<Func<T1, Func<ITransformationContext, IEnumerable<T2>>>>, Expression<Func<T1, T2, T3>>)
  nameWithType.vb: IncrementalExtensions.SelectMany(Of T1, T2, T3)(Func(Of ITransformationContext, INotifyEnumerable(Of T1)), Expression(Of Func(Of T1, Func(Of ITransformationContext, IEnumerable(Of T2)))), Expression(Of Func(Of T1, T2, T3)))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource*
  name: ToComputationSource
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource_
  commentId: Overload:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource
  nameWithType: IncrementalExtensions.ToComputationSource
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0})
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0})
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext)
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext)
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__NMF_Transformations_Core_ITransformationContext_System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, NMF.Transformations.Core.ITransformationContext, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), NMF.Transformations.Core.ITransformationContext, System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Boolean, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__NMF_Transformations_Core_ITransformationContext_System_Boolean_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Boolean, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Boolean, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Boolean, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__NMF_Transformations_Core_ITransformationContext_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, NMF.Transformations.Core.ITransformationContext, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), NMF.Transformations.Core.ITransformationContext, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, ITransformationContext, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), ITransformationContext, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Boolean)
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Boolean)
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Boolean, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__System_Boolean_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Boolean, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, System.Boolean, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), System.Boolean, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Boolean, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Boolean, Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name: ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__1_NMF_Transformations_InPlaceTransformationRuleBase___0__System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``1(NMF.Transformations.InPlaceTransformationRuleBase{``0},System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0},System.Boolean})
  name.vb: ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput>(NMF.Transformations.InPlaceTransformationRuleBase<TInput>, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput), System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput>(InPlaceTransformationRuleBase<TInput>, Func<InPlaceComputationWrapper<TInput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput)(InPlaceTransformationRuleBase(Of TInput), Func(Of InPlaceComputationWrapper(Of TInput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1})
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1})
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext)
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext)
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, NMF.Transformations.Core.ITransformationContext, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), NMF.Transformations.Core.ITransformationContext, System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Boolean, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Boolean_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Boolean, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput1, TInput2>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput1, TInput2), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Boolean, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Boolean, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, NMF.Transformations.Core.ITransformationContext, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput1, TInput2>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), NMF.Transformations.Core.ITransformationContext, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput1, TInput2), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, ITransformationContext, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), ITransformationContext, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Boolean)
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Boolean)
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Boolean, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__System_Boolean_System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Boolean,System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Boolean, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, System.Boolean, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput1, TInput2>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), System.Boolean, System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput1, TInput2), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Boolean, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Boolean, Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_InPlaceTransformationRuleBase___0___1__System_Func_NMF_Transformations_Linq_InPlaceComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.InPlaceTransformationRuleBase{``0,``1},System.Func{NMF.Transformations.Linq.InPlaceComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2>(NMF.Transformations.InPlaceTransformationRuleBase<TInput1, TInput2>, System.Func<NMF.Transformations.Linq.InPlaceComputationWrapper<TInput1, TInput2>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(NMF.Transformations.InPlaceTransformationRuleBase(Of TInput1, TInput2), System.Func(Of NMF.Transformations.Linq.InPlaceComputationWrapper(Of TInput1, TInput2), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2>(InPlaceTransformationRuleBase<TInput1, TInput2>, Func<InPlaceComputationWrapper<TInput1, TInput2>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2)(InPlaceTransformationRuleBase(Of TInput1, TInput2), Func(Of InPlaceComputationWrapper(Of TInput1, TInput2), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1})
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1})
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext)
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext)
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), NMF.Transformations.Core.ITransformationContext, System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Boolean, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Boolean_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Boolean, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Boolean, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Boolean, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__NMF_Transformations_Core_ITransformationContext_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), NMF.Transformations.Core.ITransformationContext, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, ITransformationContext, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), ITransformationContext, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Boolean)
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Boolean)
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Boolean, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__System_Boolean_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Boolean, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, System.Boolean, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), System.Boolean, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Boolean, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Boolean, Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name: ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1},System.Boolean})
  name.vb: ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput, TOutput>(NMF.Transformations.TransformationRuleBase<TInput, TOutput>, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput, TOutput), System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput, TOutput>(TransformationRuleBase<TInput, TOutput>, Func<TransformationComputationWrapper<TInput, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput, TOutput)(TransformationRuleBase(Of TInput, TOutput), Func(Of TransformationComputationWrapper(Of TInput, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext)
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext)
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__NMF_Transformations_Core_ITransformationContext_System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Boolean)
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), NMF.Transformations.Core.ITransformationContext, System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Boolean, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__NMF_Transformations_Core_ITransformationContext_System_Boolean_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1___2__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Boolean, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput1, TInput2, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), NMF.Transformations.Core.ITransformationContext, System.Boolean, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput1, TInput2, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Boolean, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Boolean, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__NMF_Transformations_Core_ITransformationContext_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1___2__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},NMF.Transformations.Core.ITransformationContext,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, NMF.Transformations.Core.ITransformationContext, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput1, TInput2, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), NMF.Transformations.Core.ITransformationContext, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput1, TInput2, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, ITransformationContext, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), ITransformationContext, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Boolean)
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Boolean)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Boolean_
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Boolean)
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Boolean)
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, System.Boolean)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), System.Boolean)
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Boolean)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Boolean)
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Boolean, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Boolean_System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1___2__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Boolean,System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Boolean, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, System.Boolean, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput1, TInput2, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), System.Boolean, System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput1, TInput2, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Boolean, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Boolean, Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name: ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_ToComputationSource__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func_NMF_Transformations_Linq_TransformationComputationWrapper___0___1___2__System_Boolean__
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{NMF.Transformations.Linq.TransformationComputationWrapper{``0,``1,``2},System.Boolean})
  name.vb: ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(NMF.Transformations.TransformationRuleBase<TInput1, TInput2, TOutput>, System.Func<NMF.Transformations.Linq.TransformationComputationWrapper<TInput1, TInput2, TOutput>, System.Boolean>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(NMF.Transformations.TransformationRuleBase(Of TInput1, TInput2, TOutput), System.Func(Of NMF.Transformations.Linq.TransformationComputationWrapper(Of TInput1, TInput2, TOutput), System.Boolean))
  nameWithType: IncrementalExtensions.ToComputationSource<TInput1, TInput2, TOutput>(TransformationRuleBase<TInput1, TInput2, TOutput>, Func<TransformationComputationWrapper<TInput1, TInput2, TOutput>, Boolean>)
  nameWithType.vb: IncrementalExtensions.ToComputationSource(Of TInput1, TInput2, TOutput)(TransformationRuleBase(Of TInput1, TInput2, TOutput), Func(Of TransformationComputationWrapper(Of TInput1, TInput2, TOutput), Boolean))
- uid: NMF.Transformations.Linq.IncrementalExtensions.Where*
  name: Where
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_Where_
  commentId: Overload:NMF.Transformations.Linq.IncrementalExtensions.Where
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalExtensions.Where
  nameWithType: IncrementalExtensions.Where
- uid: NMF.Transformations.Linq.IncrementalExtensions.Where``1(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name: Where<T>(Func<ITransformationContext, INotifyEnumerable<T>>, Expression<Func<T, Boolean>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalExtensions.html#NMF_Transformations_Linq_IncrementalExtensions_Where__1_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable___0___System_Linq_Expressions_Expression_System_Func___0_System_Boolean___
  commentId: M:NMF.Transformations.Linq.IncrementalExtensions.Where``1(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  name.vb: Where(Of T)(Func(Of ITransformationContext, INotifyEnumerable(Of T)), Expression(Of Func(Of T, Boolean)))
  fullName: NMF.Transformations.Linq.IncrementalExtensions.Where<T>(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<T>>, System.Linq.Expressions.Expression<System.Func<T, System.Boolean>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalExtensions.Where(Of T)(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of T)), System.Linq.Expressions.Expression(Of System.Func(Of T, System.Boolean)))
  nameWithType: IncrementalExtensions.Where<T>(Func<ITransformationContext, INotifyEnumerable<T>>, Expression<Func<T, Boolean>>)
  nameWithType.vb: IncrementalExtensions.Where(Of T)(Func(Of ITransformationContext, INotifyEnumerable(Of T)), Expression(Of Func(Of T, Boolean)))
- uid: NMF.Transformations.Linq.IncrementalPattern`1
  name: IncrementalPattern<TIn>
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html
  commentId: T:NMF.Transformations.Linq.IncrementalPattern`1
  name.vb: IncrementalPattern(Of TIn)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn)
  nameWithType: IncrementalPattern<TIn>
  nameWithType.vb: IncrementalPattern(Of TIn)
- uid: NMF.Transformations.Linq.IncrementalPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{`0}})
  name: IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1__ctor_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable__0___
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{`0}})
  name.vb: IncrementalPattern(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.IncrementalPattern(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<TIn>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).IncrementalPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of TIn)))
  nameWithType: IncrementalPattern<TIn>.IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<TIn>>)
  nameWithType.vb: IncrementalPattern(Of TIn).IncrementalPattern(Func(Of ITransformationContext, INotifyEnumerable(Of TIn)))
- uid: NMF.Transformations.Linq.IncrementalPattern`1.#ctor*
  name: IncrementalPattern
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1__ctor_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.IncrementalPattern
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).IncrementalPattern
  nameWithType: IncrementalPattern<TIn>.IncrementalPattern
  nameWithType.vb: IncrementalPattern(Of TIn).IncrementalPattern
- uid: NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  name: CreatePattern(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalPattern<TIn>.CreatePattern(ITransformationContext)
  nameWithType.vb: IncrementalPattern(Of TIn).CreatePattern(ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern*
  name: CreatePattern
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_CreatePattern_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.CreatePattern
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.CreatePattern
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).CreatePattern
  nameWithType: IncrementalPattern<TIn>.CreatePattern
  nameWithType.vb: IncrementalPattern(Of TIn).CreatePattern
- uid: NMF.Transformations.Linq.IncrementalPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_NMF_Transformations_Core_ITransformationRulePattern_TargetRule
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: IncrementalPattern<TIn>.ITransformationRulePattern.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule*
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_NMF_Transformations_Core_ITransformationRulePattern_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: IncrementalPattern<TIn>.ITransformationRulePattern.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  name: SourceCreator
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_SourceCreator
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).SourceCreator
  nameWithType: IncrementalPattern<TIn>.SourceCreator
  nameWithType.vb: IncrementalPattern(Of TIn).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator*
  name: SourceCreator
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_SourceCreator_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.SourceCreator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).SourceCreator
  nameWithType: IncrementalPattern<TIn>.SourceCreator
  nameWithType.vb: IncrementalPattern(Of TIn).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_TargetRule
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).TargetRule
  nameWithType: IncrementalPattern<TIn>.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`1.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-1.html#NMF_Transformations_Linq_IncrementalPattern_1_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`1.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn>.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn).TargetRule
  nameWithType: IncrementalPattern<TIn>.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn).TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`2
  name: IncrementalPattern<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html
  commentId: T:NMF.Transformations.Linq.IncrementalPattern`2
  name.vb: IncrementalPattern(Of TIn1, TIn2)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2)
  nameWithType: IncrementalPattern<TIn1, TIn2>
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2)
- uid: NMF.Transformations.Linq.IncrementalPattern`2.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{System.Tuple{`0,`1}}})
  name: IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<Tuple<TIn1, TIn2>>>)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2__ctor_System_Func_NMF_Transformations_Core_ITransformationContext_INotifyEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`2.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,INotifyEnumerable{System.Tuple{`0,`1}}})
  name.vb: IncrementalPattern(Func(Of ITransformationContext, INotifyEnumerable(Of Tuple(Of TIn1, TIn2))))
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.IncrementalPattern(System.Func<NMF.Transformations.Core.ITransformationContext, INotifyEnumerable<System.Tuple<TIn1, TIn2>>>)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).IncrementalPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, INotifyEnumerable(Of System.Tuple(Of TIn1, TIn2))))
  nameWithType: IncrementalPattern<TIn1, TIn2>.IncrementalPattern(Func<ITransformationContext, INotifyEnumerable<Tuple<TIn1, TIn2>>>)
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).IncrementalPattern(Func(Of ITransformationContext, INotifyEnumerable(Of Tuple(Of TIn1, TIn2))))
- uid: NMF.Transformations.Linq.IncrementalPattern`2.#ctor*
  name: IncrementalPattern
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.IncrementalPattern
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).IncrementalPattern
  nameWithType: IncrementalPattern<TIn1, TIn2>.IncrementalPattern
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).IncrementalPattern
- uid: NMF.Transformations.Linq.IncrementalPattern`2.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  name: CreatePattern(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.IncrementalPattern`2.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType: IncrementalPattern<TIn1, TIn2>.CreatePattern(ITransformationContext)
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).CreatePattern(ITransformationContext)
- uid: NMF.Transformations.Linq.IncrementalPattern`2.CreatePattern*
  name: CreatePattern
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_CreatePattern_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`2.CreatePattern
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.CreatePattern
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).CreatePattern
  nameWithType: IncrementalPattern<TIn1, TIn2>.CreatePattern
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).CreatePattern
- uid: NMF.Transformations.Linq.IncrementalPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_NMF_Transformations_Core_ITransformationRulePattern_TargetRule
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: IncrementalPattern<TIn1, TIn2>.ITransformationRulePattern.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule*
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_NMF_Transformations_Core_ITransformationRulePattern_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: IncrementalPattern<TIn1, TIn2>.ITransformationRulePattern.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`2.SourceCreator
  name: SourceCreator
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_SourceCreator
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`2.SourceCreator
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).SourceCreator
  nameWithType: IncrementalPattern<TIn1, TIn2>.SourceCreator
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`2.SourceCreator*
  name: SourceCreator
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_SourceCreator_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`2.SourceCreator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.SourceCreator
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).SourceCreator
  nameWithType: IncrementalPattern<TIn1, TIn2>.SourceCreator
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).SourceCreator
- uid: NMF.Transformations.Linq.IncrementalPattern`2.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_TargetRule
  commentId: P:NMF.Transformations.Linq.IncrementalPattern`2.TargetRule
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).TargetRule
  nameWithType: IncrementalPattern<TIn1, TIn2>.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).TargetRule
- uid: NMF.Transformations.Linq.IncrementalPattern`2.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.IncrementalPattern-2.html#NMF_Transformations_Linq_IncrementalPattern_2_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.IncrementalPattern`2.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.IncrementalPattern<TIn1, TIn2>.TargetRule
  fullName.vb: NMF.Transformations.Linq.IncrementalPattern(Of TIn1, TIn2).TargetRule
  nameWithType: IncrementalPattern<TIn1, TIn2>.TargetRule
  nameWithType.vb: IncrementalPattern(Of TIn1, TIn2).TargetRule
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1
  name: InPlaceComputationWrapper<TIn>
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html
  commentId: T:NMF.Transformations.Linq.InPlaceComputationWrapper`1
  name.vb: InPlaceComputationWrapper(Of TIn)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn)
  nameWithType: InPlaceComputationWrapper<TIn>
  nameWithType.vb: InPlaceComputationWrapper(Of TIn)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.#ctor(NMF.Transformations.Core.Computation)
  name: InPlaceComputationWrapper(Computation)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1__ctor_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.#ctor(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.InPlaceComputationWrapper(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).InPlaceComputationWrapper(NMF.Transformations.Core.Computation)
  nameWithType: InPlaceComputationWrapper<TIn>.InPlaceComputationWrapper(Computation)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).InPlaceComputationWrapper(Computation)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.#ctor*
  name: InPlaceComputationWrapper
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1__ctor_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.InPlaceComputationWrapper
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).InPlaceComputationWrapper
  nameWithType: InPlaceComputationWrapper<TIn>.InPlaceComputationWrapper
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).InPlaceComputationWrapper
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Computation
  commentId: P:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Computation
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Computation
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Computation
  nameWithType: InPlaceComputationWrapper<TIn>.Computation
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Computation
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Computation*
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Computation_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Computation
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Computation
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Computation
  nameWithType: InPlaceComputationWrapper<TIn>.Computation
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Computation
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name: Equals(InPlaceComputationWrapper<TIn>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Equals_NMF_Transformations_Linq_InPlaceComputationWrapper__0__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name.vb: Equals(InPlaceComputationWrapper(Of TIn))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Equals(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn))
  nameWithType: InPlaceComputationWrapper<TIn>.Equals(InPlaceComputationWrapper<TIn>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Equals(InPlaceComputationWrapper(Of TIn))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Equals_System_Object_
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals(System.Object)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Equals(System.Object)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Equals(System.Object)
  nameWithType: InPlaceComputationWrapper<TIn>.Equals(Object)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Equals(Object)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals*
  name: Equals
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Equals_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Equals
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Equals
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Equals
  nameWithType: InPlaceComputationWrapper<TIn>.Equals
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Equals
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.GetHashCode
  name: GetHashCode()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_GetHashCode
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.GetHashCode
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.GetHashCode()
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).GetHashCode()
  nameWithType: InPlaceComputationWrapper<TIn>.GetHashCode()
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).GetHashCode()
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.GetHashCode*
  name: GetHashCode
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_GetHashCode_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.GetHashCode
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.GetHashCode
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).GetHashCode
  nameWithType: InPlaceComputationWrapper<TIn>.GetHashCode
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).GetHashCode
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Input
  name: Input
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Input
  commentId: P:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Input
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Input
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Input
  nameWithType: InPlaceComputationWrapper<TIn>.Input
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Input
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_Input_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.Input
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Input
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Input
  nameWithType: InPlaceComputationWrapper<TIn>.Input
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Input
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Equality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0},NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name: Equality(InPlaceComputationWrapper<TIn>, InPlaceComputationWrapper<TIn>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_op_Equality_NMF_Transformations_Linq_InPlaceComputationWrapper__0__NMF_Transformations_Linq_InPlaceComputationWrapper__0__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Equality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0},NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name.vb: Equality(InPlaceComputationWrapper(Of TIn), InPlaceComputationWrapper(Of TIn))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Equality(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>, NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Equality(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn), NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn))
  nameWithType: InPlaceComputationWrapper<TIn>.Equality(InPlaceComputationWrapper<TIn>, InPlaceComputationWrapper<TIn>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Equality(InPlaceComputationWrapper(Of TIn), InPlaceComputationWrapper(Of TIn))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Equality*
  name: Equality
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_op_Equality_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Equality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Equality
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Equality
  nameWithType: InPlaceComputationWrapper<TIn>.Equality
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Equality
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0},NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name: Inequality(InPlaceComputationWrapper<TIn>, InPlaceComputationWrapper<TIn>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_op_Inequality_NMF_Transformations_Linq_InPlaceComputationWrapper__0__NMF_Transformations_Linq_InPlaceComputationWrapper__0__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0},NMF.Transformations.Linq.InPlaceComputationWrapper{`0})
  name.vb: Inequality(InPlaceComputationWrapper(Of TIn), InPlaceComputationWrapper(Of TIn))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>, NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn), NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn))
  nameWithType: InPlaceComputationWrapper<TIn>.Inequality(InPlaceComputationWrapper<TIn>, InPlaceComputationWrapper<TIn>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Inequality(InPlaceComputationWrapper(Of TIn), InPlaceComputationWrapper(Of TIn))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Inequality*
  name: Inequality
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-1.html#NMF_Transformations_Linq_InPlaceComputationWrapper_1_op_Inequality_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`1.op_Inequality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn>.Inequality
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn).Inequality
  nameWithType: InPlaceComputationWrapper<TIn>.Inequality
  nameWithType.vb: InPlaceComputationWrapper(Of TIn).Inequality
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2
  name: InPlaceComputationWrapper<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html
  commentId: T:NMF.Transformations.Linq.InPlaceComputationWrapper`2
  name.vb: InPlaceComputationWrapper(Of TIn1, TIn2)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2)
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.#ctor(NMF.Transformations.Core.Computation)
  name: InPlaceComputationWrapper(Computation)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2__ctor_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.#ctor(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.InPlaceComputationWrapper(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).InPlaceComputationWrapper(NMF.Transformations.Core.Computation)
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.InPlaceComputationWrapper(Computation)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).InPlaceComputationWrapper(Computation)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.#ctor*
  name: InPlaceComputationWrapper
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.InPlaceComputationWrapper
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).InPlaceComputationWrapper
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.InPlaceComputationWrapper
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).InPlaceComputationWrapper
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Computation
  commentId: P:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Computation
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Computation
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Computation
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Computation
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Computation
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Computation*
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Computation_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Computation
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Computation
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Computation
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Computation
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Computation
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name: Equals(InPlaceComputationWrapper<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Equals_NMF_Transformations_Linq_InPlaceComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name.vb: Equals(InPlaceComputationWrapper(Of TIn1, TIn2))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Equals(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Equals(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2))
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Equals(InPlaceComputationWrapper<TIn1, TIn2>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Equals(InPlaceComputationWrapper(Of TIn1, TIn2))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Equals_System_Object_
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals(System.Object)
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Equals(System.Object)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Equals(System.Object)
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Equals(Object)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Equals(Object)
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals*
  name: Equals
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Equals_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Equals
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Equals
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Equals
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Equals
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Equals
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.GetHashCode
  name: GetHashCode()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_GetHashCode
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.GetHashCode
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.GetHashCode()
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).GetHashCode()
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.GetHashCode()
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).GetHashCode()
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.GetHashCode*
  name: GetHashCode
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_GetHashCode_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.GetHashCode
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.GetHashCode
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).GetHashCode
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.GetHashCode
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).GetHashCode
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input1
  name: Input1
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Input1
  commentId: P:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input1
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Input1
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Input1
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Input1
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input1*
  name: Input1
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Input1_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input1
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Input1
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Input1
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Input1
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Input1
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input2
  name: Input2
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Input2
  commentId: P:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input2
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Input2
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Input2
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Input2
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input2*
  name: Input2
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_Input2_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.Input2
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Input2
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Input2
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Input2
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Input2
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Equality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1},NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name: Equality(InPlaceComputationWrapper<TIn1, TIn2>, InPlaceComputationWrapper<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_op_Equality_NMF_Transformations_Linq_InPlaceComputationWrapper__0__1__NMF_Transformations_Linq_InPlaceComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Equality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1},NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name.vb: Equality(InPlaceComputationWrapper(Of TIn1, TIn2), InPlaceComputationWrapper(Of TIn1, TIn2))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Equality(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>, NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Equality(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2), NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2))
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Equality(InPlaceComputationWrapper<TIn1, TIn2>, InPlaceComputationWrapper<TIn1, TIn2>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Equality(InPlaceComputationWrapper(Of TIn1, TIn2), InPlaceComputationWrapper(Of TIn1, TIn2))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Equality*
  name: Equality
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_op_Equality_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Equality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Equality
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Equality
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Equality
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Equality
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1},NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name: Inequality(InPlaceComputationWrapper<TIn1, TIn2>, InPlaceComputationWrapper<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_op_Inequality_NMF_Transformations_Linq_InPlaceComputationWrapper__0__1__NMF_Transformations_Linq_InPlaceComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1},NMF.Transformations.Linq.InPlaceComputationWrapper{`0,`1})
  name.vb: Inequality(InPlaceComputationWrapper(Of TIn1, TIn2), InPlaceComputationWrapper(Of TIn1, TIn2))
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>, NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Inequality(NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2), NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2))
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Inequality(InPlaceComputationWrapper<TIn1, TIn2>, InPlaceComputationWrapper<TIn1, TIn2>)
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Inequality(InPlaceComputationWrapper(Of TIn1, TIn2), InPlaceComputationWrapper(Of TIn1, TIn2))
- uid: NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Inequality*
  name: Inequality
  href: api/Transformations/NMF.Transformations.Linq.InPlaceComputationWrapper-2.html#NMF_Transformations_Linq_InPlaceComputationWrapper_2_op_Inequality_
  commentId: Overload:NMF.Transformations.Linq.InPlaceComputationWrapper`2.op_Inequality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceComputationWrapper<TIn1, TIn2>.Inequality
  fullName.vb: NMF.Transformations.Linq.InPlaceComputationWrapper(Of TIn1, TIn2).Inequality
  nameWithType: InPlaceComputationWrapper<TIn1, TIn2>.Inequality
  nameWithType.vb: InPlaceComputationWrapper(Of TIn1, TIn2).Inequality
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1
  name: InPlaceTransformationRuleSource<TIn>
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html
  commentId: T:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1
  name.vb: InPlaceTransformationRuleSource(Of TIn)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn)
  nameWithType: InPlaceTransformationRuleSource<TIn>
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0},NMF.Transformations.Core.ITransformationContext)
  name: InPlaceTransformationRuleSource(InPlaceTransformationRuleBase<TIn>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1__ctor_NMF_Transformations_InPlaceTransformationRuleBase__0__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0},NMF.Transformations.Core.ITransformationContext)
  name.vb: InPlaceTransformationRuleSource(InPlaceTransformationRuleBase(Of TIn), ITransformationContext)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.InPlaceTransformationRuleSource(NMF.Transformations.InPlaceTransformationRuleBase<TIn>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).InPlaceTransformationRuleSource(NMF.Transformations.InPlaceTransformationRuleBase(Of TIn), NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRuleSource<TIn>.InPlaceTransformationRuleSource(InPlaceTransformationRuleBase<TIn>, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).InPlaceTransformationRuleSource(InPlaceTransformationRuleBase(Of TIn), ITransformationContext)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.#ctor*
  name: InPlaceTransformationRuleSource
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1__ctor_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.InPlaceTransformationRuleSource
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).InPlaceTransformationRuleSource
  nameWithType: InPlaceTransformationRuleSource<TIn>.InPlaceTransformationRuleSource
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).InPlaceTransformationRuleSource
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.CollectionChanged
  name: CollectionChanged
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_CollectionChanged
  commentId: E:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.CollectionChanged
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.CollectionChanged
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).CollectionChanged
  nameWithType: InPlaceTransformationRuleSource<TIn>.CollectionChanged
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).CollectionChanged
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Context
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Context
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Context
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Context
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Context
  nameWithType: InPlaceTransformationRuleSource<TIn>.Context
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Context
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Context*
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Context_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Context
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Context
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Context
  nameWithType: InPlaceTransformationRuleSource<TIn>.Context
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Context
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dependencies
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Dependencies
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dependencies
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Dependencies
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Dependencies
  nameWithType: InPlaceTransformationRuleSource<TIn>.Dependencies
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Dependencies
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dependencies*
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Dependencies_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dependencies
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Dependencies
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Dependencies
  nameWithType: InPlaceTransformationRuleSource<TIn>.Dependencies
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Dependencies
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose
  name: Dispose()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Dispose
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Dispose()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Dispose()
  nameWithType: InPlaceTransformationRuleSource<TIn>.Dispose()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Dispose()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Dispose_System_Boolean_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose(System.Boolean)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Dispose(System.Boolean)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Dispose(System.Boolean)
  nameWithType: InPlaceTransformationRuleSource<TIn>.Dispose(Boolean)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Dispose(Boolean)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose*
  name: Dispose
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Dispose_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Dispose
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Dispose
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Dispose
  nameWithType: InPlaceTransformationRuleSource<TIn>.Dispose
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Dispose
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_ExecuteBefore
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecuteBefore
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).ExecuteBefore
  nameWithType: InPlaceTransformationRuleSource<TIn>.ExecuteBefore
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).ExecuteBefore
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).ExecuteBefore
  nameWithType: InPlaceTransformationRuleSource<TIn>.ExecuteBefore
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).ExecuteBefore
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_ExecutionMetaData
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecutionMetaData
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).ExecutionMetaData
  nameWithType: InPlaceTransformationRuleSource<TIn>.ExecutionMetaData
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).ExecutionMetaData
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_ExecutionMetaData_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).ExecutionMetaData
  nameWithType: InPlaceTransformationRuleSource<TIn>.ExecutionMetaData
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).ExecutionMetaData
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Filter
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Filter
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Filter
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Filter
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Filter
  nameWithType: InPlaceTransformationRuleSource<TIn>.Filter
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Filter
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Filter*
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Filter_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Filter
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Filter
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Filter
  nameWithType: InPlaceTransformationRuleSource<TIn>.Filter
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Filter
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.GetEnumerator
  name: GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_GetEnumerator
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.GetEnumerator
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).GetEnumerator()
  nameWithType: InPlaceTransformationRuleSource<TIn>.GetEnumerator()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).GetEnumerator()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.GetEnumerator*
  name: GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.GetEnumerator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).GetEnumerator
  nameWithType: InPlaceTransformationRuleSource<TIn>.GetEnumerator
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).GetEnumerator
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.HandleDependency(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: InPlaceTransformationRuleSource<TIn>.HandleDependency(Computation)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).HandleDependency(Computation)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_HandleDependency_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.HandleDependency
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).HandleDependency
  nameWithType: InPlaceTransformationRuleSource<TIn>.HandleDependency
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).HandleDependency
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Notify(System.Collections.Generic.IList{INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Notify_System_Collections_Generic_IList_INotificationResult__
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Notify(System.Collections.Generic.IList{INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Notify(System.Collections.Generic.IList<INotificationResult>)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Notify(System.Collections.Generic.IList(Of INotificationResult))
  nameWithType: InPlaceTransformationRuleSource<TIn>.Notify(IList<INotificationResult>)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Notify(IList(Of INotificationResult))
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Notify*
  name: Notify
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Notify_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Notify
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Notify
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Notify
  nameWithType: InPlaceTransformationRuleSource<TIn>.Notify
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Notify
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Successors
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Successors
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Successors
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Successors
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Successors
  nameWithType: InPlaceTransformationRuleSource<TIn>.Successors
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Successors
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Successors*
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_Successors_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.Successors
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.Successors
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).Successors
  nameWithType: InPlaceTransformationRuleSource<TIn>.Successors
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).Successors
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: InPlaceTransformationRuleSource<TIn>.IEnumerable.GetEnumerator()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).System.Collections.IEnumerable.GetEnumerator
  nameWithType: InPlaceTransformationRuleSource<TIn>.IEnumerable.GetEnumerator
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_TransformationRule
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.TransformationRule
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).TransformationRule
  nameWithType: InPlaceTransformationRuleSource<TIn>.TransformationRule
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).TransformationRule
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-1.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_1_TransformationRule_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`1.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn).TransformationRule
  nameWithType: InPlaceTransformationRuleSource<TIn>.TransformationRule
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn).TransformationRule
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2
  name: InPlaceTransformationRuleSource<TIn1, TIn2>
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html
  commentId: T:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2
  name.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2)
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.ITransformationContext)
  name: InPlaceTransformationRuleSource(InPlaceTransformationRuleBase<TIn1, TIn2>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2__ctor_NMF_Transformations_InPlaceTransformationRuleBase__0__1__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.#ctor(NMF.Transformations.InPlaceTransformationRuleBase{`0,`1},NMF.Transformations.Core.ITransformationContext)
  name.vb: InPlaceTransformationRuleSource(InPlaceTransformationRuleBase(Of TIn1, TIn2), ITransformationContext)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.InPlaceTransformationRuleSource(NMF.Transformations.InPlaceTransformationRuleBase<TIn1, TIn2>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).InPlaceTransformationRuleSource(NMF.Transformations.InPlaceTransformationRuleBase(Of TIn1, TIn2), NMF.Transformations.Core.ITransformationContext)
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.InPlaceTransformationRuleSource(InPlaceTransformationRuleBase<TIn1, TIn2>, ITransformationContext)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).InPlaceTransformationRuleSource(InPlaceTransformationRuleBase(Of TIn1, TIn2), ITransformationContext)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.#ctor*
  name: InPlaceTransformationRuleSource
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.InPlaceTransformationRuleSource
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).InPlaceTransformationRuleSource
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.InPlaceTransformationRuleSource
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).InPlaceTransformationRuleSource
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.CollectionChanged
  name: CollectionChanged
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_CollectionChanged
  commentId: E:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.CollectionChanged
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.CollectionChanged
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).CollectionChanged
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.CollectionChanged
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).CollectionChanged
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Context
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Context
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Context
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Context
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Context
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Context
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Context
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Context*
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Context_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Context
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Context
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Context
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Context
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Context
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dependencies
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Dependencies
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dependencies
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Dependencies
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Dependencies
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Dependencies
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Dependencies
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dependencies*
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Dependencies_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dependencies
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Dependencies
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Dependencies
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Dependencies
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Dependencies
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose
  name: Dispose()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Dispose
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose()
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Dispose_System_Boolean_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose(System.Boolean)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose(System.Boolean)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose(System.Boolean)
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose(Boolean)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose(Boolean)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose*
  name: Dispose
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Dispose_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Dispose
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Dispose
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Dispose
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_ExecuteBefore
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecuteBefore
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecuteBefore
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.ExecuteBefore
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecuteBefore
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecuteBefore
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.ExecuteBefore
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecuteBefore
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_ExecutionMetaData
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecutionMetaData
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecutionMetaData
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.ExecutionMetaData
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecutionMetaData
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_ExecutionMetaData_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecutionMetaData
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.ExecutionMetaData
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).ExecutionMetaData
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Filter
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Filter
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Filter
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Filter
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Filter
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Filter
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Filter
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Filter*
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Filter_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Filter
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Filter
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Filter
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Filter
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Filter
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.GetEnumerator
  name: GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_GetEnumerator
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.GetEnumerator
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).GetEnumerator()
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.GetEnumerator()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).GetEnumerator()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.GetEnumerator*
  name: GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.GetEnumerator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).GetEnumerator
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.GetEnumerator
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).GetEnumerator
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.HandleDependency(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.HandleDependency(Computation)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).HandleDependency(Computation)
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_HandleDependency_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.HandleDependency
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).HandleDependency
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.HandleDependency
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).HandleDependency
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Notify_System_Collections_Generic_IList_INotificationResult__
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Notify(System.Collections.Generic.IList<INotificationResult>)
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Notify(System.Collections.Generic.IList(Of INotificationResult))
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Notify(IList<INotificationResult>)
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Notify(IList(Of INotificationResult))
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Notify*
  name: Notify
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Notify_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Notify
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Notify
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Notify
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Notify
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Notify
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Successors
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Successors
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Successors
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Successors
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Successors
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Successors
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Successors
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Successors*
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_Successors_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.Successors
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.Successors
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).Successors
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.Successors
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).Successors
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.IEnumerable.GetEnumerator()
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).System.Collections.IEnumerable.GetEnumerator
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.IEnumerable.GetEnumerator
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_TransformationRule
  commentId: P:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.TransformationRule
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).TransformationRule
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.TransformationRule
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.InPlaceTransformationRuleSource-2.html#NMF_Transformations_Linq_InPlaceTransformationRuleSource_2_TransformationRule_
  commentId: Overload:NMF.Transformations.Linq.InPlaceTransformationRuleSource`2.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.InPlaceTransformationRuleSource<TIn1, TIn2>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.InPlaceTransformationRuleSource(Of TIn1, TIn2).TransformationRule
  nameWithType: InPlaceTransformationRuleSource<TIn1, TIn2>.TransformationRule
  nameWithType.vb: InPlaceTransformationRuleSource(Of TIn1, TIn2).TransformationRule
- uid: NMF.Transformations.Linq.StaticPattern`1
  name: StaticPattern<T>
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html
  commentId: T:NMF.Transformations.Linq.StaticPattern`1
  name.vb: StaticPattern(Of T)
  fullName: NMF.Transformations.Linq.StaticPattern<T>
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T)
  nameWithType: StaticPattern<T>
  nameWithType.vb: StaticPattern(Of T)
- uid: NMF.Transformations.Linq.StaticPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{`0}})
  name: StaticPattern(Func<ITransformationContext, IEnumerable<T>>)
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1__ctor_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable__0___
  commentId: M:NMF.Transformations.Linq.StaticPattern`1.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{`0}})
  name.vb: StaticPattern(Func(Of ITransformationContext, IEnumerable(Of T)))
  fullName: NMF.Transformations.Linq.StaticPattern<T>.StaticPattern(System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<T>>)
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).StaticPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of T)))
  nameWithType: StaticPattern<T>.StaticPattern(Func<ITransformationContext, IEnumerable<T>>)
  nameWithType.vb: StaticPattern(Of T).StaticPattern(Func(Of ITransformationContext, IEnumerable(Of T)))
- uid: NMF.Transformations.Linq.StaticPattern`1.#ctor*
  name: StaticPattern
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1__ctor_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T>.StaticPattern
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).StaticPattern
  nameWithType: StaticPattern<T>.StaticPattern
  nameWithType.vb: StaticPattern(Of T).StaticPattern
- uid: NMF.Transformations.Linq.StaticPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  name: CreatePattern(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.StaticPattern`1.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Linq.StaticPattern<T>.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType: StaticPattern<T>.CreatePattern(ITransformationContext)
  nameWithType.vb: StaticPattern(Of T).CreatePattern(ITransformationContext)
- uid: NMF.Transformations.Linq.StaticPattern`1.CreatePattern*
  name: CreatePattern
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_CreatePattern_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`1.CreatePattern
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T>.CreatePattern
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).CreatePattern
  nameWithType: StaticPattern<T>.CreatePattern
  nameWithType.vb: StaticPattern(Of T).CreatePattern
- uid: NMF.Transformations.Linq.StaticPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_NMF_Transformations_Core_ITransformationRulePattern_TargetRule
  commentId: P:NMF.Transformations.Linq.StaticPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: StaticPattern<T>.ITransformationRulePattern.TargetRule
  nameWithType.vb: StaticPattern(Of T).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule*
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_NMF_Transformations_Core_ITransformationRulePattern_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`1.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: StaticPattern<T>.ITransformationRulePattern.TargetRule
  nameWithType.vb: StaticPattern(Of T).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`1.Selector
  name: Selector
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_Selector
  commentId: P:NMF.Transformations.Linq.StaticPattern`1.Selector
  fullName: NMF.Transformations.Linq.StaticPattern<T>.Selector
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).Selector
  nameWithType: StaticPattern<T>.Selector
  nameWithType.vb: StaticPattern(Of T).Selector
- uid: NMF.Transformations.Linq.StaticPattern`1.Selector*
  name: Selector
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_Selector_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`1.Selector
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T>.Selector
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).Selector
  nameWithType: StaticPattern<T>.Selector
  nameWithType.vb: StaticPattern(Of T).Selector
- uid: NMF.Transformations.Linq.StaticPattern`1.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_TargetRule
  commentId: P:NMF.Transformations.Linq.StaticPattern`1.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T>.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).TargetRule
  nameWithType: StaticPattern<T>.TargetRule
  nameWithType.vb: StaticPattern(Of T).TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`1.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-1.html#NMF_Transformations_Linq_StaticPattern_1_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`1.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T>.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T).TargetRule
  nameWithType: StaticPattern<T>.TargetRule
  nameWithType.vb: StaticPattern(Of T).TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`2
  name: StaticPattern<T1, T2>
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html
  commentId: T:NMF.Transformations.Linq.StaticPattern`2
  name.vb: StaticPattern(Of T1, T2)
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2)
  nameWithType: StaticPattern<T1, T2>
  nameWithType.vb: StaticPattern(Of T1, T2)
- uid: NMF.Transformations.Linq.StaticPattern`2.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name: StaticPattern(Func<ITransformationContext, IEnumerable<Tuple<T1, T2>>>)
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2__ctor_System_Func_NMF_Transformations_Core_ITransformationContext_System_Collections_Generic_IEnumerable_System_Tuple__0__1____
  commentId: M:NMF.Transformations.Linq.StaticPattern`2.#ctor(System.Func{NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}})
  name.vb: StaticPattern(Func(Of ITransformationContext, IEnumerable(Of Tuple(Of T1, T2))))
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.StaticPattern(System.Func<NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable<System.Tuple<T1, T2>>>)
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).StaticPattern(System.Func(Of NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.IEnumerable(Of System.Tuple(Of T1, T2))))
  nameWithType: StaticPattern<T1, T2>.StaticPattern(Func<ITransformationContext, IEnumerable<Tuple<T1, T2>>>)
  nameWithType.vb: StaticPattern(Of T1, T2).StaticPattern(Func(Of ITransformationContext, IEnumerable(Of Tuple(Of T1, T2))))
- uid: NMF.Transformations.Linq.StaticPattern`2.#ctor*
  name: StaticPattern
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.StaticPattern
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).StaticPattern
  nameWithType: StaticPattern<T1, T2>.StaticPattern
  nameWithType.vb: StaticPattern(Of T1, T2).StaticPattern
- uid: NMF.Transformations.Linq.StaticPattern`2.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  name: CreatePattern(ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_CreatePattern_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.StaticPattern`2.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.CreatePattern(NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).CreatePattern(NMF.Transformations.Core.ITransformationContext)
  nameWithType: StaticPattern<T1, T2>.CreatePattern(ITransformationContext)
  nameWithType.vb: StaticPattern(Of T1, T2).CreatePattern(ITransformationContext)
- uid: NMF.Transformations.Linq.StaticPattern`2.CreatePattern*
  name: CreatePattern
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_CreatePattern_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`2.CreatePattern
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.CreatePattern
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).CreatePattern
  nameWithType: StaticPattern<T1, T2>.CreatePattern
  nameWithType.vb: StaticPattern(Of T1, T2).CreatePattern
- uid: NMF.Transformations.Linq.StaticPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_NMF_Transformations_Core_ITransformationRulePattern_TargetRule
  commentId: P:NMF.Transformations.Linq.StaticPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: StaticPattern<T1, T2>.ITransformationRulePattern.TargetRule
  nameWithType.vb: StaticPattern(Of T1, T2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule*
  name: ITransformationRulePattern.TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_NMF_Transformations_Core_ITransformationRulePattern_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`2.NMF#Transformations#Core#ITransformationRulePattern#TargetRule
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
  nameWithType: StaticPattern<T1, T2>.ITransformationRulePattern.TargetRule
  nameWithType.vb: StaticPattern(Of T1, T2).NMF.Transformations.Core.ITransformationRulePattern.TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`2.Selector
  name: Selector
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_Selector
  commentId: P:NMF.Transformations.Linq.StaticPattern`2.Selector
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.Selector
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).Selector
  nameWithType: StaticPattern<T1, T2>.Selector
  nameWithType.vb: StaticPattern(Of T1, T2).Selector
- uid: NMF.Transformations.Linq.StaticPattern`2.Selector*
  name: Selector
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_Selector_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`2.Selector
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.Selector
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).Selector
  nameWithType: StaticPattern<T1, T2>.Selector
  nameWithType.vb: StaticPattern(Of T1, T2).Selector
- uid: NMF.Transformations.Linq.StaticPattern`2.TargetRule
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_TargetRule
  commentId: P:NMF.Transformations.Linq.StaticPattern`2.TargetRule
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).TargetRule
  nameWithType: StaticPattern<T1, T2>.TargetRule
  nameWithType.vb: StaticPattern(Of T1, T2).TargetRule
- uid: NMF.Transformations.Linq.StaticPattern`2.TargetRule*
  name: TargetRule
  href: api/Transformations/NMF.Transformations.Linq.StaticPattern-2.html#NMF_Transformations_Linq_StaticPattern_2_TargetRule_
  commentId: Overload:NMF.Transformations.Linq.StaticPattern`2.TargetRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.StaticPattern<T1, T2>.TargetRule
  fullName.vb: NMF.Transformations.Linq.StaticPattern(Of T1, T2).TargetRule
  nameWithType: StaticPattern<T1, T2>.TargetRule
  nameWithType.vb: StaticPattern(Of T1, T2).TargetRule
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2
  name: TransformationComputationWrapper<TIn, TOut>
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html
  commentId: T:NMF.Transformations.Linq.TransformationComputationWrapper`2
  name.vb: TransformationComputationWrapper(Of TIn, TOut)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut)
  nameWithType: TransformationComputationWrapper<TIn, TOut>
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.#ctor(NMF.Transformations.Core.Computation)
  name: TransformationComputationWrapper(Computation)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2__ctor_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.#ctor(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.TransformationComputationWrapper(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).TransformationComputationWrapper(NMF.Transformations.Core.Computation)
  nameWithType: TransformationComputationWrapper<TIn, TOut>.TransformationComputationWrapper(Computation)
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).TransformationComputationWrapper(Computation)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.#ctor*
  name: TransformationComputationWrapper
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.TransformationComputationWrapper
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).TransformationComputationWrapper
  nameWithType: TransformationComputationWrapper<TIn, TOut>.TransformationComputationWrapper
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).TransformationComputationWrapper
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Computation
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`2.Computation
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Computation
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Computation
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Computation
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Computation
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Computation*
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Computation_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.Computation
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Computation
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Computation
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Computation
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Computation
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name: Equals(TransformationComputationWrapper<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Equals_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name.vb: Equals(TransformationComputationWrapper(Of TIn, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Equals(NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Equals(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut))
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Equals(TransformationComputationWrapper<TIn, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Equals(TransformationComputationWrapper(Of TIn, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Equals_System_Object_
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals(System.Object)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Equals(System.Object)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Equals(System.Object)
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Equals(Object)
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Equals(Object)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals*
  name: Equals
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Equals_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.Equals
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Equals
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Equals
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Equals
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Equals
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.GetHashCode
  name: GetHashCode()
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_GetHashCode
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.GetHashCode
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.GetHashCode()
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).GetHashCode()
  nameWithType: TransformationComputationWrapper<TIn, TOut>.GetHashCode()
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).GetHashCode()
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.GetHashCode*
  name: GetHashCode
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_GetHashCode_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.GetHashCode
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.GetHashCode
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).GetHashCode
  nameWithType: TransformationComputationWrapper<TIn, TOut>.GetHashCode
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).GetHashCode
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Input
  name: Input
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Input
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`2.Input
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Input
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Input
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Input
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Input
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Input*
  name: Input
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Input_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.Input
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Input
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Input
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Input
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Input
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Equality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name: Equality(TransformationComputationWrapper<TIn, TOut>, TransformationComputationWrapper<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_op_Equality_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__NMF_Transformations_Linq_TransformationComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Equality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name.vb: Equality(TransformationComputationWrapper(Of TIn, TOut), TransformationComputationWrapper(Of TIn, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Equality(NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>, NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Equality(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut), NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut))
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Equality(TransformationComputationWrapper<TIn, TOut>, TransformationComputationWrapper<TIn, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Equality(TransformationComputationWrapper(Of TIn, TOut), TransformationComputationWrapper(Of TIn, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Equality*
  name: Equality
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_op_Equality_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Equality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Equality
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Equality
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Equality
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Equality
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Inequality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name: Inequality(TransformationComputationWrapper<TIn, TOut>, TransformationComputationWrapper<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_op_Inequality_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__NMF_Transformations_Linq_TransformationComputationWrapper__0__1__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Inequality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1})
  name.vb: Inequality(TransformationComputationWrapper(Of TIn, TOut), TransformationComputationWrapper(Of TIn, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Inequality(NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>, NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Inequality(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut), NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut))
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Inequality(TransformationComputationWrapper<TIn, TOut>, TransformationComputationWrapper<TIn, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Inequality(TransformationComputationWrapper(Of TIn, TOut), TransformationComputationWrapper(Of TIn, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Inequality*
  name: Inequality
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_op_Inequality_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.op_Inequality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Inequality
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Inequality
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Inequality
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Inequality
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Output
  name: Output
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Output
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`2.Output
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Output
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Output
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Output
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Output
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`2.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-2.html#NMF_Transformations_Linq_TransformationComputationWrapper_2_Output_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`2.Output
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn, TOut>.Output
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn, TOut).Output
  nameWithType: TransformationComputationWrapper<TIn, TOut>.Output
  nameWithType.vb: TransformationComputationWrapper(Of TIn, TOut).Output
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3
  name: TransformationComputationWrapper<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html
  commentId: T:NMF.Transformations.Linq.TransformationComputationWrapper`3
  name.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut)
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.#ctor(NMF.Transformations.Core.Computation)
  name: TransformationComputationWrapper(Computation)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3__ctor_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.#ctor(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.TransformationComputationWrapper(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).TransformationComputationWrapper(NMF.Transformations.Core.Computation)
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.TransformationComputationWrapper(Computation)
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).TransformationComputationWrapper(Computation)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.#ctor*
  name: TransformationComputationWrapper
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3__ctor_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.TransformationComputationWrapper
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).TransformationComputationWrapper
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.TransformationComputationWrapper
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).TransformationComputationWrapper
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Computation
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Computation
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`3.Computation
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Computation
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Computation
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Computation
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Computation
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Computation*
  name: Computation
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Computation_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.Computation
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Computation
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Computation
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Computation
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Computation
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name: Equals(TransformationComputationWrapper<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Equals_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__2__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name.vb: Equals(TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals(NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals(TransformationComputationWrapper<TIn1, TIn2, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals(TransformationComputationWrapper(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals(System.Object)
  name: Equals(Object)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Equals_System_Object_
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals(System.Object)
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals(System.Object)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals(System.Object)
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals(Object)
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals(Object)
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals*
  name: Equals
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Equals_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.Equals
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Equals
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equals
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.GetHashCode
  name: GetHashCode()
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_GetHashCode
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.GetHashCode
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.GetHashCode()
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).GetHashCode()
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.GetHashCode()
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).GetHashCode()
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.GetHashCode*
  name: GetHashCode
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_GetHashCode_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.GetHashCode
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.GetHashCode
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).GetHashCode
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.GetHashCode
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).GetHashCode
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Input1
  name: Input1
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Input1
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`3.Input1
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Input1
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input1
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Input1
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input1
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Input1*
  name: Input1
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Input1_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.Input1
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Input1
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input1
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Input1
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input1
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Input2
  name: Input2
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Input2
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`3.Input2
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Input2
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input2
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Input2
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input2
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Input2*
  name: Input2
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Input2_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.Input2
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Input2
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input2
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Input2
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Input2
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Equality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name: Equality(TransformationComputationWrapper<TIn1, TIn2, TOut>, TransformationComputationWrapper<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_op_Equality_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__2__NMF_Transformations_Linq_TransformationComputationWrapper__0__1__2__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Equality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name.vb: Equality(TransformationComputationWrapper(Of TIn1, TIn2, TOut), TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Equality(NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>, NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equality(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut), NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Equality(TransformationComputationWrapper<TIn1, TIn2, TOut>, TransformationComputationWrapper<TIn1, TIn2, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equality(TransformationComputationWrapper(Of TIn1, TIn2, TOut), TransformationComputationWrapper(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Equality*
  name: Equality
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_op_Equality_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Equality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Equality
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equality
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Equality
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Equality
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Inequality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name: Inequality(TransformationComputationWrapper<TIn1, TIn2, TOut>, TransformationComputationWrapper<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_op_Inequality_NMF_Transformations_Linq_TransformationComputationWrapper__0__1__2__NMF_Transformations_Linq_TransformationComputationWrapper__0__1__2__
  commentId: M:NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Inequality(NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2},NMF.Transformations.Linq.TransformationComputationWrapper{`0,`1,`2})
  name.vb: Inequality(TransformationComputationWrapper(Of TIn1, TIn2, TOut), TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Inequality(NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>, NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Inequality(NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut), NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut))
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Inequality(TransformationComputationWrapper<TIn1, TIn2, TOut>, TransformationComputationWrapper<TIn1, TIn2, TOut>)
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Inequality(TransformationComputationWrapper(Of TIn1, TIn2, TOut), TransformationComputationWrapper(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Inequality*
  name: Inequality
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_op_Inequality_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.op_Inequality
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Inequality
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Inequality
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Inequality
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Inequality
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Output
  name: Output
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Output
  commentId: P:NMF.Transformations.Linq.TransformationComputationWrapper`3.Output
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Output
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Output
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Output
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Output
- uid: NMF.Transformations.Linq.TransformationComputationWrapper`3.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.Linq.TransformationComputationWrapper-3.html#NMF_Transformations_Linq_TransformationComputationWrapper_3_Output_
  commentId: Overload:NMF.Transformations.Linq.TransformationComputationWrapper`3.Output
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationComputationWrapper<TIn1, TIn2, TOut>.Output
  fullName.vb: NMF.Transformations.Linq.TransformationComputationWrapper(Of TIn1, TIn2, TOut).Output
  nameWithType: TransformationComputationWrapper<TIn1, TIn2, TOut>.Output
  nameWithType.vb: TransformationComputationWrapper(Of TIn1, TIn2, TOut).Output
- uid: NMF.Transformations.Linq.TransformationRuleSource`2
  name: TransformationRuleSource<TIn, TOut>
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html
  commentId: T:NMF.Transformations.Linq.TransformationRuleSource`2
  name.vb: TransformationRuleSource(Of TIn, TOut)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut)
  nameWithType: TransformationRuleSource<TIn, TOut>
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut)
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.Core.ITransformationContext)
  name: TransformationRuleSource(TransformationRuleBase<TIn, TOut>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2__ctor_NMF_Transformations_TransformationRuleBase__0__1__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.Core.ITransformationContext)
  name.vb: TransformationRuleSource(TransformationRuleBase(Of TIn, TOut), ITransformationContext)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.TransformationRuleSource(NMF.Transformations.TransformationRuleBase<TIn, TOut>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).TransformationRuleSource(NMF.Transformations.TransformationRuleBase(Of TIn, TOut), NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRuleSource<TIn, TOut>.TransformationRuleSource(TransformationRuleBase<TIn, TOut>, ITransformationContext)
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).TransformationRuleSource(TransformationRuleBase(Of TIn, TOut), ITransformationContext)
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.#ctor*
  name: TransformationRuleSource
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2__ctor_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.TransformationRuleSource
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).TransformationRuleSource
  nameWithType: TransformationRuleSource<TIn, TOut>.TransformationRuleSource
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).TransformationRuleSource
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.CollectionChanged
  name: CollectionChanged
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_CollectionChanged
  commentId: E:NMF.Transformations.Linq.TransformationRuleSource`2.CollectionChanged
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.CollectionChanged
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).CollectionChanged
  nameWithType: TransformationRuleSource<TIn, TOut>.CollectionChanged
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).CollectionChanged
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Context
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Context
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.Context
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Context
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Context
  nameWithType: TransformationRuleSource<TIn, TOut>.Context
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Context
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Context*
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Context_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Context
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Context
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Context
  nameWithType: TransformationRuleSource<TIn, TOut>.Context
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Context
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Dependencies
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Dependencies
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.Dependencies
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Dependencies
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Dependencies
  nameWithType: TransformationRuleSource<TIn, TOut>.Dependencies
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Dependencies
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Dependencies*
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Dependencies_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Dependencies
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Dependencies
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Dependencies
  nameWithType: TransformationRuleSource<TIn, TOut>.Dependencies
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Dependencies
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Dispose
  name: Dispose()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Dispose
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.Dispose
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Dispose()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Dispose()
  nameWithType: TransformationRuleSource<TIn, TOut>.Dispose()
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Dispose()
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Dispose_System_Boolean_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.Dispose(System.Boolean)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Dispose(System.Boolean)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Dispose(System.Boolean)
  nameWithType: TransformationRuleSource<TIn, TOut>.Dispose(Boolean)
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Dispose(Boolean)
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Dispose*
  name: Dispose
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Dispose_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Dispose
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Dispose
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Dispose
  nameWithType: TransformationRuleSource<TIn, TOut>.Dispose
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Dispose
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_ExecuteBefore
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.ExecuteBefore
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).ExecuteBefore
  nameWithType: TransformationRuleSource<TIn, TOut>.ExecuteBefore
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).ExecuteBefore
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).ExecuteBefore
  nameWithType: TransformationRuleSource<TIn, TOut>.ExecuteBefore
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).ExecuteBefore
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_ExecutionMetaData
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.ExecutionMetaData
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).ExecutionMetaData
  nameWithType: TransformationRuleSource<TIn, TOut>.ExecutionMetaData
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_ExecutionMetaData_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).ExecutionMetaData
  nameWithType: TransformationRuleSource<TIn, TOut>.ExecutionMetaData
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Filter
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Filter
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.Filter
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Filter
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Filter
  nameWithType: TransformationRuleSource<TIn, TOut>.Filter
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Filter
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Filter*
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Filter_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Filter
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Filter
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Filter
  nameWithType: TransformationRuleSource<TIn, TOut>.Filter
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Filter
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.GetEnumerator
  name: GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_GetEnumerator
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.GetEnumerator
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).GetEnumerator()
  nameWithType: TransformationRuleSource<TIn, TOut>.GetEnumerator()
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).GetEnumerator()
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.GetEnumerator*
  name: GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.GetEnumerator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).GetEnumerator
  nameWithType: TransformationRuleSource<TIn, TOut>.GetEnumerator
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).GetEnumerator
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.HandleDependency(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: TransformationRuleSource<TIn, TOut>.HandleDependency(Computation)
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).HandleDependency(Computation)
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_HandleDependency_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.HandleDependency
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).HandleDependency
  nameWithType: TransformationRuleSource<TIn, TOut>.HandleDependency
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).HandleDependency
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Notify_System_Collections_Generic_IList_INotificationResult__
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.Notify(System.Collections.Generic.IList{INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Notify(System.Collections.Generic.IList<INotificationResult>)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Notify(System.Collections.Generic.IList(Of INotificationResult))
  nameWithType: TransformationRuleSource<TIn, TOut>.Notify(IList<INotificationResult>)
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Notify(IList(Of INotificationResult))
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Notify*
  name: Notify
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Notify_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Notify
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Notify
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Notify
  nameWithType: TransformationRuleSource<TIn, TOut>.Notify
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Notify
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Successors
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Successors
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.Successors
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Successors
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Successors
  nameWithType: TransformationRuleSource<TIn, TOut>.Successors
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Successors
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.Successors*
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_Successors_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.Successors
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.Successors
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).Successors
  nameWithType: TransformationRuleSource<TIn, TOut>.Successors
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).Successors
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TransformationRuleSource<TIn, TOut>.IEnumerable.GetEnumerator()
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).System.Collections.IEnumerable.GetEnumerator
  nameWithType: TransformationRuleSource<TIn, TOut>.IEnumerable.GetEnumerator
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_TransformationRule
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`2.TransformationRule
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).TransformationRule
  nameWithType: TransformationRuleSource<TIn, TOut>.TransformationRule
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).TransformationRule
- uid: NMF.Transformations.Linq.TransformationRuleSource`2.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-2.html#NMF_Transformations_Linq_TransformationRuleSource_2_TransformationRule_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`2.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn, TOut).TransformationRule
  nameWithType: TransformationRuleSource<TIn, TOut>.TransformationRule
  nameWithType.vb: TransformationRuleSource(Of TIn, TOut).TransformationRule
- uid: NMF.Transformations.Linq.TransformationRuleSource`3
  name: TransformationRuleSource<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html
  commentId: T:NMF.Transformations.Linq.TransformationRuleSource`3
  name.vb: TransformationRuleSource(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut)
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1,`2},NMF.Transformations.Core.ITransformationContext)
  name: TransformationRuleSource(TransformationRuleBase<TIn1, TIn2, TOut>, ITransformationContext)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3__ctor_NMF_Transformations_TransformationRuleBase__0__1__2__NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1,`2},NMF.Transformations.Core.ITransformationContext)
  name.vb: TransformationRuleSource(TransformationRuleBase(Of TIn1, TIn2, TOut), ITransformationContext)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRuleSource(NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRuleSource(NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRuleSource(TransformationRuleBase<TIn1, TIn2, TOut>, ITransformationContext)
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRuleSource(TransformationRuleBase(Of TIn1, TIn2, TOut), ITransformationContext)
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.#ctor*
  name: TransformationRuleSource
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3__ctor_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRuleSource
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRuleSource
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRuleSource
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRuleSource
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.CollectionChanged
  name: CollectionChanged
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_CollectionChanged
  commentId: E:NMF.Transformations.Linq.TransformationRuleSource`3.CollectionChanged
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.CollectionChanged
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).CollectionChanged
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.CollectionChanged
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).CollectionChanged
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Context
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Context
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.Context
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Context
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Context
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Context
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Context
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Context*
  name: Context
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Context_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Context
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Context
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Context
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Context
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Context
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Dependencies
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Dependencies
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.Dependencies
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Dependencies
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Dependencies
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Dependencies
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Dependencies
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Dependencies*
  name: Dependencies
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Dependencies_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Dependencies
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Dependencies
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Dependencies
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Dependencies
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Dependencies
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Dispose
  name: Dispose()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Dispose
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.Dispose
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Dispose()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose()
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Dispose()
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose()
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Dispose_System_Boolean_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.Dispose(System.Boolean)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Dispose(System.Boolean)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose(System.Boolean)
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Dispose(Boolean)
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose(Boolean)
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Dispose*
  name: Dispose
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Dispose_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Dispose
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Dispose
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Dispose
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Dispose
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.ExecuteBefore
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_ExecuteBefore
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.ExecuteBefore
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).ExecuteBefore
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.ExecuteBefore
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).ExecuteBefore
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.ExecuteBefore*
  name: ExecuteBefore
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_ExecuteBefore_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.ExecuteBefore
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.ExecuteBefore
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).ExecuteBefore
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.ExecuteBefore
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).ExecuteBefore
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.ExecutionMetaData
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_ExecutionMetaData
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.ExecutionMetaData
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).ExecutionMetaData
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.ExecutionMetaData
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).ExecutionMetaData
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.ExecutionMetaData*
  name: ExecutionMetaData
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_ExecutionMetaData_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.ExecutionMetaData
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.ExecutionMetaData
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).ExecutionMetaData
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.ExecutionMetaData
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).ExecutionMetaData
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Filter
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Filter
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.Filter
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Filter
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Filter
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Filter
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Filter
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Filter*
  name: Filter
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Filter_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Filter
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Filter
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Filter
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Filter
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Filter
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.GetEnumerator
  name: GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_GetEnumerator
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.GetEnumerator
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).GetEnumerator()
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.GetEnumerator()
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).GetEnumerator()
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.GetEnumerator*
  name: GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.GetEnumerator
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).GetEnumerator
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.GetEnumerator
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).GetEnumerator
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.HandleDependency(NMF.Transformations.Core.Computation)
  name: HandleDependency(Computation)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_HandleDependency_NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.HandleDependency(NMF.Transformations.Core.Computation)
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.HandleDependency(NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).HandleDependency(NMF.Transformations.Core.Computation)
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.HandleDependency(Computation)
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).HandleDependency(Computation)
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.HandleDependency*
  name: HandleDependency
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_HandleDependency_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.HandleDependency
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.HandleDependency
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).HandleDependency
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.HandleDependency
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).HandleDependency
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Notify(System.Collections.Generic.IList{INotificationResult})
  name: Notify(IList<INotificationResult>)
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Notify_System_Collections_Generic_IList_INotificationResult__
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.Notify(System.Collections.Generic.IList{INotificationResult})
  name.vb: Notify(IList(Of INotificationResult))
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Notify(System.Collections.Generic.IList<INotificationResult>)
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Notify(System.Collections.Generic.IList(Of INotificationResult))
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Notify(IList<INotificationResult>)
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Notify(IList(Of INotificationResult))
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Notify*
  name: Notify
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Notify_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Notify
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Notify
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Notify
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Notify
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Notify
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Successors
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Successors
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.Successors
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Successors
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Successors
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Successors
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Successors
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.Successors*
  name: Successors
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_Successors_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.Successors
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.Successors
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).Successors
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.Successors
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).Successors
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_System_Collections_IEnumerable_GetEnumerator
  commentId: M:NMF.Transformations.Linq.TransformationRuleSource`3.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.IEnumerable.GetEnumerator()
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).System.Collections.IEnumerable.GetEnumerator()
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).System.Collections.IEnumerable.GetEnumerator
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.IEnumerable.GetEnumerator
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).System.Collections.IEnumerable.GetEnumerator
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_TransformationRule
  commentId: P:NMF.Transformations.Linq.TransformationRuleSource`3.TransformationRule
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRule
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRule
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRule
- uid: NMF.Transformations.Linq.TransformationRuleSource`3.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.Linq.TransformationRuleSource-3.html#NMF_Transformations_Linq_TransformationRuleSource_3_TransformationRule_
  commentId: Overload:NMF.Transformations.Linq.TransformationRuleSource`3.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.Linq.TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.Linq.TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRule
  nameWithType: TransformationRuleSource<TIn1, TIn2, TOut>.TransformationRule
  nameWithType.vb: TransformationRuleSource(Of TIn1, TIn2, TOut).TransformationRule
- uid: NMF.Transformations.OverrideRuleAttribute
  name: OverrideRuleAttribute
  href: api/Transformations/NMF.Transformations.OverrideRuleAttribute.html
  commentId: T:NMF.Transformations.OverrideRuleAttribute
  fullName: NMF.Transformations.OverrideRuleAttribute
  nameWithType: OverrideRuleAttribute
- uid: NMF.Transformations.ReflectiveTransformation
  name: ReflectiveTransformation
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html
  commentId: T:NMF.Transformations.ReflectiveTransformation
  fullName: NMF.Transformations.ReflectiveTransformation
  nameWithType: ReflectiveTransformation
- uid: NMF.Transformations.ReflectiveTransformation.CreateCustomRules
  name: CreateCustomRules()
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateCustomRules
  commentId: M:NMF.Transformations.ReflectiveTransformation.CreateCustomRules
  fullName: NMF.Transformations.ReflectiveTransformation.CreateCustomRules()
  nameWithType: ReflectiveTransformation.CreateCustomRules()
- uid: NMF.Transformations.ReflectiveTransformation.CreateCustomRules*
  name: CreateCustomRules
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateCustomRules_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.CreateCustomRules
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.CreateCustomRules
  nameWithType: ReflectiveTransformation.CreateCustomRules
- uid: NMF.Transformations.ReflectiveTransformation.CreateDefaultRules
  name: CreateDefaultRules()
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateDefaultRules
  commentId: M:NMF.Transformations.ReflectiveTransformation.CreateDefaultRules
  fullName: NMF.Transformations.ReflectiveTransformation.CreateDefaultRules()
  nameWithType: ReflectiveTransformation.CreateDefaultRules()
- uid: NMF.Transformations.ReflectiveTransformation.CreateDefaultRules*
  name: CreateDefaultRules
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateDefaultRules_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.CreateDefaultRules
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.CreateDefaultRules
  nameWithType: ReflectiveTransformation.CreateDefaultRules
- uid: NMF.Transformations.ReflectiveTransformation.CreateRules
  name: CreateRules()
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateRules
  commentId: M:NMF.Transformations.ReflectiveTransformation.CreateRules
  fullName: NMF.Transformations.ReflectiveTransformation.CreateRules()
  nameWithType: ReflectiveTransformation.CreateRules()
- uid: NMF.Transformations.ReflectiveTransformation.CreateRules*
  name: CreateRules
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_CreateRules_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.CreateRules
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.CreateRules
  nameWithType: ReflectiveTransformation.CreateRules
- uid: NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType(System.Type)
  name: GetRuleForRuleType(Type)
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_GetRuleForRuleType_System_Type_
  commentId: M:NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType(System.Type)
  fullName: NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType(System.Type)
  nameWithType: ReflectiveTransformation.GetRuleForRuleType(Type)
- uid: NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType*
  name: GetRuleForRuleType
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_GetRuleForRuleType_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.GetRuleForRuleType
  nameWithType: ReflectiveTransformation.GetRuleForRuleType
- uid: NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType(System.Type)
  name: GetRulesForRuleType(Type)
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_GetRulesForRuleType_System_Type_
  commentId: M:NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType(System.Type)
  fullName: NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType(System.Type)
  nameWithType: ReflectiveTransformation.GetRulesForRuleType(Type)
- uid: NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType*
  name: GetRulesForRuleType
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_GetRulesForRuleType_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.GetRulesForRuleType
  nameWithType: ReflectiveTransformation.GetRulesForRuleType
- uid: NMF.Transformations.ReflectiveTransformation.RegisterRules
  name: RegisterRules()
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_RegisterRules
  commentId: M:NMF.Transformations.ReflectiveTransformation.RegisterRules
  fullName: NMF.Transformations.ReflectiveTransformation.RegisterRules()
  nameWithType: ReflectiveTransformation.RegisterRules()
- uid: NMF.Transformations.ReflectiveTransformation.RegisterRules*
  name: RegisterRules
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_RegisterRules_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.RegisterRules
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.RegisterRules
  nameWithType: ReflectiveTransformation.RegisterRules
- uid: NMF.Transformations.ReflectiveTransformation.Rule*
  name: Rule
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_Rule_
  commentId: Overload:NMF.Transformations.ReflectiveTransformation.Rule
  isSpec: "True"
  fullName: NMF.Transformations.ReflectiveTransformation.Rule
  nameWithType: ReflectiveTransformation.Rule
- uid: NMF.Transformations.ReflectiveTransformation.Rule``1
  name: Rule<TRule>()
  href: api/Transformations/NMF.Transformations.ReflectiveTransformation.html#NMF_Transformations_ReflectiveTransformation_Rule__1
  commentId: M:NMF.Transformations.ReflectiveTransformation.Rule``1
  name.vb: Rule(Of TRule)()
  fullName: NMF.Transformations.ReflectiveTransformation.Rule<TRule>()
  fullName.vb: NMF.Transformations.ReflectiveTransformation.Rule(Of TRule)()
  nameWithType: ReflectiveTransformation.Rule<TRule>()
  nameWithType.vb: ReflectiveTransformation.Rule(Of TRule)()
- uid: NMF.Transformations.Reflector
  name: Reflector
  href: api/Transformations/NMF.Transformations.Reflector.html
  commentId: T:NMF.Transformations.Reflector
  fullName: NMF.Transformations.Reflector
  nameWithType: Reflector
- uid: NMF.Transformations.Reflector.ReflectDictionary*
  name: ReflectDictionary
  href: api/Transformations/NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectDictionary_
  commentId: Overload:NMF.Transformations.Reflector.ReflectDictionary
  isSpec: "True"
  fullName: NMF.Transformations.Reflector.ReflectDictionary
  nameWithType: Reflector.ReflectDictionary
- uid: NMF.Transformations.Reflector.ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  name: ReflectDictionary<T>(Stack<Type>, Func<IEnumerable<T>>, Func<IEnumerable<T>>)
  href: api/Transformations/NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectDictionary__1_System_Collections_Generic_Stack_System_Type__System_Func_System_Collections_Generic_IEnumerable___0___System_Func_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.Reflector.ReflectDictionary``1(System.Collections.Generic.Stack{System.Type},System.Func{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0}})
  name.vb: ReflectDictionary(Of T)(Stack(Of Type), Func(Of IEnumerable(Of T)), Func(Of IEnumerable(Of T)))
  fullName: NMF.Transformations.Reflector.ReflectDictionary<T>(System.Collections.Generic.Stack<System.Type>, System.Func<System.Collections.Generic.IEnumerable<T>>, System.Func<System.Collections.Generic.IEnumerable<T>>)
  fullName.vb: NMF.Transformations.Reflector.ReflectDictionary(Of T)(System.Collections.Generic.Stack(Of System.Type), System.Func(Of System.Collections.Generic.IEnumerable(Of T)), System.Func(Of System.Collections.Generic.IEnumerable(Of T)))
  nameWithType: Reflector.ReflectDictionary<T>(Stack<Type>, Func<IEnumerable<T>>, Func<IEnumerable<T>>)
  nameWithType.vb: Reflector.ReflectDictionary(Of T)(Stack(Of Type), Func(Of IEnumerable(Of T)), Func(Of IEnumerable(Of T)))
- uid: NMF.Transformations.Reflector.ReflectInType*
  name: ReflectInType
  href: api/Transformations/NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectInType_
  commentId: Overload:NMF.Transformations.Reflector.ReflectInType
  isSpec: "True"
  fullName: NMF.Transformations.Reflector.ReflectInType
  nameWithType: Reflector.ReflectInType
- uid: NMF.Transformations.Reflector.ReflectInType``1(System.Type,System.Action{System.Type,``0})
  name: ReflectInType<T>(Type, Action<Type, T>)
  href: api/Transformations/NMF.Transformations.Reflector.html#NMF_Transformations_Reflector_ReflectInType__1_System_Type_System_Action_System_Type___0__
  commentId: M:NMF.Transformations.Reflector.ReflectInType``1(System.Type,System.Action{System.Type,``0})
  name.vb: ReflectInType(Of T)(Type, Action(Of Type, T))
  fullName: NMF.Transformations.Reflector.ReflectInType<T>(System.Type, System.Action<System.Type, T>)
  fullName.vb: NMF.Transformations.Reflector.ReflectInType(Of T)(System.Type, System.Action(Of System.Type, T))
  nameWithType: Reflector.ReflectInType<T>(Type, Action<Type, T>)
  nameWithType.vb: Reflector.ReflectInType(Of T)(Type, Action(Of Type, T))
- uid: NMF.Transformations.TraceEntry`2
  name: TraceEntry<TInput, TOut>
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html
  commentId: T:NMF.Transformations.TraceEntry`2
  name.vb: TraceEntry(Of TInput, TOut)
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut)
  nameWithType: TraceEntry<TInput, TOut>
  nameWithType.vb: TraceEntry(Of TInput, TOut)
- uid: NMF.Transformations.TraceEntry`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)
  name: TraceEntry(TransformationRuleBase<TInput, TOut>, TInput, TOut)
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2__ctor_NMF_Transformations_TransformationRuleBase__0__1___0__1_
  commentId: M:NMF.Transformations.TraceEntry`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},`0,`1)
  name.vb: TraceEntry(TransformationRuleBase(Of TInput, TOut), TInput, TOut)
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TraceEntry(NMF.Transformations.TransformationRuleBase<TInput, TOut>, TInput, TOut)
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TraceEntry(NMF.Transformations.TransformationRuleBase(Of TInput, TOut), TInput, TOut)
  nameWithType: TraceEntry<TInput, TOut>.TraceEntry(TransformationRuleBase<TInput, TOut>, TInput, TOut)
  nameWithType.vb: TraceEntry(Of TInput, TOut).TraceEntry(TransformationRuleBase(Of TInput, TOut), TInput, TOut)
- uid: NMF.Transformations.TraceEntry`2.#ctor*
  name: TraceEntry
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2__ctor_
  commentId: Overload:NMF.Transformations.TraceEntry`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TraceEntry
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TraceEntry
  nameWithType: TraceEntry<TInput, TOut>.TraceEntry
  nameWithType.vb: TraceEntry(Of TInput, TOut).TraceEntry
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#GetInput(System.Int32)
  name: ITraceEntry.GetInput(Int32)
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_GetInput_System_Int32_
  commentId: M:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#GetInput(System.Int32)
  name.vb: NMF.Transformations.Core.ITraceEntry.GetInput(Int32)
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.GetInput(System.Int32)
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.GetInput(Int32)
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.GetInput(Int32)
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#GetInput*
  name: ITraceEntry.GetInput
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_GetInput_
  commentId: Overload:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#GetInput
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITraceEntry.GetInput
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.GetInput
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.GetInput
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.GetInput
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.GetInput
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#Output
  name: ITraceEntry.Output
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_Output
  commentId: P:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#Output
  name.vb: NMF.Transformations.Core.ITraceEntry.Output
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.Output
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.Output
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.Output
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#Output*
  name: ITraceEntry.Output
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_Output_
  commentId: Overload:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#Output
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITraceEntry.Output
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.Output
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.Output
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.Output
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#TransformationRule
  name: ITraceEntry.TransformationRule
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_TransformationRule
  commentId: P:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#TransformationRule
  name.vb: NMF.Transformations.Core.ITraceEntry.TransformationRule
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.TransformationRule
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.TransformationRule
- uid: NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#TransformationRule*
  name: ITraceEntry.TransformationRule
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_NMF_Transformations_Core_ITraceEntry_TransformationRule_
  commentId: Overload:NMF.Transformations.TraceEntry`2.NMF#Transformations#Core#ITraceEntry#TransformationRule
  isSpec: "True"
  name.vb: NMF.Transformations.Core.ITraceEntry.TransformationRule
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.NMF.Transformations.Core.ITraceEntry.TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.ITraceEntry.TransformationRule
  nameWithType.vb: TraceEntry(Of TInput, TOut).NMF.Transformations.Core.ITraceEntry.TransformationRule
- uid: NMF.Transformations.TraceEntry`2.Output
  name: Output
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_Output
  commentId: P:NMF.Transformations.TraceEntry`2.Output
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).Output
  nameWithType: TraceEntry<TInput, TOut>.Output
  nameWithType.vb: TraceEntry(Of TInput, TOut).Output
- uid: NMF.Transformations.TraceEntry`2.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_Output_
  commentId: Overload:NMF.Transformations.TraceEntry`2.Output
  isSpec: "True"
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.Output
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).Output
  nameWithType: TraceEntry<TInput, TOut>.Output
  nameWithType.vb: TraceEntry(Of TInput, TOut).Output
- uid: NMF.Transformations.TraceEntry`2.TransformationRule
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_TransformationRule
  commentId: P:NMF.Transformations.TraceEntry`2.TransformationRule
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.TransformationRule
  nameWithType.vb: TraceEntry(Of TInput, TOut).TransformationRule
- uid: NMF.Transformations.TraceEntry`2.TransformationRule*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.TraceEntry-2.html#NMF_Transformations_TraceEntry_2_TransformationRule_
  commentId: Overload:NMF.Transformations.TraceEntry`2.TransformationRule
  isSpec: "True"
  fullName: NMF.Transformations.TraceEntry<TInput, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.TraceEntry(Of TInput, TOut).TransformationRule
  nameWithType: TraceEntry<TInput, TOut>.TransformationRule
  nameWithType.vb: TraceEntry(Of TInput, TOut).TransformationRule
- uid: NMF.Transformations.TraceEntryGroup`2
  name: TraceEntryGroup<TKey, TOut>
  href: api/Transformations/NMF.Transformations.TraceEntryGroup-2.html
  commentId: T:NMF.Transformations.TraceEntryGroup`2
  name.vb: TraceEntryGroup(Of TKey, TOut)
  fullName: NMF.Transformations.TraceEntryGroup<TKey, TOut>
  fullName.vb: NMF.Transformations.TraceEntryGroup(Of TKey, TOut)
  nameWithType: TraceEntryGroup<TKey, TOut>
  nameWithType.vb: TraceEntryGroup(Of TKey, TOut)
- uid: NMF.Transformations.TraceEntryGroup`2.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TraceEntryGroup-2.html#NMF_Transformations_TraceEntryGroup_2_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.TraceEntryGroup`2.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.TraceEntryGroup<TKey, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TraceEntryGroup(Of TKey, TOut).NeedDependenciesForOutputCreation
  nameWithType: TraceEntryGroup<TKey, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TraceEntryGroup(Of TKey, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TraceEntryGroup`2.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TraceEntryGroup-2.html#NMF_Transformations_TraceEntryGroup_2_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.TraceEntryGroup`2.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.TraceEntryGroup<TKey, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TraceEntryGroup(Of TKey, TOut).NeedDependenciesForOutputCreation
  nameWithType: TraceEntryGroup<TKey, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TraceEntryGroup(Of TKey, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TraceExtensions
  name: TraceExtensions
  href: api/Transformations/NMF.Transformations.TraceExtensions.html
  commentId: T:NMF.Transformations.TraceExtensions
  fullName: NMF.Transformations.TraceExtensions
  nameWithType: TraceExtensions
- uid: NMF.Transformations.TraceExtensions.FindAll*
  name: FindAll
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAll_
  commentId: Overload:NMF.Transformations.TraceExtensions.FindAll
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.FindAll
  nameWithType: TraceExtensions.FindAll
- uid: NMF.Transformations.TraceExtensions.FindAll``1(NMF.Transformations.Core.ITransformationTrace,System.Type[])
  name: FindAll<TOut>(ITransformationTrace, Type[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAll__1_NMF_Transformations_Core_ITransformationTrace_System_Type___
  commentId: M:NMF.Transformations.TraceExtensions.FindAll``1(NMF.Transformations.Core.ITransformationTrace,System.Type[])
  name.vb: FindAll(Of TOut)(ITransformationTrace, Type())
  fullName: NMF.Transformations.TraceExtensions.FindAll<TOut>(NMF.Transformations.Core.ITransformationTrace, System.Type[])
  fullName.vb: NMF.Transformations.TraceExtensions.FindAll(Of TOut)(NMF.Transformations.Core.ITransformationTrace, System.Type())
  nameWithType: TraceExtensions.FindAll<TOut>(ITransformationTrace, Type[])
  nameWithType.vb: TraceExtensions.FindAll(Of TOut)(ITransformationTrace, Type())
- uid: NMF.Transformations.TraceExtensions.FindAll``2(NMF.Transformations.Core.ITransformationTrace)
  name: FindAll<TIn, TOut>(ITransformationTrace)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAll__2_NMF_Transformations_Core_ITransformationTrace_
  commentId: M:NMF.Transformations.TraceExtensions.FindAll``2(NMF.Transformations.Core.ITransformationTrace)
  name.vb: FindAll(Of TIn, TOut)(ITransformationTrace)
  fullName: NMF.Transformations.TraceExtensions.FindAll<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace)
  fullName.vb: NMF.Transformations.TraceExtensions.FindAll(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace)
  nameWithType: TraceExtensions.FindAll<TIn, TOut>(ITransformationTrace)
  nameWithType.vb: TraceExtensions.FindAll(Of TIn, TOut)(ITransformationTrace)
- uid: NMF.Transformations.TraceExtensions.FindAll``3(NMF.Transformations.Core.ITransformationTrace)
  name: FindAll<TIn1, TIn2, TOut>(ITransformationTrace)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAll__3_NMF_Transformations_Core_ITransformationTrace_
  commentId: M:NMF.Transformations.TraceExtensions.FindAll``3(NMF.Transformations.Core.ITransformationTrace)
  name.vb: FindAll(Of TIn1, TIn2, TOut)(ITransformationTrace)
  fullName: NMF.Transformations.TraceExtensions.FindAll<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace)
  fullName.vb: NMF.Transformations.TraceExtensions.FindAll(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace)
  nameWithType: TraceExtensions.FindAll<TIn1, TIn2, TOut>(ITransformationTrace)
  nameWithType.vb: TraceExtensions.FindAll(Of TIn1, TIn2, TOut)(ITransformationTrace)
- uid: NMF.Transformations.TraceExtensions.FindAllIn*
  name: FindAllIn
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAllIn_
  commentId: Overload:NMF.Transformations.TraceExtensions.FindAllIn
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.FindAllIn
  nameWithType: TraceExtensions.FindAllIn
- uid: NMF.Transformations.TraceExtensions.FindAllIn``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0})
  name: FindAllIn<TOut>(ITransformationTrace, TransformationRuleBase<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAllIn__1_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0__
  commentId: M:NMF.Transformations.TraceExtensions.FindAllIn``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0})
  name.vb: FindAllIn(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindAllIn<TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindAllIn(Of TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TOut))
  nameWithType: TraceExtensions.FindAllIn<TOut>(ITransformationTrace, TransformationRuleBase<TOut>)
  nameWithType.vb: TraceExtensions.FindAllIn(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindAllIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1})
  name: FindAllIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAllIn__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1__
  commentId: M:NMF.Transformations.TraceExtensions.FindAllIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1})
  name.vb: FindAllIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut))
  fullName: NMF.Transformations.TraceExtensions.FindAllIn<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindAllIn(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut))
  nameWithType: TraceExtensions.FindAllIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>)
  nameWithType.vb: TraceExtensions.FindAllIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut))
- uid: NMF.Transformations.TraceExtensions.FindAllIn``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name: FindAllIn<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindAllIn__3_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1___2__
  commentId: M:NMF.Transformations.TraceExtensions.FindAllIn``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name.vb: FindAllIn(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.TraceExtensions.FindAllIn<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindAllIn(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut))
  nameWithType: TraceExtensions.FindAllIn<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>)
  nameWithType.vb: TraceExtensions.FindAllIn(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.TraceExtensions.FindInWhere*
  name: FindInWhere
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindInWhere_
  commentId: Overload:NMF.Transformations.TraceExtensions.FindInWhere
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.FindInWhere
  nameWithType: TraceExtensions.FindInWhere
- uid: NMF.Transformations.TraceExtensions.FindInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Predicate{``0})
  name: FindInWhere<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindInWhere__1_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0__System_Predicate___0__
  commentId: M:NMF.Transformations.TraceExtensions.FindInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Predicate{``0})
  name.vb: FindInWhere(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindInWhere<TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TOut>, System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindInWhere(Of TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TOut), System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindInWhere<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindInWhere(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{``1})
  name: FindInWhere<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindInWhere__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1__System_Predicate___1__
  commentId: M:NMF.Transformations.TraceExtensions.FindInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{``1})
  name.vb: FindInWhere(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindInWhere<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindInWhere(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindInWhere<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindInWhere(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindInWhere``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Predicate{``2})
  name: FindInWhere<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindInWhere__3_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1___2__System_Predicate___2__
  commentId: M:NMF.Transformations.TraceExtensions.FindInWhere``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Predicate{``2})
  name.vb: FindInWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindInWhere<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindInWhere(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindInWhere<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindInWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindWhere*
  name: FindWhere
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindWhere_
  commentId: Overload:NMF.Transformations.TraceExtensions.FindWhere
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.FindWhere
  nameWithType: TraceExtensions.FindWhere
- uid: NMF.Transformations.TraceExtensions.FindWhere``1(NMF.Transformations.Core.ITransformationTrace,System.Type[],System.Predicate{``0})
  name: FindWhere<TOut>(ITransformationTrace, Type[], Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindWhere__1_NMF_Transformations_Core_ITransformationTrace_System_Type___System_Predicate___0__
  commentId: M:NMF.Transformations.TraceExtensions.FindWhere``1(NMF.Transformations.Core.ITransformationTrace,System.Type[],System.Predicate{``0})
  name.vb: FindWhere(Of TOut)(ITransformationTrace, Type(), Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindWhere<TOut>(NMF.Transformations.Core.ITransformationTrace, System.Type[], System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindWhere(Of TOut)(NMF.Transformations.Core.ITransformationTrace, System.Type(), System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindWhere<TOut>(ITransformationTrace, Type[], Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindWhere(Of TOut)(ITransformationTrace, Type(), Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindWhere``2(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``1})
  name: FindWhere<TIn, TOut>(ITransformationTrace, Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindWhere__2_NMF_Transformations_Core_ITransformationTrace_System_Predicate___1__
  commentId: M:NMF.Transformations.TraceExtensions.FindWhere``2(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``1})
  name.vb: FindWhere(Of TIn, TOut)(ITransformationTrace, Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindWhere<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindWhere(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindWhere<TIn, TOut>(ITransformationTrace, Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindWhere(Of TIn, TOut)(ITransformationTrace, Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.FindWhere``3(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``2})
  name: FindWhere<TIn1, TIn2, TOut>(ITransformationTrace, Predicate<TOut>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_FindWhere__3_NMF_Transformations_Core_ITransformationTrace_System_Predicate___2__
  commentId: M:NMF.Transformations.TraceExtensions.FindWhere``3(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``2})
  name.vb: FindWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, Predicate(Of TOut))
  fullName: NMF.Transformations.TraceExtensions.FindWhere<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, System.Predicate<TOut>)
  fullName.vb: NMF.Transformations.TraceExtensions.FindWhere(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, System.Predicate(Of TOut))
  nameWithType: TraceExtensions.FindWhere<TIn1, TIn2, TOut>(ITransformationTrace, Predicate<TOut>)
  nameWithType.vb: TraceExtensions.FindWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, Predicate(Of TOut))
- uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem*
  name: GetOrCreateUserItem
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem_
  commentId: Overload:NMF.Transformations.TraceExtensions.GetOrCreateUserItem
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem
  nameWithType: TraceExtensions.GetOrCreateUserItem
- uid: NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  name: GetOrCreateUserItem<TValue>(ITransformationContext, Object, Func<TValue>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_GetOrCreateUserItem__1_NMF_Transformations_Core_ITransformationContext_System_Object_System_Func___0__
  commentId: M:NMF.Transformations.TraceExtensions.GetOrCreateUserItem``1(NMF.Transformations.Core.ITransformationContext,System.Object,System.Func{``0})
  name.vb: GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
  fullName: NMF.Transformations.TraceExtensions.GetOrCreateUserItem<TValue>(NMF.Transformations.Core.ITransformationContext, System.Object, System.Func<TValue>)
  fullName.vb: NMF.Transformations.TraceExtensions.GetOrCreateUserItem(Of TValue)(NMF.Transformations.Core.ITransformationContext, System.Object, System.Func(Of TValue))
  nameWithType: TraceExtensions.GetOrCreateUserItem<TValue>(ITransformationContext, Object, Func<TValue>)
  nameWithType.vb: TraceExtensions.GetOrCreateUserItem(Of TValue)(ITransformationContext, Object, Func(Of TValue))
- uid: NMF.Transformations.TraceExtensions.Resolve*
  name: Resolve
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_Resolve_
  commentId: Overload:NMF.Transformations.TraceExtensions.Resolve
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.Resolve
  nameWithType: TraceExtensions.Resolve
- uid: NMF.Transformations.TraceExtensions.Resolve``1(NMF.Transformations.Core.ITransformationTrace,System.Object[])
  name: Resolve<TOut>(ITransformationTrace, Object[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_Resolve__1_NMF_Transformations_Core_ITransformationTrace_System_Object___
  commentId: M:NMF.Transformations.TraceExtensions.Resolve``1(NMF.Transformations.Core.ITransformationTrace,System.Object[])
  name.vb: Resolve(Of TOut)(ITransformationTrace, Object())
  fullName: NMF.Transformations.TraceExtensions.Resolve<TOut>(NMF.Transformations.Core.ITransformationTrace, System.Object[])
  fullName.vb: NMF.Transformations.TraceExtensions.Resolve(Of TOut)(NMF.Transformations.Core.ITransformationTrace, System.Object())
  nameWithType: TraceExtensions.Resolve<TOut>(ITransformationTrace, Object[])
  nameWithType.vb: TraceExtensions.Resolve(Of TOut)(ITransformationTrace, Object())
- uid: NMF.Transformations.TraceExtensions.Resolve``2(NMF.Transformations.Core.ITransformationTrace,``0)
  name: Resolve<TIn, TOut>(ITransformationTrace, TIn)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_Resolve__2_NMF_Transformations_Core_ITransformationTrace___0_
  commentId: M:NMF.Transformations.TraceExtensions.Resolve``2(NMF.Transformations.Core.ITransformationTrace,``0)
  name.vb: Resolve(Of TIn, TOut)(ITransformationTrace, TIn)
  fullName: NMF.Transformations.TraceExtensions.Resolve<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, TIn)
  fullName.vb: NMF.Transformations.TraceExtensions.Resolve(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, TIn)
  nameWithType: TraceExtensions.Resolve<TIn, TOut>(ITransformationTrace, TIn)
  nameWithType.vb: TraceExtensions.Resolve(Of TIn, TOut)(ITransformationTrace, TIn)
- uid: NMF.Transformations.TraceExtensions.Resolve``3(NMF.Transformations.Core.ITransformationTrace,``0,``1)
  name: Resolve<TIn1, TIn2, TOut>(ITransformationTrace, TIn1, TIn2)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_Resolve__3_NMF_Transformations_Core_ITransformationTrace___0___1_
  commentId: M:NMF.Transformations.TraceExtensions.Resolve``3(NMF.Transformations.Core.ITransformationTrace,``0,``1)
  name.vb: Resolve(Of TIn1, TIn2, TOut)(ITransformationTrace, TIn1, TIn2)
  fullName: NMF.Transformations.TraceExtensions.Resolve<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, TIn1, TIn2)
  fullName.vb: NMF.Transformations.TraceExtensions.Resolve(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, TIn1, TIn2)
  nameWithType: TraceExtensions.Resolve<TIn1, TIn2, TOut>(ITransformationTrace, TIn1, TIn2)
  nameWithType.vb: TraceExtensions.Resolve(Of TIn1, TIn2, TOut)(ITransformationTrace, TIn1, TIn2)
- uid: NMF.Transformations.TraceExtensions.ResolveIn(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name: ResolveIn(ITransformationTrace, GeneralTransformationRule, Object[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveIn_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_Core_GeneralTransformationRule_System_Object___
  commentId: M:NMF.Transformations.TraceExtensions.ResolveIn(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Object[])
  name.vb: ResolveIn(ITransformationTrace, GeneralTransformationRule, Object())
  fullName: NMF.Transformations.TraceExtensions.ResolveIn(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Object[])
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveIn(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Object())
  nameWithType: TraceExtensions.ResolveIn(ITransformationTrace, GeneralTransformationRule, Object[])
  nameWithType.vb: TraceExtensions.ResolveIn(ITransformationTrace, GeneralTransformationRule, Object())
- uid: NMF.Transformations.TraceExtensions.ResolveIn*
  name: ResolveIn
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveIn_
  commentId: Overload:NMF.Transformations.TraceExtensions.ResolveIn
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.ResolveIn
  nameWithType: TraceExtensions.ResolveIn
- uid: NMF.Transformations.TraceExtensions.ResolveIn``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Object[])
  name: ResolveIn<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Object[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveIn__1_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0__System_Object___
  commentId: M:NMF.Transformations.TraceExtensions.ResolveIn``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Object[])
  name.vb: ResolveIn(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Object())
  fullName: NMF.Transformations.TraceExtensions.ResolveIn<TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TOut>, System.Object[])
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveIn(Of TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TOut), System.Object())
  nameWithType: TraceExtensions.ResolveIn<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Object[])
  nameWithType.vb: TraceExtensions.ResolveIn(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Object())
- uid: NMF.Transformations.TraceExtensions.ResolveIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0)
  name: ResolveIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveIn__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1____0_
  commentId: M:NMF.Transformations.TraceExtensions.ResolveIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0)
  name.vb: ResolveIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn)
  fullName: NMF.Transformations.TraceExtensions.ResolveIn<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, TIn)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveIn(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), TIn)
  nameWithType: TraceExtensions.ResolveIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn)
  nameWithType.vb: TraceExtensions.ResolveIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn)
- uid: NMF.Transformations.TraceExtensions.ResolveIn``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1)
  name: ResolveIn<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveIn__3_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1___2____0___1_
  commentId: M:NMF.Transformations.TraceExtensions.ResolveIn``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},``0,``1)
  name.vb: ResolveIn(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2)
  fullName: NMF.Transformations.TraceExtensions.ResolveIn<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveIn(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2)
  nameWithType: TraceExtensions.ResolveIn<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, TIn1, TIn2)
  nameWithType.vb: TraceExtensions.ResolveIn(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), TIn1, TIn2)
- uid: NMF.Transformations.TraceExtensions.ResolveInWhere(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{NMF.Transformations.Core.ITraceEntry})
  name: ResolveInWhere(ITransformationTrace, GeneralTransformationRule, Predicate<ITraceEntry>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveInWhere_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate_NMF_Transformations_Core_ITraceEntry__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveInWhere(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{NMF.Transformations.Core.ITraceEntry})
  name.vb: ResolveInWhere(ITransformationTrace, GeneralTransformationRule, Predicate(Of ITraceEntry))
  fullName: NMF.Transformations.TraceExtensions.ResolveInWhere(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<NMF.Transformations.Core.ITraceEntry>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveInWhere(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of NMF.Transformations.Core.ITraceEntry))
  nameWithType: TraceExtensions.ResolveInWhere(ITransformationTrace, GeneralTransformationRule, Predicate<ITraceEntry>)
  nameWithType.vb: TraceExtensions.ResolveInWhere(ITransformationTrace, GeneralTransformationRule, Predicate(Of ITraceEntry))
- uid: NMF.Transformations.TraceExtensions.ResolveInWhere*
  name: ResolveInWhere
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveInWhere_
  commentId: Overload:NMF.Transformations.TraceExtensions.ResolveInWhere
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.ResolveInWhere
  nameWithType: TraceExtensions.ResolveInWhere
- uid: NMF.Transformations.TraceExtensions.ResolveInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Predicate{System.Object[]})
  name: ResolveInWhere<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Predicate<Object[]>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveInWhere__1_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0__System_Predicate_System_Object____
  commentId: M:NMF.Transformations.TraceExtensions.ResolveInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0},System.Predicate{System.Object[]})
  name.vb: ResolveInWhere(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Predicate(Of Object()))
  fullName: NMF.Transformations.TraceExtensions.ResolveInWhere<TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TOut>, System.Predicate<System.Object[]>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveInWhere(Of TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TOut), System.Predicate(Of System.Object()))
  nameWithType: TraceExtensions.ResolveInWhere<TOut>(ITransformationTrace, TransformationRuleBase<TOut>, Predicate<Object[]>)
  nameWithType.vb: TraceExtensions.ResolveInWhere(Of TOut)(ITransformationTrace, TransformationRuleBase(Of TOut), Predicate(Of Object()))
- uid: NMF.Transformations.TraceExtensions.ResolveInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{``0})
  name: ResolveInWhere<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveInWhere__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1__System_Predicate___0__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{``0})
  name.vb: ResolveInWhere(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), Predicate(Of TIn))
  fullName: NMF.Transformations.TraceExtensions.ResolveInWhere<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveInWhere(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), System.Predicate(Of TIn))
  nameWithType: TraceExtensions.ResolveInWhere<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, Predicate<TIn>)
  nameWithType.vb: TraceExtensions.ResolveInWhere(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), Predicate(Of TIn))
- uid: NMF.Transformations.TraceExtensions.ResolveInWhere``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Boolean})
  name: ResolveInWhere<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveInWhere__3_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveInWhere``3(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Boolean})
  name.vb: ResolveInWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.TraceExtensions.ResolveInWhere<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveInWhere(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: TraceExtensions.ResolveInWhere<TIn1, TIn2, TOut>(ITransformationTrace, TransformationRuleBase<TIn1, TIn2, TOut>, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: TraceExtensions.ResolveInWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn1, TIn2, TOut), Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.TraceExtensions.ResolveMany*
  name: ResolveMany
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveMany_
  commentId: Overload:NMF.Transformations.TraceExtensions.ResolveMany
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.ResolveMany
  nameWithType: TraceExtensions.ResolveMany
- uid: NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,``0)
  name: ResolveMany<TIn, TOut>(ITransformationTrace, TIn)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveMany__2_NMF_Transformations_Core_ITransformationTrace___0_
  commentId: M:NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,``0)
  name.vb: ResolveMany(Of TIn, TOut)(ITransformationTrace, TIn)
  fullName: NMF.Transformations.TraceExtensions.ResolveMany<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, TIn)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveMany(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, TIn)
  nameWithType: TraceExtensions.ResolveMany<TIn, TOut>(ITransformationTrace, TIn)
  nameWithType.vb: TraceExtensions.ResolveMany(Of TIn, TOut)(ITransformationTrace, TIn)
- uid: NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,``0[])
  name: ResolveMany<TIn, TOut>(ITransformationTrace, TIn[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveMany__2_NMF_Transformations_Core_ITransformationTrace___0___
  commentId: M:NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,``0[])
  name.vb: ResolveMany(Of TIn, TOut)(ITransformationTrace, TIn())
  fullName: NMF.Transformations.TraceExtensions.ResolveMany<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, TIn[])
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveMany(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, TIn())
  nameWithType: TraceExtensions.ResolveMany<TIn, TOut>(ITransformationTrace, TIn[])
  nameWithType.vb: TraceExtensions.ResolveMany(Of TIn, TOut)(ITransformationTrace, TIn())
- uid: NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,System.Collections.Generic.IEnumerable{``0})
  name: ResolveMany<TIn, TOut>(ITransformationTrace, IEnumerable<TIn>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveMany__2_NMF_Transformations_Core_ITransformationTrace_System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveMany``2(NMF.Transformations.Core.ITransformationTrace,System.Collections.Generic.IEnumerable{``0})
  name.vb: ResolveMany(Of TIn, TOut)(ITransformationTrace, IEnumerable(Of TIn))
  fullName: NMF.Transformations.TraceExtensions.ResolveMany<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, System.Collections.Generic.IEnumerable<TIn>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveMany(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, System.Collections.Generic.IEnumerable(Of TIn))
  nameWithType: TraceExtensions.ResolveMany<TIn, TOut>(ITransformationTrace, IEnumerable<TIn>)
  nameWithType.vb: TraceExtensions.ResolveMany(Of TIn, TOut)(ITransformationTrace, IEnumerable(Of TIn))
- uid: NMF.Transformations.TraceExtensions.ResolveManyIn*
  name: ResolveManyIn
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveManyIn_
  commentId: Overload:NMF.Transformations.TraceExtensions.ResolveManyIn
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.ResolveManyIn
  nameWithType: TraceExtensions.ResolveManyIn
- uid: NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0)
  name: ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveManyIn__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1____0_
  commentId: M:NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0)
  name.vb: ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn)
  fullName: NMF.Transformations.TraceExtensions.ResolveManyIn<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, TIn)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveManyIn(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), TIn)
  nameWithType: TraceExtensions.ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn)
  nameWithType.vb: TraceExtensions.ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn)
- uid: NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0[])
  name: ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn[])
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveManyIn__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1____0___
  commentId: M:NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},``0[])
  name.vb: ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn())
  fullName: NMF.Transformations.TraceExtensions.ResolveManyIn<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, TIn[])
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveManyIn(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), TIn())
  nameWithType: TraceExtensions.ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, TIn[])
  nameWithType.vb: TraceExtensions.ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), TIn())
- uid: NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Collections.Generic.IEnumerable{``0})
  name: ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, IEnumerable<TIn>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveManyIn__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_TransformationRuleBase___0___1__System_Collections_Generic_IEnumerable___0__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveManyIn``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.TransformationRuleBase{``0,``1},System.Collections.Generic.IEnumerable{``0})
  name.vb: ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), IEnumerable(Of TIn))
  fullName: NMF.Transformations.TraceExtensions.ResolveManyIn<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase<TIn, TOut>, System.Collections.Generic.IEnumerable<TIn>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveManyIn(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.TransformationRuleBase(Of TIn, TOut), System.Collections.Generic.IEnumerable(Of TIn))
  nameWithType: TraceExtensions.ResolveManyIn<TIn, TOut>(ITransformationTrace, TransformationRuleBase<TIn, TOut>, IEnumerable<TIn>)
  nameWithType.vb: TraceExtensions.ResolveManyIn(Of TIn, TOut)(ITransformationTrace, TransformationRuleBase(Of TIn, TOut), IEnumerable(Of TIn))
- uid: NMF.Transformations.TraceExtensions.ResolveWhere*
  name: ResolveWhere
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveWhere_
  commentId: Overload:NMF.Transformations.TraceExtensions.ResolveWhere
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.ResolveWhere
  nameWithType: TraceExtensions.ResolveWhere
- uid: NMF.Transformations.TraceExtensions.ResolveWhere``1(NMF.Transformations.Core.ITransformationTrace,System.Type[],System.Predicate{System.Object[]})
  name: ResolveWhere<TOut>(ITransformationTrace, Type[], Predicate<Object[]>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveWhere__1_NMF_Transformations_Core_ITransformationTrace_System_Type___System_Predicate_System_Object____
  commentId: M:NMF.Transformations.TraceExtensions.ResolveWhere``1(NMF.Transformations.Core.ITransformationTrace,System.Type[],System.Predicate{System.Object[]})
  name.vb: ResolveWhere(Of TOut)(ITransformationTrace, Type(), Predicate(Of Object()))
  fullName: NMF.Transformations.TraceExtensions.ResolveWhere<TOut>(NMF.Transformations.Core.ITransformationTrace, System.Type[], System.Predicate<System.Object[]>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveWhere(Of TOut)(NMF.Transformations.Core.ITransformationTrace, System.Type(), System.Predicate(Of System.Object()))
  nameWithType: TraceExtensions.ResolveWhere<TOut>(ITransformationTrace, Type[], Predicate<Object[]>)
  nameWithType.vb: TraceExtensions.ResolveWhere(Of TOut)(ITransformationTrace, Type(), Predicate(Of Object()))
- uid: NMF.Transformations.TraceExtensions.ResolveWhere``2(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``0})
  name: ResolveWhere<TIn, TOut>(ITransformationTrace, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveWhere__2_NMF_Transformations_Core_ITransformationTrace_System_Predicate___0__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveWhere``2(NMF.Transformations.Core.ITransformationTrace,System.Predicate{``0})
  name.vb: ResolveWhere(Of TIn, TOut)(ITransformationTrace, Predicate(Of TIn))
  fullName: NMF.Transformations.TraceExtensions.ResolveWhere<TIn, TOut>(NMF.Transformations.Core.ITransformationTrace, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveWhere(Of TIn, TOut)(NMF.Transformations.Core.ITransformationTrace, System.Predicate(Of TIn))
  nameWithType: TraceExtensions.ResolveWhere<TIn, TOut>(ITransformationTrace, Predicate<TIn>)
  nameWithType.vb: TraceExtensions.ResolveWhere(Of TIn, TOut)(ITransformationTrace, Predicate(Of TIn))
- uid: NMF.Transformations.TraceExtensions.ResolveWhere``3(NMF.Transformations.Core.ITransformationTrace,System.Func{``0,``1,System.Boolean})
  name: ResolveWhere<TIn1, TIn2, TOut>(ITransformationTrace, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_ResolveWhere__3_NMF_Transformations_Core_ITransformationTrace_System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.TraceExtensions.ResolveWhere``3(NMF.Transformations.Core.ITransformationTrace,System.Func{``0,``1,System.Boolean})
  name.vb: ResolveWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.TraceExtensions.ResolveWhere<TIn1, TIn2, TOut>(NMF.Transformations.Core.ITransformationTrace, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.TraceExtensions.ResolveWhere(Of TIn1, TIn2, TOut)(NMF.Transformations.Core.ITransformationTrace, System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: TraceExtensions.ResolveWhere<TIn1, TIn2, TOut>(ITransformationTrace, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: TraceExtensions.ResolveWhere(Of TIn1, TIn2, TOut)(ITransformationTrace, Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.TraceExtensions.TraceInWhere(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name: TraceInWhere(ITransformationTrace, GeneralTransformationRule, Predicate<Object[]>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_TraceInWhere_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate_System_Object____
  commentId: M:NMF.Transformations.TraceExtensions.TraceInWhere(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name.vb: TraceInWhere(ITransformationTrace, GeneralTransformationRule, Predicate(Of Object()))
  fullName: NMF.Transformations.TraceExtensions.TraceInWhere(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<System.Object[]>)
  fullName.vb: NMF.Transformations.TraceExtensions.TraceInWhere(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of System.Object()))
  nameWithType: TraceExtensions.TraceInWhere(ITransformationTrace, GeneralTransformationRule, Predicate<Object[]>)
  nameWithType.vb: TraceExtensions.TraceInWhere(ITransformationTrace, GeneralTransformationRule, Predicate(Of Object()))
- uid: NMF.Transformations.TraceExtensions.TraceInWhere*
  name: TraceInWhere
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_TraceInWhere_
  commentId: Overload:NMF.Transformations.TraceExtensions.TraceInWhere
  isSpec: "True"
  fullName: NMF.Transformations.TraceExtensions.TraceInWhere
  nameWithType: TraceExtensions.TraceInWhere
- uid: NMF.Transformations.TraceExtensions.TraceInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{``0})
  name: TraceInWhere<TIn>(ITransformationTrace, GeneralTransformationRule<TIn>, Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_TraceInWhere__1_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_GeneralTransformationRule___0__System_Predicate___0__
  commentId: M:NMF.Transformations.TraceExtensions.TraceInWhere``1(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.GeneralTransformationRule{``0},System.Predicate{``0})
  name.vb: TraceInWhere(Of TIn)(ITransformationTrace, GeneralTransformationRule(Of TIn), Predicate(Of TIn))
  fullName: NMF.Transformations.TraceExtensions.TraceInWhere<TIn>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.GeneralTransformationRule<TIn>, System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.TraceExtensions.TraceInWhere(Of TIn)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.GeneralTransformationRule(Of TIn), System.Predicate(Of TIn))
  nameWithType: TraceExtensions.TraceInWhere<TIn>(ITransformationTrace, GeneralTransformationRule<TIn>, Predicate<TIn>)
  nameWithType.vb: TraceExtensions.TraceInWhere(Of TIn)(ITransformationTrace, GeneralTransformationRule(Of TIn), Predicate(Of TIn))
- uid: NMF.Transformations.TraceExtensions.TraceInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Boolean})
  name: TraceInWhere<TIn1, TIn2>(ITransformationTrace, GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.TraceExtensions.html#NMF_Transformations_TraceExtensions_TraceInWhere__2_NMF_Transformations_Core_ITransformationTrace_NMF_Transformations_GeneralTransformationRule___0___1__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.TraceExtensions.TraceInWhere``2(NMF.Transformations.Core.ITransformationTrace,NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{``0,``1,System.Boolean})
  name.vb: TraceInWhere(Of TIn1, TIn2)(ITransformationTrace, GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.TraceExtensions.TraceInWhere<TIn1, TIn2>(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>, System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.TraceExtensions.TraceInWhere(Of TIn1, TIn2)(NMF.Transformations.Core.ITransformationTrace, NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2), System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: TraceExtensions.TraceInWhere<TIn1, TIn2>(ITransformationTrace, GeneralTransformationRule<TIn1, TIn2>, Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: TraceExtensions.TraceInWhere(Of TIn1, TIn2)(ITransformationTrace, GeneralTransformationRule(Of TIn1, TIn2), Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.TransformationComputation`1
  name: TransformationComputation<TOut>
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html
  commentId: T:NMF.Transformations.TransformationComputation`1
  name.vb: TransformationComputation(Of TOut)
  fullName: NMF.Transformations.TransformationComputation<TOut>
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut)
  nameWithType: TransformationComputation<TOut>
  nameWithType.vb: TransformationComputation(Of TOut)
- uid: NMF.Transformations.TransformationComputation`1.#ctor(NMF.Transformations.TransformationRuleBase{`0},NMF.Transformations.Core.IComputationContext,System.Object[])
  name: TransformationComputation(TransformationRuleBase<TOut>, IComputationContext, Object[])
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1__ctor_NMF_Transformations_TransformationRuleBase__0__NMF_Transformations_Core_IComputationContext_System_Object___
  commentId: M:NMF.Transformations.TransformationComputation`1.#ctor(NMF.Transformations.TransformationRuleBase{`0},NMF.Transformations.Core.IComputationContext,System.Object[])
  name.vb: TransformationComputation(TransformationRuleBase(Of TOut), IComputationContext, Object())
  fullName: NMF.Transformations.TransformationComputation<TOut>.TransformationComputation(NMF.Transformations.TransformationRuleBase<TOut>, NMF.Transformations.Core.IComputationContext, System.Object[])
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).TransformationComputation(NMF.Transformations.TransformationRuleBase(Of TOut), NMF.Transformations.Core.IComputationContext, System.Object())
  nameWithType: TransformationComputation<TOut>.TransformationComputation(TransformationRuleBase<TOut>, IComputationContext, Object[])
  nameWithType.vb: TransformationComputation(Of TOut).TransformationComputation(TransformationRuleBase(Of TOut), IComputationContext, Object())
- uid: NMF.Transformations.TransformationComputation`1.#ctor*
  name: TransformationComputation
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1__ctor_
  commentId: Overload:NMF.Transformations.TransformationComputation`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TOut>.TransformationComputation
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).TransformationComputation
  nameWithType: TransformationComputation<TOut>.TransformationComputation
  nameWithType.vb: TransformationComputation(Of TOut).TransformationComputation
- uid: NMF.Transformations.TransformationComputation`1.Output
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1_Output
  commentId: P:NMF.Transformations.TransformationComputation`1.Output
  fullName: NMF.Transformations.TransformationComputation<TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).Output
  nameWithType: TransformationComputation<TOut>.Output
  nameWithType.vb: TransformationComputation(Of TOut).Output
- uid: NMF.Transformations.TransformationComputation`1.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1_Output_
  commentId: Overload:NMF.Transformations.TransformationComputation`1.Output
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).Output
  nameWithType: TransformationComputation<TOut>.Output
  nameWithType.vb: TransformationComputation(Of TOut).Output
- uid: NMF.Transformations.TransformationComputation`1.OutputCore
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1_OutputCore
  commentId: P:NMF.Transformations.TransformationComputation`1.OutputCore
  fullName: NMF.Transformations.TransformationComputation<TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).OutputCore
  nameWithType: TransformationComputation<TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TOut).OutputCore
- uid: NMF.Transformations.TransformationComputation`1.OutputCore*
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-1.html#NMF_Transformations_TransformationComputation_1_OutputCore_
  commentId: Overload:NMF.Transformations.TransformationComputation`1.OutputCore
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TOut).OutputCore
  nameWithType: TransformationComputation<TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TOut).OutputCore
- uid: NMF.Transformations.TransformationComputation`2
  name: TransformationComputation<TIn, TOut>
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html
  commentId: T:NMF.Transformations.TransformationComputation`2
  name.vb: TransformationComputation(Of TIn, TOut)
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut)
  nameWithType: TransformationComputation<TIn, TOut>
  nameWithType.vb: TransformationComputation(Of TIn, TOut)
- uid: NMF.Transformations.TransformationComputation`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0)
  name: TransformationComputation(TransformationRuleBase<TIn, TOut>, IComputationContext, TIn)
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2__ctor_NMF_Transformations_TransformationRuleBase__0__1__NMF_Transformations_Core_IComputationContext__0_
  commentId: M:NMF.Transformations.TransformationComputation`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.Core.IComputationContext,`0)
  name.vb: TransformationComputation(TransformationRuleBase(Of TIn, TOut), IComputationContext, TIn)
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.TransformationComputation(NMF.Transformations.TransformationRuleBase<TIn, TOut>, NMF.Transformations.Core.IComputationContext, TIn)
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).TransformationComputation(NMF.Transformations.TransformationRuleBase(Of TIn, TOut), NMF.Transformations.Core.IComputationContext, TIn)
  nameWithType: TransformationComputation<TIn, TOut>.TransformationComputation(TransformationRuleBase<TIn, TOut>, IComputationContext, TIn)
  nameWithType.vb: TransformationComputation(Of TIn, TOut).TransformationComputation(TransformationRuleBase(Of TIn, TOut), IComputationContext, TIn)
- uid: NMF.Transformations.TransformationComputation`2.#ctor*
  name: TransformationComputation
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2__ctor_
  commentId: Overload:NMF.Transformations.TransformationComputation`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.TransformationComputation
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).TransformationComputation
  nameWithType: TransformationComputation<TIn, TOut>.TransformationComputation
  nameWithType.vb: TransformationComputation(Of TIn, TOut).TransformationComputation
- uid: NMF.Transformations.TransformationComputation`2.Output
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2_Output
  commentId: P:NMF.Transformations.TransformationComputation`2.Output
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).Output
  nameWithType: TransformationComputation<TIn, TOut>.Output
  nameWithType.vb: TransformationComputation(Of TIn, TOut).Output
- uid: NMF.Transformations.TransformationComputation`2.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2_Output_
  commentId: Overload:NMF.Transformations.TransformationComputation`2.Output
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).Output
  nameWithType: TransformationComputation<TIn, TOut>.Output
  nameWithType.vb: TransformationComputation(Of TIn, TOut).Output
- uid: NMF.Transformations.TransformationComputation`2.OutputCore
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2_OutputCore
  commentId: P:NMF.Transformations.TransformationComputation`2.OutputCore
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).OutputCore
  nameWithType: TransformationComputation<TIn, TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Transformations.TransformationComputation`2.OutputCore*
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-2.html#NMF_Transformations_TransformationComputation_2_OutputCore_
  commentId: Overload:NMF.Transformations.TransformationComputation`2.OutputCore
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn, TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn, TOut).OutputCore
  nameWithType: TransformationComputation<TIn, TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Transformations.TransformationComputation`3
  name: TransformationComputation<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html
  commentId: T:NMF.Transformations.TransformationComputation`3
  name.vb: TransformationComputation(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut)
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.TransformationComputation`3.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1,`2},NMF.Transformations.Core.IComputationContext,`0,`1)
  name: TransformationComputation(TransformationRuleBase<TIn1, TIn2, TOut>, IComputationContext, TIn1, TIn2)
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3__ctor_NMF_Transformations_TransformationRuleBase__0__1__2__NMF_Transformations_Core_IComputationContext__0__1_
  commentId: M:NMF.Transformations.TransformationComputation`3.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1,`2},NMF.Transformations.Core.IComputationContext,`0,`1)
  name.vb: TransformationComputation(TransformationRuleBase(Of TIn1, TIn2, TOut), IComputationContext, TIn1, TIn2)
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.TransformationComputation(NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>, NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).TransformationComputation(NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut), NMF.Transformations.Core.IComputationContext, TIn1, TIn2)
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.TransformationComputation(TransformationRuleBase<TIn1, TIn2, TOut>, IComputationContext, TIn1, TIn2)
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).TransformationComputation(TransformationRuleBase(Of TIn1, TIn2, TOut), IComputationContext, TIn1, TIn2)
- uid: NMF.Transformations.TransformationComputation`3.#ctor*
  name: TransformationComputation
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3__ctor_
  commentId: Overload:NMF.Transformations.TransformationComputation`3.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.TransformationComputation
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).TransformationComputation
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.TransformationComputation
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).TransformationComputation
- uid: NMF.Transformations.TransformationComputation`3.Output
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3_Output
  commentId: P:NMF.Transformations.TransformationComputation`3.Output
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).Output
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.Output
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).Output
- uid: NMF.Transformations.TransformationComputation`3.Output*
  name: Output
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3_Output_
  commentId: Overload:NMF.Transformations.TransformationComputation`3.Output
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.Output
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).Output
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.Output
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).Output
- uid: NMF.Transformations.TransformationComputation`3.OutputCore
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3_OutputCore
  commentId: P:NMF.Transformations.TransformationComputation`3.OutputCore
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).OutputCore
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).OutputCore
- uid: NMF.Transformations.TransformationComputation`3.OutputCore*
  name: OutputCore
  href: api/Transformations/NMF.Transformations.TransformationComputation-3.html#NMF_Transformations_TransformationComputation_3_OutputCore_
  commentId: Overload:NMF.Transformations.TransformationComputation`3.OutputCore
  isSpec: "True"
  fullName: NMF.Transformations.TransformationComputation<TIn1, TIn2, TOut>.OutputCore
  fullName.vb: NMF.Transformations.TransformationComputation(Of TIn1, TIn2, TOut).OutputCore
  nameWithType: TransformationComputation<TIn1, TIn2, TOut>.OutputCore
  nameWithType.vb: TransformationComputation(Of TIn1, TIn2, TOut).OutputCore
- uid: NMF.Transformations.TransformationEngine
  name: TransformationEngine
  href: api/Transformations/NMF.Transformations.TransformationEngine.html
  commentId: T:NMF.Transformations.TransformationEngine
  fullName: NMF.Transformations.TransformationEngine
  nameWithType: TransformationEngine
- uid: NMF.Transformations.TransformationEngine.Process*
  name: Process
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process_
  commentId: Overload:NMF.Transformations.TransformationEngine.Process
  isSpec: "True"
  fullName: NMF.Transformations.TransformationEngine.Process
  nameWithType: TransformationEngine.Process
- uid: NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.ITransformationEngineContext)
  name: Process<TIn>(TIn, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__1___0_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Process(Of TIn)(TIn, ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.Process<TIn>(TIn, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn)(TIn, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.Process<TIn>(TIn, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.Process(Of TIn)(TIn, ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0})
  name: Process<TIn>(TIn, ITransformationEngineContext, GeneralTransformationRule<TIn>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__1___0_NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_GeneralTransformationRule___0__
  commentId: M:NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0})
  name.vb: Process(Of TIn)(TIn, ITransformationEngineContext, GeneralTransformationRule(Of TIn))
  fullName: NMF.Transformations.TransformationEngine.Process<TIn>(TIn, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule<TIn>)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn)(TIn, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule(Of TIn))
  nameWithType: TransformationEngine.Process<TIn>(TIn, ITransformationEngineContext, GeneralTransformationRule<TIn>)
  nameWithType.vb: TransformationEngine.Process(Of TIn)(TIn, ITransformationEngineContext, GeneralTransformationRule(Of TIn))
- uid: NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.Transformation)
  name: Process<TIn>(TIn, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__1___0_NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.Process``1(``0,NMF.Transformations.Core.Transformation)
  name.vb: Process(Of TIn)(TIn, Transformation)
  fullName: NMF.Transformations.TransformationEngine.Process<TIn>(TIn, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn)(TIn, NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.Process<TIn>(TIn, Transformation)
  nameWithType.vb: TransformationEngine.Process(Of TIn)(TIn, Transformation)
- uid: NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.ITransformationEngineContext)
  name: Process<TIn1, TIn2>(TIn1, TIn2, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__2___0___1_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Process(Of TIn1, TIn2)(TIn1, TIn2, ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0,``1})
  name: Process<TIn1, TIn2>(TIn1, TIn2, ITransformationEngineContext, GeneralTransformationRule<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__2___0___1_NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_GeneralTransformationRule___0___1__
  commentId: M:NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0,``1})
  name.vb: Process(Of TIn1, TIn2)(TIn1, TIn2, ITransformationEngineContext, GeneralTransformationRule(Of TIn1, TIn2))
  fullName: NMF.Transformations.TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2))
  nameWithType: TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, ITransformationEngineContext, GeneralTransformationRule<TIn1, TIn2>)
  nameWithType.vb: TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, ITransformationEngineContext, GeneralTransformationRule(Of TIn1, TIn2))
- uid: NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.Transformation)
  name: Process<TIn1, TIn2>(TIn1, TIn2, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Process__2___0___1_NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.Process``2(``0,``1,NMF.Transformations.Core.Transformation)
  name.vb: Process(Of TIn1, TIn2)(TIn1, TIn2, Transformation)
  fullName: NMF.Transformations.TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.Process<TIn1, TIn2>(TIn1, TIn2, Transformation)
  nameWithType.vb: TransformationEngine.Process(Of TIn1, TIn2)(TIn1, TIn2, Transformation)
- uid: NMF.Transformations.TransformationEngine.ProcessMany*
  name: ProcessMany
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany_
  commentId: Overload:NMF.Transformations.TransformationEngine.ProcessMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationEngine.ProcessMany
  nameWithType: TransformationEngine.ProcessMany
- uid: NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext)
  name: ProcessMany<TIn>(IEnumerable<TIn>, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__1_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: ProcessMany(Of TIn)(IEnumerable(Of TIn), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.ProcessMany<TIn>(IEnumerable<TIn>, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn)(IEnumerable(Of TIn), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0})
  name: ProcessMany<TIn>(IEnumerable<TIn>, ITransformationEngineContext, GeneralTransformationRule<TIn>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__1_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_GeneralTransformationRule___0__
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0})
  name.vb: ProcessMany(Of TIn)(IEnumerable(Of TIn), ITransformationEngineContext, GeneralTransformationRule(Of TIn))
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule<TIn>)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule(Of TIn))
  nameWithType: TransformationEngine.ProcessMany<TIn>(IEnumerable<TIn>, ITransformationEngineContext, GeneralTransformationRule<TIn>)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn)(IEnumerable(Of TIn), ITransformationEngineContext, GeneralTransformationRule(Of TIn))
- uid: NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.Transformation)
  name: ProcessMany<TIn>(IEnumerable<TIn>, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__1_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``1(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.Transformation)
  name.vb: ProcessMany(Of TIn)(IEnumerable(Of TIn), Transformation)
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.ProcessMany<TIn>(IEnumerable<TIn>, Transformation)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn)(IEnumerable(Of TIn), Transformation)
- uid: NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext)
  name: ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__2_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn1, TIn2>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn1, TIn2)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0,``1})
  name: ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext, GeneralTransformationRule<TIn1, TIn2>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__2_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_GeneralTransformationRule___0___1__
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.GeneralTransformationRule{``0,``1})
  name.vb: ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext, GeneralTransformationRule(Of TIn1, TIn2))
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn1, TIn2>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule<TIn1, TIn2>)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn1, TIn2)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.GeneralTransformationRule(Of TIn1, TIn2))
  nameWithType: TransformationEngine.ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext, GeneralTransformationRule<TIn1, TIn2>)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext, GeneralTransformationRule(Of TIn1, TIn2))
- uid: NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.Transformation)
  name: ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_ProcessMany__2_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.ProcessMany``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.Transformation)
  name.vb: ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), Transformation)
  fullName: NMF.Transformations.TransformationEngine.ProcessMany<TIn1, TIn2>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.ProcessMany(Of TIn1, TIn2)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.ProcessMany<TIn1, TIn2>(IEnumerable<Tuple<TIn1, TIn2>>, Transformation)
  nameWithType.vb: TransformationEngine.ProcessMany(Of TIn1, TIn2)(IEnumerable(Of Tuple(Of TIn1, TIn2)), Transformation)
- uid: NMF.Transformations.TransformationEngine.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform_
  commentId: Overload:NMF.Transformations.TransformationEngine.Transform
  isSpec: "True"
  fullName: NMF.Transformations.TransformationEngine.Transform
  nameWithType: TransformationEngine.Transform
- uid: NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.ITransformationEngineContext)
  name: Transform<TOut>(Object[], ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__1_System_Object___NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Transform(Of TOut)(Object(), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.Transform<TOut>(System.Object[], NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TOut)(System.Object(), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.Transform<TOut>(Object[], ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.Transform(Of TOut)(Object(), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.Core.GeneralTransformationRule)
  name: Transform<TOut>(Object[], ITransformationEngineContext, GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__1_System_Object___NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: Transform(Of TOut)(Object(), ITransformationEngineContext, GeneralTransformationRule)
  fullName: NMF.Transformations.TransformationEngine.Transform<TOut>(System.Object[], NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.Core.GeneralTransformationRule)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TOut)(System.Object(), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: TransformationEngine.Transform<TOut>(Object[], ITransformationEngineContext, GeneralTransformationRule)
  nameWithType.vb: TransformationEngine.Transform(Of TOut)(Object(), ITransformationEngineContext, GeneralTransformationRule)
- uid: NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.Transformation)
  name: Transform<TOut>(Object[], Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__1_System_Object___NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``1(System.Object[],NMF.Transformations.Core.Transformation)
  name.vb: Transform(Of TOut)(Object(), Transformation)
  fullName: NMF.Transformations.TransformationEngine.Transform<TOut>(System.Object[], NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TOut)(System.Object(), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.Transform<TOut>(Object[], Transformation)
  nameWithType.vb: TransformationEngine.Transform(Of TOut)(Object(), Transformation)
- uid: NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.ITransformationEngineContext)
  name: Transform<TIn, TOut>(TIn, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__2___0_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Transform(Of TIn, TOut)(TIn, ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn, TOut>(TIn, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn, TOut)(TIn, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.Transform<TIn, TOut>(TIn, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.Transform(Of TIn, TOut)(TIn, ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1})
  name: Transform<TIn, TOut>(TIn, ITransformationEngineContext, TransformationRuleBase<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__2___0_NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_TransformationRuleBase___0___1__
  commentId: M:NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1})
  name.vb: Transform(Of TIn, TOut)(TIn, ITransformationEngineContext, TransformationRuleBase(Of TIn, TOut))
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn, TOut>(TIn, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase<TIn, TOut>)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn, TOut)(TIn, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase(Of TIn, TOut))
  nameWithType: TransformationEngine.Transform<TIn, TOut>(TIn, ITransformationEngineContext, TransformationRuleBase<TIn, TOut>)
  nameWithType.vb: TransformationEngine.Transform(Of TIn, TOut)(TIn, ITransformationEngineContext, TransformationRuleBase(Of TIn, TOut))
- uid: NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.Transformation)
  name: Transform<TIn, TOut>(TIn, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__2___0_NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``2(``0,NMF.Transformations.Core.Transformation)
  name.vb: Transform(Of TIn, TOut)(TIn, Transformation)
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn, TOut>(TIn, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn, TOut)(TIn, NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.Transform<TIn, TOut>(TIn, Transformation)
  nameWithType.vb: TransformationEngine.Transform(Of TIn, TOut)(TIn, Transformation)
- uid: NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.ITransformationEngineContext)
  name: Transform<TIn1, TIn2, TOut>(TIn1, TIn2, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__3___0___1_NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name: Transform<TIn1, TIn2, TOut>(TIn1, TIn2, ITransformationEngineContext, TransformationRuleBase<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__3___0___1_NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_TransformationRuleBase___0___1___2__
  commentId: M:NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name.vb: Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, ITransformationEngineContext, TransformationRuleBase(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut))
  nameWithType: TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, ITransformationEngineContext, TransformationRuleBase<TIn1, TIn2, TOut>)
  nameWithType.vb: TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, ITransformationEngineContext, TransformationRuleBase(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.Transformation)
  name: Transform<TIn1, TIn2, TOut>(TIn1, TIn2, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_Transform__3___0___1_NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.Transform``3(``0,``1,NMF.Transformations.Core.Transformation)
  name.vb: Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, Transformation)
  fullName: NMF.Transformations.TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.Transform<TIn1, TIn2, TOut>(TIn1, TIn2, Transformation)
  nameWithType.vb: TransformationEngine.Transform(Of TIn1, TIn2, TOut)(TIn1, TIn2, Transformation)
- uid: NMF.Transformations.TransformationEngine.TransformMany*
  name: TransformMany
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany_
  commentId: Overload:NMF.Transformations.TransformationEngine.TransformMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationEngine.TransformMany
  nameWithType: TransformationEngine.TransformMany
- uid: NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.ITransformationEngineContext)
  name: TransformMany<TOut>(IEnumerable<Object[]>, Type[], ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__1_System_Collections_Generic_IEnumerable_System_Object____System_Type___NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TOut>(System.Collections.Generic.IEnumerable<System.Object[]>, System.Type[], NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TOut)(System.Collections.Generic.IEnumerable(Of System.Object()), System.Type(), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.TransformMany<TOut>(IEnumerable<Object[]>, Type[], ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.Core.GeneralTransformationRule)
  name: TransformMany<TOut>(IEnumerable<Object[]>, Type[], ITransformationEngineContext, GeneralTransformationRule)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__1_System_Collections_Generic_IEnumerable_System_Object____System_Type___NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_Core_GeneralTransformationRule_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), ITransformationEngineContext, GeneralTransformationRule)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TOut>(System.Collections.Generic.IEnumerable<System.Object[]>, System.Type[], NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.Core.GeneralTransformationRule)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TOut)(System.Collections.Generic.IEnumerable(Of System.Object()), System.Type(), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType: TransformationEngine.TransformMany<TOut>(IEnumerable<Object[]>, Type[], ITransformationEngineContext, GeneralTransformationRule)
  nameWithType.vb: TransformationEngine.TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), ITransformationEngineContext, GeneralTransformationRule)
- uid: NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.Transformation)
  name: TransformMany<TOut>(IEnumerable<Object[]>, Type[], Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__1_System_Collections_Generic_IEnumerable_System_Object____System_Type___NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``1(System.Collections.Generic.IEnumerable{System.Object[]},System.Type[],NMF.Transformations.Core.Transformation)
  name.vb: TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), Transformation)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TOut>(System.Collections.Generic.IEnumerable<System.Object[]>, System.Type[], NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TOut)(System.Collections.Generic.IEnumerable(Of System.Object()), System.Type(), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.TransformMany<TOut>(IEnumerable<Object[]>, Type[], Transformation)
  nameWithType.vb: TransformationEngine.TransformMany(Of TOut)(IEnumerable(Of Object()), Type(), Transformation)
- uid: NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext)
  name: TransformMany<TIn, TOut>(IEnumerable<TIn>, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__2_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn, TOut>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn, TOut)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.TransformMany<TIn, TOut>(IEnumerable<TIn>, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1})
  name: TransformMany<TIn, TOut>(IEnumerable<TIn>, ITransformationEngineContext, TransformationRuleBase<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__2_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_TransformationRuleBase___0___1__
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1})
  name.vb: TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), ITransformationEngineContext, TransformationRuleBase(Of TIn, TOut))
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn, TOut>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase<TIn, TOut>)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn, TOut)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase(Of TIn, TOut))
  nameWithType: TransformationEngine.TransformMany<TIn, TOut>(IEnumerable<TIn>, ITransformationEngineContext, TransformationRuleBase<TIn, TOut>)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), ITransformationEngineContext, TransformationRuleBase(Of TIn, TOut))
- uid: NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.Transformation)
  name: TransformMany<TIn, TOut>(IEnumerable<TIn>, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__2_System_Collections_Generic_IEnumerable___0__NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``2(System.Collections.Generic.IEnumerable{``0},NMF.Transformations.Core.Transformation)
  name.vb: TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), Transformation)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn, TOut>(System.Collections.Generic.IEnumerable<TIn>, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn, TOut)(System.Collections.Generic.IEnumerable(Of TIn), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.TransformMany<TIn, TOut>(IEnumerable<TIn>, Transformation)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn, TOut)(IEnumerable(Of TIn), Transformation)
- uid: NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext)
  name: TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__3_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_ITransformationEngineContext_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext)
  name.vb: TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn1, TIn2, TOut>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.ITransformationEngineContext)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.ITransformationEngineContext)
  nameWithType: TransformationEngine.TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext)
- uid: NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name: TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext, TransformationRuleBase<TIn1, TIn2, TOut>)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__3_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_ITransformationEngineContext_NMF_Transformations_TransformationRuleBase___0___1___2__
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.ITransformationEngineContext,NMF.Transformations.TransformationRuleBase{``0,``1,``2})
  name.vb: TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext, TransformationRuleBase(Of TIn1, TIn2, TOut))
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn1, TIn2, TOut>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.ITransformationEngineContext, NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut))
  nameWithType: TransformationEngine.TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, ITransformationEngineContext, TransformationRuleBase<TIn1, TIn2, TOut>)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), ITransformationEngineContext, TransformationRuleBase(Of TIn1, TIn2, TOut))
- uid: NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.Transformation)
  name: TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, Transformation)
  href: api/Transformations/NMF.Transformations.TransformationEngine.html#NMF_Transformations_TransformationEngine_TransformMany__3_System_Collections_Generic_IEnumerable_System_Tuple___0___1___NMF_Transformations_Core_Transformation_
  commentId: M:NMF.Transformations.TransformationEngine.TransformMany``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}},NMF.Transformations.Core.Transformation)
  name.vb: TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), Transformation)
  fullName: NMF.Transformations.TransformationEngine.TransformMany<TIn1, TIn2, TOut>(System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>, NMF.Transformations.Core.Transformation)
  fullName.vb: NMF.Transformations.TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2)), NMF.Transformations.Core.Transformation)
  nameWithType: TransformationEngine.TransformMany<TIn1, TIn2, TOut>(IEnumerable<Tuple<TIn1, TIn2>>, Transformation)
  nameWithType.vb: TransformationEngine.TransformMany(Of TIn1, TIn2, TOut)(IEnumerable(Of Tuple(Of TIn1, TIn2)), Transformation)
- uid: NMF.Transformations.TransformationRule`1
  name: TransformationRule<T>
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html
  commentId: T:NMF.Transformations.TransformationRule`1
  name.vb: TransformationRule(Of T)
  fullName: NMF.Transformations.TransformationRule<T>
  fullName.vb: NMF.Transformations.TransformationRule(Of T)
  nameWithType: TransformationRule<T>
  nameWithType.vb: TransformationRule(Of T)
- uid: NMF.Transformations.TransformationRule`1.#ctor
  name: TransformationRule()
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1__ctor
  commentId: M:NMF.Transformations.TransformationRule`1.#ctor
  fullName: NMF.Transformations.TransformationRule<T>.TransformationRule()
  fullName.vb: NMF.Transformations.TransformationRule(Of T).TransformationRule()
  nameWithType: TransformationRule<T>.TransformationRule()
  nameWithType.vb: TransformationRule(Of T).TransformationRule()
- uid: NMF.Transformations.TransformationRule`1.#ctor*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1__ctor_
  commentId: Overload:NMF.Transformations.TransformationRule`1.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<T>.TransformationRule
  fullName.vb: NMF.Transformations.TransformationRule(Of T).TransformationRule
  nameWithType: TransformationRule<T>.TransformationRule
  nameWithType.vb: TransformationRule(Of T).TransformationRule
- uid: NMF.Transformations.TransformationRule`1.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.TransformationRule`1.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.TransformationRule<T>.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of T).CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: TransformationRule<T>.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: TransformationRule(Of T).CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.TransformationRule`1.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_CreateComputation_
  commentId: Overload:NMF.Transformations.TransformationRule`1.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<T>.CreateComputation
  fullName.vb: NMF.Transformations.TransformationRule(Of T).CreateComputation
  nameWithType: TransformationRule<T>.CreateComputation
  nameWithType.vb: TransformationRule(Of T).CreateComputation
- uid: NMF.Transformations.TransformationRule`1.CreateOutput(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name: CreateOutput(Object[], ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_CreateOutput_System_Object___NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`1.CreateOutput(System.Object[],NMF.Transformations.Core.ITransformationContext)
  name.vb: CreateOutput(Object(), ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<T>.CreateOutput(System.Object[], NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of T).CreateOutput(System.Object(), NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<T>.CreateOutput(Object[], ITransformationContext)
  nameWithType.vb: TransformationRule(Of T).CreateOutput(Object(), ITransformationContext)
- uid: NMF.Transformations.TransformationRule`1.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_CreateOutput_
  commentId: Overload:NMF.Transformations.TransformationRule`1.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<T>.CreateOutput
  fullName.vb: NMF.Transformations.TransformationRule(Of T).CreateOutput
  nameWithType: TransformationRule<T>.CreateOutput
  nameWithType.vb: TransformationRule(Of T).CreateOutput
- uid: NMF.Transformations.TransformationRule`1.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.TransformationRule`1.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.TransformationRule<T>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of T).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<T>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of T).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`1.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.TransformationRule`1.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<T>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of T).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<T>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of T).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`1.Transform(System.Object[],`0,NMF.Transformations.Core.ITransformationContext)
  name: Transform(Object[], T, ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_Transform_System_Object____0_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`1.Transform(System.Object[],`0,NMF.Transformations.Core.ITransformationContext)
  name.vb: Transform(Object(), T, ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<T>.Transform(System.Object[], T, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of T).Transform(System.Object(), T, NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<T>.Transform(Object[], T, ITransformationContext)
  nameWithType.vb: TransformationRule(Of T).Transform(Object(), T, ITransformationContext)
- uid: NMF.Transformations.TransformationRule`1.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.TransformationRule-1.html#NMF_Transformations_TransformationRule_1_Transform_
  commentId: Overload:NMF.Transformations.TransformationRule`1.Transform
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<T>.Transform
  fullName.vb: NMF.Transformations.TransformationRule(Of T).Transform
  nameWithType: TransformationRule<T>.Transform
  nameWithType.vb: TransformationRule(Of T).Transform
- uid: NMF.Transformations.TransformationRule`2
  name: TransformationRule<TIn, TOut>
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html
  commentId: T:NMF.Transformations.TransformationRule`2
  name.vb: TransformationRule(Of TIn, TOut)
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut)
  nameWithType: TransformationRule<TIn, TOut>
  nameWithType.vb: TransformationRule(Of TIn, TOut)
- uid: NMF.Transformations.TransformationRule`2.#ctor
  name: TransformationRule()
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2__ctor
  commentId: M:NMF.Transformations.TransformationRule`2.#ctor
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.TransformationRule()
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).TransformationRule()
  nameWithType: TransformationRule<TIn, TOut>.TransformationRule()
  nameWithType.vb: TransformationRule(Of TIn, TOut).TransformationRule()
- uid: NMF.Transformations.TransformationRule`2.#ctor*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2__ctor_
  commentId: Overload:NMF.Transformations.TransformationRule`2.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).TransformationRule
  nameWithType: TransformationRule<TIn, TOut>.TransformationRule
  nameWithType.vb: TransformationRule(Of TIn, TOut).TransformationRule
- uid: NMF.Transformations.TransformationRule`2.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.TransformationRule`2.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: TransformationRule<TIn, TOut>.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: TransformationRule(Of TIn, TOut).CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.TransformationRule`2.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_CreateComputation_
  commentId: Overload:NMF.Transformations.TransformationRule`2.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.CreateComputation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).CreateComputation
  nameWithType: TransformationRule<TIn, TOut>.CreateComputation
  nameWithType.vb: TransformationRule(Of TIn, TOut).CreateComputation
- uid: NMF.Transformations.TransformationRule`2.CreateOutput(`0,NMF.Transformations.Core.ITransformationContext)
  name: CreateOutput(TIn, ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_CreateOutput__0_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`2.CreateOutput(`0,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.CreateOutput(TIn, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).CreateOutput(TIn, NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<TIn, TOut>.CreateOutput(TIn, ITransformationContext)
  nameWithType.vb: TransformationRule(Of TIn, TOut).CreateOutput(TIn, ITransformationContext)
- uid: NMF.Transformations.TransformationRule`2.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_CreateOutput_
  commentId: Overload:NMF.Transformations.TransformationRule`2.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.CreateOutput
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).CreateOutput
  nameWithType: TransformationRule<TIn, TOut>.CreateOutput
  nameWithType.vb: TransformationRule(Of TIn, TOut).CreateOutput
- uid: NMF.Transformations.TransformationRule`2.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.TransformationRule`2.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<TIn, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of TIn, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`2.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.TransformationRule`2.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<TIn, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of TIn, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`2.Transform(`0,`1,NMF.Transformations.Core.ITransformationContext)
  name: Transform(TIn, TOut, ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_Transform__0__1_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`2.Transform(`0,`1,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.Transform(TIn, TOut, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).Transform(TIn, TOut, NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<TIn, TOut>.Transform(TIn, TOut, ITransformationContext)
  nameWithType.vb: TransformationRule(Of TIn, TOut).Transform(TIn, TOut, ITransformationContext)
- uid: NMF.Transformations.TransformationRule`2.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.TransformationRule-2.html#NMF_Transformations_TransformationRule_2_Transform_
  commentId: Overload:NMF.Transformations.TransformationRule`2.Transform
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn, TOut>.Transform
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn, TOut).Transform
  nameWithType: TransformationRule<TIn, TOut>.Transform
  nameWithType.vb: TransformationRule(Of TIn, TOut).Transform
- uid: NMF.Transformations.TransformationRule`3
  name: TransformationRule<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html
  commentId: T:NMF.Transformations.TransformationRule`3
  name.vb: TransformationRule(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut)
  nameWithType: TransformationRule<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.TransformationRule`3.#ctor
  name: TransformationRule()
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3__ctor
  commentId: M:NMF.Transformations.TransformationRule`3.#ctor
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.TransformationRule()
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).TransformationRule()
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.TransformationRule()
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).TransformationRule()
- uid: NMF.Transformations.TransformationRule`3.#ctor*
  name: TransformationRule
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3__ctor_
  commentId: Overload:NMF.Transformations.TransformationRule`3.#ctor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.TransformationRule
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).TransformationRule
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.TransformationRule
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).TransformationRule
- uid: NMF.Transformations.TransformationRule`3.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name: CreateComputation(Object[], IComputationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_CreateComputation_System_Object___NMF_Transformations_Core_IComputationContext_
  commentId: M:NMF.Transformations.TransformationRule`3.CreateComputation(System.Object[],NMF.Transformations.Core.IComputationContext)
  name.vb: CreateComputation(Object(), IComputationContext)
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.CreateComputation(System.Object[], NMF.Transformations.Core.IComputationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).CreateComputation(System.Object(), NMF.Transformations.Core.IComputationContext)
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.CreateComputation(Object[], IComputationContext)
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).CreateComputation(Object(), IComputationContext)
- uid: NMF.Transformations.TransformationRule`3.CreateComputation*
  name: CreateComputation
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_CreateComputation_
  commentId: Overload:NMF.Transformations.TransformationRule`3.CreateComputation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.CreateComputation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).CreateComputation
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.CreateComputation
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).CreateComputation
- uid: NMF.Transformations.TransformationRule`3.CreateOutput(`0,`1,NMF.Transformations.Core.ITransformationContext)
  name: CreateOutput(TIn1, TIn2, ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_CreateOutput__0__1_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`3.CreateOutput(`0,`1,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.CreateOutput(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).CreateOutput(TIn1, TIn2, NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.CreateOutput(TIn1, TIn2, ITransformationContext)
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).CreateOutput(TIn1, TIn2, ITransformationContext)
- uid: NMF.Transformations.TransformationRule`3.CreateOutput*
  name: CreateOutput
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_CreateOutput_
  commentId: Overload:NMF.Transformations.TransformationRule`3.CreateOutput
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.CreateOutput
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).CreateOutput
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.CreateOutput
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).CreateOutput
- uid: NMF.Transformations.TransformationRule`3.NeedDependenciesForOutputCreation
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_NeedDependenciesForOutputCreation
  commentId: P:NMF.Transformations.TransformationRule`3.NeedDependenciesForOutputCreation
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`3.NeedDependenciesForOutputCreation*
  name: NeedDependenciesForOutputCreation
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_NeedDependenciesForOutputCreation_
  commentId: Overload:NMF.Transformations.TransformationRule`3.NeedDependenciesForOutputCreation
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.NeedDependenciesForOutputCreation
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).NeedDependenciesForOutputCreation
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.NeedDependenciesForOutputCreation
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).NeedDependenciesForOutputCreation
- uid: NMF.Transformations.TransformationRule`3.Transform(`0,`1,`2,NMF.Transformations.Core.ITransformationContext)
  name: Transform(TIn1, TIn2, TOut, ITransformationContext)
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_Transform__0__1__2_NMF_Transformations_Core_ITransformationContext_
  commentId: M:NMF.Transformations.TransformationRule`3.Transform(`0,`1,`2,NMF.Transformations.Core.ITransformationContext)
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.Transform(TIn1, TIn2, TOut, NMF.Transformations.Core.ITransformationContext)
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).Transform(TIn1, TIn2, TOut, NMF.Transformations.Core.ITransformationContext)
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.Transform(TIn1, TIn2, TOut, ITransformationContext)
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).Transform(TIn1, TIn2, TOut, ITransformationContext)
- uid: NMF.Transformations.TransformationRule`3.Transform*
  name: Transform
  href: api/Transformations/NMF.Transformations.TransformationRule-3.html#NMF_Transformations_TransformationRule_3_Transform_
  commentId: Overload:NMF.Transformations.TransformationRule`3.Transform
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRule<TIn1, TIn2, TOut>.Transform
  fullName.vb: NMF.Transformations.TransformationRule(Of TIn1, TIn2, TOut).Transform
  nameWithType: TransformationRule<TIn1, TIn2, TOut>.Transform
  nameWithType.vb: TransformationRule(Of TIn1, TIn2, TOut).Transform
- uid: NMF.Transformations.TransformationRuleBase`1
  name: TransformationRuleBase<T>
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html
  commentId: T:NMF.Transformations.TransformationRuleBase`1
  name.vb: TransformationRuleBase(Of T)
  fullName: NMF.Transformations.TransformationRuleBase<T>
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T)
  nameWithType: TransformationRuleBase<T>
  nameWithType.vb: TransformationRuleBase(Of T)
- uid: NMF.Transformations.TransformationRuleBase`1.GetRule(System.Type)
  name: GetRule(Type)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_GetRule_System_Type_
  commentId: M:NMF.Transformations.TransformationRuleBase`1.GetRule(System.Type)
  fullName: NMF.Transformations.TransformationRuleBase<T>.GetRule(System.Type)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).GetRule(System.Type)
  nameWithType: TransformationRuleBase<T>.GetRule(Type)
  nameWithType.vb: TransformationRuleBase(Of T).GetRule(Type)
- uid: NMF.Transformations.TransformationRuleBase`1.GetRule*
  name: GetRule
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_GetRule_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`1.GetRule
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<T>.GetRule
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).GetRule
  nameWithType: TransformationRuleBase<T>.GetRule
  nameWithType.vb: TransformationRuleBase(Of T).GetRule
- uid: NMF.Transformations.TransformationRuleBase`1.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name: MarkInstantiatingFor(GeneralTransformationRule, Predicate<Object[]>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_MarkInstantiatingFor_NMF_Transformations_Core_GeneralTransformationRule_System_Predicate_System_Object____
  commentId: M:NMF.Transformations.TransformationRuleBase`1.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule,System.Predicate{System.Object[]})
  name.vb: MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Object()))
  fullName: NMF.Transformations.TransformationRuleBase<T>.MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate<System.Object[]>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).MarkInstantiatingFor(NMF.Transformations.Core.GeneralTransformationRule, System.Predicate(Of System.Object()))
  nameWithType: TransformationRuleBase<T>.MarkInstantiatingFor(GeneralTransformationRule, Predicate<Object[]>)
  nameWithType.vb: TransformationRuleBase(Of T).MarkInstantiatingFor(GeneralTransformationRule, Predicate(Of Object()))
- uid: NMF.Transformations.TransformationRuleBase`1.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`1.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<T>.MarkInstantiatingFor
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).MarkInstantiatingFor
  nameWithType: TransformationRuleBase<T>.MarkInstantiatingFor
  nameWithType.vb: TransformationRuleBase(Of T).MarkInstantiatingFor
- uid: NMF.Transformations.TransformationRuleBase`1.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_OutputType
  commentId: P:NMF.Transformations.TransformationRuleBase`1.OutputType
  fullName: NMF.Transformations.TransformationRuleBase<T>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).OutputType
  nameWithType: TransformationRuleBase<T>.OutputType
  nameWithType.vb: TransformationRuleBase(Of T).OutputType
- uid: NMF.Transformations.TransformationRuleBase`1.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-1.html#NMF_Transformations_TransformationRuleBase_1_OutputType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`1.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<T>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of T).OutputType
  nameWithType: TransformationRuleBase<T>.OutputType
  nameWithType.vb: TransformationRuleBase(Of T).OutputType
- uid: NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html
  commentId: T:NMF.Transformations.TransformationRuleBase`2
  name.vb: TransformationRuleBase(Of TIn, TOut)
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  nameWithType: TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
- uid: NMF.Transformations.TransformationRuleBase`2.Call*
  name: Call
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Call_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.Call
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Call
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Call
  nameWithType: TransformationRuleBase<TIn, TOut>.Call
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Call
- uid: NMF.Transformations.TransformationRuleBase`2.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Action{`1,``1})
  name: Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Call__2_NMF_Transformations_TransformationRuleBase___0___1__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Action{`1,``1})
  name.vb: Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Call<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,``0},System.Action{`1,``1})
  name: Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Call__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0___0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,``0},System.Action{`1,``1})
  name.vb: Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Call<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name: Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Call__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0___0__System_Func__0___1__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallByType*
  name: CallByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallByType
  nameWithType: TransformationRuleBase<TIn, TOut>.CallByType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallByType
- uid: NMF.Transformations.TransformationRuleBase`2.CallByType``2(System.Action{`1,``1})
  name: CallByType<TRequiredInput, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallByType__2_System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallByType``2(System.Action{`1,``1})
  name.vb: CallByType(Of TRequiredInput, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput, TRequiredOutput>(System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallByType``2(System.Func{`0,``0},System.Action{`1,``1})
  name: CallByType<TRequiredInput, TRequiredOutput>(Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallByType__2_System_Func__0___0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallByType``2(System.Func{`0,``0},System.Action{`1,``1})
  name.vb: CallByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput, TRequiredOutput>(System.Func<TIn, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput, TRequiredOutput>(Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallByType``3(System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name: CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallByType__3_System_Func__0___0__System_Func__0___1__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallByType``3(System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor*
  name: CallFor
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallFor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Action{`1,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0__0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Action{`1,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TIn>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TIn), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Action{`1,``1},System.Predicate{``0})
  name: CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0__0__System_Action__1___1__System_Predicate___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Action{`1,``1},System.Predicate{``0})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TIn>, System.Action<TOut, TRequiredOutput>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TIn), System.Action(Of TOut, TRequiredOutput), System.Predicate(Of TRequiredInput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>, Predicate<TRequiredInput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``2(System.Func{``0,`0},System.Action{`1,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__2_System_Func___0__0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``2(System.Func{``0,`0},System.Action{`1,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TIn>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TIn), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``2(System.Func{``0,`0},System.Action{`1,``1},System.Predicate{``0})
  name: CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>, Predicate<TRequiredInput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__2_System_Func___0__0__System_Action__1___1__System_Predicate___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``2(System.Func{``0,`0},System.Action{`1,``1},System.Predicate{``0})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput), Predicate(Of TRequiredInput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TIn>, System.Action<TOut, TRequiredOutput>, System.Predicate<TRequiredInput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TIn), System.Action(Of TOut, TRequiredOutput), System.Predicate(Of TRequiredInput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn>, Action<TOut, TRequiredOutput>, Predicate<TRequiredInput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn), Action(Of TOut, TRequiredOutput), Predicate(Of TRequiredInput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Action{`1,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1__0__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Action{`1,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Action{`1,``2},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1__0__System_Action__1___2__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Action{`1,``2},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Action<TOut, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Action(Of TOut, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``3(System.Func{``0,``1,`0},System.Action{`1,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__3_System_Func___0___1__0__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``3(System.Func{``0,``1,`0},System.Action{`1,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallFor``3(System.Func{``0,``1,`0},System.Action{`1,``2},System.Func{``0,``1,System.Boolean})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallFor__3_System_Func___0___1__0__System_Action__1___2__System_Func___0___1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallFor``3(System.Func{``0,``1,`0},System.Action{`1,``2},System.Func{``0,``1,System.Boolean})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TIn>, System.Action<TOut, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn), System.Action(Of TOut, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn>, Action<TOut, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn), Action(Of TOut, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach*
  name: CallForEach
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallForEach
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0_System_Collections_Generic_IEnumerable__0___System_Action___1_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0_System_Collections_Generic_IEnumerable__0___System_Predicate___0__System_Action___1_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Predicate<TRequiredInput>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Predicate(Of TRequiredInput), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__2_System_Func___0_System_Collections_Generic_IEnumerable__0___System_Action___1_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__2_System_Func___0_System_Collections_Generic_IEnumerable__0___System_Predicate___0__System_Action___1_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{`0}},System.Predicate{``0},System.Action{``1,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<TIn>>, System.Predicate<TRequiredInput>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of TIn)), System.Predicate(Of TRequiredInput), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<TIn>>, Predicate<TRequiredInput>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of TIn)), Predicate(Of TRequiredInput), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Action___2_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__System_Action___2_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__3_System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Action___2_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallForEach__3_System_Func___0___1_System_Collections_Generic_IEnumerable__0___System_Func___0___1_System_Boolean__System_Action___2_System_Collections_Generic_IEnumerable__1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{`0}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`1}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<TIn>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of TIn)), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<TIn>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of TIn)), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallMany*
  name: CallMany
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallMany_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallMany
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallMany
  nameWithType: TransformationRuleBase<TIn, TOut>.CallMany
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallMany
- uid: NMF.Transformations.TransformationRuleBase`2.CallMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name: CallMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallMany__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0_System_Collections_Generic_IEnumerable___0___System_Action__1_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name.vb: CallMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallMany<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallMany(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name: CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallMany__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__1_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name.vb: CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyByType*
  name: CallManyByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallManyByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyByType
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyByType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyByType
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name: CallManyByType<TRequiredInput, TRequiredOutput>(Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyByType__2_System_Func__0_System_Collections_Generic_IEnumerable___0___System_Action__1_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name.vb: CallManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyByType<TRequiredInput, TRequiredOutput>(System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyByType<TRequiredInput, TRequiredOutput>(Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyByType``3(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name: CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyByType__3_System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__1_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyByType``3(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name.vb: CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive*
  name: CallManyOutputSensitive
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyOutputSensitive_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name: CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, IEnumerable<TRequiredInput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,`1,System.Boolean})
  name: CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, IEnumerable<TRequiredInput>>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1_System_Collections_Generic_IEnumerable___0___System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,`1,System.Boolean})
  name.vb: CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, IEnumerable<TRequiredInput>>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Func{`0,`1,System.Boolean})
  name: CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallManyOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Func{`0,`1,System.Boolean})
  name.vb: CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule{`0,`1})
  name: CallOutputSensitive(GeneralTransformationRule<TIn, TOut>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive_NMF_Transformations_GeneralTransformationRule__0__1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule{`0,`1})
  name.vb: CallOutputSensitive(GeneralTransformationRule(Of TIn, TOut))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule<TIn, TOut>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(NMF.Transformations.GeneralTransformationRule(Of TIn, TOut))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive(GeneralTransformationRule<TIn, TOut>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(GeneralTransformationRule(Of TIn, TOut))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name: CallOutputSensitive(GeneralTransformationRule<TIn, TOut>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive_NMF_Transformations_GeneralTransformationRule__0__1__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule{`0,`1},System.Func{`0,`1,System.Boolean})
  name.vb: CallOutputSensitive(GeneralTransformationRule(Of TIn, TOut), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive(NMF.Transformations.GeneralTransformationRule<TIn, TOut>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(NMF.Transformations.GeneralTransformationRule(Of TIn, TOut), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive(GeneralTransformationRule<TIn, TOut>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(GeneralTransformationRule(Of TIn, TOut), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive*
  name: CallOutputSensitive
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name: CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0})
  name.vb: CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, TRequiredInput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TOut, TRequiredInput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TOut, TRequiredInput))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, TRequiredInput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, TRequiredInput))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0},System.Func{`0,`1,System.Boolean})
  name: CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, TRequiredInput>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1___0__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,``0},System.Func{`0,`1,System.Boolean})
  name.vb: CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, TRequiredInput), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TOut, TRequiredInput>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TOut, TRequiredInput), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, TRequiredInput>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, TRequiredInput), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Boolean})
  name: CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,System.Boolean})
  name.vb: CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, TRequiredInput1>, Func<TIn, TOut, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, TRequiredInput1), Func(Of TIn, TOut, TRequiredInput2))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TOut, TRequiredInput1>, System.Func<TIn, TOut, TRequiredInput2>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TOut, TRequiredInput1), System.Func(Of TIn, TOut, TRequiredInput2))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, TRequiredInput1>, Func<TIn, TOut, TRequiredInput2>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, TRequiredInput1), Func(Of TIn, TOut, TRequiredInput2))
- uid: NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Func{`0,`1,System.Boolean})
  name: CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, TRequiredInput1>, Func<TIn, TOut, TRequiredInput2>, Func<TIn, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_CallOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1___0__System_Func__0__1___1__System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Func{`0,`1,System.Boolean})
  name.vb: CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, TRequiredInput1), Func(Of TIn, TOut, TRequiredInput2), Func(Of TIn, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn, TOut, TRequiredInput1>, System.Func<TIn, TOut, TRequiredInput2>, System.Func<TIn, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn, TOut, TRequiredInput1), System.Func(Of TIn, TOut, TRequiredInput2), System.Func(Of TIn, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn, TOut, TRequiredInput1>, Func<TIn, TOut, TRequiredInput2>, Func<TIn, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn, TOut, TRequiredInput1), Func(Of TIn, TOut, TRequiredInput2), Func(Of TIn, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor
  nameWithType: TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor
- uid: NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor``2
  name: MarkInstantiatingFor<TBaseIn, TBaseOut>()
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_MarkInstantiatingFor__2
  commentId: M:NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor``2
  name.vb: MarkInstantiatingFor(Of TBaseIn, TBaseOut)()
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor<TBaseIn, TBaseOut>()
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor(Of TBaseIn, TBaseOut)()
  nameWithType: TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor<TBaseIn, TBaseOut>()
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor(Of TBaseIn, TBaseOut)()
- uid: NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor``2(System.Predicate{`0})
  name: MarkInstantiatingFor<TBaseIn, TBaseOut>(Predicate<TIn>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_MarkInstantiatingFor__2_System_Predicate__0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.MarkInstantiatingFor``2(System.Predicate{`0})
  name.vb: MarkInstantiatingFor(Of TBaseIn, TBaseOut)(Predicate(Of TIn))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor<TBaseIn, TBaseOut>(System.Predicate<TIn>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor(Of TBaseIn, TBaseOut)(System.Predicate(Of TIn))
  nameWithType: TransformationRuleBase<TIn, TOut>.MarkInstantiatingFor<TBaseIn, TBaseOut>(Predicate<TIn>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).MarkInstantiatingFor(Of TBaseIn, TBaseOut)(Predicate(Of TIn))
- uid: NMF.Transformations.TransformationRuleBase`2.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_OutputType
  commentId: P:NMF.Transformations.TransformationRuleBase`2.OutputType
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).OutputType
  nameWithType: TransformationRuleBase<TIn, TOut>.OutputType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).OutputType
- uid: NMF.Transformations.TransformationRuleBase`2.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_OutputType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).OutputType
  nameWithType: TransformationRuleBase<TIn, TOut>.OutputType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).OutputType
- uid: NMF.Transformations.TransformationRuleBase`2.Require*
  name: Require
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Require_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.Require
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Require
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Require
  nameWithType: TransformationRuleBase<TIn, TOut>.Require
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Require
- uid: NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Action{`1,``1})
  name: Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Require__2_NMF_Transformations_TransformationRuleBase___0___1__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Action{`1,``1})
  name.vb: Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,``0},System.Action{`1,``1})
  name: Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Require__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0___0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,``0},System.Action{`1,``1})
  name.vb: Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{`0},System.Action{`1,``1})
  name: Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Predicate<TIn>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Require__2_NMF_Transformations_TransformationRuleBase___0___1__System_Predicate__0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Predicate{`0},System.Action{`1,``1})
  name.vb: Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Predicate(Of TIn), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Predicate<TIn>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Predicate(Of TIn), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Predicate<TIn>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Predicate(Of TIn), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name: Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_Require__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0___0__System_Func__0___1__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireByType*
  name: RequireByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.RequireByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireByType
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireByType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireByType
- uid: NMF.Transformations.TransformationRuleBase`2.RequireByType``2(System.Action{`1,``1})
  name: RequireByType<TRequiredInput, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireByType__2_System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireByType``2(System.Action{`1,``1})
  name.vb: RequireByType(Of TRequiredInput, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireByType``2(System.Func{`0,``0},System.Action{`1,``1})
  name: RequireByType<TRequiredInput, TRequiredOutput>(Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireByType__2_System_Func__0___0__System_Action__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireByType``2(System.Func{`0,``0},System.Action{`1,``1})
  name.vb: RequireByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(System.Func<TIn, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(Func<TIn, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireByType``3(System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name: RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireByType__3_System_Func__0___0__System_Func__0___1__System_Action__1___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireByType``3(System.Func{`0,``0},System.Func{`0,``1},System.Action{`1,``2})
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn, TRequiredInput1>, System.Func<TIn, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn, TRequiredInput1), System.Func(Of TIn, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, TRequiredInput1>, Func<TIn, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, TRequiredInput1), Func(Of TIn, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireMany*
  name: RequireMany
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireMany_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.RequireMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireMany
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireMany
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireMany
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireMany
- uid: NMF.Transformations.TransformationRuleBase`2.RequireMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name: RequireMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireMany__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0_System_Collections_Generic_IEnumerable___0___System_Action__1_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name.vb: RequireMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireMany<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireMany(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name: RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireMany__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__1_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name.vb: RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireManyByType*
  name: RequireManyByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireManyByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.RequireManyByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireManyByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireManyByType
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireManyByType
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireManyByType
- uid: NMF.Transformations.TransformationRuleBase`2.RequireManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name: RequireManyByType<TRequiredInput, TRequiredOutput>(Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireManyByType__2_System_Func__0_System_Collections_Generic_IEnumerable___0___System_Action__1_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireManyByType``2(System.Func{`0,System.Collections.Generic.IEnumerable{``0}},System.Action{`1,System.Collections.Generic.IEnumerable{``1}})
  name.vb: RequireManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireManyByType<TRequiredInput, TRequiredOutput>(System.Func<TIn, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireManyByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireManyByType<TRequiredInput, TRequiredOutput>(Func<TIn, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.RequireManyByType``3(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name: RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_RequireManyByType__3_System_Func__0_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__1_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`2.RequireManyByType``3(System.Func{`0,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`1,System.Collections.Generic.IEnumerable{``2}})
  name.vb: RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn, TOut>.RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`2.SelectArrays*
  name: SelectArrays
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_SelectArrays_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.SelectArrays
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.SelectArrays
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).SelectArrays
  nameWithType: TransformationRuleBase<TIn, TOut>.SelectArrays
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).SelectArrays
- uid: NMF.Transformations.TransformationRuleBase`2.SelectArrays``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},NMF.Transformations.Core.Computation)
  name: SelectArrays<TRequiredInput>(Func<TIn, TOut, IEnumerable<TRequiredInput>>, Computation)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_SelectArrays__1_System_Func__0__1_System_Collections_Generic_IEnumerable___0___NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.TransformationRuleBase`2.SelectArrays``1(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},NMF.Transformations.Core.Computation)
  name.vb: SelectArrays(Of TRequiredInput)(Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)), Computation)
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.SelectArrays<TRequiredInput>(System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<TRequiredInput>>, NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).SelectArrays(Of TRequiredInput)(System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of TRequiredInput)), NMF.Transformations.Core.Computation)
  nameWithType: TransformationRuleBase<TIn, TOut>.SelectArrays<TRequiredInput>(Func<TIn, TOut, IEnumerable<TRequiredInput>>, Computation)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).SelectArrays(Of TRequiredInput)(Func(Of TIn, TOut, IEnumerable(Of TRequiredInput)), Computation)
- uid: NMF.Transformations.TransformationRuleBase`2.SelectArrays``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},NMF.Transformations.Core.Computation)
  name: SelectArrays<TRequiredInput1, TRequiredInput2>(Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Computation)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_SelectArrays__2_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____NMF_Transformations_Core_Computation_
  commentId: M:NMF.Transformations.TransformationRuleBase`2.SelectArrays``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},NMF.Transformations.Core.Computation)
  name.vb: SelectArrays(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Computation)
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.SelectArrays<TRequiredInput1, TRequiredInput2>(System.Func<TIn, TOut, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, NMF.Transformations.Core.Computation)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).SelectArrays(Of TRequiredInput1, TRequiredInput2)(System.Func(Of TIn, TOut, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), NMF.Transformations.Core.Computation)
  nameWithType: TransformationRuleBase<TIn, TOut>.SelectArrays<TRequiredInput1, TRequiredInput2>(Func<TIn, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Computation)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).SelectArrays(Of TRequiredInput1, TRequiredInput2)(Func(Of TIn, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Computation)
- uid: NMF.Transformations.TransformationRuleBase`2.TraceAs*
  name: TraceAs
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceAs_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.TraceAs
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceAs
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceAs
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceAs
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceAs
- uid: NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1})
  name: TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceAs__2_NMF_Transformations_TraceEntryGroup___0___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1})
  name.vb: TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(NMF.Transformations.TraceEntryGroup<TTraceInput, TTraceOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(NMF.Transformations.TraceEntryGroup(Of TTraceInput, TTraceOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``0})
  name: TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceInput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceAs__2_NMF_Transformations_TraceEntryGroup___0___1__System_Func__0__1___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``0})
  name.vb: TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceInput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(NMF.Transformations.TraceEntryGroup<TTraceInput, TTraceOutput>, System.Func<TIn, TOut, TTraceInput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(NMF.Transformations.TraceEntryGroup(Of TTraceInput, TTraceOutput), System.Func(Of TIn, TOut, TTraceInput))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceInput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceInput))
- uid: NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name: TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceInput>, Func<TIn, TOut, TTraceOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceAs__2_NMF_Transformations_TraceEntryGroup___0___1__System_Func__0__1___0__System_Func__0__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``0},System.Func{`0,`1,``1})
  name.vb: TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceInput), Func(Of TIn, TOut, TTraceOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(NMF.Transformations.TraceEntryGroup<TTraceInput, TTraceOutput>, System.Func<TIn, TOut, TTraceInput>, System.Func<TIn, TOut, TTraceOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(NMF.Transformations.TraceEntryGroup(Of TTraceInput, TTraceOutput), System.Func(Of TIn, TOut, TTraceInput), System.Func(Of TIn, TOut, TTraceOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceInput>, Func<TIn, TOut, TTraceOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceInput), Func(Of TIn, TOut, TTraceOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``1})
  name: TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceAs__2_NMF_Transformations_TraceEntryGroup___0___1__System_Func__0__1___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceAs``2(NMF.Transformations.TraceEntryGroup{``0,``1},System.Func{`0,`1,``1})
  name.vb: TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(NMF.Transformations.TraceEntryGroup<TTraceInput, TTraceOutput>, System.Func<TIn, TOut, TTraceOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(NMF.Transformations.TraceEntryGroup(Of TTraceInput, TTraceOutput), System.Func(Of TIn, TOut, TTraceOutput))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceAs<TTraceInput, TTraceOutput>(TraceEntryGroup<TTraceInput, TTraceOutput>, Func<TIn, TOut, TTraceOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceAs(Of TTraceInput, TTraceOutput)(TraceEntryGroup(Of TTraceInput, TTraceOutput), Func(Of TIn, TOut, TTraceOutput))
- uid: NMF.Transformations.TransformationRuleBase`2.TraceOutput*
  name: TraceOutput
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceOutput_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`2.TraceOutput
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceOutput
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceOutput
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceOutput
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceOutput
- uid: NMF.Transformations.TransformationRuleBase`2.TraceOutput``1(NMF.Transformations.TraceEntryGroup{``0,`1},System.Func{`0,`1,``0})
  name: TraceOutput<TKey>(TraceEntryGroup<TKey, TOut>, Func<TIn, TOut, TKey>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceOutput__1_NMF_Transformations_TraceEntryGroup___0__1__System_Func__0__1___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceOutput``1(NMF.Transformations.TraceEntryGroup{``0,`1},System.Func{`0,`1,``0})
  name.vb: TraceOutput(Of TKey)(TraceEntryGroup(Of TKey, TOut), Func(Of TIn, TOut, TKey))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceOutput<TKey>(NMF.Transformations.TraceEntryGroup<TKey, TOut>, System.Func<TIn, TOut, TKey>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceOutput(Of TKey)(NMF.Transformations.TraceEntryGroup(Of TKey, TOut), System.Func(Of TIn, TOut, TKey))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceOutput<TKey>(TraceEntryGroup<TKey, TOut>, Func<TIn, TOut, TKey>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceOutput(Of TKey)(TraceEntryGroup(Of TKey, TOut), Func(Of TIn, TOut, TKey))
- uid: NMF.Transformations.TransformationRuleBase`2.TraceOutput``1(System.Func{`0,`1,``0})
  name: TraceOutput<TKey>(Func<TIn, TOut, TKey>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-2.html#NMF_Transformations_TransformationRuleBase_2_TraceOutput__1_System_Func__0__1___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`2.TraceOutput``1(System.Func{`0,`1,``0})
  name.vb: TraceOutput(Of TKey)(Func(Of TIn, TOut, TKey))
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>.TraceOutput<TKey>(System.Func<TIn, TOut, TKey>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut).TraceOutput(Of TKey)(System.Func(Of TIn, TOut, TKey))
  nameWithType: TransformationRuleBase<TIn, TOut>.TraceOutput<TKey>(Func<TIn, TOut, TKey>)
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut).TraceOutput(Of TKey)(Func(Of TIn, TOut, TKey))
- uid: NMF.Transformations.TransformationRuleBase`3
  name: TransformationRuleBase<TIn1, TIn2, TOut>
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html
  commentId: T:NMF.Transformations.TransformationRuleBase`3
  name.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut)
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut)
- uid: NMF.Transformations.TransformationRuleBase`3.Call*
  name: Call
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Call_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.Call
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Call
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Call
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Call
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Call
- uid: NMF.Transformations.TransformationRuleBase`3.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,``0},System.Action{`2,``1})
  name: Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Call__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0__1___0__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Call``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,``0},System.Action{`2,``1})
  name.vb: Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn1, TIn2, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn1, TIn2, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Action{`2,``2})
  name: Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Call__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Action{`2,``2})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name: Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Call__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0__1___0__System_Func__0__1___1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Call``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name.vb: Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Call<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Call(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallByType*
  name: CallByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallByType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType
- uid: NMF.Transformations.TransformationRuleBase`3.CallByType``2(System.Func{`0,`1,``0},System.Action{`2,``1})
  name: CallByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallByType__2_System_Func__0__1___0__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallByType``2(System.Func{`0,`1,``0},System.Action{`2,``1})
  name.vb: CallByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput, TRequiredOutput>(System.Func<TIn1, TIn2, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn1, TIn2, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallByType``3(System.Action{`2,``2})
  name: CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallByType__3_System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallByType``3(System.Action{`2,``2})
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallByType``3(System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name: CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallByType__3_System_Func__0__1___0__System_Func__0__1___1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallByType``3(System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name.vb: CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor*
  name: CallFor
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallFor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Func{``0,`1},System.Action{`2,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0__0__System_Func___0__1__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Func{``0,`1},System.Action{`2,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean},System.Action{`2,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0__0__System_Func___0__1__System_Func___0_System_Boolean__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean},System.Action{`2,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Func<TRequiredInput, System.Boolean>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Func(Of TRequiredInput, System.Boolean), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``2(System.Func{``0,`0},System.Func{``0,`1},System.Action{`2,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__2_System_Func___0__0__System_Func___0__1__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``2(System.Func{``0,`0},System.Func{``0,`1},System.Action{`2,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``2(System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean},System.Action{`2,``1})
  name: CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__2_System_Func___0__0__System_Func___0__1__System_Func___0_System_Boolean__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``2(System.Func{``0,`0},System.Func{``0,`1},System.Func{``0,System.Boolean},System.Action{`2,``1})
  name.vb: CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, TIn1>, System.Func<TRequiredInput, TIn2>, System.Func<TRequiredInput, System.Boolean>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, TIn1), System.Func(Of TRequiredInput, TIn2), System.Func(Of TRequiredInput, System.Boolean), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, TIn1>, Func<TRequiredInput, TIn2>, Func<TRequiredInput, Boolean>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, TIn1), Func(Of TRequiredInput, TIn2), Func(Of TRequiredInput, Boolean), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Action{`2,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1__0__System_Func___0___1__1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Action{`2,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean},System.Action{`2,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean},System.Action{`2,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``3(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Action{`2,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__3_System_Func___0___1__0__System_Func___0___1__1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``3(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Action{`2,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallFor``3(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean},System.Action{`2,``2})
  name: CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallFor__3_System_Func___0___1__0__System_Func___0___1__1__System_Func___0___1_System_Boolean__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallFor``3(System.Func{``0,``1,`0},System.Func{``0,``1,`1},System.Func{``0,``1,System.Boolean},System.Action{`2,``2})
  name.vb: CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, TIn1>, System.Func<TRequiredInput1, TRequiredInput2, TIn2>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, TIn1), System.Func(Of TRequiredInput1, TRequiredInput2, TIn2), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, TIn1>, Func<TRequiredInput1, TRequiredInput2, TIn2>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, TIn1), Func(Of TRequiredInput1, TRequiredInput2, TIn2), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach*
  name: CallForEach
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallForEach
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Action___1_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0_System_Boolean__System_Action___1_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__2_System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Action___1_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__2_System_Func___0_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0_System_Boolean__System_Action___1_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``2(System.Func{``0,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,System.Boolean},System.Action{``1,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(System.Func<TRequiredInput, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(System.Func(Of TRequiredInput, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput, TRequiredOutput>(Func<TRequiredInput, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput, TRequiredOutput)(Func(Of TRequiredInput, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Action___2_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__System_Action___2_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__3_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Action___2_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name: CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallForEach__3_System_Func___0___1_System_Collections_Generic_IEnumerable_System_Tuple__0__1____System_Func___0___1_System_Boolean__System_Action___2_System_Collections_Generic_IEnumerable__2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallForEach``3(System.Func{``0,``1,System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}}},System.Func{``0,``1,System.Boolean},System.Action{``2,System.Collections.Generic.IEnumerable{`2}})
  name.vb: CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable<System.Tuple<TIn1, TIn2>>>, System.Func<TRequiredInput1, TRequiredInput2, System.Boolean>, System.Action<TRequiredOutput, System.Collections.Generic.IEnumerable<TOut>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TRequiredInput1, TRequiredInput2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TIn1, TIn2))), System.Func(Of TRequiredInput1, TRequiredInput2, System.Boolean), System.Action(Of TRequiredOutput, System.Collections.Generic.IEnumerable(Of TOut)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallForEach<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TRequiredInput1, TRequiredInput2, IEnumerable<Tuple<TIn1, TIn2>>>, Func<TRequiredInput1, TRequiredInput2, Boolean>, Action<TRequiredOutput, IEnumerable<TOut>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallForEach(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TRequiredInput1, TRequiredInput2, IEnumerable(Of Tuple(Of TIn1, TIn2))), Func(Of TRequiredInput1, TRequiredInput2, Boolean), Action(Of TRequiredOutput, IEnumerable(Of TOut)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallMany*
  name: CallMany
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallMany_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallMany
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallMany
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany
- uid: NMF.Transformations.TransformationRuleBase`3.CallMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name: CallMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallMany__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable___0___System_Action__2_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name.vb: CallMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallMany<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name: CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallMany__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__2_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name.vb: CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyByType*
  name: CallManyByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallManyByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name: CallManyByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyByType__2_System_Func__0__1_System_Collections_Generic_IEnumerable___0___System_Action__2_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name.vb: CallManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType<TRequiredInput, TRequiredOutput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyByType``3(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name: CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyByType__3_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__2_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyByType``3(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name.vb: CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive*
  name: CallManyOutputSensitive
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyOutputSensitive_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{``0}})
  name: CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, IEnumerable<TRequiredInput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1__2_System_Collections_Generic_IEnumerable___0___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{``0}})
  name.vb: CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, IEnumerable(Of TRequiredInput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable<TRequiredInput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable(Of TRequiredInput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, IEnumerable<TRequiredInput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, IEnumerable(Of TRequiredInput)))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,`1,`2,System.Boolean})
  name: CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, IEnumerable<TRequiredInput>>, Func<TIn1, TIn2, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1__2_System_Collections_Generic_IEnumerable___0___System_Func__0__1__2_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{``0}},System.Func{`0,`1,`2,System.Boolean})
  name.vb: CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, IEnumerable(Of TRequiredInput)), Func(Of TIn1, TIn2, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Func<TIn1, TIn2, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Func(Of TIn1, TIn2, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, IEnumerable<TRequiredInput>>, Func<TIn1, TIn2, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, IEnumerable(Of TRequiredInput)), Func(Of TIn1, TIn2, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name: CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1__2_System_Collections_Generic_IEnumerable_System_Tuple___0___1____
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}})
  name.vb: CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))))
- uid: NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Func{`0,`1,`2,System.Boolean})
  name: CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Func<TIn1, TIn2, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallManyOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1__2_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Func__0__1__2_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallManyOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Func{`0,`1,`2,System.Boolean})
  name.vb: CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Func(Of TIn1, TIn2, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Func<TIn1, TIn2, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TOut, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Func(Of TIn1, TIn2, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallManyOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Func<TIn1, TIn2, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallManyOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Func(Of TIn1, TIn2, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive*
  name: CallOutputSensitive
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallOutputSensitive_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive
- uid: NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,``0})
  name: CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, TRequiredInput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1__2___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,``0})
  name.vb: CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, TRequiredInput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TOut, TRequiredInput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TOut, TRequiredInput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, TRequiredInput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, TRequiredInput))
- uid: NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,System.Boolean})
  name: CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, TRequiredInput>, Func<TIn1, TIn2, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallOutputSensitive__1_NMF_Transformations_GeneralTransformationRule___0__System_Func__0__1__2___0__System_Func__0__1__2_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``1(NMF.Transformations.GeneralTransformationRule{``0},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,System.Boolean})
  name.vb: CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, TRequiredInput), Func(Of TIn1, TIn2, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput>(NMF.Transformations.GeneralTransformationRule<TRequiredInput>, System.Func<TIn1, TIn2, TOut, TRequiredInput>, System.Func<TIn1, TIn2, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput), System.Func(Of TIn1, TIn2, TOut, TRequiredInput), System.Func(Of TIn1, TIn2, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput>(GeneralTransformationRule<TRequiredInput>, Func<TIn1, TIn2, TOut, TRequiredInput>, Func<TIn1, TIn2, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput)(GeneralTransformationRule(Of TRequiredInput), Func(Of TIn1, TIn2, TOut, TRequiredInput), Func(Of TIn1, TIn2, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,``1})
  name: CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, TRequiredInput1>, Func<TIn1, TIn2, TOut, TRequiredInput2>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1__2___0__System_Func__0__1__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,``1})
  name.vb: CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, TRequiredInput1), Func(Of TIn1, TIn2, TOut, TRequiredInput2))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TOut, TRequiredInput1>, System.Func<TIn1, TIn2, TOut, TRequiredInput2>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TOut, TRequiredInput1), System.Func(Of TIn1, TIn2, TOut, TRequiredInput2))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, TRequiredInput1>, Func<TIn1, TIn2, TOut, TRequiredInput2>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, TRequiredInput1), Func(Of TIn1, TIn2, TOut, TRequiredInput2))
- uid: NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,``1},System.Func{`0,`1,`2,System.Boolean})
  name: CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, TRequiredInput1>, Func<TIn1, TIn2, TOut, TRequiredInput2>, Func<TIn1, TIn2, TOut, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_CallOutputSensitive__2_NMF_Transformations_GeneralTransformationRule___0___1__System_Func__0__1__2___0__System_Func__0__1__2___1__System_Func__0__1__2_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.CallOutputSensitive``2(NMF.Transformations.GeneralTransformationRule{``0,``1},System.Func{`0,`1,`2,``0},System.Func{`0,`1,`2,``1},System.Func{`0,`1,`2,System.Boolean})
  name.vb: CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, TRequiredInput1), Func(Of TIn1, TIn2, TOut, TRequiredInput2), Func(Of TIn1, TIn2, TOut, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(NMF.Transformations.GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, System.Func<TIn1, TIn2, TOut, TRequiredInput1>, System.Func<TIn1, TIn2, TOut, TRequiredInput2>, System.Func<TIn1, TIn2, TOut, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(NMF.Transformations.GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), System.Func(Of TIn1, TIn2, TOut, TRequiredInput1), System.Func(Of TIn1, TIn2, TOut, TRequiredInput2), System.Func(Of TIn1, TIn2, TOut, System.Boolean))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.CallOutputSensitive<TRequiredInput1, TRequiredInput2>(GeneralTransformationRule<TRequiredInput1, TRequiredInput2>, Func<TIn1, TIn2, TOut, TRequiredInput1>, Func<TIn1, TIn2, TOut, TRequiredInput2>, Func<TIn1, TIn2, TOut, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).CallOutputSensitive(Of TRequiredInput1, TRequiredInput2)(GeneralTransformationRule(Of TRequiredInput1, TRequiredInput2), Func(Of TIn1, TIn2, TOut, TRequiredInput1), Func(Of TIn1, TIn2, TOut, TRequiredInput2), Func(Of TIn1, TIn2, TOut, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor*
  name: MarkInstantiatingFor
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_MarkInstantiatingFor_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor
- uid: NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor``3
  name: MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>()
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_MarkInstantiatingFor__3
  commentId: M:NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor``3
  name.vb: MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)()
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>()
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)()
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>()
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)()
- uid: NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor``3(System.Func{`0,`1,System.Boolean})
  name: MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, Boolean>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_MarkInstantiatingFor__3_System_Func__0__1_System_Boolean__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.MarkInstantiatingFor``3(System.Func{`0,`1,System.Boolean})
  name.vb: MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, Boolean))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn1, TIn2, System.Boolean>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn1, TIn2, System.Boolean))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.MarkInstantiatingFor<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, Boolean>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).MarkInstantiatingFor(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, Boolean))
- uid: NMF.Transformations.TransformationRuleBase`3.OutputType
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_OutputType
  commentId: P:NMF.Transformations.TransformationRuleBase`3.OutputType
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).OutputType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.OutputType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).OutputType
- uid: NMF.Transformations.TransformationRuleBase`3.OutputType*
  name: OutputType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_OutputType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.OutputType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.OutputType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).OutputType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.OutputType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).OutputType
- uid: NMF.Transformations.TransformationRuleBase`3.Require*
  name: Require
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Require_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.Require
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Require
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Require
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Require
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Require
- uid: NMF.Transformations.TransformationRuleBase`3.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,``0},System.Action{`2,``1})
  name: Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Require__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0__1___0__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Require``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,``0},System.Action{`2,``1})
  name.vb: Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn1, TIn2, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn1, TIn2, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Action{`2,``2})
  name: Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Require__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Action{`2,``2})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name: Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_Require__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0__1___0__System_Func__0__1___1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.Require``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name.vb: Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.Require<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).Require(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireByType*
  name: RequireByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.RequireByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType
- uid: NMF.Transformations.TransformationRuleBase`3.RequireByType``2(System.Func{`0,`1,``0},System.Action{`2,``1})
  name: RequireByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireByType__2_System_Func__0__1___0__System_Action__2___1__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireByType``2(System.Func{`0,`1,``0},System.Action{`2,``1})
  name.vb: RequireByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(System.Func<TIn1, TIn2, TRequiredInput>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn1, TIn2, TRequiredInput), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireByType``3(System.Action{`2,``2})
  name: RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireByType__3_System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireByType``3(System.Action{`2,``2})
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireByType``3(System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name: RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireByType__3_System_Func__0__1___0__System_Func__0__1___1__System_Action__2___2__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireByType``3(System.Func{`0,`1,``0},System.Func{`0,`1,``1},System.Action{`2,``2})
  name.vb: RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn1, TIn2, TRequiredInput1>, System.Func<TIn1, TIn2, TRequiredInput2>, System.Action<TOut, TRequiredOutput>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn1, TIn2, TRequiredInput1), System.Func(Of TIn1, TIn2, TRequiredInput2), System.Action(Of TOut, TRequiredOutput))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, TRequiredInput1>, Func<TIn1, TIn2, TRequiredInput2>, Action<TOut, TRequiredOutput>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, TRequiredInput1), Func(Of TIn1, TIn2, TRequiredInput2), Action(Of TOut, TRequiredOutput))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireMany*
  name: RequireMany
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireMany_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.RequireMany
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany
- uid: NMF.Transformations.TransformationRuleBase`3.RequireMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name: RequireMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireMany__2_NMF_Transformations_TransformationRuleBase___0___1__System_Func__0__1_System_Collections_Generic_IEnumerable___0___System_Action__2_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireMany``2(NMF.Transformations.TransformationRuleBase{``0,``1},System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name.vb: RequireMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany<TRequiredInput, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput, TRequiredOutput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany(Of TRequiredInput, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput, TRequiredOutput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany<TRequiredInput, TRequiredOutput>(TransformationRuleBase<TRequiredInput, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany(Of TRequiredInput, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name: RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireMany__3_NMF_Transformations_TransformationRuleBase___0___1___2__System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__2_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireMany``3(NMF.Transformations.TransformationRuleBase{``0,``1,``2},System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name.vb: RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(NMF.Transformations.TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(NMF.Transformations.TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireMany<TRequiredInput1, TRequiredInput2, TRequiredOutput>(TransformationRuleBase<TRequiredInput1, TRequiredInput2, TRequiredOutput>, Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireMany(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(TransformationRuleBase(Of TRequiredInput1, TRequiredInput2, TRequiredOutput), Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireManyByType*
  name: RequireManyByType
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireManyByType_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.RequireManyByType
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType
- uid: NMF.Transformations.TransformationRuleBase`3.RequireManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name: RequireManyByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireManyByType__2_System_Func__0__1_System_Collections_Generic_IEnumerable___0___System_Action__2_System_Collections_Generic_IEnumerable___1___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireManyByType``2(System.Func{`0,`1,System.Collections.Generic.IEnumerable{``0}},System.Action{`2,System.Collections.Generic.IEnumerable{``1}})
  name.vb: RequireManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType<TRequiredInput, TRequiredOutput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<TRequiredInput>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType(Of TRequiredInput, TRequiredOutput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of TRequiredInput)), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType<TRequiredInput, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<TRequiredInput>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType(Of TRequiredInput, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of TRequiredInput)), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.RequireManyByType``3(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name: RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_RequireManyByType__3_System_Func__0__1_System_Collections_Generic_IEnumerable_System_Tuple___0___1____System_Action__2_System_Collections_Generic_IEnumerable___2___
  commentId: M:NMF.Transformations.TransformationRuleBase`3.RequireManyByType``3(System.Func{`0,`1,System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}}},System.Action{`2,System.Collections.Generic.IEnumerable{``2}})
  name.vb: RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(System.Func<TIn1, TIn2, System.Collections.Generic.IEnumerable<System.Tuple<TRequiredInput1, TRequiredInput2>>>, System.Action<TOut, System.Collections.Generic.IEnumerable<TRequiredOutput>>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(System.Func(Of TIn1, TIn2, System.Collections.Generic.IEnumerable(Of System.Tuple(Of TRequiredInput1, TRequiredInput2))), System.Action(Of TOut, System.Collections.Generic.IEnumerable(Of TRequiredOutput)))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.RequireManyByType<TRequiredInput1, TRequiredInput2, TRequiredOutput>(Func<TIn1, TIn2, IEnumerable<Tuple<TRequiredInput1, TRequiredInput2>>>, Action<TOut, IEnumerable<TRequiredOutput>>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).RequireManyByType(Of TRequiredInput1, TRequiredInput2, TRequiredOutput)(Func(Of TIn1, TIn2, IEnumerable(Of Tuple(Of TRequiredInput1, TRequiredInput2))), Action(Of TOut, IEnumerable(Of TRequiredOutput)))
- uid: NMF.Transformations.TransformationRuleBase`3.TraceOutput*
  name: TraceOutput
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_TraceOutput_
  commentId: Overload:NMF.Transformations.TransformationRuleBase`3.TraceOutput
  isSpec: "True"
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput
- uid: NMF.Transformations.TransformationRuleBase`3.TraceOutput``1(NMF.Transformations.TraceEntryGroup{``0,`2},System.Func{`0,`1,`2,``0})
  name: TraceOutput<TKey>(TraceEntryGroup<TKey, TOut>, Func<TIn1, TIn2, TOut, TKey>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_TraceOutput__1_NMF_Transformations_TraceEntryGroup___0__2__System_Func__0__1__2___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.TraceOutput``1(NMF.Transformations.TraceEntryGroup{``0,`2},System.Func{`0,`1,`2,``0})
  name.vb: TraceOutput(Of TKey)(TraceEntryGroup(Of TKey, TOut), Func(Of TIn1, TIn2, TOut, TKey))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput<TKey>(NMF.Transformations.TraceEntryGroup<TKey, TOut>, System.Func<TIn1, TIn2, TOut, TKey>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput(Of TKey)(NMF.Transformations.TraceEntryGroup(Of TKey, TOut), System.Func(Of TIn1, TIn2, TOut, TKey))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput<TKey>(TraceEntryGroup<TKey, TOut>, Func<TIn1, TIn2, TOut, TKey>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput(Of TKey)(TraceEntryGroup(Of TKey, TOut), Func(Of TIn1, TIn2, TOut, TKey))
- uid: NMF.Transformations.TransformationRuleBase`3.TraceOutput``1(System.Func{`0,`1,`2,``0})
  name: TraceOutput<TKey>(Func<TIn1, TIn2, TOut, TKey>)
  href: api/Transformations/NMF.Transformations.TransformationRuleBase-3.html#NMF_Transformations_TransformationRuleBase_3_TraceOutput__1_System_Func__0__1__2___0__
  commentId: M:NMF.Transformations.TransformationRuleBase`3.TraceOutput``1(System.Func{`0,`1,`2,``0})
  name.vb: TraceOutput(Of TKey)(Func(Of TIn1, TIn2, TOut, TKey))
  fullName: NMF.Transformations.TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput<TKey>(System.Func<TIn1, TIn2, TOut, TKey>)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput(Of TKey)(System.Func(Of TIn1, TIn2, TOut, TKey))
  nameWithType: TransformationRuleBase<TIn1, TIn2, TOut>.TraceOutput<TKey>(Func<TIn1, TIn2, TOut, TKey>)
  nameWithType.vb: TransformationRuleBase(Of TIn1, TIn2, TOut).TraceOutput(Of TKey)(Func(Of TIn1, TIn2, TOut, TKey))
