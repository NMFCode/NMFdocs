### YamlMime:ManagedReference
items:
- uid: NMF.Optimizations.MeasuredConfiguration`1
  commentId: T:NMF.Optimizations.MeasuredConfiguration`1
  id: MeasuredConfiguration`1
  parent: NMF.Optimizations
  children:
  - NMF.Optimizations.MeasuredConfiguration`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Double})
  - NMF.Optimizations.MeasuredConfiguration`1.Configuration
  - NMF.Optimizations.MeasuredConfiguration`1.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
  - NMF.Optimizations.MeasuredConfiguration`1.Equals(System.Object)
  - NMF.Optimizations.MeasuredConfiguration`1.GetHashCode
  - NMF.Optimizations.MeasuredConfiguration`1.Measurements
  - NMF.Optimizations.MeasuredConfiguration`1.Representation
  - NMF.Optimizations.MeasuredConfiguration`1.op_Equality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  - NMF.Optimizations.MeasuredConfiguration`1.op_Inequality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  langs:
  - csharp
  - vb
  name: MeasuredConfiguration<T>
  nameWithType: MeasuredConfiguration<T>
  fullName: NMF.Optimizations.MeasuredConfiguration<T>
  type: Struct
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: MeasuredConfiguration
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 12
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Denotes a measured configuration
  example: []
  syntax:
    content: 'public struct MeasuredConfiguration<T> : IEquatable<MeasuredConfiguration<T>>'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Structure MeasuredConfiguration(Of T) Implements IEquatable(Of MeasuredConfiguration(Of T))
  implements:
  - System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: MeasuredConfiguration(Of T)
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T)
  name.vb: MeasuredConfiguration(Of T)
- uid: NMF.Optimizations.MeasuredConfiguration`1.Configuration
  commentId: P:NMF.Optimizations.MeasuredConfiguration`1.Configuration
  id: Configuration
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: MeasuredConfiguration<T>.Configuration
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Configuration
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Configuration
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 18
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: The actual configuration
  example: []
  syntax:
    content: public readonly T Configuration { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Configuration As T
  overload: NMF.Optimizations.MeasuredConfiguration`1.Configuration*
  nameWithType.vb: MeasuredConfiguration(Of T).Configuration
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Configuration
- uid: NMF.Optimizations.MeasuredConfiguration`1.Measurements
  commentId: P:NMF.Optimizations.MeasuredConfiguration`1.Measurements
  id: Measurements
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: Measurements
  nameWithType: MeasuredConfiguration<T>.Measurements
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Measurements
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Measurements
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 23
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: The measurements for this configuration
  example: []
  syntax:
    content: public readonly IDictionary<string, double> Measurements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Double}
    content.vb: Public Property Measurements As IDictionary(Of String, Double)
  overload: NMF.Optimizations.MeasuredConfiguration`1.Measurements*
  nameWithType.vb: MeasuredConfiguration(Of T).Measurements
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Measurements
- uid: NMF.Optimizations.MeasuredConfiguration`1.Representation
  commentId: P:NMF.Optimizations.MeasuredConfiguration`1.Representation
  id: Representation
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: Representation
  nameWithType: MeasuredConfiguration<T>.Representation
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Representation
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Representation
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 28
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: A representation of this measurement
  example: []
  syntax:
    content: public string Representation { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Representation As String
  overload: NMF.Optimizations.MeasuredConfiguration`1.Representation*
  nameWithType.vb: MeasuredConfiguration(Of T).Representation
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Representation
- uid: NMF.Optimizations.MeasuredConfiguration`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Double})
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Double})
  id: '#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Double})'
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: MeasuredConfiguration(T, IDictionary<string, double>)
  nameWithType: MeasuredConfiguration<T>.MeasuredConfiguration(T, IDictionary<string, double>)
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.MeasuredConfiguration(T, System.Collections.Generic.IDictionary<string, double>)
  type: Constructor
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 54
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Creates a new measured configuration
  example: []
  syntax:
    content: public MeasuredConfiguration(T configuration, IDictionary<string, double> measurements)
    parameters:
    - id: configuration
      type: '{T}'
      description: the configuration that has been measured
    - id: measurements
      type: System.Collections.Generic.IDictionary{System.String,System.Double}
      description: the actual measured metrics
    content.vb: Public Sub New(configuration As T, measurements As IDictionary(Of String, Double))
  overload: NMF.Optimizations.MeasuredConfiguration`1.#ctor*
  nameWithType.vb: MeasuredConfiguration(Of T).New(T, IDictionary(Of String, Double))
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).New(T, System.Collections.Generic.IDictionary(Of String, Double))
  name.vb: New(T, IDictionary(Of String, Double))
- uid: NMF.Optimizations.MeasuredConfiguration`1.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
  id: Equals(NMF.Optimizations.MeasuredConfiguration{`0})
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: Equals(MeasuredConfiguration<T>)
  nameWithType: MeasuredConfiguration<T>.Equals(MeasuredConfiguration<T>)
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Equals(NMF.Optimizations.MeasuredConfiguration<T>)
  type: Method
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Equals
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 61
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  example: []
  syntax:
    content: public bool Equals(MeasuredConfiguration<T> other)
    parameters:
    - id: other
      type: NMF.Optimizations.MeasuredConfiguration`1
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As MeasuredConfiguration(Of T)) As Boolean
  overload: NMF.Optimizations.MeasuredConfiguration`1.Equals*
  implements:
  - System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}.Equals(NMF.Optimizations.MeasuredConfiguration{{T}})
  nameWithType.vb: MeasuredConfiguration(Of T).Equals(MeasuredConfiguration(Of T))
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Equals(NMF.Optimizations.MeasuredConfiguration(Of T))
  name.vb: Equals(MeasuredConfiguration(Of T))
- uid: NMF.Optimizations.MeasuredConfiguration`1.Equals(System.Object)
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: MeasuredConfiguration<T>.Equals(object)
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Equals(object)
  type: Method
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Equals
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 67
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NMF.Optimizations.MeasuredConfiguration`1.Equals*
  nameWithType.vb: MeasuredConfiguration(Of T).Equals(Object)
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: NMF.Optimizations.MeasuredConfiguration`1.op_Equality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.op_Equality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  id: op_Equality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: operator ==(MeasuredConfiguration<T>, MeasuredConfiguration<T>)
  nameWithType: MeasuredConfiguration<T>.operator ==(MeasuredConfiguration<T>, MeasuredConfiguration<T>)
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.operator ==(NMF.Optimizations.MeasuredConfiguration<T>, NMF.Optimizations.MeasuredConfiguration<T>)
  type: Operator
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: op_Equality
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 80
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  example: []
  syntax:
    content: public static bool operator ==(MeasuredConfiguration<T> obj1, MeasuredConfiguration<T> obj2)
    parameters:
    - id: obj1
      type: NMF.Optimizations.MeasuredConfiguration`1
    - id: obj2
      type: NMF.Optimizations.MeasuredConfiguration`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(obj1 As MeasuredConfiguration(Of T), obj2 As MeasuredConfiguration(Of T)) As Boolean
  overload: NMF.Optimizations.MeasuredConfiguration`1.op_Equality*
  nameWithType.vb: MeasuredConfiguration(Of T).=(MeasuredConfiguration(Of T), MeasuredConfiguration(Of T))
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).=(NMF.Optimizations.MeasuredConfiguration(Of T), NMF.Optimizations.MeasuredConfiguration(Of T))
  name.vb: =(MeasuredConfiguration(Of T), MeasuredConfiguration(Of T))
- uid: NMF.Optimizations.MeasuredConfiguration`1.op_Inequality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.op_Inequality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  id: op_Inequality(NMF.Optimizations.MeasuredConfiguration{`0},NMF.Optimizations.MeasuredConfiguration{`0})
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: operator !=(MeasuredConfiguration<T>, MeasuredConfiguration<T>)
  nameWithType: MeasuredConfiguration<T>.operator !=(MeasuredConfiguration<T>, MeasuredConfiguration<T>)
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.operator !=(NMF.Optimizations.MeasuredConfiguration<T>, NMF.Optimizations.MeasuredConfiguration<T>)
  type: Operator
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: op_Inequality
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 88
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  example: []
  syntax:
    content: public static bool operator !=(MeasuredConfiguration<T> obj1, MeasuredConfiguration<T> obj2)
    parameters:
    - id: obj1
      type: NMF.Optimizations.MeasuredConfiguration`1
    - id: obj2
      type: NMF.Optimizations.MeasuredConfiguration`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(obj1 As MeasuredConfiguration(Of T), obj2 As MeasuredConfiguration(Of T)) As Boolean
  overload: NMF.Optimizations.MeasuredConfiguration`1.op_Inequality*
  nameWithType.vb: MeasuredConfiguration(Of T).<>(MeasuredConfiguration(Of T), MeasuredConfiguration(Of T))
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).<>(NMF.Optimizations.MeasuredConfiguration(Of T), NMF.Optimizations.MeasuredConfiguration(Of T))
  name.vb: <>(MeasuredConfiguration(Of T), MeasuredConfiguration(Of T))
- uid: NMF.Optimizations.MeasuredConfiguration`1.GetHashCode
  commentId: M:NMF.Optimizations.MeasuredConfiguration`1.GetHashCode
  id: GetHashCode
  parent: NMF.Optimizations.MeasuredConfiguration`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MeasuredConfiguration<T>.GetHashCode()
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetHashCode
    path: src/Optimizations/Optimizations/MeasuredConfiguration.cs
    startLine: 94
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NMF.Optimizations.MeasuredConfiguration`1.GetHashCode*
  nameWithType.vb: MeasuredConfiguration(Of T).GetHashCode()
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).GetHashCode()
references:
- uid: NMF.Optimizations
  commentId: N:NMF.Optimizations
  href: NMF.html
  name: NMF.Optimizations
  nameWithType: NMF.Optimizations
  fullName: NMF.Optimizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Optimizations
    name: Optimizations
    href: NMF.Optimizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Optimizations
    name: Optimizations
    href: NMF.Optimizations.html
- uid: System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}
  commentId: T:System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<MeasuredConfiguration<T>>
  nameWithType: IEquatable<MeasuredConfiguration<T>>
  fullName: System.IEquatable<NMF.Optimizations.MeasuredConfiguration<T>>
  nameWithType.vb: IEquatable(Of MeasuredConfiguration(Of T))
  fullName.vb: System.IEquatable(Of NMF.Optimizations.MeasuredConfiguration(Of T))
  name.vb: IEquatable(Of MeasuredConfiguration(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Optimizations.MeasuredConfiguration`1.Configuration*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.Configuration
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_Configuration
  name: Configuration
  nameWithType: MeasuredConfiguration<T>.Configuration
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Configuration
  nameWithType.vb: MeasuredConfiguration(Of T).Configuration
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Configuration
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NMF.Optimizations.MeasuredConfiguration`1.Measurements*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.Measurements
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_Measurements
  name: Measurements
  nameWithType: MeasuredConfiguration<T>.Measurements
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Measurements
  nameWithType.vb: MeasuredConfiguration(Of T).Measurements
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Measurements
- uid: System.Collections.Generic.IDictionary{System.String,System.Double}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, double>
  nameWithType: IDictionary<string, double>
  fullName: System.Collections.Generic.IDictionary<string, double>
  nameWithType.vb: IDictionary(Of String, Double)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Optimizations.MeasuredConfiguration`1.Representation*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.Representation
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_Representation
  name: Representation
  nameWithType: MeasuredConfiguration<T>.Representation
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Representation
  nameWithType.vb: MeasuredConfiguration(Of T).Representation
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Representation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NMF.Optimizations.MeasuredConfiguration`1.#ctor*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.#ctor
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1__ctor__0_System_Collections_Generic_IDictionary_System_String_System_Double__
  name: MeasuredConfiguration
  nameWithType: MeasuredConfiguration<T>.MeasuredConfiguration
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.MeasuredConfiguration
  nameWithType.vb: MeasuredConfiguration(Of T).New
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).New
  name.vb: New
- uid: NMF.Optimizations.MeasuredConfiguration`1.Equals*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.Equals
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_Equals_NMF_Optimizations_MeasuredConfiguration__0__
  name: Equals
  nameWithType: MeasuredConfiguration<T>.Equals
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.Equals
  nameWithType.vb: MeasuredConfiguration(Of T).Equals
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).Equals
- uid: System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}.Equals(NMF.Optimizations.MeasuredConfiguration{{T}})
  commentId: M:System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
  parent: System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(MeasuredConfiguration<T>)
  nameWithType: IEquatable<MeasuredConfiguration<T>>.Equals(MeasuredConfiguration<T>)
  fullName: System.IEquatable<NMF.Optimizations.MeasuredConfiguration<T>>.Equals(NMF.Optimizations.MeasuredConfiguration<T>)
  nameWithType.vb: IEquatable(Of MeasuredConfiguration(Of T)).Equals(MeasuredConfiguration(Of T))
  fullName.vb: System.IEquatable(Of NMF.Optimizations.MeasuredConfiguration(Of T)).Equals(NMF.Optimizations.MeasuredConfiguration(Of T))
  name.vb: Equals(MeasuredConfiguration(Of T))
  spec.csharp:
  - uid: System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{NMF.Optimizations.MeasuredConfiguration`1}.Equals(NMF.Optimizations.MeasuredConfiguration{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NMF.Optimizations.MeasuredConfiguration`1
  commentId: T:NMF.Optimizations.MeasuredConfiguration`1
  parent: NMF.Optimizations
  href: NMF.Optimizations.MeasuredConfiguration-1.html
  name: MeasuredConfiguration<T>
  nameWithType: MeasuredConfiguration<T>
  fullName: NMF.Optimizations.MeasuredConfiguration<T>
  nameWithType.vb: MeasuredConfiguration(Of T)
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T)
  name.vb: MeasuredConfiguration(Of T)
  spec.csharp:
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Optimizations.MeasuredConfiguration`1
    name: MeasuredConfiguration
    href: NMF.Optimizations.MeasuredConfiguration-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Optimizations.MeasuredConfiguration`1.op_Equality*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.op_Equality
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_op_Equality_NMF_Optimizations_MeasuredConfiguration__0__NMF_Optimizations_MeasuredConfiguration__0__
  name: operator ==
  nameWithType: MeasuredConfiguration<T>.operator ==
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.operator ==
  nameWithType.vb: MeasuredConfiguration(Of T).=
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NMF.Optimizations.MeasuredConfiguration`1.op_Equality*
    name: ==
    href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_op_Equality_NMF_Optimizations_MeasuredConfiguration__0__NMF_Optimizations_MeasuredConfiguration__0__
- uid: NMF.Optimizations.MeasuredConfiguration`1.op_Inequality*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.op_Inequality
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_op_Inequality_NMF_Optimizations_MeasuredConfiguration__0__NMF_Optimizations_MeasuredConfiguration__0__
  name: operator !=
  nameWithType: MeasuredConfiguration<T>.operator !=
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.operator !=
  nameWithType.vb: MeasuredConfiguration(Of T).<>
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NMF.Optimizations.MeasuredConfiguration`1.op_Inequality*
    name: '!='
    href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_op_Inequality_NMF_Optimizations_MeasuredConfiguration__0__NMF_Optimizations_MeasuredConfiguration__0__
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NMF.Optimizations.MeasuredConfiguration`1.GetHashCode*
  commentId: Overload:NMF.Optimizations.MeasuredConfiguration`1.GetHashCode
  href: NMF.Optimizations.MeasuredConfiguration-1.html#NMF_Optimizations_MeasuredConfiguration_1_GetHashCode
  name: GetHashCode
  nameWithType: MeasuredConfiguration<T>.GetHashCode
  fullName: NMF.Optimizations.MeasuredConfiguration<T>.GetHashCode
  nameWithType.vb: MeasuredConfiguration(Of T).GetHashCode
  fullName.vb: NMF.Optimizations.MeasuredConfiguration(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
