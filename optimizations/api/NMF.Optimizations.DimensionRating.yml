### YamlMime:ManagedReference
items:
- uid: NMF.Optimizations.DimensionRating
  commentId: T:NMF.Optimizations.DimensionRating
  id: DimensionRating
  parent: NMF.Optimizations
  children:
  - NMF.Optimizations.DimensionRating.BiggerIsBetter
  - NMF.Optimizations.DimensionRating.SmallerIsBetter
  langs:
  - csharp
  - vb
  name: DimensionRating
  nameWithType: DimensionRating
  fullName: NMF.Optimizations.DimensionRating
  type: Enum
  source:
    remote:
      path: Optimizations/Optimizations/DimensionRating.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DimensionRating
    path: src/Optimizations/Optimizations/DimensionRating.cs
    startLine: 10
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: "\nDenotes a rating how to cope with dimensions\n"
  example: []
  syntax:
    content: public enum DimensionRating
    content.vb: Public Enum DimensionRating
  extensionMethods:
  - NMF.Optimizations.DimensionRating.NMF.Optimizations.DimensionRatingExtensions.IsBetter(System.Double,System.Double)
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: NMF.Optimizations.DimensionRating.BiggerIsBetter
  commentId: F:NMF.Optimizations.DimensionRating.BiggerIsBetter
  id: BiggerIsBetter
  parent: NMF.Optimizations.DimensionRating
  langs:
  - csharp
  - vb
  name: BiggerIsBetter
  nameWithType: DimensionRating.BiggerIsBetter
  fullName: NMF.Optimizations.DimensionRating.BiggerIsBetter
  type: Field
  source:
    remote:
      path: Optimizations/Optimizations/DimensionRating.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: BiggerIsBetter
    path: src/Optimizations/Optimizations/DimensionRating.cs
    startLine: 15
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: "\nDenotes that larger values in this dimensions are better\n"
  example: []
  syntax:
    content: BiggerIsBetter = 0
    return:
      type: NMF.Optimizations.DimensionRating
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: NMF.Optimizations.DimensionRating.SmallerIsBetter
  commentId: F:NMF.Optimizations.DimensionRating.SmallerIsBetter
  id: SmallerIsBetter
  parent: NMF.Optimizations.DimensionRating
  langs:
  - csharp
  - vb
  name: SmallerIsBetter
  nameWithType: DimensionRating.SmallerIsBetter
  fullName: NMF.Optimizations.DimensionRating.SmallerIsBetter
  type: Field
  source:
    remote:
      path: Optimizations/Optimizations/DimensionRating.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SmallerIsBetter
    path: src/Optimizations/Optimizations/DimensionRating.cs
    startLine: 19
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: "\nDenotes that smaller values in this dimension are better\n"
  example: []
  syntax:
    content: SmallerIsBetter = 1
    return:
      type: NMF.Optimizations.DimensionRating
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: NMF.Optimizations
  commentId: N:NMF.Optimizations
  name: NMF.Optimizations
  nameWithType: NMF.Optimizations
  fullName: NMF.Optimizations
- uid: NMF.Optimizations.DimensionRating.NMF.Optimizations.DimensionRatingExtensions.IsBetter(System.Double,System.Double)
  commentId: M:NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
  parent: NMF.Optimizations.DimensionRatingExtensions
  definition: NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
  name: IsBetter(Double, Double)
  nameWithType: DimensionRatingExtensions.IsBetter(Double, Double)
  fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter(System.Double, System.Double)
  spec.csharp:
  - uid: NMF.Optimizations.DimensionRatingExtensions.IsBetter(System.Double,System.Double)
    name: IsBetter
    nameWithType: DimensionRatingExtensions.IsBetter
    fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Optimizations.DimensionRatingExtensions.IsBetter(System.Double,System.Double)
    name: IsBetter
    nameWithType: DimensionRatingExtensions.IsBetter
    fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
  commentId: M:NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
  isExternal: true
  name: IsBetter(DimensionRating, Double, Double)
  nameWithType: DimensionRatingExtensions.IsBetter(DimensionRating, Double, Double)
  fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating, System.Double, System.Double)
  spec.csharp:
  - uid: NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
    name: IsBetter
    nameWithType: DimensionRatingExtensions.IsBetter
    fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Optimizations.DimensionRating
    name: DimensionRating
    nameWithType: DimensionRating
    fullName: NMF.Optimizations.DimensionRating
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Optimizations.DimensionRatingExtensions.IsBetter(NMF.Optimizations.DimensionRating,System.Double,System.Double)
    name: IsBetter
    nameWithType: DimensionRatingExtensions.IsBetter
    fullName: NMF.Optimizations.DimensionRatingExtensions.IsBetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Optimizations.DimensionRating
    name: DimensionRating
    nameWithType: DimensionRating
    fullName: NMF.Optimizations.DimensionRating
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Optimizations.DimensionRatingExtensions
  commentId: T:NMF.Optimizations.DimensionRatingExtensions
  parent: NMF.Optimizations
  name: DimensionRatingExtensions
  nameWithType: DimensionRatingExtensions
  fullName: NMF.Optimizations.DimensionRatingExtensions
- uid: NMF.Optimizations.DimensionRating
  commentId: T:NMF.Optimizations.DimensionRating
  parent: NMF.Optimizations
  name: DimensionRating
  nameWithType: DimensionRating
  fullName: NMF.Optimizations.DimensionRating
