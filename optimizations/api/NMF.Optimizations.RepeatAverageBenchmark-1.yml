### YamlMime:ManagedReference
items:
- uid: NMF.Optimizations.RepeatAverageBenchmark`1
  commentId: T:NMF.Optimizations.RepeatAverageBenchmark`1
  id: RepeatAverageBenchmark`1
  parent: NMF.Optimizations
  children:
  - NMF.Optimizations.RepeatAverageBenchmark`1.#ctor(NMF.Optimizations.IBenchmark{`0},System.Int32)
  - NMF.Optimizations.RepeatAverageBenchmark`1.Inner
  - NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration(`0)
  - NMF.Optimizations.RepeatAverageBenchmark`1.Metrics
  - NMF.Optimizations.RepeatAverageBenchmark`1.N
  langs:
  - csharp
  - vb
  name: RepeatAverageBenchmark<T>
  nameWithType: RepeatAverageBenchmark<T>
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>
  type: Class
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: RepeatAverageBenchmark
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 11
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Denotes a benchmark that repeats measurements a number of times and takes the average results
  example: []
  syntax:
    content: 'public class RepeatAverageBenchmark<T> : IBenchmark<T>'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Class RepeatAverageBenchmark(Of T) Implements IBenchmark(Of T)
  inheritance:
  - System.Object
  implements:
  - NMF.Optimizations.IBenchmark{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RepeatAverageBenchmark(Of T)
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T)
  name.vb: RepeatAverageBenchmark(Of T)
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.Inner
  commentId: P:NMF.Optimizations.RepeatAverageBenchmark`1.Inner
  id: Inner
  parent: NMF.Optimizations.RepeatAverageBenchmark`1
  langs:
  - csharp
  - vb
  name: Inner
  nameWithType: RepeatAverageBenchmark<T>.Inner
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.Inner
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Inner
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 16
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: The inner benchmark
  example: []
  syntax:
    content: public IBenchmark<T> Inner { get; set; }
    parameters: []
    return:
      type: NMF.Optimizations.IBenchmark{{T}}
    content.vb: Public Property Inner As IBenchmark(Of T)
  overload: NMF.Optimizations.RepeatAverageBenchmark`1.Inner*
  nameWithType.vb: RepeatAverageBenchmark(Of T).Inner
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).Inner
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.N
  commentId: P:NMF.Optimizations.RepeatAverageBenchmark`1.N
  id: N
  parent: NMF.Optimizations.RepeatAverageBenchmark`1
  langs:
  - csharp
  - vb
  name: N
  nameWithType: RepeatAverageBenchmark<T>.N
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.N
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: N
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 21
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Gets the number of repetitions
  example: []
  syntax:
    content: public int N { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property N As Integer
  overload: NMF.Optimizations.RepeatAverageBenchmark`1.N*
  nameWithType.vb: RepeatAverageBenchmark(Of T).N
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).N
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.Metrics
  commentId: P:NMF.Optimizations.RepeatAverageBenchmark`1.Metrics
  id: Metrics
  parent: NMF.Optimizations.RepeatAverageBenchmark`1
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: RepeatAverageBenchmark<T>.Metrics
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.Metrics
  type: Property
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Metrics
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 24
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Gets a collection of metrics measured by this benchmark
  example: []
  syntax:
    content: public IEnumerable<string> Metrics { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Metrics As IEnumerable(Of String)
  overload: NMF.Optimizations.RepeatAverageBenchmark`1.Metrics*
  implements:
  - NMF.Optimizations.IBenchmark{{T}}.Metrics
  nameWithType.vb: RepeatAverageBenchmark(Of T).Metrics
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).Metrics
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.#ctor(NMF.Optimizations.IBenchmark{`0},System.Int32)
  commentId: M:NMF.Optimizations.RepeatAverageBenchmark`1.#ctor(NMF.Optimizations.IBenchmark{`0},System.Int32)
  id: '#ctor(NMF.Optimizations.IBenchmark{`0},System.Int32)'
  parent: NMF.Optimizations.RepeatAverageBenchmark`1
  langs:
  - csharp
  - vb
  name: RepeatAverageBenchmark(IBenchmark<T>, int)
  nameWithType: RepeatAverageBenchmark<T>.RepeatAverageBenchmark(IBenchmark<T>, int)
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.RepeatAverageBenchmark(NMF.Optimizations.IBenchmark<T>, int)
  type: Constructor
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 37
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Creates a new repeated benchmark
  example: []
  syntax:
    content: public RepeatAverageBenchmark(IBenchmark<T> inner, int n = 5)
    parameters:
    - id: inner
      type: NMF.Optimizations.IBenchmark{{T}}
      description: The inner benchmark
    - id: n
      type: System.Int32
      description: The number of repetitions
    content.vb: Public Sub New(inner As IBenchmark(Of T), n As Integer = 5)
  overload: NMF.Optimizations.RepeatAverageBenchmark`1.#ctor*
  nameWithType.vb: RepeatAverageBenchmark(Of T).New(IBenchmark(Of T), Integer)
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).New(NMF.Optimizations.IBenchmark(Of T), Integer)
  name.vb: New(IBenchmark(Of T), Integer)
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration(`0)
  commentId: M:NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration(`0)
  id: MeasureConfiguration(`0)
  parent: NMF.Optimizations.RepeatAverageBenchmark`1
  langs:
  - csharp
  - vb
  name: MeasureConfiguration(T)
  nameWithType: RepeatAverageBenchmark<T>.MeasureConfiguration(T)
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.MeasureConfiguration(T)
  type: Method
  source:
    remote:
      path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: MeasureConfiguration
    path: src/Optimizations/Optimizations/RepeatAverageBenchmark.cs
    startLine: 47
  assemblies:
  - NMF.Optimizaions
  namespace: NMF.Optimizations
  summary: Measures the given configuration
  example: []
  syntax:
    content: public IDictionary<string, double> MeasureConfiguration(T configuration)
    parameters:
    - id: configuration
      type: '{T}'
      description: The configuration
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Double}
      description: A dictionary of measurement results
    content.vb: Public Function MeasureConfiguration(configuration As T) As IDictionary(Of String, Double)
  overload: NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration*
  implements:
  - NMF.Optimizations.IBenchmark{{T}}.MeasureConfiguration({T})
  nameWithType.vb: RepeatAverageBenchmark(Of T).MeasureConfiguration(T)
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).MeasureConfiguration(T)
references:
- uid: NMF.Optimizations
  commentId: N:NMF.Optimizations
  href: NMF.html
  name: NMF.Optimizations
  nameWithType: NMF.Optimizations
  fullName: NMF.Optimizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Optimizations
    name: Optimizations
    href: NMF.Optimizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Optimizations
    name: Optimizations
    href: NMF.Optimizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Optimizations.IBenchmark{{T}}
  commentId: T:NMF.Optimizations.IBenchmark{`0}
  parent: NMF.Optimizations
  definition: NMF.Optimizations.IBenchmark`1
  href: NMF.Optimizations.IBenchmark-1.html
  name: IBenchmark<T>
  nameWithType: IBenchmark<T>
  fullName: NMF.Optimizations.IBenchmark<T>
  nameWithType.vb: IBenchmark(Of T)
  fullName.vb: NMF.Optimizations.IBenchmark(Of T)
  name.vb: IBenchmark(Of T)
  spec.csharp:
  - uid: NMF.Optimizations.IBenchmark`1
    name: IBenchmark
    href: NMF.Optimizations.IBenchmark-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Optimizations.IBenchmark`1
    name: IBenchmark
    href: NMF.Optimizations.IBenchmark-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Optimizations.IBenchmark`1
  commentId: T:NMF.Optimizations.IBenchmark`1
  href: NMF.Optimizations.IBenchmark-1.html
  name: IBenchmark<T>
  nameWithType: IBenchmark<T>
  fullName: NMF.Optimizations.IBenchmark<T>
  nameWithType.vb: IBenchmark(Of T)
  fullName.vb: NMF.Optimizations.IBenchmark(Of T)
  name.vb: IBenchmark(Of T)
  spec.csharp:
  - uid: NMF.Optimizations.IBenchmark`1
    name: IBenchmark
    href: NMF.Optimizations.IBenchmark-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Optimizations.IBenchmark`1
    name: IBenchmark
    href: NMF.Optimizations.IBenchmark-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.Inner*
  commentId: Overload:NMF.Optimizations.RepeatAverageBenchmark`1.Inner
  href: NMF.Optimizations.RepeatAverageBenchmark-1.html#NMF_Optimizations_RepeatAverageBenchmark_1_Inner
  name: Inner
  nameWithType: RepeatAverageBenchmark<T>.Inner
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.Inner
  nameWithType.vb: RepeatAverageBenchmark(Of T).Inner
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).Inner
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.N*
  commentId: Overload:NMF.Optimizations.RepeatAverageBenchmark`1.N
  href: NMF.Optimizations.RepeatAverageBenchmark-1.html#NMF_Optimizations_RepeatAverageBenchmark_1_N
  name: N
  nameWithType: RepeatAverageBenchmark<T>.N
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.N
  nameWithType.vb: RepeatAverageBenchmark(Of T).N
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).N
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.Metrics*
  commentId: Overload:NMF.Optimizations.RepeatAverageBenchmark`1.Metrics
  href: NMF.Optimizations.RepeatAverageBenchmark-1.html#NMF_Optimizations_RepeatAverageBenchmark_1_Metrics
  name: Metrics
  nameWithType: RepeatAverageBenchmark<T>.Metrics
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.Metrics
  nameWithType.vb: RepeatAverageBenchmark(Of T).Metrics
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).Metrics
- uid: NMF.Optimizations.IBenchmark{{T}}.Metrics
  commentId: P:NMF.Optimizations.IBenchmark{`0}.Metrics
  parent: NMF.Optimizations.IBenchmark{{T}}
  definition: NMF.Optimizations.IBenchmark`1.Metrics
  href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_Metrics
  name: Metrics
  nameWithType: IBenchmark<T>.Metrics
  fullName: NMF.Optimizations.IBenchmark<T>.Metrics
  nameWithType.vb: IBenchmark(Of T).Metrics
  fullName.vb: NMF.Optimizations.IBenchmark(Of T).Metrics
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NMF.Optimizations.IBenchmark`1.Metrics
  commentId: P:NMF.Optimizations.IBenchmark`1.Metrics
  href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_Metrics
  name: Metrics
  nameWithType: IBenchmark<T>.Metrics
  fullName: NMF.Optimizations.IBenchmark<T>.Metrics
  nameWithType.vb: IBenchmark(Of T).Metrics
  fullName.vb: NMF.Optimizations.IBenchmark(Of T).Metrics
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.#ctor*
  commentId: Overload:NMF.Optimizations.RepeatAverageBenchmark`1.#ctor
  href: NMF.Optimizations.RepeatAverageBenchmark-1.html#NMF_Optimizations_RepeatAverageBenchmark_1__ctor_NMF_Optimizations_IBenchmark__0__System_Int32_
  name: RepeatAverageBenchmark
  nameWithType: RepeatAverageBenchmark<T>.RepeatAverageBenchmark
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.RepeatAverageBenchmark
  nameWithType.vb: RepeatAverageBenchmark(Of T).New
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).New
  name.vb: New
- uid: NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration*
  commentId: Overload:NMF.Optimizations.RepeatAverageBenchmark`1.MeasureConfiguration
  href: NMF.Optimizations.RepeatAverageBenchmark-1.html#NMF_Optimizations_RepeatAverageBenchmark_1_MeasureConfiguration__0_
  name: MeasureConfiguration
  nameWithType: RepeatAverageBenchmark<T>.MeasureConfiguration
  fullName: NMF.Optimizations.RepeatAverageBenchmark<T>.MeasureConfiguration
  nameWithType.vb: RepeatAverageBenchmark(Of T).MeasureConfiguration
  fullName.vb: NMF.Optimizations.RepeatAverageBenchmark(Of T).MeasureConfiguration
- uid: NMF.Optimizations.IBenchmark{{T}}.MeasureConfiguration({T})
  commentId: M:NMF.Optimizations.IBenchmark{`0}.MeasureConfiguration(`0)
  parent: NMF.Optimizations.IBenchmark{{T}}
  definition: NMF.Optimizations.IBenchmark`1.MeasureConfiguration(`0)
  href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  name: MeasureConfiguration(T)
  nameWithType: IBenchmark<T>.MeasureConfiguration(T)
  fullName: NMF.Optimizations.IBenchmark<T>.MeasureConfiguration(T)
  nameWithType.vb: IBenchmark(Of T).MeasureConfiguration(T)
  fullName.vb: NMF.Optimizations.IBenchmark(Of T).MeasureConfiguration(T)
  spec.csharp:
  - uid: NMF.Optimizations.IBenchmark{`0}.MeasureConfiguration(`0)
    name: MeasureConfiguration
    href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Optimizations.IBenchmark{`0}.MeasureConfiguration(`0)
    name: MeasureConfiguration
    href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IDictionary{System.String,System.Double}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, double>
  nameWithType: IDictionary<string, double>
  fullName: System.Collections.Generic.IDictionary<string, double>
  nameWithType.vb: IDictionary(Of String, Double)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Double)
  name.vb: IDictionary(Of String, Double)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: NMF.Optimizations.IBenchmark`1.MeasureConfiguration(`0)
  commentId: M:NMF.Optimizations.IBenchmark`1.MeasureConfiguration(`0)
  href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  name: MeasureConfiguration(T)
  nameWithType: IBenchmark<T>.MeasureConfiguration(T)
  fullName: NMF.Optimizations.IBenchmark<T>.MeasureConfiguration(T)
  nameWithType.vb: IBenchmark(Of T).MeasureConfiguration(T)
  fullName.vb: NMF.Optimizations.IBenchmark(Of T).MeasureConfiguration(T)
  spec.csharp:
  - uid: NMF.Optimizations.IBenchmark`1.MeasureConfiguration(`0)
    name: MeasureConfiguration
    href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: NMF.Optimizations.IBenchmark`1.MeasureConfiguration(`0)
    name: MeasureConfiguration
    href: NMF.Optimizations.IBenchmark-1.html#NMF_Optimizations_IBenchmark_1_MeasureConfiguration__0_
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
