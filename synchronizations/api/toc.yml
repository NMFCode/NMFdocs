### YamlMime:TableOfContent
- uid: NMF.Synchronizations
  name: NMF.Synchronizations
  items:
  - uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
    name: BothGuardedSynchronizationJob<TLeft, TRight>
    name.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob<TLeft, TRight>
    name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob<TLeft, TRight>
    name.vb: ISynchronizationJob(Of TLeft, TRight)
  - uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
    name: LeftGuardedSynchronizationJob<TLeft, TRight>
    name.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  - uid: NMF.Synchronizations.PropertyInequality`3
    name: PropertyInequality<TLeft, TRight, TValue>
    name.vb: PropertyInequality(Of TLeft, TRight, TValue)
  - uid: NMF.Synchronizations.ReflectiveSynchronization
    name: ReflectiveSynchronization
  - uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
    name: RightGuardedSynchronizationJob<TLeft, TRight>
    name.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  - uid: NMF.Synchronizations.Synchronization
    name: Synchronization
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation<TIn, TOut>
    name.vb: SynchronizationComputation(Of TIn, TOut)
  - uid: NMF.Synchronizations.SynchronizationContext
    name: SynchronizationContext
  - uid: NMF.Synchronizations.SynchronizationContextExtensions
    name: SynchronizationContextExtensions
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
  - uid: NMF.Synchronizations.SynchronizationDirectionExtensions
    name: SynchronizationDirectionExtensions
  - uid: NMF.Synchronizations.SynchronizationExtensions
    name: SynchronizationExtensions
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule<TLeft, TRight>
    name.vb: SynchronizationRule(Of TLeft, TRight)
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
- uid: NMF.Synchronizations.Inconsistencies
  name: NMF.Synchronizations.Inconsistencies
  items:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
  - uid: NMF.Synchronizations.Inconsistencies.IncrementalPropertyConsistencyCheck`1
    name: IncrementalPropertyConsistencyCheck<T>
    name.vb: IncrementalPropertyConsistencyCheck(Of T)
  - uid: NMF.Synchronizations.Inconsistencies.IncrementalReferenceConsistencyCheck`4
    name: IncrementalReferenceConsistencyCheck<TLeft, TRight, TDepLeft, TDepRight>
    name.vb: IncrementalReferenceConsistencyCheck(Of TLeft, TRight, TDepLeft, TDepRight)
  - uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
    name: MissingItemInconsistency<TValue>
    name.vb: MissingItemInconsistency(Of TValue)
  - uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
    name: MissingItemInconsistency<TSource, TTarget>
    name.vb: MissingItemInconsistency(Of TSource, TTarget)
  - uid: NMF.Synchronizations.Inconsistencies.ReferenceInconsistency`4
    name: ReferenceInconsistency<TLeft, TRight, TDepLeft, TDepRight>
    name.vb: ReferenceInconsistency(Of TLeft, TRight, TDepLeft, TDepRight)
- uid: NMF.Synchronizations.Models
  name: NMF.Synchronizations.Models
  items:
  - uid: NMF.Synchronizations.Models.HomogeneousSynchronization`1
    name: HomogeneousSynchronization<T>
    name.vb: HomogeneousSynchronization(Of T)
  - uid: NMF.Synchronizations.Models.ModelCopyRule`1
    name: ModelCopyRule<T>
    name.vb: ModelCopyRule(Of T)
  - uid: NMF.Synchronizations.Models.ModelSynchronizationRule`2
    name: ModelSynchronizationRule<TLeft, TRight>
    name.vb: ModelSynchronizationRule(Of TLeft, TRight)
