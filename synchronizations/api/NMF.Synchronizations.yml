### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  id: NMF.Synchronizations
  children:
  - NMF.Synchronizations.BothGuardedSynchronizationJob`2
  - NMF.Synchronizations.GuardedSynchronizationJob`2
  - NMF.Synchronizations.ISynchronizationContext
  - NMF.Synchronizations.ISynchronizationJob`2
  - NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  - NMF.Synchronizations.PropertyInequality`3
  - NMF.Synchronizations.ReflectiveSynchronization
  - NMF.Synchronizations.RightGuardedSynchronizationJob`2
  - NMF.Synchronizations.Synchronization
  - NMF.Synchronizations.SynchronizationComputation`2
  - NMF.Synchronizations.SynchronizationContext
  - NMF.Synchronizations.SynchronizationContextExtensions
  - NMF.Synchronizations.SynchronizationDirection
  - NMF.Synchronizations.SynchronizationDirectionExtensions
  - NMF.Synchronizations.SynchronizationExtensions
  - NMF.Synchronizations.SynchronizationRule`2
  - NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  type: Namespace
  assemblies:
  - NMF.Synchronizations
references:
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob`2
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.BothGuardedSynchronizationJob`2
  name: BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
    name: BothGuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
    name: BothGuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.RightGuardedSynchronizationJob`2
  name: RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
    name: RightGuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
    name: RightGuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  name: LeftGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
    name: LeftGuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
    name: LeftGuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.PropertyInequality`3
  commentId: T:NMF.Synchronizations.PropertyInequality`3
  parent: NMF.Synchronizations
  name: PropertyInequality<TLeft, TRight, TValue>
  nameWithType: PropertyInequality<TLeft, TRight, TValue>
  fullName: NMF.Synchronizations.PropertyInequality<TLeft, TRight, TValue>
  nameWithType.vb: PropertyInequality(Of TLeft, TRight, TValue)
  fullName.vb: NMF.Synchronizations.PropertyInequality(Of TLeft, TRight, TValue)
  name.vb: PropertyInequality(Of TLeft, TRight, TValue)
  spec.csharp:
  - uid: NMF.Synchronizations.PropertyInequality`3
    name: PropertyInequality
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.PropertyInequality`3
    name: PropertyInequality
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Synchronizations.ReflectiveSynchronization
  commentId: T:NMF.Synchronizations.ReflectiveSynchronization
  parent: NMF.Synchronizations
  name: ReflectiveSynchronization
  nameWithType: ReflectiveSynchronization
  fullName: NMF.Synchronizations.ReflectiveSynchronization
- uid: NMF.Synchronizations.Synchronization
  commentId: T:NMF.Synchronizations.Synchronization
  parent: NMF.Synchronizations
  name: Synchronization
  nameWithType: Synchronization
  fullName: NMF.Synchronizations.Synchronization
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Synchronizations.SynchronizationContext
  commentId: T:NMF.Synchronizations.SynchronizationContext
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationContextExtensions
  commentId: T:NMF.Synchronizations.SynchronizationContextExtensions
  parent: NMF.Synchronizations
  name: SynchronizationContextExtensions
  nameWithType: SynchronizationContextExtensions
  fullName: NMF.Synchronizations.SynchronizationContextExtensions
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  parent: NMF.Synchronizations
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions
  commentId: T:NMF.Synchronizations.SynchronizationDirectionExtensions
  parent: NMF.Synchronizations
  name: SynchronizationDirectionExtensions
  nameWithType: SynchronizationDirectionExtensions
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions
- uid: NMF.Synchronizations.SynchronizationExtensions
  commentId: T:NMF.Synchronizations.SynchronizationExtensions
  name: SynchronizationExtensions
  nameWithType: SynchronizationExtensions
  fullName: NMF.Synchronizations.SynchronizationExtensions
- uid: NMF.Synchronizations.ISynchronizationJob`2
  commentId: T:NMF.Synchronizations.ISynchronizationJob`2
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.SynchronizationRule`2
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  parent: NMF.Synchronizations
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
