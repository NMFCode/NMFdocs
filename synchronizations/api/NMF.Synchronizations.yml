### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  id: NMF.Synchronizations
  children:
  - NMF.Synchronizations.BothGuardedSynchronizationJob`2
  - NMF.Synchronizations.GuardedSynchronizationJob`2
  - NMF.Synchronizations.IConverter`2
  - NMF.Synchronizations.ISynchronizationContext
  - NMF.Synchronizations.ISynchronizationJob`2
  - NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  - NMF.Synchronizations.OneWayPropertySynchronizationJob`3
  - NMF.Synchronizations.OpaqueSynchronizationJob`2
  - NMF.Synchronizations.PropertySynchronizationJob`3
  - NMF.Synchronizations.ReflectiveSynchronization
  - NMF.Synchronizations.RightGuardedSynchronizationJob`2
  - NMF.Synchronizations.Synchronization
  - NMF.Synchronizations.SynchronizationComputation`2
  - NMF.Synchronizations.SynchronizationContext
  - NMF.Synchronizations.SynchronizationDirection
  - NMF.Synchronizations.SynchronizationDirectionExtensions
  - NMF.Synchronizations.SynchronizationExtensions
  - NMF.Synchronizations.SynchronizationMultipleDependency`4
  - NMF.Synchronizations.SynchronizationRule`2
  - NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  type: Namespace
  assemblies:
  - NMF.Synchronizations
references:
- uid: NMF.Synchronizations.IConverter`2
  commentId: T:NMF.Synchronizations.IConverter`2
  name: IConverter<TLeft, TRight>
  nameWithType: IConverter<TLeft, TRight>
  fullName: NMF.Synchronizations.IConverter<TLeft, TRight>
  nameWithType.vb: IConverter(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.IConverter(Of TLeft, TRight)
  name.vb: IConverter(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.IConverter`2
    name: IConverter
    nameWithType: IConverter
    fullName: NMF.Synchronizations.IConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.IConverter`2
    name: IConverter
    nameWithType: IConverter
    fullName: NMF.Synchronizations.IConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob`2
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    nameWithType: GuardedSynchronizationJob
    fullName: NMF.Synchronizations.GuardedSynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    nameWithType: GuardedSynchronizationJob
    fullName: NMF.Synchronizations.GuardedSynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.BothGuardedSynchronizationJob`2
  name: BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
    name: BothGuardedSynchronizationJob
    nameWithType: BothGuardedSynchronizationJob
    fullName: NMF.Synchronizations.BothGuardedSynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
    name: BothGuardedSynchronizationJob
    nameWithType: BothGuardedSynchronizationJob
    fullName: NMF.Synchronizations.BothGuardedSynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.RightGuardedSynchronizationJob`2
  name: RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
    name: RightGuardedSynchronizationJob
    nameWithType: RightGuardedSynchronizationJob
    fullName: NMF.Synchronizations.RightGuardedSynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
    name: RightGuardedSynchronizationJob
    nameWithType: RightGuardedSynchronizationJob
    fullName: NMF.Synchronizations.RightGuardedSynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.LeftGuardedSynchronizationJob`2
  name: LeftGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: LeftGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.LeftGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: LeftGuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
    name: LeftGuardedSynchronizationJob
    nameWithType: LeftGuardedSynchronizationJob
    fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.LeftGuardedSynchronizationJob`2
    name: LeftGuardedSynchronizationJob
    nameWithType: LeftGuardedSynchronizationJob
    fullName: NMF.Synchronizations.LeftGuardedSynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Synchronizations.OpaqueSynchronizationJob`2
  commentId: T:NMF.Synchronizations.OpaqueSynchronizationJob`2
  name: OpaqueSynchronizationJob<TLeft, TRight>
  nameWithType: OpaqueSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.OpaqueSynchronizationJob<TLeft, TRight>
  nameWithType.vb: OpaqueSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.OpaqueSynchronizationJob(Of TLeft, TRight)
  name.vb: OpaqueSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.OpaqueSynchronizationJob`2
    name: OpaqueSynchronizationJob
    nameWithType: OpaqueSynchronizationJob
    fullName: NMF.Synchronizations.OpaqueSynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.OpaqueSynchronizationJob`2
    name: OpaqueSynchronizationJob
    nameWithType: OpaqueSynchronizationJob
    fullName: NMF.Synchronizations.OpaqueSynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.PropertySynchronizationJob`3
  commentId: T:NMF.Synchronizations.PropertySynchronizationJob`3
  name: PropertySynchronizationJob<TLeft, TRight, TValue>
  nameWithType: PropertySynchronizationJob<TLeft, TRight, TValue>
  fullName: NMF.Synchronizations.PropertySynchronizationJob<TLeft, TRight, TValue>
  nameWithType.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue)
  fullName.vb: NMF.Synchronizations.PropertySynchronizationJob(Of TLeft, TRight, TValue)
  name.vb: PropertySynchronizationJob(Of TLeft, TRight, TValue)
  spec.csharp:
  - uid: NMF.Synchronizations.PropertySynchronizationJob`3
    name: PropertySynchronizationJob
    nameWithType: PropertySynchronizationJob
    fullName: NMF.Synchronizations.PropertySynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.PropertySynchronizationJob`3
    name: PropertySynchronizationJob
    nameWithType: PropertySynchronizationJob
    fullName: NMF.Synchronizations.PropertySynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3
  commentId: T:NMF.Synchronizations.OneWayPropertySynchronizationJob`3
  name: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  nameWithType: OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob<TSource, TTarget, TValue>
  nameWithType.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
  fullName.vb: NMF.Synchronizations.OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
  name.vb: OneWayPropertySynchronizationJob(Of TSource, TTarget, TValue)
  spec.csharp:
  - uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3
    name: OneWayPropertySynchronizationJob
    nameWithType: OneWayPropertySynchronizationJob
    fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.OneWayPropertySynchronizationJob`3
    name: OneWayPropertySynchronizationJob
    nameWithType: OneWayPropertySynchronizationJob
    fullName: NMF.Synchronizations.OneWayPropertySynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.ReflectiveSynchronization
  commentId: T:NMF.Synchronizations.ReflectiveSynchronization
  name: ReflectiveSynchronization
  nameWithType: ReflectiveSynchronization
  fullName: NMF.Synchronizations.ReflectiveSynchronization
- uid: NMF.Synchronizations.Synchronization
  commentId: T:NMF.Synchronizations.Synchronization
  parent: NMF.Synchronizations
  name: Synchronization
  nameWithType: Synchronization
  fullName: NMF.Synchronizations.Synchronization
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    nameWithType: SynchronizationComputation
    fullName: NMF.Synchronizations.SynchronizationComputation
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    nameWithType: SynchronizationComputation
    fullName: NMF.Synchronizations.SynchronizationComputation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOut
    nameWithType: TOut
    fullName: TOut
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationContext
  commentId: T:NMF.Synchronizations.SynchronizationContext
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  parent: NMF.Synchronizations
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Synchronizations.SynchronizationDirectionExtensions
  commentId: T:NMF.Synchronizations.SynchronizationDirectionExtensions
  parent: NMF.Synchronizations
  name: SynchronizationDirectionExtensions
  nameWithType: SynchronizationDirectionExtensions
  fullName: NMF.Synchronizations.SynchronizationDirectionExtensions
- uid: NMF.Synchronizations.SynchronizationExtensions
  commentId: T:NMF.Synchronizations.SynchronizationExtensions
  name: SynchronizationExtensions
  nameWithType: SynchronizationExtensions
  fullName: NMF.Synchronizations.SynchronizationExtensions
- uid: NMF.Synchronizations.ISynchronizationJob`2
  commentId: T:NMF.Synchronizations.ISynchronizationJob`2
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    nameWithType: ISynchronizationJob
    fullName: NMF.Synchronizations.ISynchronizationJob
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    nameWithType: ISynchronizationJob
    fullName: NMF.Synchronizations.ISynchronizationJob
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationMultipleDependency`4
  commentId: T:NMF.Synchronizations.SynchronizationMultipleDependency`4
  name: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  nameWithType: SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  fullName: NMF.Synchronizations.SynchronizationMultipleDependency<TLeft, TRight, TDepLeft, TDepRight>
  nameWithType.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
  fullName.vb: NMF.Synchronizations.SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
  name.vb: SynchronizationMultipleDependency(Of TLeft, TRight, TDepLeft, TDepRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationMultipleDependency`4
    name: SynchronizationMultipleDependency
    nameWithType: SynchronizationMultipleDependency
    fullName: NMF.Synchronizations.SynchronizationMultipleDependency
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationMultipleDependency`4
    name: SynchronizationMultipleDependency
    nameWithType: SynchronizationMultipleDependency
    fullName: NMF.Synchronizations.SynchronizationMultipleDependency
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  parent: NMF.Synchronizations
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
