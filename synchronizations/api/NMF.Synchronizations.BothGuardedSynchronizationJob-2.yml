### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.BothGuardedSynchronizationJob`2
  id: BothGuardedSynchronizationJob`2
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`0,`1,System.Boolean})
  - NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  langs:
  - csharp
  - vb
  name: BothGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>
  type: Class
  source:
    remote:
      path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: BothGuardedSynchronizationJob
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 104
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes a class that represents a synchronization job guarded at both LHS and RHS
  example: []
  syntax:
    content: 'public class BothGuardedSynchronizationJob<TLeft, TRight> : GuardedSynchronizationJob<TLeft, TRight>, ISynchronizationJob<TLeft, TRight>'
    typeParameters:
    - id: TLeft
      description: The LHS type
    - id: TRight
      description: The RHS type
    content.vb: Public Class BothGuardedSynchronizationJob(Of TLeft, TRight) Inherits GuardedSynchronizationJob(Of TLeft, TRight) Implements ISynchronizationJob(Of TLeft, TRight)
  inheritance:
  - System.Object
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  implements:
  - NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
  inheritedMembers:
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.IsEarly
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.Perform(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: BothGuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`0,`1,System.Boolean})
  commentId: M:NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`0,`1,System.Boolean})
  id: '#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`0,`1,System.Boolean})'
  parent: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  langs:
  - csharp
  - vb
  name: BothGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, TRight, bool>)
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TLeft, TRight, bool>)
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>, NMF.Expressions.ObservingFunc<TLeft, TRight, bool>)
  type: Constructor
  source:
    remote:
      path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 113
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Creates a new guarded synchronization job
  example: []
  syntax:
    content: public BothGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight> inner, ObservingFunc<TLeft, TRight, bool> guard)
    parameters:
    - id: inner
      type: NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
      description: The inner synchronization job
    - id: guard
      type: NMF.Expressions.ObservingFunc{{TLeft},{TRight},System.Boolean}
      description: The actual guard
    content.vb: Public Sub New(inner As ISynchronizationJob(Of TLeft, TRight), guard As ObservingFunc(Of TLeft, TRight, Boolean))
  overload: NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor*
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).New(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, TRight, Boolean))
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).New(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight), NMF.Expressions.ObservingFunc(Of TLeft, TRight, Boolean))
  name.vb: New(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TLeft, TRight, Boolean))
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  commentId: M:NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  id: CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  parent: NMF.Synchronizations.BothGuardedSynchronizationJob`2
  langs:
  - csharp
  - vb
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: CreateTracker
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 122
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Creates a tracker for the given computation
  example: []
  syntax:
    content: protected override INotifyValue<bool> CreateTracker(SynchronizationComputation<TLeft, TRight> computation)
    parameters:
    - id: computation
      type: NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}}
      description: The computation that shall be tracked
    return:
      type: NMF.Expressions.INotifyValue{System.Boolean}
      description: ''
    content.vb: Protected Overrides Function CreateTracker(computation As SynchronizationComputation(Of TLeft, TRight)) As INotifyValue(Of Boolean)
  overridden: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  overload: NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker*
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.ISynchronizationJob{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.ISynchronizationJob`2
  href: NMF.Synchronizations.ISynchronizationJob-2.html
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    href: NMF.Synchronizations.ISynchronizationJob-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    href: NMF.Synchronizations.ISynchronizationJob-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.IsEarly
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.IsEarly
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_IsEarly
  name: IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.Perform(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    href: NMF.Synchronizations.ISynchronizationContext.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    href: NMF.Synchronizations.ISynchronizationContext.html
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob`2
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.ISynchronizationJob`2
  commentId: T:NMF.Synchronizations.ISynchronizationJob`2
  href: NMF.Synchronizations.ISynchronizationJob-2.html
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    href: NMF.Synchronizations.ISynchronizationJob-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
    href: NMF.Synchronizations.ISynchronizationJob-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_IsEarly
  name: IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    href: NMF.Synchronizations.ISynchronizationContext.html
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_Perform_NMF_Synchronizations_SynchronizationComputation__0__1__NMF_Synchronizations_SynchronizationDirection_NMF_Synchronizations_ISynchronizationContext_
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    href: NMF.Synchronizations.SynchronizationDirection.html
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    href: NMF.Synchronizations.ISynchronizationContext.html
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
    href: NMF.Synchronizations.GuardedSynchronizationJob-2.html#NMF_Synchronizations_GuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor*
  commentId: Overload:NMF.Synchronizations.BothGuardedSynchronizationJob`2.#ctor
  href: NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2__ctor_NMF_Synchronizations_ISynchronizationJob__0__1__NMF_Expressions_ObservingFunc__0__1_System_Boolean__
  name: BothGuardedSynchronizationJob
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.BothGuardedSynchronizationJob
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).New
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).New
  name.vb: New
- uid: NMF.Expressions.ObservingFunc{{TLeft},{TRight},System.Boolean}
  commentId: T:NMF.Expressions.ObservingFunc{`0,`1,System.Boolean}
  parent: NMF.Expressions
  definition: NMF.Expressions.ObservingFunc`3
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ObservingFunc<TLeft, TRight, bool>
  nameWithType: ObservingFunc<TLeft, TRight, bool>
  fullName: NMF.Expressions.ObservingFunc<TLeft, TRight, bool>
  nameWithType.vb: ObservingFunc(Of TLeft, TRight, Boolean)
  fullName.vb: NMF.Expressions.ObservingFunc(Of TLeft, TRight, Boolean)
  name.vb: ObservingFunc(Of TLeft, TRight, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`3
    name: ObservingFunc
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`3
    name: ObservingFunc
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: NMF.Expressions.ObservingFunc`3
  commentId: T:NMF.Expressions.ObservingFunc`3
  name: ObservingFunc<T1, T2, TResult>
  nameWithType: ObservingFunc<T1, T2, TResult>
  fullName: NMF.Expressions.ObservingFunc<T1, T2, TResult>
  nameWithType.vb: ObservingFunc(Of T1, T2, TResult)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, T2, TResult)
  name.vb: ObservingFunc(Of T1, T2, TResult)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`3
    name: ObservingFunc
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`3
    name: ObservingFunc
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker*
  commentId: Overload:NMF.Synchronizations.BothGuardedSynchronizationJob`2.CreateTracker
  href: NMF.Synchronizations.BothGuardedSynchronizationJob-2.html#NMF_Synchronizations_BothGuardedSynchronizationJob_2_CreateTracker_NMF_Synchronizations_SynchronizationComputation__0__1__
  name: CreateTracker
  nameWithType: BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName: NMF.Synchronizations.BothGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  fullName.vb: NMF.Synchronizations.BothGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.SynchronizationComputation{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationComputation`2
  href: NMF.Synchronizations.SynchronizationComputation-2.html
  name: SynchronizationComputation<TLeft, TRight>
  nameWithType: SynchronizationComputation<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>
  nameWithType.vb: SynchronizationComputation(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight)
  name.vb: SynchronizationComputation(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Expressions.INotifyValue{System.Boolean}
  commentId: T:NMF.Expressions.INotifyValue{System.Boolean}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyValue`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: INotifyValue<bool>
  nameWithType: INotifyValue<bool>
  fullName: NMF.Expressions.INotifyValue<bool>
  nameWithType.vb: INotifyValue(Of Boolean)
  fullName.vb: NMF.Expressions.INotifyValue(Of Boolean)
  name.vb: INotifyValue(Of Boolean)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  href: NMF.Synchronizations.SynchronizationComputation-2.html
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Expressions.INotifyValue`1
  commentId: T:NMF.Expressions.INotifyValue`1
  name: INotifyValue<T>
  nameWithType: INotifyValue<T>
  fullName: NMF.Expressions.INotifyValue<T>
  nameWithType.vb: INotifyValue(Of T)
  fullName.vb: NMF.Expressions.INotifyValue(Of T)
  name.vb: INotifyValue(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
