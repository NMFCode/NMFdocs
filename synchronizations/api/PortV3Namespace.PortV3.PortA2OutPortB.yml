### YamlMime:ManagedReference
items:
- uid: PortV3Namespace.PortV3.PortA2OutPortB
  commentId: T:PortV3Namespace.PortV3.PortA2OutPortB
  id: PortV3.PortA2OutPortB
  parent: PortV3Namespace
  children:
  - PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization
  langs:
  - csharp
  - vb
  name: PortV3.PortA2OutPortB
  nameWithType: PortV3.PortA2OutPortB
  fullName: PortV3Namespace.PortV3.PortA2OutPortB
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/PortV3.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: PortA2OutPortB
    path: src/Synchronizations/Synchronizations.Tests/PortV3/PortV3.cs
    startLine: 61
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace
  syntax:
    content: 'public class PortA2OutPortB : SynchronizationRule<IPortA, IOutPortB>'
    content.vb: >-
      Public Class PortA2OutPortB
          Inherits SynchronizationRule(Of IPortA, IOutPortB)
  inheritance:
  - System.Object
  - NMF.Synchronizations.SynchronizationRuleBase
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  inheritedMembers:
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizationJobs
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftToRight
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightToLeft
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.TransformationDelayLevel
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.OutputDelayLevel
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.ShouldCorrespond(PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.ISynchronizationContext)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftType
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightType
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLefttOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Action{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateRightOutput(PortV3Namespace.TypeA.IPortA,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateLeftOutput(PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  - NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  - NMF.Synchronizations.SynchronizationRuleBase.LeftType
  - NMF.Synchronizations.SynchronizationRuleBase.RightType
  - NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  - NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  - NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization
  commentId: M:PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization
  id: DeclareSynchronization
  parent: PortV3Namespace.PortV3.PortA2OutPortB
  langs:
  - csharp
  - vb
  name: DeclareSynchronization()
  nameWithType: PortV3.PortA2OutPortB.DeclareSynchronization()
  fullName: PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/PortV3.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclareSynchronization
    path: src/Synchronizations/Synchronizations.Tests/PortV3/PortV3.cs
    startLine: 63
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace
  syntax:
    content: public override void DeclareSynchronization()
    content.vb: Public Overrides Sub DeclareSynchronization
  overridden: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  overload: PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PortV3Namespace
  commentId: N:PortV3Namespace
  name: PortV3Namespace
  nameWithType: PortV3Namespace
  fullName: PortV3Namespace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  parent: NMF.Synchronizations
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  commentId: T:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<IPortA, IOutPortB>
  nameWithType: SynchronizationRule<IPortA, IOutPortB>
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB)
  name.vb: SynchronizationRule(Of IPortA, IOutPortB)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizationJobs
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizationJobs
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  name: SynchronizationJobs
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizationJobs
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftToRight
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftToRight
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  name: LeftToRight
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightToLeft
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightToLeft
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  name: RightToLeft
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.TransformationDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.TransformationDelayLevel
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  name: TransformationDelayLevel
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.TransformationDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.OutputDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.OutputDelayLevel
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  name: OutputDelayLevel
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.OutputDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.ShouldCorrespond(PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.ShouldCorrespond(PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.ISynchronizationContext)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: ShouldCorrespond(IPortA, IOutPortB, ISynchronizationContext)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.ShouldCorrespond(IPortA, IOutPortB, ISynchronizationContext)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.ShouldCorrespond(PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).ShouldCorrespond(IPortA, IOutPortB, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).ShouldCorrespond(PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.LeftType
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.LeftType
  name: LeftType
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.LeftType
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.LeftType
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).LeftType
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.RightType
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.RightType
  name: RightType
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.RightType
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.RightType
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).RightType
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Action{PortV3Namespace.TypeA.IPortA,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Action<IPortA, TDepLeft>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Action<IPortA, TDepLeft>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Action<PortV3Namespace.TypeA.IPortA, TDepLeft>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Action(Of IPortA, TDepLeft), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Action(Of PortV3Namespace.TypeA.IPortA, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Action(Of IPortA, TDepLeft), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Action<IPortA, ITransformationContext, TDepLeft>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Action<IPortA, ITransformationContext, TDepLeft>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Action(Of IPortA, ITransformationContext, TDepLeft), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Action(Of IPortA, ITransformationContext, TDepLeft), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Action{PortV3Namespace.TypeB.IOutPortB,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Action<IOutPortB, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Action<IOutPortB, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Action<PortV3Namespace.TypeB.IOutPortB, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Action(Of IOutPortB, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Action(Of IOutPortB, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Action<IOutPortB, ITransformationContext, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Action<IOutPortB, ITransformationContext, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Action(Of IOutPortB, ITransformationContext, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Action(Of IOutPortB, ITransformationContext, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Action{PortV3Namespace.TypeA.IPortA,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Action{PortV3Namespace.TypeB.IOutPortB,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Action<IPortA, TDepLeft>, Expression<Func<IOutPortB, TDepRight>>, Action<IOutPortB, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Action<IPortA, TDepLeft>, Expression<Func<IOutPortB, TDepRight>>, Action<IOutPortB, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Action<PortV3Namespace.TypeA.IPortA, TDepLeft>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Action<PortV3Namespace.TypeB.IOutPortB, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Action(Of IPortA, TDepLeft), Expression(Of Func(Of IOutPortB, TDepRight)), Action(Of IOutPortB, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Action(Of PortV3Namespace.TypeA.IPortA, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Action(Of IPortA, TDepLeft), Expression(Of Func(Of IOutPortB, TDepRight)), Action(Of IOutPortB, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Action<IPortA, ITransformationContext, TDepLeft>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Action<IOutPortB, ITransformationContext, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Action<IPortA, ITransformationContext, TDepLeft>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Action<IOutPortB, ITransformationContext, TDepRight>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Action(Of IPortA, ITransformationContext, TDepLeft), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Action(Of IOutPortB, ITransformationContext, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Action(Of IPortA, ITransformationContext, TDepLeft), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Action(Of IOutPortB, ITransformationContext, TDepRight), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, TDepLeft>>, Expression<Func<IOutPortB, TDepRight>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, TDepLeft)), Expression(Of Func(Of IOutPortB, TDepRight)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,{TDepLeft}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,{TDepRight}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, TDepLeft>>, Expression<Func<IOutPortB, ITransformationContext, TDepRight>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, TDepLeft)), Expression(Of Func(Of IOutPortB, ITransformationContext, TDepRight)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ICollectionExpression<TDepLeft>>>, Expression<Func<IOutPortB, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ICollectionExpression<TDepLeft>>>, Expression<Func<IOutPortB, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, IEnumerableExpression<TDepLeft>>>, Expression<Func<IOutPortB, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, IEnumerableExpression<TDepLeft>>>, Expression<Func<IOutPortB, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ICollection<TDepLeft>>>, Expression<Func<IOutPortB, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ICollection<TDepLeft>>>, Expression<Func<IOutPortB, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ICollection(Of TDepLeft))), Expression(Of Func(Of IOutPortB, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ICollection(Of TDepLeft))), Expression(Of Func(Of IOutPortB, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{{TDepLeft},{TDepRight}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TDepLeft}}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TDepRight}}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<IPortA, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<IOutPortB, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of IPortA, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of IOutPortB, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLate<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLate<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLate<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLate(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLate(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeLate(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: Synchronize<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.Synchronize``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: Synchronize<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  name: SynchronizeMany<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeMany``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: SynchronizeMany<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  name: SynchronizeManyLate<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLate<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLate(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.ICollectionExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  name: SynchronizeManyLate<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLate<TValue>(Func<IPortA, ICollectionExpression<TValue>>, Func<IOutPortB, ICollectionExpression<TValue>>, Expression<Func<IPortA, IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLate(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of IPortA, ICollectionExpression(Of TValue)), Func(Of IOutPortB, ICollectionExpression(Of TValue)), Expression(Of Func(Of IPortA, IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, ITransformationContext, IEnumerableExpression<TValue>>, Func<IOutPortB, ITransformationContext, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, ITransformationContext, IEnumerableExpression<TValue>>, Func<IOutPortB, ITransformationContext, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ITransformationContext, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ITransformationContext, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, ITransformationContext, IEnumerableExpression<TValue>>, Func<IOutPortB, ITransformationContext, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(Func<IPortA, ITransformationContext, IEnumerableExpression<TValue>>, Func<IOutPortB, ITransformationContext, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of IPortA, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyLeftToRightOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,NMF.Expressions.IEnumerableExpression{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<IPortA, IEnumerableExpression<TValue>>, Func<IOutPortB, ICollection<TValue>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of IPortA, IEnumerableExpression(Of TValue)), Func(Of IOutPortB, ICollection(Of TValue)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  name: SynchronizeManyRightToLeftOnly<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLefttOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLefttOnly``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeManyRightToLefttOnly<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLefttOnly<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLefttOnly<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLefttOnly(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLefttOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLefttOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLefttOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLefttOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{{TValue}}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeManyRightToLeftOnlyLate``1(System.Func{PortV3Namespace.TypeA.IPortA,System.Collections.Generic.ICollection{``0}},System.Func{PortV3Namespace.TypeB.IOutPortB,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<IPortA, ICollection<TValue>>, Func<IOutPortB, IEnumerableExpression<TValue>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection<TValue>>, System.Func<PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of PortV3Namespace.TypeA.IPortA, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of PortV3Namespace.TypeB.IOutPortB, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of IPortA, ICollection(Of TValue)), Func(Of IOutPortB, IEnumerableExpression(Of TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Action{PortV3Namespace.TypeB.IOutPortB,``0})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Action<PortV3Namespace.TypeB.IOutPortB, TValue>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, TValue))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Action{PortV3Namespace.TypeB.IOutPortB,``0})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Action<PortV3Namespace.TypeB.IOutPortB, TValue>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, TValue))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Action{PortV3Namespace.TypeB.IOutPortB,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Action{PortV3Namespace.TypeB.IOutPortB,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>, Expression<Func<IPortA, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<IPortA, TValue>>, Action<IOutPortB, TValue>, Expression<Func<IPortA, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Action<PortV3Namespace.TypeB.IOutPortB, TValue>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue), Expression(Of Func(Of IPortA, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Action(Of PortV3Namespace.TypeB.IOutPortB, TValue), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Action(Of IOutPortB, TValue), Expression(Of Func(Of IPortA, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>(System.Action<PortV3Namespace.TypeA.IPortA, TValue>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of PortV3Namespace.TypeA.IPortA, TValue), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeLateRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  name: SynchronizeLateRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>(System.Action<PortV3Namespace.TypeA.IPortA, TValue>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)(System.Action(Of PortV3Namespace.TypeA.IPortA, TValue), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<IPortA, TValue>>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of IPortA, TValue)), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,{TValue}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,{TValue}}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeRightToLeftOnly``1(System.Action{PortV3Namespace.TypeA.IPortA,``0},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,``0}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: SynchronizeRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>(Action<IPortA, TValue>, Expression<Func<IOutPortB, TValue>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>(System.Action<PortV3Namespace.TypeA.IPortA, TValue>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, TValue>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of PortV3Namespace.TypeA.IPortA, TValue), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of IPortA, TValue), Expression(Of Func(Of IOutPortB, TValue)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Func{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  name: SynchronizeOpaque(Func<IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeOpaque(Func<IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeOpaque(System.Func<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeOpaque(Func(Of IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeOpaque(System.Func(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable), System.Boolean)
  name.vb: SynchronizeOpaque(Func(Of IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Action{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeOpaque(System.Action{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  name: SynchronizeOpaque(Action<IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext>, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeOpaque(Action<IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeOpaque(System.Action<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeOpaque(Action(Of IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeOpaque(System.Action(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext), System.Boolean)
  name.vb: SynchronizeOpaque(Action(Of IPortA, IOutPortB, SynchronizationDirection, ISynchronizationContext), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateRightOutput(PortV3Namespace.TypeA.IPortA,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateRightOutput(PortV3Namespace.TypeA.IPortA,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateRightOutput(IPortA, IEnumerable<IOutPortB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.CreateRightOutput(IPortA, IEnumerable<IOutPortB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.CreateRightOutput(PortV3Namespace.TypeA.IPortA, System.Collections.Generic.IEnumerable<PortV3Namespace.TypeB.IOutPortB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).CreateRightOutput(IPortA, IEnumerable(Of IOutPortB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).CreateRightOutput(PortV3Namespace.TypeA.IPortA, System.Collections.Generic.IEnumerable(Of PortV3Namespace.TypeB.IOutPortB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateRightOutput(IPortA, IEnumerable(Of IOutPortB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateLeftOutput(PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.CreateLeftOutput(PortV3Namespace.TypeB.IOutPortB,System.Collections.Generic.IEnumerable{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  name: CreateLeftOutput(IOutPortB, IEnumerable<IPortA>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.CreateLeftOutput(IOutPortB, IEnumerable<IPortA>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.CreateLeftOutput(PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.IEnumerable<PortV3Namespace.TypeA.IPortA>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).CreateLeftOutput(IOutPortB, IEnumerable(Of IPortA), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).CreateLeftOutput(PortV3Namespace.TypeB.IOutPortB, System.Collections.Generic.IEnumerable(Of PortV3Namespace.TypeA.IPortA), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateLeftOutput(IOutPortB, IEnumerable(Of IPortA), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsRightToLeft(ICollection<IPortA>, ICollection<IOutPortB>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeCollectionsRightToLeft(ICollection<IPortA>, ICollection<IOutPortB>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection<PortV3Namespace.TypeA.IPortA>, System.Collections.Generic.ICollection<PortV3Namespace.TypeB.IOutPortB>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeCollectionsRightToLeft(ICollection(Of IPortA), ICollection(Of IOutPortB), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection(Of PortV3Namespace.TypeA.IPortA), System.Collections.Generic.ICollection(Of PortV3Namespace.TypeB.IOutPortB), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsRightToLeft(ICollection(Of IPortA), ICollection(Of IOutPortB), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{PortV3Namespace.TypeB.IOutPortB},System.Collections.Generic.ICollection{PortV3Namespace.TypeA.IPortA},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  name: SynchronizeCollectionsLeftToRight(ICollection<IOutPortB>, ICollection<IPortA>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeCollectionsLeftToRight(ICollection<IOutPortB>, ICollection<IPortA>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection<PortV3Namespace.TypeB.IOutPortB>, System.Collections.Generic.ICollection<PortV3Namespace.TypeA.IPortA>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeCollectionsLeftToRight(ICollection(Of IOutPortB), ICollection(Of IPortA), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection(Of PortV3Namespace.TypeB.IOutPortB), System.Collections.Generic.ICollection(Of PortV3Namespace.TypeA.IPortA), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsLeftToRight(ICollection(Of IOutPortB), ICollection(Of IPortA), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeA.IPortA,System.Boolean}},System.Linq.Expressions.Expression{System.Func{PortV3Namespace.TypeB.IOutPortB,System.Boolean}})
  parent: NMF.Synchronizations.SynchronizationRule{PortV3Namespace.TypeA.IPortA,PortV3Namespace.TypeB.IOutPortB}
  definition: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  name: MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<IPortA, Boolean>>, Expression<Func<IOutPortB, Boolean>>)
  nameWithType: SynchronizationRule<IPortA, IOutPortB>.MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<IPortA, Boolean>>, Expression<Func<IOutPortB, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeA.IPortA, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<PortV3Namespace.TypeB.IOutPortB, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of IPortA, IOutPortB).MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of IPortA, Boolean)), Expression(Of Func(Of IOutPortB, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeA.IPortA, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of PortV3Namespace.TypeB.IOutPortB, System.Boolean)))
  name.vb: MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of IPortA, Boolean)), Expression(Of Func(Of IOutPortB, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule<IPortA, IOutPortB>.MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule<PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB>.MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule(Of IPortA, IOutPortB).MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule(Of PortV3Namespace.TypeA.IPortA, PortV3Namespace.TypeB.IOutPortB).MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeA.IPortA
    name: IPortA
    nameWithType: IPortA
    fullName: PortV3Namespace.TypeA.IPortA
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: PortV3Namespace.TypeB.IOutPortB
    name: IOutPortB
    nameWithType: IOutPortB
    fullName: PortV3Namespace.TypeB.IOutPortB
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.RightType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: SyncRule<TRule>()
  nameWithType: SynchronizationRuleBase.SyncRule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.SyncRule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)()
  name.vb: SyncRule(Of TRule)()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
    name: SyncRule<TRule>
    nameWithType: SynchronizationRuleBase.SyncRule<TRule>
    fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
    name: SyncRule(Of TRule)
    nameWithType: SynchronizationRuleBase.SyncRule(Of TRule)
    fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: Rule<TRule>()
  nameWithType: SynchronizationRuleBase.Rule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>()
  nameWithType.vb: SynchronizationRuleBase.Rule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)()
  name.vb: Rule(Of TRule)()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
    name: Rule<TRule>
    nameWithType: SynchronizationRuleBase.Rule<TRule>
    fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
    name: Rule(Of TRule)
    nameWithType: SynchronizationRuleBase.Rule(Of TRule)
    fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
- uid: NMF.Synchronizations.SynchronizationRule`2
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.SynchronizationJobs
  name: SynchronizationJobs
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizationJobs
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizationJobs
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftToRight
  name: LeftToRight
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftToRight
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftToRight
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftToRight
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftToRight
- uid: NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightToLeft
  name: RightToLeft
  nameWithType: SynchronizationRule<TLeft, TRight>.RightToLeft
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightToLeft
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightToLeft
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightToLeft
- uid: NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.TransformationDelayLevel
  name: TransformationDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.TransformationDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).TransformationDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.OutputDelayLevel
  name: OutputDelayLevel
  nameWithType: SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.OutputDelayLevel
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).OutputDelayLevel
- uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
  name: ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond(TLeft, TRight, NMF.Synchronizations.ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule<TLeft, TRight>.ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.ShouldCorrespond(`0,`1,NMF.Synchronizations.ISynchronizationContext)
    name: ShouldCorrespond
    nameWithType: SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).ShouldCorrespond
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.LeftType
  name: LeftType
  nameWithType: SynchronizationRule<TLeft, TRight>.LeftType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.LeftType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).LeftType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).LeftType
- uid: NMF.Synchronizations.SynchronizationRule`2.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRule`2.RightType
  name: RightType
  nameWithType: SynchronizationRule<TLeft, TRight>.RightType
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.RightType
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).RightType
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).RightType
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Action<TLeft, TDepLeft>, Expression<Func<TRight, TDepRight>>, Action<TRight, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Action<TLeft, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Action<TRight, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Action(Of TLeft, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Action(Of TRight, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Action(Of TLeft, TDepLeft), Expression(Of Func(Of TRight, TDepRight)), Action(Of TRight, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Action{`1,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Action<TLeft, ITransformationContext, TDepLeft>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Action<TRight, ITransformationContext, TDepRight>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Action<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Action<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Action(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Action(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Action(Of TLeft, ITransformationContext, TDepLeft), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Action(Of TRight, ITransformationContext, TDepRight), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Action{`0,NMF.Transformations.Core.ITransformationContext,``0},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Action{`1,NMF.Transformations.Core.ITransformationContext,``1},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, TDepLeft>>, Expression<Func<TRight, TDepRight>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, TDepLeft)), Expression(Of Func(Of TRight, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, TDepLeft>>, Expression<Func<TRight, ITransformationContext, TDepRight>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, TDepRight>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, TDepLeft)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, TDepRight)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, TDepLeft)), Expression(Of Func(Of TRight, ITransformationContext, TDepRight)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,``0}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,``1}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
  isExternal: true
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
  isExternal: true
  name: SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollectionExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollectionExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollectionExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollectionExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.ICollectionExpression(Of TDepRight))))
  name.vb: SynchronizeMany(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollectionExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollectionExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.ICollectionExpression{``1}}})
    name: SynchronizeMany(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollection<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, IEnumerableExpression<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, ICollection<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollection(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepRight))))
  name.vb: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, ICollection(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``1}}})
    name: SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ICollection<TDepLeft>>>, Expression<Func<TRight, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(SynchronizationRule<TDepLeft, TDepRight>, Expression<Func<TLeft, ITransformationContext, ICollection<TDepLeft>>>, Expression<Func<TRight, ITransformationContext, IEnumerableExpression<TDepRight>>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>(NMF.Synchronizations.SynchronizationRule<TDepLeft, TDepRight>, System.Linq.Expressions.Expression<System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TDepLeft>>>, System.Linq.Expressions.Expression<System.Func<TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TDepRight>>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(NMF.Synchronizations.SynchronizationRule(Of TDepLeft, TDepRight), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TDepLeft))), System.Linq.Expressions.Expression(Of System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TDepRight))))
  name.vb: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)(SynchronizationRule(Of TDepLeft, TDepRight), Expression(Of Func(Of TLeft, ITransformationContext, ICollection(Of TDepLeft))), Expression(Of Func(Of TRight, ITransformationContext, IEnumerableExpression(Of TDepRight))))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TDepLeft, TDepRight>
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``2(NMF.Synchronizations.SynchronizationRule{``0,``1},System.Linq.Expressions.Expression{System.Func{`0,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}}},System.Linq.Expressions.Expression{System.Func{`1,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``1}}})
    name: SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TDepLeft, TDepRight)
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    nameWithType: SynchronizationRule
    fullName: NMF.Synchronizations.SynchronizationRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepLeft
    nameWithType: TDepLeft
    fullName: TDepLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDepRight
    nameWithType: TDepRight
    fullName: TDepRight
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLate(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLate``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: Synchronize(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.Synchronize<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.Synchronize``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: Synchronize(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).Synchronize(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  isExternal: true
  name: SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: SynchronizeMany(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeMany<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeMany``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeMany(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeMany(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
  isExternal: true
  name: SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(Func<TLeft, ICollectionExpression<TValue>>, Func<TRight, ICollectionExpression<TValue>>, Expression<Func<TLeft, TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>(System.Func<TLeft, NMF.Expressions.ICollectionExpression<TValue>>, System.Func<TRight, NMF.Expressions.ICollectionExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.ICollectionExpression(Of TValue)), System.Func(Of TRight, NMF.Expressions.ICollectionExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TRight, System.Boolean)))
  name.vb: SynchronizeManyLate(Of TValue)(Func(Of TLeft, ICollectionExpression(Of TValue)), Func(Of TRight, ICollectionExpression(Of TValue)), Expression(Of Func(Of TLeft, TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLate``1(System.Func{`0,NMF.Expressions.ICollectionExpression{``0}},System.Func{`1,NMF.Expressions.ICollectionExpression{``0}},System.Linq.Expressions.Expression{System.Func{`0,`1,System.Boolean}})
    name: SynchronizeManyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(Func<TLeft, ITransformationContext, IEnumerableExpression<TValue>>, Func<TRight, ITransformationContext, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>(System.Func<TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)(System.Func(Of TLeft, NMF.Transformations.Core.ITransformationContext, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, NMF.Transformations.Core.ITransformationContext, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnly(Of TValue)(Func(Of TLeft, ITransformationContext, IEnumerableExpression(Of TValue)), Func(Of TRight, ITransformationContext, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnly``1(System.Func{`0,NMF.Transformations.Core.ITransformationContext,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,NMF.Transformations.Core.ITransformationContext,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
    nameWithType: ITransformationContext
    fullName: NMF.Transformations.Core.ITransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(Func<TLeft, IEnumerableExpression<TValue>>, Func<TRight, ICollection<TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>(System.Func<TLeft, NMF.Expressions.IEnumerableExpression<TValue>>, System.Func<TRight, System.Collections.Generic.ICollection<TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)(System.Func(Of TLeft, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Func(Of TRight, System.Collections.Generic.ICollection(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeManyLeftToRightOnlyLate(Of TValue)(Func(Of TLeft, IEnumerableExpression(Of TValue)), Func(Of TRight, ICollection(Of TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyLeftToRightOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyLeftToRightOnlyLate``1(System.Func{`0,NMF.Expressions.IEnumerableExpression{``0}},System.Func{`1,System.Collections.Generic.ICollection{``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeManyLeftToRightOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyLeftToRightOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyRightToLefttOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeManyRightToLefttOnly(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLefttOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLefttOnly``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLefttOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLefttOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(Func<TLeft, ICollection<TValue>>, Func<TRight, IEnumerableExpression<TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>(System.Func<TLeft, System.Collections.Generic.ICollection<TValue>>, System.Func<TRight, NMF.Expressions.IEnumerableExpression<TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)(System.Func(Of TLeft, System.Collections.Generic.ICollection(Of TValue)), System.Func(Of TRight, NMF.Expressions.IEnumerableExpression(Of TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeManyRightToLeftOnlyLate(Of TValue)(Func(Of TLeft, ICollection(Of TValue)), Func(Of TRight, IEnumerableExpression(Of TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeManyRightToLeftOnlyLate<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeManyRightToLeftOnlyLate``1(System.Func{`0,System.Collections.Generic.ICollection{``0}},System.Func{`1,NMF.Expressions.IEnumerableExpression{``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeManyRightToLeftOnlyLate(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeManyRightToLeftOnlyLate(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
  isExternal: true
  name: SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue))
  name.vb: SynchronizeLateLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0})
    name: SynchronizeLateLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(Expression<Func<TLeft, TValue>>, Action<TRight, TValue>, Expression<Func<TLeft, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Action<TRight, TValue>, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Action(Of TRight, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)))
  name.vb: SynchronizeLeftToRightOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Action(Of TRight, TValue), Expression(Of Func(Of TLeft, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLeftToRightOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLeftToRightOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{`1,``0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: SynchronizeLeftToRightOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLeftToRightOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
  isExternal: true
  name: SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)))
  name.vb: SynchronizeLateRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeLateRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeLateRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}})
    name: SynchronizeLateRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeLateRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Expression<Func<TLeft, TValue>>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Linq.Expressions.Expression<System.Func<TLeft, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Linq.Expressions.Expression(Of System.Func(Of TLeft, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Expression(Of Func(Of TLeft, TValue)), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(Action<TLeft, TValue>, Expression<Func<TRight, TValue>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>(System.Action<TLeft, TValue>, System.Linq.Expressions.Expression<System.Func<TRight, TValue>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)(System.Action(Of TLeft, TValue), System.Linq.Expressions.Expression(Of System.Func(Of TRight, TValue)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: SynchronizeRightToLeftOnly(Of TValue)(Action(Of TLeft, TValue), Expression(Of Func(Of TRight, TValue)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly<TValue>
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeRightToLeftOnly<TValue>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeRightToLeftOnly``1(System.Action{`0,``0},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: SynchronizeRightToLeftOnly(Of TValue)
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeRightToLeftOnly(Of TValue)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
  isExternal: true
  name: SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(Func<TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(System.Func<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(System.Func(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext, System.IDisposable), System.Boolean)
  name.vb: SynchronizeOpaque(Func(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext, IDisposable), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Func{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext,System.IDisposable},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
  isExternal: true
  name: SynchronizeOpaque(Action<TLeft, TRight, SynchronizationDirection, ISynchronizationContext>, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(Action<TLeft, TRight, SynchronizationDirection, ISynchronizationContext>, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque(System.Action<TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext>, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(Action(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext), Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque(System.Action(Of TLeft, TRight, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext), System.Boolean)
  name.vb: SynchronizeOpaque(Action(Of TLeft, TRight, SynchronizationDirection, ISynchronizationContext), Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeOpaque(System.Action{`0,`1,NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext},System.Boolean)
    name: SynchronizeOpaque
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeOpaque
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
    nameWithType: SynchronizationDirection
    fullName: NMF.Synchronizations.SynchronizationDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  isExternal: true
  name: CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, IEnumerable<TRight>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable<TRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput(TLeft, System.Collections.Generic.IEnumerable(Of TRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateRightOutput(TLeft, IEnumerable(Of TRight), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule<TLeft, TRight>.CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateRightOutput(`0,System.Collections.Generic.IEnumerable{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateRightOutput
    nameWithType: SynchronizationRule(Of TLeft, TRight).CreateRightOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateRightOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
  isExternal: true
  name: CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, IEnumerable<TLeft>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable<TLeft>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput(TRight, System.Collections.Generic.IEnumerable(Of TLeft), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: CreateLeftOutput(TRight, IEnumerable(Of TLeft), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule<TLeft, TRight>.CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.CreateLeftOutput(`1,System.Collections.Generic.IEnumerable{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean@)
    name: CreateLeftOutput
    nameWithType: SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).CreateLeftOutput
  - name: (
    nameWithType: (
    fullName: (
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  isExternal: true
  name: SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(ICollection<TLeft>, ICollection<TRight>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection<TLeft>, System.Collections.Generic.ICollection<TRight>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection(Of TLeft), System.Collections.Generic.ICollection(Of TRight), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsRightToLeft(ICollection(Of TLeft), ICollection(Of TRight), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsRightToLeft(System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsRightToLeft
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsRightToLeft
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
  isExternal: true
  name: SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(ICollection<TRight>, ICollection<TLeft>, ISynchronizationContext, Boolean)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection<TRight>, System.Collections.Generic.ICollection<TLeft>, NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection(Of TRight), System.Collections.Generic.ICollection(Of TLeft), NMF.Synchronizations.ISynchronizationContext, System.Boolean)
  name.vb: SynchronizeCollectionsLeftToRight(ICollection(Of TRight), ICollection(Of TLeft), ISynchronizationContext, Boolean)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.SynchronizeCollectionsLeftToRight(System.Collections.Generic.ICollection{`1},System.Collections.Generic.ICollection{`0},NMF.Synchronizations.ISynchronizationContext,System.Boolean)
    name: SynchronizeCollectionsLeftToRight
    nameWithType: SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).SynchronizeCollectionsLeftToRight
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
    nameWithType: ISynchronizationContext
    fullName: NMF.Synchronizations.ISynchronizationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  commentId: M:NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
  isExternal: true
  name: MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(SynchronizationRuleBase, Expression<Func<TLeft, Boolean>>, Expression<Func<TRight, Boolean>>)
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression<System.Func<TLeft, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TRight, System.Boolean>>)
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase, System.Linq.Expressions.Expression(Of System.Func(Of TLeft, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TRight, System.Boolean)))
  name.vb: MarkInstantiatingFor(SynchronizationRuleBase, Expression(Of Func(Of TLeft, Boolean)), Expression(Of Func(Of TRight, Boolean)))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>.MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2.MarkInstantiatingFor(NMF.Synchronizations.SynchronizationRuleBase,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})
    name: MarkInstantiatingFor
    nameWithType: SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
    fullName: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight).MarkInstantiatingFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Synchronizations.SynchronizationRuleBase
    name: SynchronizationRuleBase
    nameWithType: SynchronizationRuleBase
    fullName: NMF.Synchronizations.SynchronizationRuleBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLeft
    nameWithType: TLeft
    fullName: TLeft
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRight
    nameWithType: TRight
    fullName: TRight
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  name: DeclareSynchronization()
  nameWithType: SynchronizationRuleBase.DeclareSynchronization()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization()
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
    name: DeclareSynchronization
    nameWithType: SynchronizationRuleBase.DeclareSynchronization
    fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
    name: DeclareSynchronization
    nameWithType: SynchronizationRuleBase.DeclareSynchronization
    fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization*
  commentId: Overload:PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization
  name: DeclareSynchronization
  nameWithType: PortV3.PortA2OutPortB.DeclareSynchronization
  fullName: PortV3Namespace.PortV3.PortA2OutPortB.DeclareSynchronization
