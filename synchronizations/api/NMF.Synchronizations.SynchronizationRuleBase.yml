### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  id: SynchronizationRuleBase
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationRuleBase.#ctor
  - NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  - NMF.Synchronizations.SynchronizationRuleBase.LeftType
  - NMF.Synchronizations.SynchronizationRuleBase.RightType
  - NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  - NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  - NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  langs:
  - csharp
  - vb
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SynchronizationRuleBase
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 12
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes an abstract synchronization rule
  example: []
  syntax:
    content: public abstract class SynchronizationRuleBase
    content.vb: Public MustInherit Class SynchronizationRuleBase
  inheritance:
  - System.Object
  derivedClasses:
  - NMF.Synchronizations.SynchronizationRule`2
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  id: '#ctor'
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: SynchronizationRuleBase()
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase()
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 17
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Creates a new instance
  example: []
  syntax:
    content: protected SynchronizationRuleBase()
    content.vb: Protected Sub New()
  overload: NMF.Synchronizations.SynchronizationRuleBase.#ctor*
  nameWithType.vb: SynchronizationRuleBase.New()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.New()
  name.vb: New()
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  id: LeftType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: LeftType
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 22
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the LHS type of the synchronization rule
  example: []
  syntax:
    content: public abstract Type LeftType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property LeftType As Type
  overload: NMF.Synchronizations.SynchronizationRuleBase.LeftType*
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.RightType
  id: RightType
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightType
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 27
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the RHS type of the synchronization rule
  example: []
  syntax:
    content: public abstract Type RightType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public MustOverride ReadOnly Property RightType As Type
  overload: NMF.Synchronizations.SynchronizationRuleBase.RightType*
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  id: DeclareSynchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: DeclareSynchronization()
  nameWithType: SynchronizationRuleBase.DeclareSynchronization()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DeclareSynchronization
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 32
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Declares the jobs and synchronization blocks that make up the synchronization rule
  example: []
  syntax:
    content: public abstract void DeclareSynchronization()
    content.vb: Public MustOverride Sub DeclareSynchronization()
  overload: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization*
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  commentId: P:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  id: Synchronization
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Synchronization
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 41
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the context synchronization
  example: []
  syntax:
    content: public Synchronization Synchronization { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.Synchronization
    content.vb: Public Property Synchronization As Synchronization
  overload: NMF.Synchronizations.SynchronizationRuleBase.Synchronization*
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.SyncRule``1
  id: SyncRule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: SyncRule<TRule>()
  nameWithType: SynchronizationRuleBase.SyncRule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule<TRule>()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SyncRule
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 48
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the synchroniation rule of the given type
  example: []
  syntax:
    content: 'public TRule SyncRule<TRule>() where TRule : SynchronizationRuleBase'
    typeParameters:
    - id: TRule
      description: The type of the synchronization rule
    return:
      type: '{TRule}'
      description: The synchronization rule instance of the given type or null, if no such rule exists
    content.vb: Public Function SyncRule(Of TRule As SynchronizationRuleBase)() As TRule
  overload: NMF.Synchronizations.SynchronizationRuleBase.SyncRule*
  nameWithType.vb: SynchronizationRuleBase.SyncRule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.SyncRule(Of TRule)()
  name.vb: SyncRule(Of TRule)()
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  commentId: M:NMF.Synchronizations.SynchronizationRuleBase.Rule``1
  id: Rule``1
  parent: NMF.Synchronizations.SynchronizationRuleBase
  langs:
  - csharp
  - vb
  name: Rule<TRule>()
  nameWithType: SynchronizationRuleBase.Rule<TRule>()
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule<TRule>()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationRuleBase.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Rule
    path: src/Synchronizations/Synchronizations/SynchronizationRuleBase.cs
    startLine: 58
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the transformation rule type of the given type
  example: []
  syntax:
    content: 'public TRule Rule<TRule>() where TRule : GeneralTransformationRule'
    typeParameters:
    - id: TRule
      description: The type of the transformation rule
    return:
      type: '{TRule}'
      description: The transformation rule instance of the given type or null, if no such rule exists
    content.vb: Public Function Rule(Of TRule As GeneralTransformationRule)() As TRule
  overload: NMF.Synchronizations.SynchronizationRuleBase.Rule*
  nameWithType.vb: SynchronizationRuleBase.Rule(Of TRule)()
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.Rule(Of TRule)()
  name.vb: Rule(Of TRule)()
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations.SynchronizationRuleBase.#ctor*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.#ctor
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase__ctor
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase.SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SynchronizationRuleBase
  nameWithType.vb: SynchronizationRuleBase.New
  fullName.vb: NMF.Synchronizations.SynchronizationRuleBase.New
  name.vb: New
- uid: NMF.Synchronizations.SynchronizationRuleBase.LeftType*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.LeftType
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_LeftType
  name: LeftType
  nameWithType: SynchronizationRuleBase.LeftType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.LeftType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: NMF.Synchronizations.SynchronizationRuleBase.RightType*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.RightType
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_RightType
  name: RightType
  nameWithType: SynchronizationRuleBase.RightType
  fullName: NMF.Synchronizations.SynchronizationRuleBase.RightType
- uid: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_DeclareSynchronization
  name: DeclareSynchronization
  nameWithType: SynchronizationRuleBase.DeclareSynchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.DeclareSynchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.Synchronization*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Synchronization
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Synchronization
  name: Synchronization
  nameWithType: SynchronizationRuleBase.Synchronization
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Synchronization
- uid: NMF.Synchronizations.Synchronization
  commentId: T:NMF.Synchronizations.Synchronization
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.Synchronization.html
  name: Synchronization
  nameWithType: Synchronization
  fullName: NMF.Synchronizations.Synchronization
- uid: NMF.Synchronizations.SynchronizationRuleBase.SyncRule*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.SyncRule
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_SyncRule__1
  name: SyncRule
  nameWithType: SynchronizationRuleBase.SyncRule
  fullName: NMF.Synchronizations.SynchronizationRuleBase.SyncRule
- uid: '{TRule}'
  commentId: '!:TRule'
  definition: TRule
  name: TRule
  nameWithType: TRule
  fullName: TRule
- uid: TRule
  name: TRule
  nameWithType: TRule
  fullName: TRule
- uid: NMF.Synchronizations.SynchronizationRuleBase.Rule*
  commentId: Overload:NMF.Synchronizations.SynchronizationRuleBase.Rule
  href: NMF.Synchronizations.SynchronizationRuleBase.html#NMF_Synchronizations_SynchronizationRuleBase_Rule__1
  name: Rule
  nameWithType: SynchronizationRuleBase.Rule
  fullName: NMF.Synchronizations.SynchronizationRuleBase.Rule
