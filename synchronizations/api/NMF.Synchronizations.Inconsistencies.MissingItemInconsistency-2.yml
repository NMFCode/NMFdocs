### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  commentId: T:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  id: MissingItemInconsistency`2
  parent: NMF.Synchronizations.Inconsistencies
  children:
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor(NMF.Synchronizations.ISynchronizationContext,NMF.Transformations.TransformationRuleBase{`0,`1},System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},`0,System.Boolean)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(System.Object)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection
  langs:
  - csharp
  - vb
  name: MissingItemInconsistency<TSource, TTarget>
  nameWithType: MissingItemInconsistency<TSource, TTarget>
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MissingItemInconsistency
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 137
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Denotes the inconsistency that an element is missing in a synchronized collection
  example: []
  syntax:
    content: 'public class MissingItemInconsistency<TSource, TTarget> : IInconsistency, IEquatable<IInconsistency>'
    typeParameters:
    - id: TSource
      description: The LHS type of elements
    - id: TTarget
      description: The RHS type of elements
    content.vb: Public Class MissingItemInconsistency(Of TSource, TTarget) Implements IInconsistency, IEquatable(Of IInconsistency)
  inheritance:
  - System.Object
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency
  - System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget)
  name.vb: MissingItemInconsistency(Of TSource, TTarget)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context
  id: Context
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Context
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Context
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Context
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 143
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the context in which this inconsistency occured
  example: []
  syntax:
    content: public ISynchronizationContext Context { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.ISynchronizationContext
    content.vb: Public ReadOnly Property Context As ISynchronizationContext
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Context
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Context
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule
  id: Rule
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: Rule
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Rule
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Rule
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Rule
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 148
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the transformation rule required to fix the inconsistency
  example: []
  syntax:
    content: public TransformationRuleBase<TSource, TTarget> Rule { get; }
    parameters: []
    return:
      type: NMF.Transformations.TransformationRuleBase{{TSource},{TTarget}}
    content.vb: Public ReadOnly Property Rule As TransformationRuleBase(Of TSource, TTarget)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Rule
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Rule
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection
  id: SourceCollection
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: SourceCollection
  nameWithType: MissingItemInconsistency<TSource, TTarget>.SourceCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.SourceCollection
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SourceCollection
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 153
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the source collection where the element is contained
  example: []
  syntax:
    content: public ICollection<TSource> SourceCollection { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TSource}}
    content.vb: Public ReadOnly Property SourceCollection As ICollection(Of TSource)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).SourceCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).SourceCollection
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection
  id: TargetCollection
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: TargetCollection
  nameWithType: MissingItemInconsistency<TSource, TTarget>.TargetCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.TargetCollection
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TargetCollection
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 158
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the target collection where the element is missing
  example: []
  syntax:
    content: public ICollection<TTarget> TargetCollection { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TTarget}}
    content.vb: Public ReadOnly Property TargetCollection As ICollection(Of TTarget)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).TargetCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).TargetCollection
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source
  id: Source
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Source
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Source
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Source
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 163
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the source element that is missing
  example: []
  syntax:
    content: public TSource Source { get; }
    parameters: []
    return:
      type: '{TSource}'
    content.vb: Public ReadOnly Property Source As TSource
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Source
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Source
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing
  id: IsLeftMissing
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: IsLeftMissing
  nameWithType: MissingItemInconsistency<TSource, TTarget>.IsLeftMissing
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.IsLeftMissing
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsLeftMissing
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 168
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: True, if the element is missing in the left side, otherwise false
  example: []
  syntax:
    content: public bool IsLeftMissing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLeftMissing As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).IsLeftMissing
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).IsLeftMissing
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor(NMF.Synchronizations.ISynchronizationContext,NMF.Transformations.TransformationRuleBase{`0,`1},System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},`0,System.Boolean)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor(NMF.Synchronizations.ISynchronizationContext,NMF.Transformations.TransformationRuleBase{`0,`1},System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},`0,System.Boolean)
  id: '#ctor(NMF.Synchronizations.ISynchronizationContext,NMF.Transformations.TransformationRuleBase{`0,`1},System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`1},`0,System.Boolean)'
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: MissingItemInconsistency(ISynchronizationContext, TransformationRuleBase<TSource, TTarget>, ICollection<TSource>, ICollection<TTarget>, TSource, bool)
  nameWithType: MissingItemInconsistency<TSource, TTarget>.MissingItemInconsistency(ISynchronizationContext, TransformationRuleBase<TSource, TTarget>, ICollection<TSource>, ICollection<TTarget>, TSource, bool)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.MissingItemInconsistency(NMF.Synchronizations.ISynchronizationContext, NMF.Transformations.TransformationRuleBase<TSource, TTarget>, System.Collections.Generic.ICollection<TSource>, System.Collections.Generic.ICollection<TTarget>, TSource, bool)
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 192
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Creates a new inconsistency
  example: []
  syntax:
    content: public MissingItemInconsistency(ISynchronizationContext context, TransformationRuleBase<TSource, TTarget> rule, ICollection<TSource> sourceCollection, ICollection<TTarget> targetCollection, TSource source, bool isLeftMissing)
    parameters:
    - id: context
      type: NMF.Synchronizations.ISynchronizationContext
      description: The context in which the inconsistency was found
    - id: rule
      type: NMF.Transformations.TransformationRuleBase{{TSource},{TTarget}}
      description: The synchronization rule for which the inconsistency was found
    - id: sourceCollection
      type: System.Collections.Generic.ICollection{{TSource}}
      description: The source collection of elements
    - id: targetCollection
      type: System.Collections.Generic.ICollection{{TTarget}}
      description: The target collection of elements
    - id: source
      type: '{TSource}'
      description: The element that is missing
    - id: isLeftMissing
      type: System.Boolean
      description: True, if the element is missing in the LHS, otherwise false
    content.vb: Public Sub New(context As ISynchronizationContext, rule As TransformationRuleBase(Of TSource, TTarget), sourceCollection As ICollection(Of TSource), targetCollection As ICollection(Of TTarget), source As TSource, isLeftMissing As Boolean)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).New(ISynchronizationContext, TransformationRuleBase(Of TSource, TTarget), ICollection(Of TSource), ICollection(Of TTarget), TSource, Boolean)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).New(NMF.Synchronizations.ISynchronizationContext, NMF.Transformations.TransformationRuleBase(Of TSource, TTarget), System.Collections.Generic.ICollection(Of TSource), System.Collections.Generic.ICollection(Of TTarget), TSource, Boolean)
  name.vb: New(ISynchronizationContext, TransformationRuleBase(Of TSource, TTarget), ICollection(Of TSource), ICollection(Of TTarget), TSource, Boolean)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft
  id: CanResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: CanResolveLeft
  nameWithType: MissingItemInconsistency<TSource, TTarget>.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.CanResolveLeft
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CanResolveLeft
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 203
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public bool CanResolveLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanResolveLeft As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).CanResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight
  id: CanResolveRight
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: CanResolveRight
  nameWithType: MissingItemInconsistency<TSource, TTarget>.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.CanResolveRight
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CanResolveRight
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 207
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public bool CanResolveRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanResolveRight As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).CanResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).CanResolveRight
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode
  id: GetHashCode
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MissingItemInconsistency<TSource, TTarget>.GetHashCode()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.GetHashCode()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetHashCode
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 210
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).GetHashCode()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).GetHashCode()
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(System.Object)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Equals(object)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Equals(object)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 225
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals*
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Equals(Object)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Equals(Object)
  name.vb: Equals(Object)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  id: Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: Equals(IInconsistency)
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Equals(IInconsistency)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 233
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public bool Equals(IInconsistency other)
    parameters:
    - id: other
      type: NMF.Synchronizations.Inconsistencies.IInconsistency
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As IInconsistency) As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals*
  implements:
  - System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Equals(IInconsistency)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft
  id: ResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: ResolveLeft()
  nameWithType: MissingItemInconsistency<TSource, TTarget>.ResolveLeft()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.ResolveLeft()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ResolveLeft
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 244
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public void ResolveLeft()
    content.vb: Public Sub ResolveLeft()
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).ResolveLeft()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).ResolveLeft()
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight
  id: ResolveRight
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2
  langs:
  - csharp
  - vb
  name: ResolveRight()
  nameWithType: MissingItemInconsistency<TSource, TTarget>.ResolveRight()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.ResolveRight()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ResolveRight
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 275
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public void ResolveRight()
    content.vb: Public Sub ResolveRight()
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).ResolveRight()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).ResolveRight()
references:
- uid: NMF.Synchronizations.Inconsistencies
  commentId: N:NMF.Synchronizations.Inconsistencies
  href: NMF.html
  name: NMF.Synchronizations.Inconsistencies
  nameWithType: NMF.Synchronizations.Inconsistencies
  fullName: NMF.Synchronizations.Inconsistencies
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  - name: .
  - uid: NMF.Synchronizations.Inconsistencies
    name: Inconsistencies
    href: NMF.Synchronizations.Inconsistencies.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  - name: .
  - uid: NMF.Synchronizations.Inconsistencies
    name: Inconsistencies
    href: NMF.Synchronizations.Inconsistencies.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency
  commentId: T:NMF.Synchronizations.Inconsistencies.IInconsistency
  parent: NMF.Synchronizations.Inconsistencies
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  name: IInconsistency
  nameWithType: IInconsistency
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency
- uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  commentId: T:System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IInconsistency>
  nameWithType: IEquatable<IInconsistency>
  fullName: System.IEquatable<NMF.Synchronizations.Inconsistencies.IInconsistency>
  nameWithType.vb: IEquatable(Of IInconsistency)
  fullName.vb: System.IEquatable(Of NMF.Synchronizations.Inconsistencies.IInconsistency)
  name.vb: IEquatable(Of IInconsistency)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Context
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_Context
  name: Context
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Context
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Context
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Context
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Context
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.ISynchronizationContext.html
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Rule
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_Rule
  name: Rule
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Rule
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Rule
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Rule
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Rule
- uid: NMF.Transformations.TransformationRuleBase{{TSource},{TTarget}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TSource, TTarget>
  nameWithType: TransformationRuleBase<TSource, TTarget>
  fullName: NMF.Transformations.TransformationRuleBase<TSource, TTarget>
  nameWithType.vb: TransformationRuleBase(Of TSource, TTarget)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TSource, TTarget)
  name.vb: TransformationRuleBase(Of TSource, TTarget)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TTarget
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TTarget
  - name: )
- uid: NMF.Transformations.TransformationRuleBase`2
  commentId: T:NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.SourceCollection
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_SourceCollection
  name: SourceCollection
  nameWithType: MissingItemInconsistency<TSource, TTarget>.SourceCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.SourceCollection
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).SourceCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).SourceCollection
- uid: System.Collections.Generic.ICollection{{TSource}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TSource>
  nameWithType: ICollection<TSource>
  fullName: System.Collections.Generic.ICollection<TSource>
  nameWithType.vb: ICollection(Of TSource)
  fullName.vb: System.Collections.Generic.ICollection(Of TSource)
  name.vb: ICollection(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.TargetCollection
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_TargetCollection
  name: TargetCollection
  nameWithType: MissingItemInconsistency<TSource, TTarget>.TargetCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.TargetCollection
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).TargetCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).TargetCollection
- uid: System.Collections.Generic.ICollection{{TTarget}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TTarget>
  nameWithType: ICollection<TTarget>
  fullName: System.Collections.Generic.ICollection<TTarget>
  nameWithType.vb: ICollection(Of TTarget)
  fullName.vb: System.Collections.Generic.ICollection(Of TTarget)
  name.vb: ICollection(Of TTarget)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TTarget
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TTarget
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Source
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_Source
  name: Source
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Source
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Source
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Source
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Source
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.IsLeftMissing
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_IsLeftMissing
  name: IsLeftMissing
  nameWithType: MissingItemInconsistency<TSource, TTarget>.IsLeftMissing
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.IsLeftMissing
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).IsLeftMissing
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).IsLeftMissing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.#ctor
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2__ctor_NMF_Synchronizations_ISynchronizationContext_NMF_Transformations_TransformationRuleBase__0__1__System_Collections_Generic_ICollection__0__System_Collections_Generic_ICollection__1___0_System_Boolean_
  name: MissingItemInconsistency
  nameWithType: MissingItemInconsistency<TSource, TTarget>.MissingItemInconsistency
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.MissingItemInconsistency
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).New
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).New
  name.vb: New
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveLeft
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_CanResolveLeft
  name: CanResolveLeft
  nameWithType: MissingItemInconsistency<TSource, TTarget>.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.CanResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).CanResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  commentId: P:NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_CanResolveLeft
  name: CanResolveLeft
  nameWithType: IInconsistency.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.CanResolveRight
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_CanResolveRight
  name: CanResolveRight
  nameWithType: MissingItemInconsistency<TSource, TTarget>.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.CanResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).CanResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).CanResolveRight
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  commentId: P:NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_CanResolveRight
  name: CanResolveRight
  nameWithType: IInconsistency.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.GetHashCode
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_GetHashCode
  name: GetHashCode
  nameWithType: MissingItemInconsistency<TSource, TTarget>.GetHashCode
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.GetHashCode
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).GetHashCode
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.Equals
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_Equals_System_Object_
  name: Equals
  nameWithType: MissingItemInconsistency<TSource, TTarget>.Equals
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.Equals
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).Equals
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).Equals
- uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  commentId: M:System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  parent: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(IInconsistency)
  nameWithType: IEquatable<IInconsistency>.Equals(IInconsistency)
  fullName: System.IEquatable<NMF.Synchronizations.Inconsistencies.IInconsistency>.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  nameWithType.vb: IEquatable(Of IInconsistency).Equals(IInconsistency)
  fullName.vb: System.IEquatable(Of NMF.Synchronizations.Inconsistencies.IInconsistency).Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  spec.csharp:
  - uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveLeft
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_ResolveLeft
  name: ResolveLeft
  nameWithType: MissingItemInconsistency<TSource, TTarget>.ResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.ResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).ResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).ResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  commentId: M:NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  name: ResolveLeft()
  nameWithType: IInconsistency.ResolveLeft()
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft()
  spec.csharp:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
    name: ResolveLeft
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
    name: ResolveLeft
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  - name: (
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`2.ResolveRight
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-2.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_2_ResolveRight
  name: ResolveRight
  nameWithType: MissingItemInconsistency<TSource, TTarget>.ResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TSource, TTarget>.ResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TSource, TTarget).ResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TSource, TTarget).ResolveRight
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  commentId: M:NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  name: ResolveRight()
  nameWithType: IInconsistency.ResolveRight()
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight()
  spec.csharp:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
    name: ResolveRight
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
    name: ResolveRight
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  - name: (
  - name: )
