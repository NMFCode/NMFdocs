### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationContextExtensions
  commentId: T:NMF.Synchronizations.SynchronizationContextExtensions
  id: SynchronizationContextExtensions
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  - NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  - NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  - NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  langs:
  - csharp
  - vb
  name: SynchronizationContextExtensions
  nameWithType: SynchronizationContextExtensions
  fullName: NMF.Synchronizations.SynchronizationContextExtensions
  type: Class
  source:
    id: SynchronizationContextExtensions
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Synchronizations\Synchronizations\SynchronizationContextExtensions.cs
    startLine: 12
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes extension methods for the transformation context to easily access the trace links in expressions
  example: []
  syntax:
    content: public static class SynchronizationContextExtensions
    content.vb: Public Module SynchronizationContextExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  id: MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  isExtensionMethod: true
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  langs:
  - csharp
  - vb
  name: MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  nameWithType: SynchronizationContextExtensions.MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TLeft)
  type: Method
  source:
    id: MapLeft
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Synchronizations\Synchronizations\SynchronizationContextExtensions.cs
    startLine: 23
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Maps the given LHS element using the provided synchronization rule
  example: []
  syntax:
    content: >-
      [ObservableProxy(typeof(SynchronizationContextExtensions.IncrementalHelpers), "MapLeftIncremental", false)]

      public static TRight MapLeft<TLeft, TRight>(this ITransformationContext context, SynchronizationRule<TLeft, TRight> rule, TLeft left)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    - id: rule
      type: NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}}
      description: The rule that should be used as isomorphism
    - id: left
      type: '{TLeft}'
      description: The LHS element
    typeParameters:
    - id: TLeft
      description: The LHS element type
    - id: TRight
      description: The RHS element type
    return:
      type: '{TRight}'
      description: The RHS element corresponding to the provided LHS element
    content.vb: >-
      <ObservableProxy(GetType(SynchronizationContextExtensions.IncrementalHelpers), "MapLeftIncremental", False)>

      Public Shared Function MapLeft(Of TLeft, TRight)(context As ITransformationContext, rule As SynchronizationRule(Of TLeft, TRight), left As TLeft) As TRight
  overload: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft*
  nameWithType.vb: SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TLeft)
  name.vb: MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  id: MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  isExtensionMethod: true
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  langs:
  - csharp
  - vb
  name: MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  nameWithType: SynchronizationContextExtensions.MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TLeft>)
  type: Method
  source:
    id: MapLefts
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Synchronizations\Synchronizations\SynchronizationContextExtensions.cs
    startLine: 39
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Maps the given LHS elements using the provided synchronization rule
  example: []
  syntax:
    content: public static IEnumerableExpression<TRight> MapLefts<TLeft, TRight>(this ITransformationContext context, SynchronizationRule<TLeft, TRight> rule, IEnumerableExpression<TLeft> lefts)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    - id: rule
      type: NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}}
      description: The rule that should be used as isomorphism
    - id: lefts
      type: NMF.Expressions.IEnumerableExpression{{TLeft}}
      description: The LHS elements
    typeParameters:
    - id: TLeft
      description: The LHS element type
    - id: TRight
      description: The RHS element type
    return:
      type: NMF.Expressions.IEnumerableExpression{{TRight}}
      description: The RHS elements corresponding to the provided LHS elements
    content.vb: Public Shared Function MapLefts(Of TLeft, TRight)(context As ITransformationContext, rule As SynchronizationRule(Of TLeft, TRight), lefts As IEnumerableExpression(Of TLeft)) As IEnumerableExpression(Of TRight)
  overload: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts*
  nameWithType.vb: SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TLeft))
  name.vb: MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  id: MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  isExtensionMethod: true
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  langs:
  - csharp
  - vb
  name: MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  nameWithType: SynchronizationContextExtensions.MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRight<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TRight)
  type: Method
  source:
    id: MapRight
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Synchronizations\Synchronizations\SynchronizationContextExtensions.cs
    startLine: 54
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Maps the given RHS element using the provided synchronization rule
  example: []
  syntax:
    content: >-
      [ObservableProxy(typeof(SynchronizationContextExtensions.IncrementalHelpers), "MapRightIncremental", false)]

      public static TLeft MapRight<TLeft, TRight>(this ITransformationContext context, SynchronizationRule<TLeft, TRight> rule, TRight right)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    - id: rule
      type: NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}}
      description: The rule that should be used as isomorphism
    - id: right
      type: '{TRight}'
      description: The RHS element
    typeParameters:
    - id: TLeft
      description: The LHS element type
    - id: TRight
      description: The RHS element type
    return:
      type: '{TLeft}'
      description: The LHS element corresponding to the provided RHS element
    content.vb: >-
      <ObservableProxy(GetType(SynchronizationContextExtensions.IncrementalHelpers), "MapRightIncremental", False)>

      Public Shared Function MapRight(Of TLeft, TRight)(context As ITransformationContext, rule As SynchronizationRule(Of TLeft, TRight), right As TRight) As TLeft
  overload: NMF.Synchronizations.SynchronizationContextExtensions.MapRight*
  nameWithType.vb: SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TRight)
  name.vb: MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  id: MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  isExtensionMethod: true
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  langs:
  - csharp
  - vb
  name: MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  nameWithType: SynchronizationContextExtensions.MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRights<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TRight>)
  type: Method
  source:
    id: MapRights
    path: C:\Users\hinkel\source\repos\NMFdocs\src\Synchronizations\Synchronizations\SynchronizationContextExtensions.cs
    startLine: 70
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Maps the given RHS elements using the provided synchronization rule
  example: []
  syntax:
    content: public static IEnumerableExpression<TLeft> MapRights<TLeft, TRight>(this ITransformationContext context, SynchronizationRule<TLeft, TRight> rule, IEnumerableExpression<TRight> rights)
    parameters:
    - id: context
      type: NMF.Transformations.Core.ITransformationContext
      description: The transformation context
    - id: rule
      type: NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}}
      description: The rule that should be used as isomorphism
    - id: rights
      type: NMF.Expressions.IEnumerableExpression{{TRight}}
      description: The RHS elements
    typeParameters:
    - id: TLeft
      description: The LHS element type
    - id: TRight
      description: The RHS element type
    return:
      type: NMF.Expressions.IEnumerableExpression{{TLeft}}
      description: The LHS elements corresponding to the provided RHS elements
    content.vb: Public Shared Function MapRights(Of TLeft, TRight)(context As ITransformationContext, rule As SynchronizationRule(Of TLeft, TRight), rights As IEnumerableExpression(Of TRight)) As IEnumerableExpression(Of TLeft)
  overload: NMF.Synchronizations.SynchronizationContextExtensions.MapRights*
  nameWithType.vb: SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TRight))
  name.vb: MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft*
  commentId: Overload:NMF.Synchronizations.SynchronizationContextExtensions.MapLeft
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  name: MapLeft
  nameWithType: SynchronizationContextExtensions.MapLeft
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.SynchronizationRule{``0,``1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationRule`2
  href: NMF.Synchronizations.SynchronizationRule-2.html
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: '{TLeft}'
  commentId: '!:TLeft'
  definition: TLeft
  name: TLeft
  nameWithType: TLeft
  fullName: TLeft
- uid: '{TRight}'
  commentId: '!:TRight'
  definition: TRight
  name: TRight
  nameWithType: TRight
  fullName: TRight
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: NMF.Synchronizations.SynchronizationRule`2
  commentId: T:NMF.Synchronizations.SynchronizationRule`2
  href: NMF.Synchronizations.SynchronizationRule-2.html
  name: SynchronizationRule<TLeft, TRight>
  nameWithType: SynchronizationRule<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationRule<TLeft, TRight>
  nameWithType.vb: SynchronizationRule(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight)
  name.vb: SynchronizationRule(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: TLeft
  name: TLeft
  nameWithType: TLeft
  fullName: TLeft
- uid: TRight
  name: TRight
  nameWithType: TRight
  fullName: TRight
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts*
  commentId: Overload:NMF.Synchronizations.SynchronizationContextExtensions.MapLefts
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  name: MapLefts
  nameWithType: SynchronizationContextExtensions.MapLefts
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts
- uid: NMF.Expressions.IEnumerableExpression{{TLeft}}
  commentId: T:NMF.Expressions.IEnumerableExpression{``0}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<TLeft>
  nameWithType: IEnumerableExpression<TLeft>
  fullName: NMF.Expressions.IEnumerableExpression<TLeft>
  nameWithType.vb: IEnumerableExpression(Of TLeft)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of TLeft)
  name.vb: IEnumerableExpression(Of TLeft)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TLeft
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: )
- uid: NMF.Expressions.IEnumerableExpression{{TRight}}
  commentId: T:NMF.Expressions.IEnumerableExpression{``1}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<TRight>
  nameWithType: IEnumerableExpression<TRight>
  fullName: NMF.Expressions.IEnumerableExpression<TRight>
  nameWithType.vb: IEnumerableExpression(Of TRight)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of TRight)
  name.vb: IEnumerableExpression(Of TRight)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight*
  commentId: Overload:NMF.Synchronizations.SynchronizationContextExtensions.MapRight
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  name: MapRight
  nameWithType: SynchronizationContextExtensions.MapRight
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRight
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights*
  commentId: Overload:NMF.Synchronizations.SynchronizationContextExtensions.MapRights
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  name: MapRights
  nameWithType: SynchronizationContextExtensions.MapRights
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRights
