### YamlMime:ManagedReference
items:
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  commentId: T:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  id: BlockA.BlockAReferencedElementsCollection
  parent: PortV3Namespace.TypeA
  children:
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor(PortV3Namespace.TypeA.BlockA)
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add(NMF.Models.IModelElement)
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains(NMF.Models.IModelElement)
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator
  - PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove(NMF.Models.IModelElement)
  langs:
  - csharp
  - vb
  name: BlockA.BlockAReferencedElementsCollection
  nameWithType: BlockA.BlockAReferencedElementsCollection
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: BlockAReferencedElementsCollection
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 415
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nThe collection class to to represent the children of the BlockA class\n"
  example: []
  syntax:
    content: 'public class BlockAReferencedElementsCollection : ReferenceCollection, INotifyCollectionChanged, IDisposable, ICollectionExpression<IModelElement>, IEnumerableExpression<IModelElement>, IEnumerable<IModelElement>, IEnumerableExpression, IEnumerable, ICollection<IModelElement>, ICollection<IModelElement>'
    content.vb: >-
      Public Class BlockAReferencedElementsCollection
          Inherits ReferenceCollection
          Implements INotifyCollectionChanged, IDisposable, ICollectionExpression(Of IModelElement), IEnumerableExpression(Of IModelElement), IEnumerable(Of IModelElement), IEnumerableExpression, IEnumerable, ICollection(Of IModelElement), ICollection(Of IModelElement)
  inheritance:
  - System.Object
  - NMF.Models.Collections.ReferenceCollection
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.IDisposable
  - NMF.Expressions.ICollectionExpression{NMF.Models.IModelElement}
  - NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  - System.Collections.Generic.IEnumerable{NMF.Models.IModelElement}
  - NMF.Expressions.IEnumerableExpression
  - System.Collections.IEnumerable
  - System.Collections.Generic.ICollection{NMF.Models.IModelElement}
  - ICollection{NMF.Models.IModelElement}
  inheritedMembers:
  - NMF.Models.Collections.ReferenceCollection.CollectionChanged
  - NMF.Models.Collections.ReferenceCollection.IsReadOnly
  - NMF.Models.Collections.ReferenceCollection.AsNotifiable
  - NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression{NMF#Models#IModelElement}#AsNotifiable
  - NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression#AsNotifiable
  - NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object,NMF.Expressions.ValueChangedEventArgs)
  - NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - NMF.Models.Collections.ReferenceCollection.Dispose
  - NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor(PortV3Namespace.TypeA.BlockA)
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor(PortV3Namespace.TypeA.BlockA)
  id: '#ctor(PortV3Namespace.TypeA.BlockA)'
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: BlockAReferencedElementsCollection(BlockA)
  nameWithType: BlockA.BlockAReferencedElementsCollection.BlockAReferencedElementsCollection(BlockA)
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.BlockAReferencedElementsCollection(PortV3Namespace.TypeA.BlockA)
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 423
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nCreates a new instance\n"
  example: []
  syntax:
    content: public BlockAReferencedElementsCollection(BlockA parent)
    parameters:
    - id: parent
      type: PortV3Namespace.TypeA.BlockA
    content.vb: Public Sub New(parent As BlockA)
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
  commentId: P:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
  id: Count
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BlockA.BlockAReferencedElementsCollection.Count
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Count
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 431
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nGets the amount of elements contained in this collection\n"
  example: []
  syntax:
    content: public override int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Count As Integer
  overridden: NMF.Models.Collections.ReferenceCollection.Count
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore
  id: AttachCore
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: AttachCore()
  nameWithType: BlockA.BlockAReferencedElementsCollection.AttachCore()
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: AttachCore
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 442
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  syntax:
    content: protected override void AttachCore()
    content.vb: Protected Overrides Sub AttachCore
  overridden: NMF.Models.Collections.ReferenceCollection.AttachCore
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore
  id: DetachCore
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: DetachCore()
  nameWithType: BlockA.BlockAReferencedElementsCollection.DetachCore()
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: DetachCore
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 448
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  syntax:
    content: protected override void DetachCore()
    content.vb: Protected Overrides Sub DetachCore
  overridden: NMF.Models.Collections.ReferenceCollection.DetachCore
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add(NMF.Models.IModelElement)
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add(NMF.Models.IModelElement)
  id: Add(NMF.Models.IModelElement)
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: Add(IModelElement)
  nameWithType: BlockA.BlockAReferencedElementsCollection.Add(IModelElement)
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Add
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 458
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nAdds the given element to the collection\n"
  example: []
  syntax:
    content: public override void Add(IModelElement item)
    parameters:
    - id: item
      type: NMF.Models.IModelElement
      description: The item to add
    content.vb: Public Overrides Sub Add(item As IModelElement)
  overridden: NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear
  id: Clear
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BlockA.BlockAReferencedElementsCollection.Clear()
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Clear
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 475
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nClears the collection and resets all references that implement it.\n"
  example: []
  syntax:
    content: public override void Clear()
    content.vb: Public Overrides Sub Clear
  overridden: NMF.Models.Collections.ReferenceCollection.Clear
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains(NMF.Models.IModelElement)
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains(NMF.Models.IModelElement)
  id: Contains(NMF.Models.IModelElement)
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: Contains(IModelElement)
  nameWithType: BlockA.BlockAReferencedElementsCollection.Contains(IModelElement)
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Contains
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 486
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nGets a value indicating whether the given element is contained in the collection\n"
  example: []
  syntax:
    content: public override bool Contains(IModelElement item)
    parameters:
    - id: item
      type: NMF.Models.IModelElement
      description: The item that should be looked out for
    return:
      type: System.Boolean
      description: True, if it is contained, otherwise False
    content.vb: Public Overrides Function Contains(item As IModelElement) As Boolean
  overridden: NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  id: CopyTo(NMF.Models.IModelElement[],System.Int32)
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: CopyTo(IModelElement[], Int32)
  nameWithType: BlockA.BlockAReferencedElementsCollection.CopyTo(IModelElement[], Int32)
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo(NMF.Models.IModelElement[], System.Int32)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CopyTo
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 504
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nCopies the contents of the collection to the given array starting from the given array index\n"
  example: []
  syntax:
    content: public override void CopyTo(IModelElement[] array, int arrayIndex)
    parameters:
    - id: array
      type: NMF.Models.IModelElement[]
      description: The array in which the elements should be copied
    - id: arrayIndex
      type: System.Int32
      description: The starting index
    content.vb: Public Overrides Sub CopyTo(array As IModelElement(), arrayIndex As Integer)
  overridden: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo*
  nameWithType.vb: BlockA.BlockAReferencedElementsCollection.CopyTo(IModelElement(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo(NMF.Models.IModelElement(), System.Int32)
  name.vb: CopyTo(IModelElement(), Int32)
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove(NMF.Models.IModelElement)
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove(NMF.Models.IModelElement)
  id: Remove(NMF.Models.IModelElement)
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: Remove(IModelElement)
  nameWithType: BlockA.BlockAReferencedElementsCollection.Remove(IModelElement)
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove(NMF.Models.IModelElement)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Remove
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 543
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nRemoves the given item from the collection\n"
  example: []
  syntax:
    content: public override bool Remove(IModelElement item)
    parameters:
    - id: item
      type: NMF.Models.IModelElement
      description: The item that should be removed
    return:
      type: System.Boolean
      description: True, if the item was removed, otherwise False
    content.vb: Public Overrides Function Remove(item As IModelElement) As Boolean
  overridden: NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator
  commentId: M:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator
  id: GetEnumerator
  parent: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: BlockA.BlockAReferencedElementsCollection.GetEnumerator()
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetEnumerator
    path: src/Synchronizations/Synchronizations.Tests/PortV3/TypeA.cs
    startLine: 563
  assemblies:
  - Synchronizations.Tests
  namespace: PortV3Namespace.TypeA
  summary: "\nGets an enumerator that enumerates the collection\n"
  example: []
  syntax:
    content: public override IEnumerator<IModelElement> GetEnumerator()
    return:
      type: IEnumerator{NMF.Models.IModelElement}
      description: A generic enumerator
    content.vb: Public Overrides Function GetEnumerator As IEnumerator(Of IModelElement)
  overridden: NMF.Models.Collections.ReferenceCollection.GetEnumerator
  overload: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PortV3Namespace.TypeA
  commentId: N:PortV3Namespace.TypeA
  name: PortV3Namespace.TypeA
  nameWithType: PortV3Namespace.TypeA
  fullName: PortV3Namespace.TypeA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: NMF.Models.Collections.ReferenceCollection
  commentId: T:NMF.Models.Collections.ReferenceCollection
  parent: NMF.Models.Collections
  name: ReferenceCollection
  nameWithType: ReferenceCollection
  fullName: NMF.Models.Collections.ReferenceCollection
- uid: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NMF.Expressions.ICollectionExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<IModelElement>
  nameWithType: ICollectionExpression<IModelElement>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Models.IModelElement>
  nameWithType.vb: ICollectionExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Models.IModelElement)
  name.vb: ICollectionExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  commentId: T:NMF.Expressions.IEnumerableExpression{NMF.Models.IModelElement}
  parent: NMF.Expressions
  definition: NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<IModelElement>
  nameWithType: IEnumerableExpression<IModelElement>
  fullName: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerableExpression(Of IModelElement)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of NMF.Models.IModelElement)
  name.vb: IEnumerableExpression(Of IModelElement)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NMF.Models.IModelElement}
  commentId: '!:System.Collections.Generic.IEnumerable{NMF.Models.IModelElement}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IModelElement>
  nameWithType: IEnumerable<IModelElement>
  fullName: System.Collections.Generic.IEnumerable<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerable(Of IModelElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Models.IModelElement)
  name.vb: IEnumerable(Of IModelElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions.IEnumerableExpression
  commentId: T:NMF.Expressions.IEnumerableExpression
  parent: NMF.Expressions
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: NMF.Expressions.IEnumerableExpression
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.ICollection{NMF.Models.IModelElement}
  commentId: '!:System.Collections.Generic.ICollection{NMF.Models.IModelElement}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IModelElement>
  nameWithType: ICollection<IModelElement>
  fullName: System.Collections.Generic.ICollection<NMF.Models.IModelElement>
  nameWithType.vb: ICollection(Of IModelElement)
  fullName.vb: System.Collections.Generic.ICollection(Of NMF.Models.IModelElement)
  name.vb: ICollection(Of IModelElement)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection{NMF.Models.IModelElement}
  commentId: '!:ICollection{NMF.Models.IModelElement}'
  definition: ICollection`1
  name: ICollection<IModelElement>
  nameWithType: ICollection<IModelElement>
  fullName: ICollection<NMF.Models.IModelElement>
  nameWithType.vb: ICollection(Of IModelElement)
  fullName.vb: ICollection(Of NMF.Models.IModelElement)
  name.vb: ICollection(Of IModelElement)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.CollectionChanged
  commentId: E:NMF.Models.Collections.ReferenceCollection.CollectionChanged
  parent: NMF.Models.Collections.ReferenceCollection
  name: CollectionChanged
  nameWithType: ReferenceCollection.CollectionChanged
  fullName: NMF.Models.Collections.ReferenceCollection.CollectionChanged
- uid: NMF.Models.Collections.ReferenceCollection.IsReadOnly
  commentId: P:NMF.Models.Collections.ReferenceCollection.IsReadOnly
  parent: NMF.Models.Collections.ReferenceCollection
  name: IsReadOnly
  nameWithType: ReferenceCollection.IsReadOnly
  fullName: NMF.Models.Collections.ReferenceCollection.IsReadOnly
- uid: NMF.Models.Collections.ReferenceCollection.AsNotifiable
  commentId: M:NMF.Models.Collections.ReferenceCollection.AsNotifiable
  parent: NMF.Models.Collections.ReferenceCollection
  name: AsNotifiable()
  nameWithType: ReferenceCollection.AsNotifiable()
  fullName: NMF.Models.Collections.ReferenceCollection.AsNotifiable()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.AsNotifiable
    name: AsNotifiable
    nameWithType: ReferenceCollection.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.AsNotifiable
    name: AsNotifiable
    nameWithType: ReferenceCollection.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression{NMF#Models#IModelElement}#AsNotifiable
  commentId: M:NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression{NMF#Models#IModelElement}#AsNotifiable
  parent: NMF.Models.Collections.ReferenceCollection
  name: IEnumerableExpression<IModelElement>.AsNotifiable()
  nameWithType: ReferenceCollection.IEnumerableExpression<IModelElement>.AsNotifiable()
  fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable()
  nameWithType.vb: ReferenceCollection.NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression{NMF#Models#IModelElement}#AsNotifiable
    name: IEnumerableExpression<IModelElement>.AsNotifiable
    nameWithType: ReferenceCollection.IEnumerableExpression<IModelElement>.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression{NMF#Models#IModelElement}#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable
    nameWithType: ReferenceCollection.NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression<NMF.Models.IModelElement>.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression#AsNotifiable
  commentId: M:NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression#AsNotifiable
  parent: NMF.Models.Collections.ReferenceCollection
  name: IEnumerableExpression.AsNotifiable()
  nameWithType: ReferenceCollection.IEnumerableExpression.AsNotifiable()
  fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  nameWithType.vb: ReferenceCollection.NMF.Expressions.IEnumerableExpression.AsNotifiable()
  name.vb: NMF.Expressions.IEnumerableExpression.AsNotifiable()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: IEnumerableExpression.AsNotifiable
    nameWithType: ReferenceCollection.IEnumerableExpression.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.NMF#Expressions#IEnumerableExpression#AsNotifiable
    name: NMF.Expressions.IEnumerableExpression.AsNotifiable
    nameWithType: ReferenceCollection.NMF.Expressions.IEnumerableExpression.AsNotifiable
    fullName: NMF.Models.Collections.ReferenceCollection.NMF.Expressions.IEnumerableExpression.AsNotifiable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Models.Collections.ReferenceCollection
  isExternal: true
  name: PropagateCollectionChanges(Object, NotifyCollectionChangedEventArgs)
  nameWithType: ReferenceCollection.PropagateCollectionChanges(Object, NotifyCollectionChangedEventArgs)
  fullName: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: PropagateCollectionChanges
    nameWithType: ReferenceCollection.PropagateCollectionChanges
    fullName: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: PropagateCollectionChanges
    nameWithType: ReferenceCollection.PropagateCollectionChanges
    fullName: NMF.Models.Collections.ReferenceCollection.PropagateCollectionChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object,NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object,NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Models.Collections.ReferenceCollection
  isExternal: true
  name: PropagateValueChanges(Object, ValueChangedEventArgs)
  nameWithType: ReferenceCollection.PropagateValueChanges(Object, ValueChangedEventArgs)
  fullName: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object, NMF.Expressions.ValueChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object,NMF.Expressions.ValueChangedEventArgs)
    name: PropagateValueChanges
    nameWithType: ReferenceCollection.PropagateValueChanges
    fullName: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges(System.Object,NMF.Expressions.ValueChangedEventArgs)
    name: PropagateValueChanges
    nameWithType: ReferenceCollection.PropagateValueChanges
    fullName: NMF.Models.Collections.ReferenceCollection.PropagateValueChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
    nameWithType: ValueChangedEventArgs
    fullName: NMF.Expressions.ValueChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: NMF.Models.Collections.ReferenceCollection
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ReferenceCollection.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ReferenceCollection.OnCollectionChanged
    fullName: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ReferenceCollection.OnCollectionChanged
    fullName: NMF.Models.Collections.ReferenceCollection.OnCollectionChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.Dispose
  commentId: M:NMF.Models.Collections.ReferenceCollection.Dispose
  parent: NMF.Models.Collections.ReferenceCollection
  name: Dispose()
  nameWithType: ReferenceCollection.Dispose()
  fullName: NMF.Models.Collections.ReferenceCollection.Dispose()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Dispose
    name: Dispose
    nameWithType: ReferenceCollection.Dispose
    fullName: NMF.Models.Collections.ReferenceCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Dispose
    name: Dispose
    nameWithType: ReferenceCollection.Dispose
    fullName: NMF.Models.Collections.ReferenceCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
  commentId: M:NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
  parent: NMF.Models.Collections.ReferenceCollection
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ReferenceCollection.Dispose(Boolean)
  fullName: NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ReferenceCollection.Dispose
    fullName: NMF.Models.Collections.ReferenceCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ReferenceCollection.Dispose
    fullName: NMF.Models.Collections.ReferenceCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Models.Collections
  commentId: N:NMF.Models.Collections
  name: NMF.Models.Collections
  nameWithType: NMF.Models.Collections
  fullName: NMF.Models.Collections
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
    nameWithType: ICollectionExpression
    fullName: NMF.Expressions.ICollectionExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
- uid: NMF.Expressions.IEnumerableExpression`1
  commentId: T:NMF.Expressions.IEnumerableExpression`1
  name: IEnumerableExpression<T>
  nameWithType: IEnumerableExpression<T>
  fullName: NMF.Expressions.IEnumerableExpression<T>
  nameWithType.vb: IEnumerableExpression(Of T)
  fullName.vb: NMF.Expressions.IEnumerableExpression(Of T)
  name.vb: IEnumerableExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
    nameWithType: IEnumerableExpression
    fullName: NMF.Expressions.IEnumerableExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.#ctor
  name: BlockAReferencedElementsCollection
  nameWithType: BlockA.BlockAReferencedElementsCollection.BlockAReferencedElementsCollection
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.BlockAReferencedElementsCollection
- uid: PortV3Namespace.TypeA.BlockA
  commentId: T:PortV3Namespace.TypeA.BlockA
  parent: PortV3Namespace.TypeA
  name: BlockA
  nameWithType: BlockA
  fullName: PortV3Namespace.TypeA.BlockA
- uid: NMF.Models.Collections.ReferenceCollection.Count
  commentId: P:NMF.Models.Collections.ReferenceCollection.Count
  parent: NMF.Models.Collections.ReferenceCollection
  name: Count
  nameWithType: ReferenceCollection.Count
  fullName: NMF.Models.Collections.ReferenceCollection.Count
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
  name: Count
  nameWithType: BlockA.BlockAReferencedElementsCollection.Count
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NMF.Models.Collections.ReferenceCollection.AttachCore
  commentId: M:NMF.Models.Collections.ReferenceCollection.AttachCore
  parent: NMF.Models.Collections.ReferenceCollection
  name: AttachCore()
  nameWithType: ReferenceCollection.AttachCore()
  fullName: NMF.Models.Collections.ReferenceCollection.AttachCore()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.AttachCore
    name: AttachCore
    nameWithType: ReferenceCollection.AttachCore
    fullName: NMF.Models.Collections.ReferenceCollection.AttachCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.AttachCore
    name: AttachCore
    nameWithType: ReferenceCollection.AttachCore
    fullName: NMF.Models.Collections.ReferenceCollection.AttachCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore
  name: AttachCore
  nameWithType: BlockA.BlockAReferencedElementsCollection.AttachCore
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.AttachCore
- uid: NMF.Models.Collections.ReferenceCollection.DetachCore
  commentId: M:NMF.Models.Collections.ReferenceCollection.DetachCore
  parent: NMF.Models.Collections.ReferenceCollection
  name: DetachCore()
  nameWithType: ReferenceCollection.DetachCore()
  fullName: NMF.Models.Collections.ReferenceCollection.DetachCore()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.DetachCore
    name: DetachCore
    nameWithType: ReferenceCollection.DetachCore
    fullName: NMF.Models.Collections.ReferenceCollection.DetachCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.DetachCore
    name: DetachCore
    nameWithType: ReferenceCollection.DetachCore
    fullName: NMF.Models.Collections.ReferenceCollection.DetachCore
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore
  name: DetachCore
  nameWithType: BlockA.BlockAReferencedElementsCollection.DetachCore
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.DetachCore
- uid: NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
  parent: NMF.Models.Collections.ReferenceCollection
  name: Add(IModelElement)
  nameWithType: ReferenceCollection.Add(IModelElement)
  fullName: NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
    name: Add
    nameWithType: ReferenceCollection.Add
    fullName: NMF.Models.Collections.ReferenceCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Add(NMF.Models.IModelElement)
    name: Add
    nameWithType: ReferenceCollection.Add
    fullName: NMF.Models.Collections.ReferenceCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add
  name: Add
  nameWithType: BlockA.BlockAReferencedElementsCollection.Add
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Add
- uid: NMF.Models.IModelElement
  commentId: T:NMF.Models.IModelElement
  parent: NMF.Models
  name: IModelElement
  nameWithType: IModelElement
  fullName: NMF.Models.IModelElement
- uid: NMF.Models
  commentId: N:NMF.Models
  name: NMF.Models
  nameWithType: NMF.Models
  fullName: NMF.Models
- uid: NMF.Models.Collections.ReferenceCollection.Clear
  commentId: M:NMF.Models.Collections.ReferenceCollection.Clear
  parent: NMF.Models.Collections.ReferenceCollection
  name: Clear()
  nameWithType: ReferenceCollection.Clear()
  fullName: NMF.Models.Collections.ReferenceCollection.Clear()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Clear
    name: Clear
    nameWithType: ReferenceCollection.Clear
    fullName: NMF.Models.Collections.ReferenceCollection.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Clear
    name: Clear
    nameWithType: ReferenceCollection.Clear
    fullName: NMF.Models.Collections.ReferenceCollection.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear
  name: Clear
  nameWithType: BlockA.BlockAReferencedElementsCollection.Clear
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Clear
- uid: NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
  parent: NMF.Models.Collections.ReferenceCollection
  name: Contains(IModelElement)
  nameWithType: ReferenceCollection.Contains(IModelElement)
  fullName: NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
    name: Contains
    nameWithType: ReferenceCollection.Contains
    fullName: NMF.Models.Collections.ReferenceCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Contains(NMF.Models.IModelElement)
    name: Contains
    nameWithType: ReferenceCollection.Contains
    fullName: NMF.Models.Collections.ReferenceCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains
  name: Contains
  nameWithType: BlockA.BlockAReferencedElementsCollection.Contains
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  commentId: M:NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
  parent: NMF.Models.Collections.ReferenceCollection
  isExternal: true
  name: CopyTo(IModelElement[], Int32)
  nameWithType: ReferenceCollection.CopyTo(IModelElement[], Int32)
  fullName: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[], System.Int32)
  nameWithType.vb: ReferenceCollection.CopyTo(IModelElement(), Int32)
  fullName.vb: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement(), System.Int32)
  name.vb: CopyTo(IModelElement(), Int32)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
    name: CopyTo
    nameWithType: ReferenceCollection.CopyTo
    fullName: NMF.Models.Collections.ReferenceCollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.CopyTo(NMF.Models.IModelElement[],System.Int32)
    name: CopyTo
    nameWithType: ReferenceCollection.CopyTo
    fullName: NMF.Models.Collections.ReferenceCollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo
  name: CopyTo
  nameWithType: BlockA.BlockAReferencedElementsCollection.CopyTo
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.CopyTo
- uid: NMF.Models.IModelElement[]
  isExternal: true
  name: IModelElement[]
  nameWithType: IModelElement[]
  fullName: NMF.Models.IModelElement[]
  nameWithType.vb: IModelElement()
  fullName.vb: NMF.Models.IModelElement()
  name.vb: IModelElement()
  spec.csharp:
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
  commentId: M:NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
  parent: NMF.Models.Collections.ReferenceCollection
  name: Remove(IModelElement)
  nameWithType: ReferenceCollection.Remove(IModelElement)
  fullName: NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
    name: Remove
    nameWithType: ReferenceCollection.Remove
    fullName: NMF.Models.Collections.ReferenceCollection.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.Remove(NMF.Models.IModelElement)
    name: Remove
    nameWithType: ReferenceCollection.Remove
    fullName: NMF.Models.Collections.ReferenceCollection.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove
  name: Remove
  nameWithType: BlockA.BlockAReferencedElementsCollection.Remove
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.Remove
- uid: NMF.Models.Collections.ReferenceCollection.GetEnumerator
  commentId: M:NMF.Models.Collections.ReferenceCollection.GetEnumerator
  parent: NMF.Models.Collections.ReferenceCollection
  name: GetEnumerator()
  nameWithType: ReferenceCollection.GetEnumerator()
  fullName: NMF.Models.Collections.ReferenceCollection.GetEnumerator()
  spec.csharp:
  - uid: NMF.Models.Collections.ReferenceCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: ReferenceCollection.GetEnumerator
    fullName: NMF.Models.Collections.ReferenceCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NMF.Models.Collections.ReferenceCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: ReferenceCollection.GetEnumerator
    fullName: NMF.Models.Collections.ReferenceCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator*
  commentId: Overload:PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: BlockA.BlockAReferencedElementsCollection.GetEnumerator
  fullName: PortV3Namespace.TypeA.BlockA.BlockAReferencedElementsCollection.GetEnumerator
- uid: IEnumerator{NMF.Models.IModelElement}
  commentId: '!:IEnumerator{NMF.Models.IModelElement}'
  definition: IEnumerator`1
  name: IEnumerator<IModelElement>
  nameWithType: IEnumerator<IModelElement>
  fullName: IEnumerator<NMF.Models.IModelElement>
  nameWithType.vb: IEnumerator(Of IModelElement)
  fullName.vb: IEnumerator(Of NMF.Models.IModelElement)
  name.vb: IEnumerator(Of IModelElement)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NMF.Models.IModelElement
    name: IModelElement
    nameWithType: IModelElement
    fullName: NMF.Models.IModelElement
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
