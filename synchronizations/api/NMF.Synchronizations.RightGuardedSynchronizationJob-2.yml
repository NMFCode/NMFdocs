### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.RightGuardedSynchronizationJob`2
  id: RightGuardedSynchronizationJob`2
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`1,System.Boolean})
  - NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  langs:
  - csharp
  - vb
  name: RightGuardedSynchronizationJob<TLeft, TRight>
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: RightGuardedSynchronizationJob
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 135
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: "\nDenotes a synchronization job that is guarded at the RHS\n"
  example: []
  syntax:
    content: 'public class RightGuardedSynchronizationJob<TLeft, TRight> : GuardedSynchronizationJob<TLeft, TRight>, ISynchronizationJob<TLeft, TRight>'
    typeParameters:
    - id: TLeft
      description: The LHS type
    - id: TRight
      description: The RHS type
    content.vb: Public Class RightGuardedSynchronizationJob(Of TLeft, TRight) Inherits GuardedSynchronizationJob(Of TLeft, TRight) Implements ISynchronizationJob(Of TLeft, TRight)
  inheritance:
  - System.Object
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  implements:
  - NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
  inheritedMembers:
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.IsEarly
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.Perform(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  - NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: RightGuardedSynchronizationJob(Of TLeft, TRight)
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`1,System.Boolean})
  commentId: M:NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`1,System.Boolean})
  id: '#ctor(NMF.Synchronizations.ISynchronizationJob{`0,`1},NMF.Expressions.ObservingFunc{`1,System.Boolean})'
  parent: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  langs:
  - csharp
  - vb
  name: RightGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TRight, bool>)
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight>, ObservingFunc<TRight, bool>)
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob(NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>, NMF.Expressions.ObservingFunc<TRight, bool>)
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 144
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: "\nCreates a new synchronization job guarded at the RHS\n"
  example: []
  syntax:
    content: public RightGuardedSynchronizationJob(ISynchronizationJob<TLeft, TRight> inner, ObservingFunc<TRight, bool> guard)
    parameters:
    - id: inner
      type: NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
      description: ''
    - id: guard
      type: NMF.Expressions.ObservingFunc{{TRight},System.Boolean}
      description: ''
    content.vb: Public Sub New(inner As ISynchronizationJob(Of TLeft, TRight), guard As ObservingFunc(Of TRight, Boolean))
  overload: NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor*
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).New(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TRight, Boolean))
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).New(NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight), NMF.Expressions.ObservingFunc(Of TRight, Boolean))
  name.vb: New(ISynchronizationJob(Of TLeft, TRight), ObservingFunc(Of TRight, Boolean))
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  commentId: M:NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  id: CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  parent: NMF.Synchronizations.RightGuardedSynchronizationJob`2
  langs:
  - csharp
  - vb
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CreateTracker
    path: src/Synchronizations/Synchronizations/GuardedSynchronizationJob.cs
    startLine: 153
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: "\nCreates a tracker for the given computation\n"
  example: []
  syntax:
    content: protected override INotifyValue<bool> CreateTracker(SynchronizationComputation<TLeft, TRight> computation)
    parameters:
    - id: computation
      type: NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}}
      description: The computation that shall be tracked
    return:
      type: NMF.Expressions.INotifyValue{System.Boolean}
      description: ''
    content.vb: Protected Overrides Function CreateTracker(computation As SynchronizationComputation(Of TLeft, TRight)) As INotifyValue(Of Boolean)
  overridden: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  overload: NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker*
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.ISynchronizationJob{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.ISynchronizationJob{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.ISynchronizationJob`2
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.IsEarly
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.IsEarly
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  name: IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.Perform(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}})
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  parent: NMF.Synchronizations.GuardedSynchronizationJob{{TLeft},{TRight}}
  definition: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob{`0,`1}.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2
  commentId: T:NMF.Synchronizations.GuardedSynchronizationJob`2
  name: GuardedSynchronizationJob<TLeft, TRight>
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight)
  name.vb: GuardedSynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2
    name: GuardedSynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.ISynchronizationJob`2
  commentId: T:NMF.Synchronizations.ISynchronizationJob`2
  name: ISynchronizationJob<TLeft, TRight>
  nameWithType: ISynchronizationJob<TLeft, TRight>
  fullName: NMF.Synchronizations.ISynchronizationJob<TLeft, TRight>
  nameWithType.vb: ISynchronizationJob(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.ISynchronizationJob(Of TLeft, TRight)
  name.vb: ISynchronizationJob(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.ISynchronizationJob`2
    name: ISynchronizationJob
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  commentId: P:NMF.Synchronizations.GuardedSynchronizationJob`2.IsEarly
  name: IsEarly
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.IsEarly
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).IsEarly
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
  name: Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.Perform(SynchronizationComputation<TLeft, TRight>, SynchronizationDirection, ISynchronizationContext)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.Perform(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>, NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).Perform(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight), NMF.Synchronizations.SynchronizationDirection, NMF.Synchronizations.ISynchronizationContext)
  name.vb: Perform(SynchronizationComputation(Of TLeft, TRight), SynchronizationDirection, ISynchronizationContext)
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.Perform(NMF.Synchronizations.SynchronizationComputation{`0,`1},NMF.Synchronizations.SynchronizationDirection,NMF.Synchronizations.ISynchronizationContext)
    name: Perform
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationDirection
    name: SynchronizationDirection
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.ISynchronizationContext
    name: ISynchronizationContext
  - name: )
- uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  commentId: M:NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
  name: CreateTracker(SynchronizationComputation<TLeft, TRight>)
  nameWithType: GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(SynchronizationComputation<TLeft, TRight>)
  fullName: NMF.Synchronizations.GuardedSynchronizationJob<TLeft, TRight>.CreateTracker(NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>)
  nameWithType.vb: GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  fullName.vb: NMF.Synchronizations.GuardedSynchronizationJob(Of TLeft, TRight).CreateTracker(NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight))
  name.vb: CreateTracker(SynchronizationComputation(Of TLeft, TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.GuardedSynchronizationJob`2.CreateTracker(NMF.Synchronizations.SynchronizationComputation{`0,`1})
    name: CreateTracker
  - name: (
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor*
  commentId: Overload:NMF.Synchronizations.RightGuardedSynchronizationJob`2.#ctor
  name: RightGuardedSynchronizationJob
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.RightGuardedSynchronizationJob
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).New
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).New
  name.vb: New
- uid: NMF.Expressions.ObservingFunc{{TRight},System.Boolean}
  commentId: T:NMF.Expressions.ObservingFunc{`1,System.Boolean}
  parent: NMF.Expressions
  definition: NMF.Expressions.ObservingFunc`2
  name: ObservingFunc<TRight, bool>
  nameWithType: ObservingFunc<TRight, bool>
  fullName: NMF.Expressions.ObservingFunc<TRight, bool>
  nameWithType.vb: ObservingFunc(Of TRight, Boolean)
  fullName.vb: NMF.Expressions.ObservingFunc(Of TRight, Boolean)
  name.vb: ObservingFunc(Of TRight, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
  - name: <
  - name: TRight
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
  - name: (
  - name: Of
  - name: " "
  - name: TRight
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Expressions.ObservingFunc`2
  commentId: T:NMF.Expressions.ObservingFunc`2
  name: ObservingFunc<T1, TResult>
  nameWithType: ObservingFunc<T1, TResult>
  fullName: NMF.Expressions.ObservingFunc<T1, TResult>
  nameWithType.vb: ObservingFunc(Of T1, TResult)
  fullName.vb: NMF.Expressions.ObservingFunc(Of T1, TResult)
  name.vb: ObservingFunc(Of T1, TResult)
  spec.csharp:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ObservingFunc`2
    name: ObservingFunc
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker*
  commentId: Overload:NMF.Synchronizations.RightGuardedSynchronizationJob`2.CreateTracker
  name: CreateTracker
  nameWithType: RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  fullName: NMF.Synchronizations.RightGuardedSynchronizationJob<TLeft, TRight>.CreateTracker
  nameWithType.vb: RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
  fullName.vb: NMF.Synchronizations.RightGuardedSynchronizationJob(Of TLeft, TRight).CreateTracker
- uid: NMF.Synchronizations.SynchronizationComputation{{TLeft},{TRight}}
  commentId: T:NMF.Synchronizations.SynchronizationComputation{`0,`1}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationComputation`2
  name: SynchronizationComputation<TLeft, TRight>
  nameWithType: SynchronizationComputation<TLeft, TRight>
  fullName: NMF.Synchronizations.SynchronizationComputation<TLeft, TRight>
  nameWithType.vb: SynchronizationComputation(Of TLeft, TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TLeft, TRight)
  name.vb: SynchronizationComputation(Of TLeft, TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Expressions.INotifyValue{System.Boolean}
  commentId: T:NMF.Expressions.INotifyValue{System.Boolean}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyValue`1
  name: INotifyValue<bool>
  nameWithType: INotifyValue<bool>
  fullName: NMF.Expressions.INotifyValue<bool>
  nameWithType.vb: INotifyValue(Of Boolean)
  fullName.vb: NMF.Expressions.INotifyValue(Of Boolean)
  name.vb: INotifyValue(Of Boolean)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Expressions.INotifyValue`1
  commentId: T:NMF.Expressions.INotifyValue`1
  name: INotifyValue<T>
  nameWithType: INotifyValue<T>
  fullName: NMF.Expressions.INotifyValue<T>
  nameWithType.vb: INotifyValue(Of T)
  fullName.vb: NMF.Expressions.INotifyValue(Of T)
  name.vb: INotifyValue(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
