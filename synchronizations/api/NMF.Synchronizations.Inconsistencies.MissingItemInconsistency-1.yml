### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  commentId: T:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  id: MissingItemInconsistency`1
  parent: NMF.Synchronizations.Inconsistencies
  children:
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor(NMF.Synchronizations.ISynchronizationContext,System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`0},`0,System.Boolean)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(System.Object)
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection
  - NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection
  langs:
  - csharp
  - vb
  name: MissingItemInconsistency<TValue>
  nameWithType: MissingItemInconsistency<TValue>
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: MissingItemInconsistency
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 13
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Denotes the inconsistency that an item is missing in a synchronized collection
  example: []
  syntax:
    content: 'public class MissingItemInconsistency<TValue> : IInconsistency, IEquatable<IInconsistency>'
    typeParameters:
    - id: TValue
      description: The type of the item
    content.vb: Public Class MissingItemInconsistency(Of TValue) Implements IInconsistency, IEquatable(Of IInconsistency)
  inheritance:
  - System.Object
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency
  - System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: MissingItemInconsistency(Of TValue)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue)
  name.vb: MissingItemInconsistency(Of TValue)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context
  id: Context
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: MissingItemInconsistency<TValue>.Context
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Context
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Context
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 19
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the context in which this inconsistency occured
  example: []
  syntax:
    content: public ISynchronizationContext Context { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.ISynchronizationContext
    content.vb: Public ReadOnly Property Context As ISynchronizationContext
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context*
  nameWithType.vb: MissingItemInconsistency(Of TValue).Context
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Context
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection
  id: SourceCollection
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: SourceCollection
  nameWithType: MissingItemInconsistency<TValue>.SourceCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.SourceCollection
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SourceCollection
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 24
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the source collection where the element is contained
  example: []
  syntax:
    content: public ICollection<TValue> SourceCollection { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
    content.vb: Public ReadOnly Property SourceCollection As ICollection(Of TValue)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection*
  nameWithType.vb: MissingItemInconsistency(Of TValue).SourceCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).SourceCollection
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection
  id: TargetCollection
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: TargetCollection
  nameWithType: MissingItemInconsistency<TValue>.TargetCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.TargetCollection
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: TargetCollection
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 29
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the target collection where the element is missing
  example: []
  syntax:
    content: public ICollection<TValue> TargetCollection { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
    content.vb: Public ReadOnly Property TargetCollection As ICollection(Of TValue)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection*
  nameWithType.vb: MissingItemInconsistency(Of TValue).TargetCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).TargetCollection
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source
  id: Source
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: MissingItemInconsistency<TValue>.Source
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Source
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Source
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 34
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Gets the source element that is missing
  example: []
  syntax:
    content: public TValue Source { get; }
    parameters: []
    return:
      type: '{TValue}'
    content.vb: Public ReadOnly Property Source As TValue
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source*
  nameWithType.vb: MissingItemInconsistency(Of TValue).Source
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Source
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing
  id: IsLeftMissing
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: IsLeftMissing
  nameWithType: MissingItemInconsistency<TValue>.IsLeftMissing
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.IsLeftMissing
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: IsLeftMissing
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 39
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: True, if the element is missing in the left side, otherwise false
  example: []
  syntax:
    content: public bool IsLeftMissing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLeftMissing As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing*
  nameWithType.vb: MissingItemInconsistency(Of TValue).IsLeftMissing
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).IsLeftMissing
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor(NMF.Synchronizations.ISynchronizationContext,System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`0},`0,System.Boolean)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor(NMF.Synchronizations.ISynchronizationContext,System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`0},`0,System.Boolean)
  id: '#ctor(NMF.Synchronizations.ISynchronizationContext,System.Collections.Generic.ICollection{`0},System.Collections.Generic.ICollection{`0},`0,System.Boolean)'
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: MissingItemInconsistency(ISynchronizationContext, ICollection<TValue>, ICollection<TValue>, TValue, bool)
  nameWithType: MissingItemInconsistency<TValue>.MissingItemInconsistency(ISynchronizationContext, ICollection<TValue>, ICollection<TValue>, TValue, bool)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.MissingItemInconsistency(NMF.Synchronizations.ISynchronizationContext, System.Collections.Generic.ICollection<TValue>, System.Collections.Generic.ICollection<TValue>, TValue, bool)
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 51
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  syntax:
    content: public MissingItemInconsistency(ISynchronizationContext context, ICollection<TValue> sourceCollection, ICollection<TValue> targetCollection, TValue source, bool isLeftMissing)
    parameters:
    - id: context
      type: NMF.Synchronizations.ISynchronizationContext
    - id: sourceCollection
      type: System.Collections.Generic.ICollection{{TValue}}
    - id: targetCollection
      type: System.Collections.Generic.ICollection{{TValue}}
    - id: source
      type: '{TValue}'
    - id: isLeftMissing
      type: System.Boolean
    content.vb: Public Sub New(context As ISynchronizationContext, sourceCollection As ICollection(Of TValue), targetCollection As ICollection(Of TValue), source As TValue, isLeftMissing As Boolean)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor*
  nameWithType.vb: MissingItemInconsistency(Of TValue).New(ISynchronizationContext, ICollection(Of TValue), ICollection(Of TValue), TValue, Boolean)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).New(NMF.Synchronizations.ISynchronizationContext, System.Collections.Generic.ICollection(Of TValue), System.Collections.Generic.ICollection(Of TValue), TValue, Boolean)
  name.vb: New(ISynchronizationContext, ICollection(Of TValue), ICollection(Of TValue), TValue, Boolean)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft
  id: CanResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: CanResolveLeft
  nameWithType: MissingItemInconsistency<TValue>.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.CanResolveLeft
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CanResolveLeft
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 61
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public bool CanResolveLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanResolveLeft As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TValue).CanResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight
  commentId: P:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight
  id: CanResolveRight
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: CanResolveRight
  nameWithType: MissingItemInconsistency<TValue>.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.CanResolveRight
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: CanResolveRight
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 67
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public bool CanResolveRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanResolveRight As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TValue).CanResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).CanResolveRight
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode
  id: GetHashCode
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MissingItemInconsistency<TValue>.GetHashCode()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.GetHashCode()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: GetHashCode
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 72
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode*
  nameWithType.vb: MissingItemInconsistency(Of TValue).GetHashCode()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).GetHashCode()
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(System.Object)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: MissingItemInconsistency<TValue>.Equals(object)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Equals(object)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 87
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals*
  nameWithType.vb: MissingItemInconsistency(Of TValue).Equals(Object)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Equals(Object)
  name.vb: Equals(Object)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  id: Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: Equals(IInconsistency)
  nameWithType: MissingItemInconsistency<TValue>.Equals(IInconsistency)
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Equals
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 94
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  example: []
  syntax:
    content: public bool Equals(IInconsistency other)
    parameters:
    - id: other
      type: NMF.Synchronizations.Inconsistencies.IInconsistency
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As IInconsistency) As Boolean
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals*
  implements:
  - System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  nameWithType.vb: MissingItemInconsistency(Of TValue).Equals(IInconsistency)
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft
  id: ResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: ResolveLeft()
  nameWithType: MissingItemInconsistency<TValue>.ResolveLeft()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.ResolveLeft()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ResolveLeft
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 105
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public void ResolveLeft()
    content.vb: Public Sub ResolveLeft()
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TValue).ResolveLeft()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).ResolveLeft()
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight
  commentId: M:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight
  id: ResolveRight
  parent: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1
  langs:
  - csharp
  - vb
  name: ResolveRight()
  nameWithType: MissingItemInconsistency<TValue>.ResolveRight()
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.ResolveRight()
  type: Method
  source:
    remote:
      path: Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ResolveRight
    path: src/Synchronizations/Synchronizations/Inconsistencies/MissingItemInconsistency.cs
    startLine: 119
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations.Inconsistencies
  summary: Describes inconsistencies that can occur between the right hand and the left hand of a synchronization
  example: []
  syntax:
    content: public void ResolveRight()
    content.vb: Public Sub ResolveRight()
  overload: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight*
  implements:
  - NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TValue).ResolveRight()
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).ResolveRight()
references:
- uid: NMF.Synchronizations.Inconsistencies
  commentId: N:NMF.Synchronizations.Inconsistencies
  href: NMF.html
  name: NMF.Synchronizations.Inconsistencies
  nameWithType: NMF.Synchronizations.Inconsistencies
  fullName: NMF.Synchronizations.Inconsistencies
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  - name: .
  - uid: NMF.Synchronizations.Inconsistencies
    name: Inconsistencies
    href: NMF.Synchronizations.Inconsistencies.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  - name: .
  - uid: NMF.Synchronizations.Inconsistencies
    name: Inconsistencies
    href: NMF.Synchronizations.Inconsistencies.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency
  commentId: T:NMF.Synchronizations.Inconsistencies.IInconsistency
  parent: NMF.Synchronizations.Inconsistencies
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  name: IInconsistency
  nameWithType: IInconsistency
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency
- uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  commentId: T:System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IInconsistency>
  nameWithType: IEquatable<IInconsistency>
  fullName: System.IEquatable<NMF.Synchronizations.Inconsistencies.IInconsistency>
  nameWithType.vb: IEquatable(Of IInconsistency)
  fullName.vb: System.IEquatable(Of NMF.Synchronizations.Inconsistencies.IInconsistency)
  name.vb: IEquatable(Of IInconsistency)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Context
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_Context
  name: Context
  nameWithType: MissingItemInconsistency<TValue>.Context
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Context
  nameWithType.vb: MissingItemInconsistency(Of TValue).Context
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Context
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.ISynchronizationContext.html
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.SourceCollection
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_SourceCollection
  name: SourceCollection
  nameWithType: MissingItemInconsistency<TValue>.SourceCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.SourceCollection
  nameWithType.vb: MissingItemInconsistency(Of TValue).SourceCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).SourceCollection
- uid: System.Collections.Generic.ICollection{{TValue}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.TargetCollection
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_TargetCollection
  name: TargetCollection
  nameWithType: MissingItemInconsistency<TValue>.TargetCollection
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.TargetCollection
  nameWithType.vb: MissingItemInconsistency(Of TValue).TargetCollection
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).TargetCollection
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Source
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_Source
  name: Source
  nameWithType: MissingItemInconsistency<TValue>.Source
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Source
  nameWithType.vb: MissingItemInconsistency(Of TValue).Source
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Source
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.IsLeftMissing
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_IsLeftMissing
  name: IsLeftMissing
  nameWithType: MissingItemInconsistency<TValue>.IsLeftMissing
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.IsLeftMissing
  nameWithType.vb: MissingItemInconsistency(Of TValue).IsLeftMissing
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).IsLeftMissing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.#ctor
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1__ctor_NMF_Synchronizations_ISynchronizationContext_System_Collections_Generic_ICollection__0__System_Collections_Generic_ICollection__0___0_System_Boolean_
  name: MissingItemInconsistency
  nameWithType: MissingItemInconsistency<TValue>.MissingItemInconsistency
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.MissingItemInconsistency
  nameWithType.vb: MissingItemInconsistency(Of TValue).New
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).New
  name.vb: New
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveLeft
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_CanResolveLeft
  name: CanResolveLeft
  nameWithType: MissingItemInconsistency<TValue>.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.CanResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TValue).CanResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  commentId: P:NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_CanResolveLeft
  name: CanResolveLeft
  nameWithType: IInconsistency.CanResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.CanResolveRight
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_CanResolveRight
  name: CanResolveRight
  nameWithType: MissingItemInconsistency<TValue>.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.CanResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TValue).CanResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).CanResolveRight
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  commentId: P:NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_CanResolveRight
  name: CanResolveRight
  nameWithType: IInconsistency.CanResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.CanResolveRight
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.GetHashCode
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_GetHashCode
  name: GetHashCode
  nameWithType: MissingItemInconsistency<TValue>.GetHashCode
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.GetHashCode
  nameWithType.vb: MissingItemInconsistency(Of TValue).GetHashCode
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.Equals
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_Equals_System_Object_
  name: Equals
  nameWithType: MissingItemInconsistency<TValue>.Equals
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.Equals
  nameWithType.vb: MissingItemInconsistency(Of TValue).Equals
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).Equals
- uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  commentId: M:System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  parent: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(IInconsistency)
  nameWithType: IEquatable<IInconsistency>.Equals(IInconsistency)
  fullName: System.IEquatable<NMF.Synchronizations.Inconsistencies.IInconsistency>.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  nameWithType.vb: IEquatable(Of IInconsistency).Equals(IInconsistency)
  fullName.vb: System.IEquatable(Of NMF.Synchronizations.Inconsistencies.IInconsistency).Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
  spec.csharp:
  - uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{NMF.Synchronizations.Inconsistencies.IInconsistency}.Equals(NMF.Synchronizations.Inconsistencies.IInconsistency)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveLeft
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_ResolveLeft
  name: ResolveLeft
  nameWithType: MissingItemInconsistency<TValue>.ResolveLeft
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.ResolveLeft
  nameWithType.vb: MissingItemInconsistency(Of TValue).ResolveLeft
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).ResolveLeft
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  commentId: M:NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  name: ResolveLeft()
  nameWithType: IInconsistency.ResolveLeft()
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft()
  spec.csharp:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
    name: ResolveLeft
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveLeft
    name: ResolveLeft
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveLeft
  - name: (
  - name: )
- uid: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight*
  commentId: Overload:NMF.Synchronizations.Inconsistencies.MissingItemInconsistency`1.ResolveRight
  href: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency-1.html#NMF_Synchronizations_Inconsistencies_MissingItemInconsistency_1_ResolveRight
  name: ResolveRight
  nameWithType: MissingItemInconsistency<TValue>.ResolveRight
  fullName: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency<TValue>.ResolveRight
  nameWithType.vb: MissingItemInconsistency(Of TValue).ResolveRight
  fullName.vb: NMF.Synchronizations.Inconsistencies.MissingItemInconsistency(Of TValue).ResolveRight
- uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  commentId: M:NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
  parent: NMF.Synchronizations.Inconsistencies.IInconsistency
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  name: ResolveRight()
  nameWithType: IInconsistency.ResolveRight()
  fullName: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight()
  spec.csharp:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
    name: ResolveRight
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency.ResolveRight
    name: ResolveRight
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html#NMF_Synchronizations_Inconsistencies_IInconsistency_ResolveRight
  - name: (
  - name: )
