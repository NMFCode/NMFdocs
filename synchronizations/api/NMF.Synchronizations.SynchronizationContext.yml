### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationContext
  commentId: T:NMF.Synchronizations.SynchronizationContext
  id: SynchronizationContext
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationContext.#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,NMF.Transformations.ChangePropagationMode)
  - NMF.Synchronizations.SynchronizationContext.ChangePropagation
  - NMF.Synchronizations.SynchronizationContext.Direction
  - NMF.Synchronizations.SynchronizationContext.Inconsistencies
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationContext
  type: Class
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: SynchronizationContext
    path: src/Synchronizations/Synchronizations/SynchronizationContext.cs
    startLine: 16
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes a context in which a synchroniation takes place
  example: []
  syntax:
    content: 'public class SynchronizationContext : TransformationContext, ISynchronizationContext, ITransformationEngineContext, ITransformationContext'
    content.vb: Public Class SynchronizationContext Inherits TransformationContext Implements ISynchronizationContext, ITransformationEngineContext, ITransformationContext
  inheritance:
  - System.Object
  - NMF.Transformations.Core.TransformationContext
  implements:
  - NMF.Synchronizations.ISynchronizationContext
  - NMF.Transformations.Core.ITransformationEngineContext
  - NMF.Transformations.Core.ITransformationContext
  inheritedMembers:
  - NMF.Transformations.Core.TransformationContext.Transformation
  - NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  - NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  - NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  - NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  - NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  - NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  - NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  - NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  - NMF.Transformations.Core.TransformationContext.Bag
  - NMF.Transformations.Core.TransformationContext.Data
  - NMF.Transformations.Core.TransformationContext.ExecutePending
  - NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  - NMF.Transformations.Core.TransformationContext.Computations
  - NMF.Transformations.Core.TransformationContext.Trace
  - NMF.Transformations.Core.TransformationContext.Input
  - NMF.Transformations.Core.TransformationContext.Inputs
  - NMF.Transformations.Core.TransformationContext.Output
  - NMF.Transformations.Core.TransformationContext.Outputs
  - NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  - NMF.Transformations.Core.TransformationContext.ComputationCompleted
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},{TLeft})
  - NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},NMF.Expressions.IEnumerableExpression{{TLeft}})
  - NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},{TRight})
  - NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},NMF.Expressions.IEnumerableExpression{{TRight}})
- uid: NMF.Synchronizations.SynchronizationContext.#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,NMF.Transformations.ChangePropagationMode)
  commentId: M:NMF.Synchronizations.SynchronizationContext.#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,NMF.Transformations.ChangePropagationMode)
  id: '#ctor(NMF.Synchronizations.Synchronization,NMF.Synchronizations.SynchronizationDirection,NMF.Transformations.ChangePropagationMode)'
  parent: NMF.Synchronizations.SynchronizationContext
  langs:
  - csharp
  - vb
  name: SynchronizationContext(Synchronization, SynchronizationDirection, ChangePropagationMode)
  nameWithType: SynchronizationContext.SynchronizationContext(Synchronization, SynchronizationDirection, ChangePropagationMode)
  fullName: NMF.Synchronizations.SynchronizationContext.SynchronizationContext(NMF.Synchronizations.Synchronization, NMF.Synchronizations.SynchronizationDirection, NMF.Transformations.ChangePropagationMode)
  type: Constructor
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/SynchronizationContext.cs
    startLine: 24
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Creates a new instance
  example: []
  syntax:
    content: public SynchronizationContext(Synchronization synchronization, SynchronizationDirection direction, ChangePropagationMode changePropagation)
    parameters:
    - id: synchronization
      type: NMF.Synchronizations.Synchronization
      description: The synchronization that should be executed
    - id: direction
      type: NMF.Synchronizations.SynchronizationDirection
      description: The direction of the synchronization
    - id: changePropagation
      type: NMF.Transformations.ChangePropagationMode
      description: The change propagation mode of the synchronization
    content.vb: Public Sub New(synchronization As Synchronization, direction As SynchronizationDirection, changePropagation As ChangePropagationMode)
  overload: NMF.Synchronizations.SynchronizationContext.#ctor*
  nameWithType.vb: SynchronizationContext.New(Synchronization, SynchronizationDirection, ChangePropagationMode)
  fullName.vb: NMF.Synchronizations.SynchronizationContext.New(NMF.Synchronizations.Synchronization, NMF.Synchronizations.SynchronizationDirection, NMF.Transformations.ChangePropagationMode)
  name.vb: New(Synchronization, SynchronizationDirection, ChangePropagationMode)
- uid: NMF.Synchronizations.SynchronizationContext.Direction
  commentId: P:NMF.Synchronizations.SynchronizationContext.Direction
  id: Direction
  parent: NMF.Synchronizations.SynchronizationContext
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: SynchronizationContext.Direction
  fullName: NMF.Synchronizations.SynchronizationContext.Direction
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Direction
    path: src/Synchronizations/Synchronizations/SynchronizationContext.cs
    startLine: 33
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the direction of the synchronization process
  example: []
  syntax:
    content: public SynchronizationDirection Direction { get; set; }
    parameters: []
    return:
      type: NMF.Synchronizations.SynchronizationDirection
    content.vb: Public Property Direction As SynchronizationDirection
  overload: NMF.Synchronizations.SynchronizationContext.Direction*
  implements:
  - NMF.Synchronizations.ISynchronizationContext.Direction
- uid: NMF.Synchronizations.SynchronizationContext.ChangePropagation
  commentId: P:NMF.Synchronizations.SynchronizationContext.ChangePropagation
  id: ChangePropagation
  parent: NMF.Synchronizations.SynchronizationContext
  langs:
  - csharp
  - vb
  name: ChangePropagation
  nameWithType: SynchronizationContext.ChangePropagation
  fullName: NMF.Synchronizations.SynchronizationContext.ChangePropagation
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: ChangePropagation
    path: src/Synchronizations/Synchronizations/SynchronizationContext.cs
    startLine: 39
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the change propagation mode of the model synchronization
  example: []
  syntax:
    content: public ChangePropagationMode ChangePropagation { get; }
    parameters: []
    return:
      type: NMF.Transformations.ChangePropagationMode
    content.vb: Public ReadOnly Property ChangePropagation As ChangePropagationMode
  overload: NMF.Synchronizations.SynchronizationContext.ChangePropagation*
  implements:
  - NMF.Synchronizations.ISynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.SynchronizationContext.Inconsistencies
  commentId: P:NMF.Synchronizations.SynchronizationContext.Inconsistencies
  id: Inconsistencies
  parent: NMF.Synchronizations.SynchronizationContext
  langs:
  - csharp
  - vb
  name: Inconsistencies
  nameWithType: SynchronizationContext.Inconsistencies
  fullName: NMF.Synchronizations.SynchronizationContext.Inconsistencies
  type: Property
  source:
    remote:
      path: Synchronizations/Synchronizations/SynchronizationContext.cs
      branch: master
      repo: https://github.com/NMFCode/NMF.git
    id: Inconsistencies
    path: src/Synchronizations/Synchronizations/SynchronizationContext.cs
    startLine: 45
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets a collection of inconsistencies found during the synchronization
  remarks: This property is only used by the synchronization engine if the direction is set to CheckOnly
  example: []
  syntax:
    content: public ICollectionExpression<IInconsistency> Inconsistencies { get; }
    parameters: []
    return:
      type: NMF.Expressions.ICollectionExpression{NMF.Synchronizations.Inconsistencies.IInconsistency}
    content.vb: Public ReadOnly Property Inconsistencies As ICollectionExpression(Of IInconsistency)
  overload: NMF.Synchronizations.SynchronizationContext.Inconsistencies*
  implements:
  - NMF.Synchronizations.ISynchronizationContext.Inconsistencies
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.TransformationContext
  commentId: T:NMF.Transformations.Core.TransformationContext
  parent: NMF.Transformations.Core
  name: TransformationContext
  nameWithType: TransformationContext
  fullName: NMF.Transformations.Core.TransformationContext
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.ISynchronizationContext.html
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Transformations.Core.ITransformationEngineContext
  commentId: T:NMF.Transformations.Core.ITransformationEngineContext
  parent: NMF.Transformations.Core
  name: ITransformationEngineContext
  nameWithType: ITransformationEngineContext
  fullName: NMF.Transformations.Core.ITransformationEngineContext
- uid: NMF.Transformations.Core.ITransformationContext
  commentId: T:NMF.Transformations.Core.ITransformationContext
  parent: NMF.Transformations.Core
  name: ITransformationContext
  nameWithType: ITransformationContext
  fullName: NMF.Transformations.Core.ITransformationContext
- uid: NMF.Transformations.Core.TransformationContext.Transformation
  commentId: P:NMF.Transformations.Core.TransformationContext.Transformation
  parent: NMF.Transformations.Core.TransformationContext
  name: Transformation
  nameWithType: TransformationContext.Transformation
  fullName: NMF.Transformations.Core.TransformationContext.Transformation
- uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  nameWithType: TransformationContext.CallTransformation(GeneralTransformationRule, object[], IEnumerable)
  fullName: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, object[], System.Collections.IEnumerable)
  nameWithType.vb: TransformationContext.CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule, Object(), System.Collections.IEnumerable)
  name.vb: CallTransformation(GeneralTransformationRule, Object(), IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CallTransformation(NMF.Transformations.Core.GeneralTransformationRule,System.Object[],System.Collections.IEnumerable)
    name: CallTransformation
  - name: (
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: CreateComputationContext(object[], GeneralTransformationRule)
  nameWithType: TransformationContext.CreateComputationContext(object[], GeneralTransformationRule)
  fullName: NMF.Transformations.Core.TransformationContext.CreateComputationContext(object[], NMF.Transformations.Core.GeneralTransformationRule)
  nameWithType.vb: TransformationContext.CreateComputationContext(Object(), GeneralTransformationRule)
  fullName.vb: NMF.Transformations.Core.TransformationContext.CreateComputationContext(Object(), NMF.Transformations.Core.GeneralTransformationRule)
  name.vb: CreateComputationContext(Object(), GeneralTransformationRule)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
    name: CreateComputationContext
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CreateComputationContext(System.Object[],NMF.Transformations.Core.GeneralTransformationRule)
    name: CreateComputationContext
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.GeneralTransformationRule
    name: GeneralTransformationRule
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.TransformationContext
  name: AddTraceEntry(Computation)
  nameWithType: TransformationContext.AddTraceEntry(Computation)
  fullName: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
    name: AddTraceEntry
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.AddTraceEntry(NMF.Transformations.Core.Computation)
    name: AddTraceEntry
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
  parent: NMF.Transformations.Core.TransformationContext
  name: ExecutePendingComputations()
  nameWithType: TransformationContext.ExecutePendingComputations()
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
    name: ExecutePendingComputations
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePendingComputations
    name: ExecutePendingComputations
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: ExecuteLevel(IList<Computation>)
  nameWithType: TransformationContext.ExecuteLevel(IList<Computation>)
  fullName: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList<NMF.Transformations.Core.Computation>)
  nameWithType.vb: TransformationContext.ExecuteLevel(IList(Of Computation))
  fullName.vb: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList(Of NMF.Transformations.Core.Computation))
  name.vb: ExecuteLevel(IList(Of Computation))
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
    name: ExecuteLevel
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecuteLevel(System.Collections.Generic.IList{NMF.Transformations.Core.Computation})
    name: ExecuteLevel
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  commentId: M:NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
  parent: NMF.Transformations.Core.TransformationContext
  name: CreateDelayedOutputs()
  nameWithType: TransformationContext.CreateDelayedOutputs()
  fullName: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
    name: CreateDelayedOutputs
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CreateDelayedOutputs
    name: CreateDelayedOutputs
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetRules(Type[], Type)
  nameWithType: TransformationContext.GetRules(Type[], Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[], System.Type)
  nameWithType.vb: TransformationContext.GetRules(Type(), Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRules(System.Type(), System.Type)
  name.vb: GetRules(Type(), Type)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
    name: GetRules
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.GetRules(System.Type[],System.Type)
    name: GetRules
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  commentId: M:NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
  parent: NMF.Transformations.Core.TransformationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: GetRule(Type[], Type)
  nameWithType: TransformationContext.GetRule(Type[], Type)
  fullName: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[], System.Type)
  nameWithType.vb: TransformationContext.GetRule(Type(), Type)
  fullName.vb: NMF.Transformations.Core.TransformationContext.GetRule(System.Type(), System.Type)
  name.vb: GetRule(Type(), Type)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
    name: GetRule
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.GetRule(System.Type[],System.Type)
    name: GetRule
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.Bag
  commentId: P:NMF.Transformations.Core.TransformationContext.Bag
  parent: NMF.Transformations.Core.TransformationContext
  name: Bag
  nameWithType: TransformationContext.Bag
  fullName: NMF.Transformations.Core.TransformationContext.Bag
- uid: NMF.Transformations.Core.TransformationContext.Data
  commentId: P:NMF.Transformations.Core.TransformationContext.Data
  parent: NMF.Transformations.Core.TransformationContext
  name: Data
  nameWithType: TransformationContext.Data
  fullName: NMF.Transformations.Core.TransformationContext.Data
- uid: NMF.Transformations.Core.TransformationContext.ExecutePending
  commentId: M:NMF.Transformations.Core.TransformationContext.ExecutePending
  parent: NMF.Transformations.Core.TransformationContext
  name: ExecutePending()
  nameWithType: TransformationContext.ExecutePending()
  fullName: NMF.Transformations.Core.TransformationContext.ExecutePending()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePending
    name: ExecutePending
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.ExecutePending
    name: ExecutePending
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  commentId: M:NMF.Transformations.Core.TransformationContext.CallPendingDependencies
  parent: NMF.Transformations.Core.TransformationContext
  name: CallPendingDependencies()
  nameWithType: TransformationContext.CallPendingDependencies()
  fullName: NMF.Transformations.Core.TransformationContext.CallPendingDependencies()
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
    name: CallPendingDependencies
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.CallPendingDependencies
    name: CallPendingDependencies
  - name: (
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.Computations
  commentId: P:NMF.Transformations.Core.TransformationContext.Computations
  parent: NMF.Transformations.Core.TransformationContext
  name: Computations
  nameWithType: TransformationContext.Computations
  fullName: NMF.Transformations.Core.TransformationContext.Computations
- uid: NMF.Transformations.Core.TransformationContext.Trace
  commentId: P:NMF.Transformations.Core.TransformationContext.Trace
  parent: NMF.Transformations.Core.TransformationContext
  name: Trace
  nameWithType: TransformationContext.Trace
  fullName: NMF.Transformations.Core.TransformationContext.Trace
- uid: NMF.Transformations.Core.TransformationContext.Input
  commentId: P:NMF.Transformations.Core.TransformationContext.Input
  parent: NMF.Transformations.Core.TransformationContext
  name: Input
  nameWithType: TransformationContext.Input
  fullName: NMF.Transformations.Core.TransformationContext.Input
- uid: NMF.Transformations.Core.TransformationContext.Inputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Inputs
  parent: NMF.Transformations.Core.TransformationContext
  name: Inputs
  nameWithType: TransformationContext.Inputs
  fullName: NMF.Transformations.Core.TransformationContext.Inputs
- uid: NMF.Transformations.Core.TransformationContext.Output
  commentId: P:NMF.Transformations.Core.TransformationContext.Output
  parent: NMF.Transformations.Core.TransformationContext
  name: Output
  nameWithType: TransformationContext.Output
  fullName: NMF.Transformations.Core.TransformationContext.Output
- uid: NMF.Transformations.Core.TransformationContext.Outputs
  commentId: P:NMF.Transformations.Core.TransformationContext.Outputs
  parent: NMF.Transformations.Core.TransformationContext
  name: Outputs
  nameWithType: TransformationContext.Outputs
  fullName: NMF.Transformations.Core.TransformationContext.Outputs
- uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  commentId: M:NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  parent: NMF.Transformations.Core.TransformationContext
  name: OnComputationCompleted(ComputationEventArgs)
  nameWithType: TransformationContext.OnComputationCompleted(ComputationEventArgs)
  fullName: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
    name: OnComputationCompleted
  - name: (
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.TransformationContext.OnComputationCompleted(NMF.Transformations.Core.ComputationEventArgs)
    name: OnComputationCompleted
  - name: (
  - uid: NMF.Transformations.Core.ComputationEventArgs
    name: ComputationEventArgs
  - name: )
- uid: NMF.Transformations.Core.TransformationContext.ComputationCompleted
  commentId: E:NMF.Transformations.Core.TransformationContext.ComputationCompleted
  parent: NMF.Transformations.Core.TransformationContext
  name: ComputationCompleted
  nameWithType: TransformationContext.ComputationCompleted
  fullName: NMF.Transformations.Core.TransformationContext.ComputationCompleted
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},{TLeft})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  definition: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  name: MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  nameWithType: SynchronizationContextExtensions.MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TLeft)
  nameWithType.vb: SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TLeft)
  name.vb: MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
    name: MapLeft
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - name: TLeft
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
    name: MapLeft
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - name: TLeft
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},NMF.Expressions.IEnumerableExpression{{TLeft}})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  definition: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  name: MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  nameWithType: SynchronizationContextExtensions.MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TLeft>)
  nameWithType.vb: SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TLeft))
  name.vb: MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
    name: MapLefts
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TLeft
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
    name: MapLefts
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: )
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},{TRight})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  definition: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  name: MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  nameWithType: SynchronizationContextExtensions.MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRight<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TRight)
  nameWithType.vb: SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TRight)
  name.vb: MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
    name: MapRight
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
    name: MapRight
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Transformations.Core.ITransformationContext.NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Synchronizations.SynchronizationRule{{TLeft},{TRight}},NMF.Expressions.IEnumerableExpression{{TRight}})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  parent: NMF.Synchronizations.SynchronizationContextExtensions
  definition: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  name: MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  nameWithType: SynchronizationContextExtensions.MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRights<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TRight>)
  nameWithType.vb: SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TRight))
  name.vb: MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
    name: MapRights
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
    name: MapRights
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  name: MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  nameWithType: SynchronizationContextExtensions.MapLeft<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TLeft)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TLeft)
  nameWithType.vb: SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TLeft)
  name.vb: MapLeft(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TLeft)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
    name: MapLeft
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - name: TLeft
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLeft``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``0)
    name: MapLeft
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLeft__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____0_
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - name: TLeft
  - name: )
- uid: NMF.Synchronizations.SynchronizationContextExtensions
  commentId: T:NMF.Synchronizations.SynchronizationContextExtensions
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.SynchronizationContextExtensions.html
  name: SynchronizationContextExtensions
  nameWithType: SynchronizationContextExtensions
  fullName: NMF.Synchronizations.SynchronizationContextExtensions
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  name: MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  nameWithType: SynchronizationContextExtensions.MapLefts<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TLeft>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TLeft>)
  nameWithType.vb: SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TLeft))
  name.vb: MapLefts(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TLeft))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
    name: MapLefts
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TLeft
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapLefts``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``0})
    name: MapLefts
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapLefts__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___0__
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: )
  - name: )
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  name: MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  nameWithType: SynchronizationContextExtensions.MapRight<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, TRight)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRight<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, TRight)
  nameWithType.vb: SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRight(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), TRight)
  name.vb: MapRight(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), TRight)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
    name: MapRight
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRight``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},``1)
    name: MapRight
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRight__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1____1_
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - name: TRight
  - name: )
- uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  commentId: M:NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
  href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  name: MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  nameWithType: SynchronizationContextExtensions.MapRights<TLeft, TRight>(ITransformationContext, SynchronizationRule<TLeft, TRight>, IEnumerableExpression<TRight>)
  fullName: NMF.Synchronizations.SynchronizationContextExtensions.MapRights<TLeft, TRight>(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule<TLeft, TRight>, NMF.Expressions.IEnumerableExpression<TRight>)
  nameWithType.vb: SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
  fullName.vb: NMF.Synchronizations.SynchronizationContextExtensions.MapRights(Of TLeft, TRight)(NMF.Transformations.Core.ITransformationContext, NMF.Synchronizations.SynchronizationRule(Of TLeft, TRight), NMF.Expressions.IEnumerableExpression(Of TRight))
  name.vb: MapRights(Of TLeft, TRight)(ITransformationContext, SynchronizationRule(Of TLeft, TRight), IEnumerableExpression(Of TRight))
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
    name: MapRights
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: <
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: '>'
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: <
  - name: TRight
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationContextExtensions.MapRights``2(NMF.Transformations.Core.ITransformationContext,NMF.Synchronizations.SynchronizationRule{``0,``1},NMF.Expressions.IEnumerableExpression{``1})
    name: MapRights
    href: NMF.Synchronizations.SynchronizationContextExtensions.html#NMF_Synchronizations_SynchronizationContextExtensions_MapRights__2_NMF_Transformations_Core_ITransformationContext_NMF_Synchronizations_SynchronizationRule___0___1__NMF_Expressions_IEnumerableExpression___1__
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: (
  - uid: NMF.Transformations.Core.ITransformationContext
    name: ITransformationContext
  - name: ','
  - name: " "
  - uid: NMF.Synchronizations.SynchronizationRule`2
    name: SynchronizationRule
    href: NMF.Synchronizations.SynchronizationRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLeft
  - name: ','
  - name: " "
  - name: TRight
  - name: )
  - name: ','
  - name: " "
  - uid: NMF.Expressions.IEnumerableExpression`1
    name: IEnumerableExpression
  - name: (
  - name: Of
  - name: " "
  - name: TRight
  - name: )
  - name: )
- uid: NMF.Synchronizations.SynchronizationContext.#ctor*
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.#ctor
  href: NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext__ctor_NMF_Synchronizations_Synchronization_NMF_Synchronizations_SynchronizationDirection_NMF_Transformations_ChangePropagationMode_
  name: SynchronizationContext
  nameWithType: SynchronizationContext.SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationContext.SynchronizationContext
  nameWithType.vb: SynchronizationContext.New
  fullName.vb: NMF.Synchronizations.SynchronizationContext.New
  name.vb: New
- uid: NMF.Synchronizations.Synchronization
  commentId: T:NMF.Synchronizations.Synchronization
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.Synchronization.html
  name: Synchronization
  nameWithType: Synchronization
  fullName: NMF.Synchronizations.Synchronization
- uid: NMF.Synchronizations.SynchronizationDirection
  commentId: T:NMF.Synchronizations.SynchronizationDirection
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.SynchronizationDirection.html
  name: SynchronizationDirection
  nameWithType: SynchronizationDirection
  fullName: NMF.Synchronizations.SynchronizationDirection
- uid: NMF.Transformations.ChangePropagationMode
  commentId: T:NMF.Transformations.ChangePropagationMode
  parent: NMF.Transformations
  name: ChangePropagationMode
  nameWithType: ChangePropagationMode
  fullName: NMF.Transformations.ChangePropagationMode
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
- uid: NMF.Synchronizations.SynchronizationContext.Direction*
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.Direction
  href: NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_Direction
  name: Direction
  nameWithType: SynchronizationContext.Direction
  fullName: NMF.Synchronizations.SynchronizationContext.Direction
- uid: NMF.Synchronizations.ISynchronizationContext.Direction
  commentId: P:NMF.Synchronizations.ISynchronizationContext.Direction
  parent: NMF.Synchronizations.ISynchronizationContext
  href: NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_Direction
  name: Direction
  nameWithType: ISynchronizationContext.Direction
  fullName: NMF.Synchronizations.ISynchronizationContext.Direction
- uid: NMF.Synchronizations.SynchronizationContext.ChangePropagation*
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.ChangePropagation
  href: NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_ChangePropagation
  name: ChangePropagation
  nameWithType: SynchronizationContext.ChangePropagation
  fullName: NMF.Synchronizations.SynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  commentId: P:NMF.Synchronizations.ISynchronizationContext.ChangePropagation
  parent: NMF.Synchronizations.ISynchronizationContext
  href: NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_ChangePropagation
  name: ChangePropagation
  nameWithType: ISynchronizationContext.ChangePropagation
  fullName: NMF.Synchronizations.ISynchronizationContext.ChangePropagation
- uid: NMF.Synchronizations.SynchronizationContext.Inconsistencies*
  commentId: Overload:NMF.Synchronizations.SynchronizationContext.Inconsistencies
  href: NMF.Synchronizations.SynchronizationContext.html#NMF_Synchronizations_SynchronizationContext_Inconsistencies
  name: Inconsistencies
  nameWithType: SynchronizationContext.Inconsistencies
  fullName: NMF.Synchronizations.SynchronizationContext.Inconsistencies
- uid: NMF.Synchronizations.ISynchronizationContext.Inconsistencies
  commentId: P:NMF.Synchronizations.ISynchronizationContext.Inconsistencies
  parent: NMF.Synchronizations.ISynchronizationContext
  href: NMF.Synchronizations.ISynchronizationContext.html#NMF_Synchronizations_ISynchronizationContext_Inconsistencies
  name: Inconsistencies
  nameWithType: ISynchronizationContext.Inconsistencies
  fullName: NMF.Synchronizations.ISynchronizationContext.Inconsistencies
- uid: NMF.Expressions.ICollectionExpression{NMF.Synchronizations.Inconsistencies.IInconsistency}
  commentId: T:NMF.Expressions.ICollectionExpression{NMF.Synchronizations.Inconsistencies.IInconsistency}
  parent: NMF.Expressions
  definition: NMF.Expressions.ICollectionExpression`1
  href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  name: ICollectionExpression<IInconsistency>
  nameWithType: ICollectionExpression<IInconsistency>
  fullName: NMF.Expressions.ICollectionExpression<NMF.Synchronizations.Inconsistencies.IInconsistency>
  nameWithType.vb: ICollectionExpression(Of IInconsistency)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of NMF.Synchronizations.Inconsistencies.IInconsistency)
  name.vb: ICollectionExpression(Of IInconsistency)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Synchronizations.Inconsistencies.IInconsistency
    name: IInconsistency
    href: NMF.Synchronizations.Inconsistencies.IInconsistency.html
  - name: )
- uid: NMF.Expressions.ICollectionExpression`1
  commentId: T:NMF.Expressions.ICollectionExpression`1
  name: ICollectionExpression<T>
  nameWithType: ICollectionExpression<T>
  fullName: NMF.Expressions.ICollectionExpression<T>
  nameWithType.vb: ICollectionExpression(Of T)
  fullName.vb: NMF.Expressions.ICollectionExpression(Of T)
  name.vb: ICollectionExpression(Of T)
  spec.csharp:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.ICollectionExpression`1
    name: ICollectionExpression
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
