### YamlMime:ManagedReference
items:
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  id: SynchronizationComputation`2
  parent: NMF.Synchronizations
  children:
  - NMF.Synchronizations.SynchronizationComputation`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.TransformationRuleBase{`1,`0},NMF.Transformations.Core.IComputationContext,`0)
  - NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput(`1)
  - NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors
  - NMF.Synchronizations.SynchronizationComputation`2.Count
  - NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  - NMF.Synchronizations.SynchronizationComputation`2.Dispose
  - NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable(System.Action{`0,`1})
  - NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  - NMF.Synchronizations.SynchronizationComputation`2.GetInput(System.Int32)
  - NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor(System.Int32)
  - NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors
  - NMF.Synchronizations.SynchronizationComputation`2.Input
  - NMF.Synchronizations.SynchronizationComputation`2.IsAttached
  - NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  - NMF.Synchronizations.SynchronizationComputation`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  - NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  - NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
  - NMF.Synchronizations.SynchronizationComputation`2.Opposite
  - NMF.Synchronizations.SynchronizationComputation`2.OutputChanged
  - NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  - NMF.Synchronizations.SynchronizationComputation`2.Set(NMF.Expressions.INotifiable)
  - NMF.Synchronizations.SynchronizationComputation`2.SetDummy
  - NMF.Synchronizations.SynchronizationComputation`2.Successors
  - NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  - NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  - NMF.Synchronizations.SynchronizationComputation`2.Unset(NMF.Expressions.INotifiable,System.Boolean)
  - NMF.Synchronizations.SynchronizationComputation`2.UnsetAll
  langs:
  - csharp
  - vb
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  type: Class
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SynchronizationComputation
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 17
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Denotes a computation in a synchronization
  example: []
  syntax:
    content: 'public abstract class SynchronizationComputation<TIn, TOut> : Computation, IPersistor, ITraceEntry, INotifyValue<TOut>, INotifiable, IDisposable, ISuccessorList'
    typeParameters:
    - id: TIn
      description: ''
    - id: TOut
      description: ''
    content.vb: Public MustInherit Class SynchronizationComputation(Of TIn, TOut) Inherits Computation Implements IPersistor, ITraceEntry, INotifyValue(Of TOut), INotifiable, IDisposable, ISuccessorList
  inheritance:
  - System.Object
  - NMF.Transformations.Core.Computation
  implements:
  - NMF.Transformations.Core.IPersistor
  - NMF.Transformations.Core.ITraceEntry
  - NMF.Expressions.INotifyValue{{TOut}}
  - NMF.Expressions.INotifiable
  - System.IDisposable
  - NMF.Expressions.ISuccessorList
  inheritedMembers:
  - NMF.Transformations.Core.Computation.TransformationRule
  - NMF.Transformations.Core.Computation.TransformationContext
  - NMF.Transformations.Core.Computation.Context
  - NMF.Transformations.Core.Computation.InputArguments
  - NMF.Transformations.Core.Computation.CreateInputArray
  - NMF.Transformations.Core.Computation.Output
  - NMF.Transformations.Core.Computation.ThrowDelayedException
  - NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  - NMF.Transformations.Core.Computation.OutputInitialized
  - NMF.Transformations.Core.Computation.Computed
  - NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  - NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  - NMF.Transformations.Core.Computation.IsDelayed
  - NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  - NMF.Transformations.Core.Computation.Transform
  - NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  - NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  - NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputChanged
  commentId: E:NMF.Synchronizations.SynchronizationComputation`2.OutputChanged
  id: OutputChanged
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: OutputChanged
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputChanged
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputChanged
  type: Event
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OutputChanged
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 24
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets raised when the output of this synchronization changed
  example: []
  syntax:
    content: public event EventHandler<ValueChangedEventArgs> OutputChanged
    return:
      type: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
    content.vb: Public Event OutputChanged As EventHandler(Of ValueChangedEventArgs)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputChanged
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputChanged
- uid: NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  id: OmitCandidateSearch
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: OmitCandidateSearch
  nameWithType: SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OmitCandidateSearch
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 29
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Indicates whether candidate search can be skipped because the context was newly established
  example: []
  syntax:
    content: public bool OmitCandidateSearch { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OmitCandidateSearch As Boolean
  overload: NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
- uid: NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
  id: OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: OnOutputChanged(ValueChangedEventArgs)
  nameWithType: SynchronizationComputation<TIn, TOut>.OnOutputChanged(ValueChangedEventArgs)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OnOutputChanged
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 39
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Fires the event that the output has changed
  example: []
  syntax:
    content: protected virtual void OnOutputChanged(ValueChangedEventArgs e)
    parameters:
    - id: e
      type: NMF.Expressions.ValueChangedEventArgs
      description: ''
    content.vb: Protected Overridable Sub OnOutputChanged(e As ValueChangedEventArgs)
  overload: NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OnOutputChanged(ValueChangedEventArgs)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OnOutputChanged(NMF.Expressions.ValueChangedEventArgs)
- uid: NMF.Synchronizations.SynchronizationComputation`2.Input
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Input
  id: Input
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: SynchronizationComputation<TIn, TOut>.Input
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Input
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Input
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 47
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the input of this correspondence
  example: []
  syntax:
    content: public TIn Input { get; set; }
    parameters: []
    return:
      type: '{TIn}'
    content.vb: Public Property Input As TIn
  overload: NMF.Synchronizations.SynchronizationComputation`2.Input*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Input
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Input
- uid: NMF.Synchronizations.SynchronizationComputation`2.Opposite
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Opposite
  id: Opposite
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: SynchronizationComputation<TIn, TOut>.Opposite
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Opposite
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Opposite
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 81
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the opposite correspondence
  example: []
  syntax:
    content: public SynchronizationComputation<TOut, TIn> Opposite { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.SynchronizationComputation{{TOut},{TIn}}
    content.vb: Public Property Opposite As SynchronizationComputation(Of TOut, TIn)
  overload: NMF.Synchronizations.SynchronizationComputation`2.Opposite*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Opposite
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Opposite
- uid: NMF.Synchronizations.SynchronizationComputation`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.TransformationRuleBase{`1,`0},NMF.Transformations.Core.IComputationContext,`0)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.TransformationRuleBase{`1,`0},NMF.Transformations.Core.IComputationContext,`0)
  id: '#ctor(NMF.Transformations.TransformationRuleBase{`0,`1},NMF.Transformations.TransformationRuleBase{`1,`0},NMF.Transformations.Core.IComputationContext,`0)'
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: SynchronizationComputation(TransformationRuleBase<TIn, TOut>, TransformationRuleBase<TOut, TIn>, IComputationContext, TIn)
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationComputation(TransformationRuleBase<TIn, TOut>, TransformationRuleBase<TOut, TIn>, IComputationContext, TIn)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationComputation(NMF.Transformations.TransformationRuleBase<TIn, TOut>, NMF.Transformations.TransformationRuleBase<TOut, TIn>, NMF.Transformations.Core.IComputationContext, TIn)
  type: Constructor
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: .ctor
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 90
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Creates a new instance
  example: []
  syntax:
    content: public SynchronizationComputation(TransformationRuleBase<TIn, TOut> rule, TransformationRuleBase<TOut, TIn> reverseRule, IComputationContext context, TIn input)
    parameters:
    - id: rule
      type: NMF.Transformations.TransformationRuleBase{{TIn},{TOut}}
      description: The transformation rule for which this correspondence was created
    - id: reverseRule
      type: NMF.Transformations.TransformationRuleBase{{TOut},{TIn}}
      description: The reverse transformation rule
    - id: context
      type: NMF.Transformations.Core.IComputationContext
      description: The context in which the correspondence is created
    - id: input
      type: '{TIn}'
      description: The input element
    content.vb: Public Sub New(rule As TransformationRuleBase(Of TIn, TOut), reverseRule As TransformationRuleBase(Of TOut, TIn), context As IComputationContext, input As TIn)
  overload: NMF.Synchronizations.SynchronizationComputation`2.#ctor*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).New(TransformationRuleBase(Of TIn, TOut), TransformationRuleBase(Of TOut, TIn), IComputationContext, TIn)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).New(NMF.Transformations.TransformationRuleBase(Of TIn, TOut), NMF.Transformations.TransformationRuleBase(Of TOut, TIn), NMF.Transformations.Core.IComputationContext, TIn)
  name.vb: New(TransformationRuleBase(Of TIn, TOut), TransformationRuleBase(Of TOut, TIn), IComputationContext, TIn)
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetInput(System.Int32)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.GetInput(System.Int32)
  id: GetInput(System.Int32)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: GetInput(int)
  nameWithType: SynchronizationComputation<TIn, TOut>.GetInput(int)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetInput(int)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetInput
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 117
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the input argument for this computation with the given index
  example: []
  syntax:
    content: public override object GetInput(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the input parameter
    return:
      type: System.Object
      description: The input parameter at the ith position
    content.vb: Public Overrides Function GetInput(index As Integer) As Object
  overridden: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  overload: NMF.Synchronizations.SynchronizationComputation`2.GetInput*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetInput(Integer)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetInput(Integer)
  name.vb: GetInput(Integer)
- uid: NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable(System.Action{`0,`1})
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable(System.Action{`0,`1})
  id: DoWhenOutputIsAvailable(System.Action{`0,`1})
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: DoWhenOutputIsAvailable(Action<TIn, TOut>)
  nameWithType: SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable(Action<TIn, TOut>)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable(System.Action<TIn, TOut>)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: DoWhenOutputIsAvailable
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 133
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Performs the given action when the corresponding element of this computation was found
  example: []
  syntax:
    content: public void DoWhenOutputIsAvailable(Action<TIn, TOut> toPerform)
    parameters:
    - id: toPerform
      type: System.Action{{TIn},{TOut}}
      description: The action to perform
    content.vb: Public Sub DoWhenOutputIsAvailable(toPerform As Action(Of TIn, TOut))
  overload: NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable(Action(Of TIn, TOut))
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable(System.Action(Of TIn, TOut))
  name.vb: DoWhenOutputIsAvailable(Action(Of TIn, TOut))
- uid: NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput(`1)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput(`1)
  id: AcceptNewOutput(`1)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: AcceptNewOutput(TOut)
  nameWithType: SynchronizationComputation<TIn, TOut>.AcceptNewOutput(TOut)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AcceptNewOutput(TOut)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: AcceptNewOutput
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 147
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void AcceptNewOutput(TOut value)
    parameters:
    - id: value
      type: '{TOut}'
    content.vb: Public Sub AcceptNewOutput(value As TOut)
  overload: NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AcceptNewOutput(TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AcceptNewOutput(TOut)
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  id: OutputCore
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: OutputCore
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputCore
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputCore
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: OutputCore
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 153
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets or sets the output in a derived class
  example: []
  syntax:
    content: protected override sealed object OutputCore { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected NotOverridable Overrides Property OutputCore As Object
  overridden: NMF.Transformations.Core.Computation.OutputCore
  overload: NMF.Synchronizations.SynchronizationComputation`2.OutputCore*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputCore
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  id: SynchronizationContext
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SynchronizationContext
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 168
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: The context in which the correspondence has been established
  example: []
  syntax:
    content: public ISynchronizationContext SynchronizationContext { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.ISynchronizationContext
    content.vb: Public ReadOnly Property SynchronizationContext As ISynchronizationContext
  overload: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationContext
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationContext
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  id: IsOriginalComputation
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: IsOriginalComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsOriginalComputation
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 179
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets whether this correspondence was the original one
  example: []
  syntax:
    content: public virtual bool IsOriginalComputation { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsOriginalComputation As Boolean
  overload: NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  id: SynchronizationRule
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: SynchronizationRule
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationRule
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationRule
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SynchronizationRule
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 190
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the synchronization rule of this correspondence
  example: []
  syntax:
    content: public SynchronizationRuleBase SynchronizationRule { get; }
    parameters: []
    return:
      type: NMF.Synchronizations.SynchronizationRuleBase
    content.vb: Public ReadOnly Property SynchronizationRule As SynchronizationRuleBase
  overload: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationRule
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationRule
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  id: Dependencies
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: SynchronizationComputation<TIn, TOut>.Dependencies
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dependencies
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Dependencies
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 209
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets the dependencies for this correspondence
  example: []
  syntax:
    content: public virtual ICollection<IDisposable> Dependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.IDisposable}
    content.vb: Public Overridable ReadOnly Property Dependencies As ICollection(Of IDisposable)
  overload: NMF.Synchronizations.SynchronizationComputation`2.Dependencies*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dependencies
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dependencies
- uid: NMF.Synchronizations.SynchronizationComputation`2.Successors
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Successors
  id: Successors
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Successors
  nameWithType: SynchronizationComputation<TIn, TOut>.Successors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Successors
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Successors
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 219
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: The nodes that will get notified by this node.
  example: []
  syntax:
    content: public ISuccessorList Successors { get; }
    parameters: []
    return:
      type: NMF.Expressions.ISuccessorList
    content.vb: Public ReadOnly Property Successors As ISuccessorList
  overload: NMF.Synchronizations.SynchronizationComputation`2.Successors*
  implements:
  - NMF.Expressions.INotifiable.Successors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Successors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Successors
- uid: NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  id: ExecutionMetaData
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: ExecutionMetaData
  nameWithType: SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: ExecutionMetaData
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 224
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Used by the execution engine during incremental execution.
  example: []
  syntax:
    content: public ExecutionMetaData ExecutionMetaData { get; }
    parameters: []
    return:
      type: NMF.Expressions.ExecutionMetaData
    content.vb: Public ReadOnly Property ExecutionMetaData As ExecutionMetaData
  overload: NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData*
  implements:
  - NMF.Expressions.INotifiable.ExecutionMetaData
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Synchronizations.SynchronizationComputation`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  id: Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Notify(IList<INotificationResult>)
  nameWithType: SynchronizationComputation<TIn, TOut>.Notify(IList<INotificationResult>)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Notify
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 227
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  summary: Gets called when one of the dependencies signals a notification.
  example: []
  syntax:
    content: public INotificationResult Notify(IList<INotificationResult> sources)
    parameters:
    - id: sources
      type: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
      description: Contains information about what triggered this notification.
    return:
      type: NMF.Expressions.INotificationResult
      description: An object describing the changes that happened in this notification.
    content.vb: Public Function Notify(sources As IList(Of INotificationResult)) As INotificationResult
  overload: NMF.Synchronizations.SynchronizationComputation`2.Notify*
  implements:
  - NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dispose
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Dispose
  id: Dispose
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SynchronizationComputation<TIn, TOut>.Dispose()
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dispose()
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Dispose
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 233
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: NMF.Synchronizations.SynchronizationComputation`2.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dispose()
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dispose()
- uid: NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors
  id: HasSuccessors
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: HasSuccessors
  nameWithType: SynchronizationComputation<TIn, TOut>.HasSuccessors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.HasSuccessors
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: HasSuccessors
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 242
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public bool HasSuccessors { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasSuccessors As Boolean
  overload: NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors*
  implements:
  - NMF.Expressions.ISuccessorList.HasSuccessors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).HasSuccessors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).HasSuccessors
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsAttached
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.IsAttached
  id: IsAttached
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: IsAttached
  nameWithType: SynchronizationComputation<TIn, TOut>.IsAttached
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsAttached
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: IsAttached
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 245
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public bool IsAttached { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttached As Boolean
  overload: NMF.Synchronizations.SynchronizationComputation`2.IsAttached*
  implements:
  - NMF.Expressions.ISuccessorList.IsAttached
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsAttached
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsAttached
- uid: NMF.Synchronizations.SynchronizationComputation`2.Count
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.Count
  id: Count
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SynchronizationComputation<TIn, TOut>.Count
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Count
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Count
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 248
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: NMF.Synchronizations.SynchronizationComputation`2.Count*
  implements:
  - NMF.Expressions.ISuccessorList.Count
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Count
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Count
- uid: NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors
  commentId: P:NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors
  id: AllSuccessors
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: AllSuccessors
  nameWithType: SynchronizationComputation<TIn, TOut>.AllSuccessors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AllSuccessors
  type: Property
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: AllSuccessors
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 250
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  syntax:
    content: public IEnumerable<INotifiable> AllSuccessors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
    content.vb: Public ReadOnly Property AllSuccessors As IEnumerable(Of INotifiable)
  overload: NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors*
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AllSuccessors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AllSuccessors
- uid: NMF.Synchronizations.SynchronizationComputation`2.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Set(NMF.Expressions.INotifiable)
  id: Set(NMF.Expressions.INotifiable)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Set(INotifiable)
  nameWithType: SynchronizationComputation<TIn, TOut>.Set(INotifiable)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Set(NMF.Expressions.INotifiable)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Set
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 254
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void Set(INotifiable node)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    content.vb: Public Sub [Set](node As INotifiable)
  overload: NMF.Synchronizations.SynchronizationComputation`2.Set*
  implements:
  - NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Set(INotifiable)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Set(NMF.Expressions.INotifiable)
- uid: NMF.Synchronizations.SynchronizationComputation`2.SetDummy
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.SetDummy
  id: SetDummy
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: SetDummy()
  nameWithType: SynchronizationComputation<TIn, TOut>.SetDummy()
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SetDummy()
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: SetDummy
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 268
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void SetDummy()
    content.vb: Public Sub SetDummy()
  overload: NMF.Synchronizations.SynchronizationComputation`2.SetDummy*
  implements:
  - NMF.Expressions.ISuccessorList.SetDummy
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SetDummy()
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SetDummy()
- uid: NMF.Synchronizations.SynchronizationComputation`2.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.Unset(NMF.Expressions.INotifiable,System.Boolean)
  id: Unset(NMF.Expressions.INotifiable,System.Boolean)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: Unset(INotifiable, bool)
  nameWithType: SynchronizationComputation<TIn, TOut>.Unset(INotifiable, bool)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Unset(NMF.Expressions.INotifiable, bool)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: Unset
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 278
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void Unset(INotifiable node, bool leaveDummy = false)
    parameters:
    - id: node
      type: NMF.Expressions.INotifiable
    - id: leaveDummy
      type: System.Boolean
    content.vb: Public Sub Unset(node As INotifiable, leaveDummy As Boolean = False)
  overload: NMF.Synchronizations.SynchronizationComputation`2.Unset*
  implements:
  - NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Unset(INotifiable, Boolean)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
- uid: NMF.Synchronizations.SynchronizationComputation`2.UnsetAll
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.UnsetAll
  id: UnsetAll
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: UnsetAll()
  nameWithType: SynchronizationComputation<TIn, TOut>.UnsetAll()
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.UnsetAll()
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: UnsetAll
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 291
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public void UnsetAll()
    content.vb: Public Sub UnsetAll()
  overload: NMF.Synchronizations.SynchronizationComputation`2.UnsetAll*
  implements:
  - NMF.Expressions.ISuccessorList.UnsetAll
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).UnsetAll()
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).UnsetAll()
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor(System.Int32)
  commentId: M:NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor(System.Int32)
  id: GetSuccessor(System.Int32)
  parent: NMF.Synchronizations.SynchronizationComputation`2
  langs:
  - csharp
  - vb
  name: GetSuccessor(int)
  nameWithType: SynchronizationComputation<TIn, TOut>.GetSuccessor(int)
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetSuccessor(int)
  type: Method
  source:
    remote:
      path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
      branch: master
      repo: git@github.com:NMFCode/NMFdocs.git
    id: GetSuccessor
    path: src/Synchronizations/Synchronizations/SynchronizationComputation.cs
    startLine: 300
  assemblies:
  - NMF.Synchronizations
  namespace: NMF.Synchronizations
  example: []
  syntax:
    content: public INotifiable GetSuccessor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: NMF.Expressions.INotifiable
    content.vb: Public Function GetSuccessor(index As Integer) As INotifiable
  overload: NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor*
  implements:
  - NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetSuccessor(Integer)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
references:
- uid: NMF.Synchronizations
  commentId: N:NMF.Synchronizations
  href: NMF.html
  name: NMF.Synchronizations
  nameWithType: NMF.Synchronizations
  fullName: NMF.Synchronizations
  spec.csharp:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
  spec.vb:
  - uid: NMF
    name: NMF
    href: NMF.html
  - name: .
  - uid: NMF.Synchronizations
    name: Synchronizations
    href: NMF.Synchronizations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NMF.Transformations.Core.Computation
  commentId: T:NMF.Transformations.Core.Computation
  parent: NMF.Transformations.Core
  name: Computation
  nameWithType: Computation
  fullName: NMF.Transformations.Core.Computation
- uid: NMF.Transformations.Core.IPersistor
  commentId: T:NMF.Transformations.Core.IPersistor
  parent: NMF.Transformations.Core
  name: IPersistor
  nameWithType: IPersistor
  fullName: NMF.Transformations.Core.IPersistor
- uid: NMF.Transformations.Core.ITraceEntry
  commentId: T:NMF.Transformations.Core.ITraceEntry
  parent: NMF.Transformations.Core
  name: ITraceEntry
  nameWithType: ITraceEntry
  fullName: NMF.Transformations.Core.ITraceEntry
- uid: NMF.Expressions.INotifyValue{{TOut}}
  commentId: T:NMF.Expressions.INotifyValue{`1}
  parent: NMF.Expressions
  definition: NMF.Expressions.INotifyValue`1
  name: INotifyValue<TOut>
  nameWithType: INotifyValue<TOut>
  fullName: NMF.Expressions.INotifyValue<TOut>
  nameWithType.vb: INotifyValue(Of TOut)
  fullName.vb: NMF.Expressions.INotifyValue(Of TOut)
  name.vb: INotifyValue(Of TOut)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Expressions.INotifiable
  commentId: T:NMF.Expressions.INotifiable
  parent: NMF.Expressions
  name: INotifiable
  nameWithType: INotifiable
  fullName: NMF.Expressions.INotifiable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: NMF.Expressions.ISuccessorList
  commentId: T:NMF.Expressions.ISuccessorList
  parent: NMF.Expressions
  name: ISuccessorList
  nameWithType: ISuccessorList
  fullName: NMF.Expressions.ISuccessorList
- uid: NMF.Transformations.Core.Computation.TransformationRule
  commentId: P:NMF.Transformations.Core.Computation.TransformationRule
  parent: NMF.Transformations.Core.Computation
  name: TransformationRule
  nameWithType: Computation.TransformationRule
  fullName: NMF.Transformations.Core.Computation.TransformationRule
- uid: NMF.Transformations.Core.Computation.TransformationContext
  commentId: P:NMF.Transformations.Core.Computation.TransformationContext
  parent: NMF.Transformations.Core.Computation
  name: TransformationContext
  nameWithType: Computation.TransformationContext
  fullName: NMF.Transformations.Core.Computation.TransformationContext
- uid: NMF.Transformations.Core.Computation.Context
  commentId: P:NMF.Transformations.Core.Computation.Context
  parent: NMF.Transformations.Core.Computation
  name: Context
  nameWithType: Computation.Context
  fullName: NMF.Transformations.Core.Computation.Context
- uid: NMF.Transformations.Core.Computation.InputArguments
  commentId: P:NMF.Transformations.Core.Computation.InputArguments
  parent: NMF.Transformations.Core.Computation
  name: InputArguments
  nameWithType: Computation.InputArguments
  fullName: NMF.Transformations.Core.Computation.InputArguments
- uid: NMF.Transformations.Core.Computation.CreateInputArray
  commentId: M:NMF.Transformations.Core.Computation.CreateInputArray
  parent: NMF.Transformations.Core.Computation
  name: CreateInputArray()
  nameWithType: Computation.CreateInputArray()
  fullName: NMF.Transformations.Core.Computation.CreateInputArray()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateInputArray
    name: CreateInputArray
  - name: (
  - name: )
- uid: NMF.Transformations.Core.Computation.Output
  commentId: P:NMF.Transformations.Core.Computation.Output
  parent: NMF.Transformations.Core.Computation
  name: Output
  nameWithType: Computation.Output
  fullName: NMF.Transformations.Core.Computation.Output
- uid: NMF.Transformations.Core.Computation.ThrowDelayedException
  commentId: M:NMF.Transformations.Core.Computation.ThrowDelayedException
  parent: NMF.Transformations.Core.Computation
  name: ThrowDelayedException()
  nameWithType: Computation.ThrowDelayedException()
  fullName: NMF.Transformations.Core.Computation.ThrowDelayedException()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.ThrowDelayedException
    name: ThrowDelayedException
  - name: (
  - name: )
- uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  commentId: M:NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: MarkRequire(Computation, bool, ITransformationRuleDependency)
  nameWithType: Computation.MarkRequire(Computation, bool, ITransformationRuleDependency)
  fullName: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation, bool, NMF.Transformations.Core.ITransformationRuleDependency)
  nameWithType.vb: Computation.MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  fullName.vb: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation, Boolean, NMF.Transformations.Core.ITransformationRuleDependency)
  name.vb: MarkRequire(Computation, Boolean, ITransformationRuleDependency)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.MarkRequire(NMF.Transformations.Core.Computation,System.Boolean,NMF.Transformations.Core.ITransformationRuleDependency)
    name: MarkRequire
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: NMF.Transformations.Core.ITransformationRuleDependency
    name: ITransformationRuleDependency
  - name: )
- uid: NMF.Transformations.Core.Computation.OutputInitialized
  commentId: E:NMF.Transformations.Core.Computation.OutputInitialized
  parent: NMF.Transformations.Core.Computation
  name: OutputInitialized
  nameWithType: Computation.OutputInitialized
  fullName: NMF.Transformations.Core.Computation.OutputInitialized
- uid: NMF.Transformations.Core.Computation.Computed
  commentId: E:NMF.Transformations.Core.Computation.Computed
  parent: NMF.Transformations.Core.Computation
  name: Computed
  nameWithType: Computation.Computed
  fullName: NMF.Transformations.Core.Computation.Computed
- uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: DelayOutputAtLeast(byte)
  nameWithType: Computation.DelayOutputAtLeast(byte)
  fullName: NMF.Transformations.Core.Computation.DelayOutputAtLeast(byte)
  nameWithType.vb: Computation.DelayOutputAtLeast(Byte)
  fullName.vb: NMF.Transformations.Core.Computation.DelayOutputAtLeast(Byte)
  name.vb: DelayOutputAtLeast(Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayOutputAtLeast(System.Byte)
    name: DelayOutputAtLeast
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  commentId: M:NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: DelayTransformationAtLeast(byte)
  nameWithType: Computation.DelayTransformationAtLeast(byte)
  fullName: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(byte)
  nameWithType.vb: Computation.DelayTransformationAtLeast(Byte)
  fullName.vb: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(Byte)
  name.vb: DelayTransformationAtLeast(Byte)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.DelayTransformationAtLeast(System.Byte)
    name: DelayTransformationAtLeast
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: OnOutputInitialized(EventArgs)
  nameWithType: Computation.OnOutputInitialized(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnOutputInitialized(System.EventArgs)
    name: OnOutputInitialized
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: NMF.Transformations.Core.Computation.IsDelayed
  commentId: P:NMF.Transformations.Core.Computation.IsDelayed
  parent: NMF.Transformations.Core.Computation
  name: IsDelayed
  nameWithType: Computation.IsDelayed
  fullName: NMF.Transformations.Core.Computation.IsDelayed
- uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  commentId: M:NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: OnComputed(EventArgs)
  nameWithType: Computation.OnComputed(EventArgs)
  fullName: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.OnComputed(System.EventArgs)
    name: OnComputed
  - name: (
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: NMF.Transformations.Core.Computation.Transform
  commentId: M:NMF.Transformations.Core.Computation.Transform
  parent: NMF.Transformations.Core.Computation
  name: Transform()
  nameWithType: Computation.Transform()
  fullName: NMF.Transformations.Core.Computation.Transform()
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.Transform
    name: Transform
  - name: (
  - name: )
- uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  commentId: M:NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: CreateOutput(IEnumerable)
  nameWithType: Computation.CreateOutput(IEnumerable)
  fullName: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.CreateOutput(System.Collections.IEnumerable)
    name: CreateOutput
  - name: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  - name: )
- uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  commentId: M:NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: InitializeOutput(object)
  nameWithType: Computation.InitializeOutput(object)
  fullName: NMF.Transformations.Core.Computation.InitializeOutput(object)
  nameWithType.vb: Computation.InitializeOutput(Object)
  fullName.vb: NMF.Transformations.Core.Computation.InitializeOutput(Object)
  name.vb: InitializeOutput(Object)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.InitializeOutput(System.Object)
    name: InitializeOutput
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  commentId: M:NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  parent: NMF.Transformations.Core.Computation
  name: SetBaseComputation(Computation)
  nameWithType: Computation.SetBaseComputation(Computation)
  fullName: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.SetBaseComputation(NMF.Transformations.Core.Computation)
    name: SetBaseComputation
  - name: (
  - uid: NMF.Transformations.Core.Computation
    name: Computation
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NMF.Transformations.Core
  commentId: N:NMF.Transformations.Core
  name: NMF.Transformations.Core
  nameWithType: NMF.Transformations.Core
  fullName: NMF.Transformations.Core
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  - name: .
  - uid: NMF.Transformations.Core
    name: Core
- uid: NMF.Expressions.INotifyValue`1
  commentId: T:NMF.Expressions.INotifyValue`1
  name: INotifyValue<T>
  nameWithType: INotifyValue<T>
  fullName: NMF.Expressions.INotifyValue<T>
  nameWithType.vb: INotifyValue(Of T)
  fullName.vb: NMF.Expressions.INotifyValue(Of T)
  name.vb: INotifyValue(Of T)
  spec.csharp:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NMF.Expressions.INotifyValue`1
    name: INotifyValue
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Expressions
  commentId: N:NMF.Expressions
  name: NMF.Expressions
  nameWithType: NMF.Expressions
  fullName: NMF.Expressions
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Expressions
    name: Expressions
- uid: System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  commentId: T:System.EventHandler{NMF.Expressions.ValueChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ValueChangedEventArgs>
  nameWithType: EventHandler<ValueChangedEventArgs>
  fullName: System.EventHandler<NMF.Expressions.ValueChangedEventArgs>
  nameWithType.vb: EventHandler(Of ValueChangedEventArgs)
  fullName.vb: System.EventHandler(Of NMF.Expressions.ValueChangedEventArgs)
  name.vb: EventHandler(Of ValueChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.ValueChangedEventArgs
    name: ValueChangedEventArgs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OmitCandidateSearch
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OmitCandidateSearch
  name: OmitCandidateSearch
  nameWithType: SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OmitCandidateSearch
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OmitCandidateSearch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OnOutputChanged
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OnOutputChanged_NMF_Expressions_ValueChangedEventArgs_
  name: OnOutputChanged
  nameWithType: SynchronizationComputation<TIn, TOut>.OnOutputChanged
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OnOutputChanged
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OnOutputChanged
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OnOutputChanged
- uid: NMF.Expressions.ValueChangedEventArgs
  commentId: T:NMF.Expressions.ValueChangedEventArgs
  parent: NMF.Expressions
  name: ValueChangedEventArgs
  nameWithType: ValueChangedEventArgs
  fullName: NMF.Expressions.ValueChangedEventArgs
- uid: NMF.Synchronizations.SynchronizationComputation`2.Input*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Input
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Input
  name: Input
  nameWithType: SynchronizationComputation<TIn, TOut>.Input
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Input
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Input
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Input
- uid: '{TIn}'
  commentId: '!:TIn'
  definition: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: NMF.Synchronizations.SynchronizationComputation`2.Opposite*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Opposite
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Opposite
  name: Opposite
  nameWithType: SynchronizationComputation<TIn, TOut>.Opposite
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Opposite
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Opposite
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Opposite
- uid: NMF.Synchronizations.SynchronizationComputation{{TOut},{TIn}}
  commentId: T:NMF.Synchronizations.SynchronizationComputation{`1,`0}
  parent: NMF.Synchronizations
  definition: NMF.Synchronizations.SynchronizationComputation`2
  href: NMF.Synchronizations.SynchronizationComputation-2.html
  name: SynchronizationComputation<TOut, TIn>
  nameWithType: SynchronizationComputation<TOut, TIn>
  fullName: NMF.Synchronizations.SynchronizationComputation<TOut, TIn>
  nameWithType.vb: SynchronizationComputation(Of TOut, TIn)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TOut, TIn)
  name.vb: SynchronizationComputation(Of TOut, TIn)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TOut
  - name: ','
  - name: " "
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: ','
  - name: " "
  - name: TIn
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2
  commentId: T:NMF.Synchronizations.SynchronizationComputation`2
  href: NMF.Synchronizations.SynchronizationComputation-2.html
  name: SynchronizationComputation<TIn, TOut>
  nameWithType: SynchronizationComputation<TIn, TOut>
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut)
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut)
  name.vb: SynchronizationComputation(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Synchronizations.SynchronizationComputation`2
    name: SynchronizationComputation
    href: NMF.Synchronizations.SynchronizationComputation-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.#ctor*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.#ctor
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2__ctor_NMF_Transformations_TransformationRuleBase__0__1__NMF_Transformations_TransformationRuleBase__1__0__NMF_Transformations_Core_IComputationContext__0_
  name: SynchronizationComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationComputation
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationComputation
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).New
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).New
  name.vb: New
- uid: NMF.Transformations.TransformationRuleBase{{TIn},{TOut}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`0,`1}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Transformations.TransformationRuleBase{{TOut},{TIn}}
  commentId: T:NMF.Transformations.TransformationRuleBase{`1,`0}
  parent: NMF.Transformations
  definition: NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TOut, TIn>
  nameWithType: TransformationRuleBase<TOut, TIn>
  fullName: NMF.Transformations.TransformationRuleBase<TOut, TIn>
  nameWithType.vb: TransformationRuleBase(Of TOut, TIn)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TOut, TIn)
  name.vb: TransformationRuleBase(Of TOut, TIn)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: <
  - name: TOut
  - name: ','
  - name: " "
  - name: TIn
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: ','
  - name: " "
  - name: TIn
  - name: )
- uid: NMF.Transformations.Core.IComputationContext
  commentId: T:NMF.Transformations.Core.IComputationContext
  parent: NMF.Transformations.Core
  name: IComputationContext
  nameWithType: IComputationContext
  fullName: NMF.Transformations.Core.IComputationContext
- uid: NMF.Transformations.TransformationRuleBase`2
  commentId: T:NMF.Transformations.TransformationRuleBase`2
  name: TransformationRuleBase<TIn, TOut>
  nameWithType: TransformationRuleBase<TIn, TOut>
  fullName: NMF.Transformations.TransformationRuleBase<TIn, TOut>
  nameWithType.vb: TransformationRuleBase(Of TIn, TOut)
  fullName.vb: NMF.Transformations.TransformationRuleBase(Of TIn, TOut)
  name.vb: TransformationRuleBase(Of TIn, TOut)
  spec.csharp:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: NMF.Transformations.TransformationRuleBase`2
    name: TransformationRuleBase
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: NMF.Transformations
  commentId: N:NMF.Transformations
  name: NMF.Transformations
  nameWithType: NMF.Transformations
  fullName: NMF.Transformations
  spec.csharp:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
  spec.vb:
  - uid: NMF
    name: NMF
  - name: .
  - uid: NMF.Transformations
    name: Transformations
- uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
  commentId: M:NMF.Transformations.Core.Computation.GetInput(System.Int32)
  parent: NMF.Transformations.Core.Computation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetInput(int)
  nameWithType: Computation.GetInput(int)
  fullName: NMF.Transformations.Core.Computation.GetInput(int)
  nameWithType.vb: Computation.GetInput(Integer)
  fullName.vb: NMF.Transformations.Core.Computation.GetInput(Integer)
  name.vb: GetInput(Integer)
  spec.csharp:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Transformations.Core.Computation.GetInput(System.Int32)
    name: GetInput
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetInput*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.GetInput
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_GetInput_System_Int32_
  name: GetInput
  nameWithType: SynchronizationComputation<TIn, TOut>.GetInput
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetInput
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetInput
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetInput
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.DoWhenOutputIsAvailable
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_DoWhenOutputIsAvailable_System_Action__0__1__
  name: DoWhenOutputIsAvailable
  nameWithType: SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.DoWhenOutputIsAvailable
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).DoWhenOutputIsAvailable
- uid: System.Action{{TIn},{TOut}}
  commentId: T:System.Action{`0,`1}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<TIn, TOut>
  nameWithType: Action<TIn, TOut>
  fullName: System.Action<TIn, TOut>
  nameWithType.vb: Action(Of TIn, TOut)
  fullName.vb: System.Action(Of TIn, TOut)
  name.vb: Action(Of TIn, TOut)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TIn
  - name: ','
  - name: " "
  - name: TOut
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.AcceptNewOutput
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_AcceptNewOutput__1_
  name: AcceptNewOutput
  nameWithType: SynchronizationComputation<TIn, TOut>.AcceptNewOutput
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AcceptNewOutput
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AcceptNewOutput
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AcceptNewOutput
- uid: '{TOut}'
  commentId: '!:TOut'
  definition: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: TOut
  commentId: '!:TOut'
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: NMF.Transformations.Core.Computation.OutputCore
  commentId: P:NMF.Transformations.Core.Computation.OutputCore
  parent: NMF.Transformations.Core.Computation
  name: OutputCore
  nameWithType: Computation.OutputCore
  fullName: NMF.Transformations.Core.Computation.OutputCore
- uid: NMF.Synchronizations.SynchronizationComputation`2.OutputCore*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.OutputCore
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_OutputCore
  name: OutputCore
  nameWithType: SynchronizationComputation<TIn, TOut>.OutputCore
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.OutputCore
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).OutputCore
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).OutputCore
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationContext
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationContext
  name: SynchronizationContext
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationContext
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationContext
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationContext
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationContext
- uid: NMF.Synchronizations.ISynchronizationContext
  commentId: T:NMF.Synchronizations.ISynchronizationContext
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.ISynchronizationContext.html
  name: ISynchronizationContext
  nameWithType: ISynchronizationContext
  fullName: NMF.Synchronizations.ISynchronizationContext
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.IsOriginalComputation
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_IsOriginalComputation
  name: IsOriginalComputation
  nameWithType: SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsOriginalComputation
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsOriginalComputation
- uid: NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.SynchronizationRule
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SynchronizationRule
  name: SynchronizationRule
  nameWithType: SynchronizationComputation<TIn, TOut>.SynchronizationRule
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SynchronizationRule
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SynchronizationRule
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SynchronizationRule
- uid: NMF.Synchronizations.SynchronizationRuleBase
  commentId: T:NMF.Synchronizations.SynchronizationRuleBase
  parent: NMF.Synchronizations
  href: NMF.Synchronizations.SynchronizationRuleBase.html
  name: SynchronizationRuleBase
  nameWithType: SynchronizationRuleBase
  fullName: NMF.Synchronizations.SynchronizationRuleBase
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dependencies*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Dependencies
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dependencies
  name: Dependencies
  nameWithType: SynchronizationComputation<TIn, TOut>.Dependencies
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dependencies
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dependencies
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dependencies
- uid: System.Collections.Generic.ICollection{System.IDisposable}
  commentId: T:System.Collections.Generic.ICollection{System.IDisposable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<IDisposable>
  nameWithType: ICollection<IDisposable>
  fullName: System.Collections.Generic.ICollection<System.IDisposable>
  nameWithType.vb: ICollection(Of IDisposable)
  fullName.vb: System.Collections.Generic.ICollection(Of System.IDisposable)
  name.vb: ICollection(Of IDisposable)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.IDisposable
    name: IDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IDisposable
    name: IDisposable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NMF.Synchronizations.SynchronizationComputation`2.Successors*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Successors
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Successors
  name: Successors
  nameWithType: SynchronizationComputation<TIn, TOut>.Successors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Successors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Successors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Successors
- uid: NMF.Expressions.INotifiable.Successors
  commentId: P:NMF.Expressions.INotifiable.Successors
  parent: NMF.Expressions.INotifiable
  name: Successors
  nameWithType: INotifiable.Successors
  fullName: NMF.Expressions.INotifiable.Successors
- uid: NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.ExecutionMetaData
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_ExecutionMetaData
  name: ExecutionMetaData
  nameWithType: SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.ExecutionMetaData
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).ExecutionMetaData
- uid: NMF.Expressions.INotifiable.ExecutionMetaData
  commentId: P:NMF.Expressions.INotifiable.ExecutionMetaData
  parent: NMF.Expressions.INotifiable
  name: ExecutionMetaData
  nameWithType: INotifiable.ExecutionMetaData
  fullName: NMF.Expressions.INotifiable.ExecutionMetaData
- uid: NMF.Expressions.ExecutionMetaData
  commentId: T:NMF.Expressions.ExecutionMetaData
  parent: NMF.Expressions
  name: ExecutionMetaData
  nameWithType: ExecutionMetaData
  fullName: NMF.Expressions.ExecutionMetaData
- uid: NMF.Synchronizations.SynchronizationComputation`2.Notify*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Notify
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Notify_System_Collections_Generic_IList_NMF_Expressions_INotificationResult__
  name: Notify
  nameWithType: SynchronizationComputation<TIn, TOut>.Notify
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Notify
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Notify
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Notify
- uid: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  commentId: M:NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
  parent: NMF.Expressions.INotifiable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: Notify(IList<INotificationResult>)
  nameWithType: INotifiable.Notify(IList<INotificationResult>)
  fullName: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList<NMF.Expressions.INotificationResult>)
  nameWithType.vb: INotifiable.Notify(IList(Of INotificationResult))
  fullName.vb: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult))
  name.vb: Notify(IList(Of INotificationResult))
  spec.csharp:
  - uid: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: '>'
  - name: )
  spec.vb:
  - uid: NMF.Expressions.INotifiable.Notify(System.Collections.Generic.IList{NMF.Expressions.INotificationResult})
    name: Notify
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: )
  - name: )
- uid: System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  commentId: T:System.Collections.Generic.IList{NMF.Expressions.INotificationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<INotificationResult>
  nameWithType: IList<INotificationResult>
  fullName: System.Collections.Generic.IList<NMF.Expressions.INotificationResult>
  nameWithType.vb: IList(Of INotificationResult)
  fullName.vb: System.Collections.Generic.IList(Of NMF.Expressions.INotificationResult)
  name.vb: IList(Of INotificationResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotificationResult
    name: INotificationResult
  - name: )
- uid: NMF.Expressions.INotificationResult
  commentId: T:NMF.Expressions.INotificationResult
  parent: NMF.Expressions
  name: INotificationResult
  nameWithType: INotificationResult
  fullName: NMF.Expressions.INotificationResult
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.Dispose*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Dispose
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Dispose
  name: Dispose
  nameWithType: SynchronizationComputation<TIn, TOut>.Dispose
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Dispose
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Dispose
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.HasSuccessors
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_HasSuccessors
  name: HasSuccessors
  nameWithType: SynchronizationComputation<TIn, TOut>.HasSuccessors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.HasSuccessors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).HasSuccessors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).HasSuccessors
- uid: NMF.Expressions.ISuccessorList.HasSuccessors
  commentId: P:NMF.Expressions.ISuccessorList.HasSuccessors
  parent: NMF.Expressions.ISuccessorList
  name: HasSuccessors
  nameWithType: ISuccessorList.HasSuccessors
  fullName: NMF.Expressions.ISuccessorList.HasSuccessors
- uid: NMF.Synchronizations.SynchronizationComputation`2.IsAttached*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.IsAttached
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_IsAttached
  name: IsAttached
  nameWithType: SynchronizationComputation<TIn, TOut>.IsAttached
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.IsAttached
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).IsAttached
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).IsAttached
- uid: NMF.Expressions.ISuccessorList.IsAttached
  commentId: P:NMF.Expressions.ISuccessorList.IsAttached
  parent: NMF.Expressions.ISuccessorList
  name: IsAttached
  nameWithType: ISuccessorList.IsAttached
  fullName: NMF.Expressions.ISuccessorList.IsAttached
- uid: NMF.Synchronizations.SynchronizationComputation`2.Count*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Count
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Count
  name: Count
  nameWithType: SynchronizationComputation<TIn, TOut>.Count
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Count
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Count
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Count
- uid: NMF.Expressions.ISuccessorList.Count
  commentId: P:NMF.Expressions.ISuccessorList.Count
  parent: NMF.Expressions.ISuccessorList
  name: Count
  nameWithType: ISuccessorList.Count
  fullName: NMF.Expressions.ISuccessorList.Count
- uid: NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.AllSuccessors
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_AllSuccessors
  name: AllSuccessors
  nameWithType: SynchronizationComputation<TIn, TOut>.AllSuccessors
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.AllSuccessors
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).AllSuccessors
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).AllSuccessors
- uid: System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  commentId: T:System.Collections.Generic.IEnumerable{NMF.Expressions.INotifiable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<INotifiable>
  nameWithType: IEnumerable<INotifiable>
  fullName: System.Collections.Generic.IEnumerable<NMF.Expressions.INotifiable>
  nameWithType.vb: IEnumerable(Of INotifiable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NMF.Expressions.INotifiable)
  name.vb: IEnumerable(Of INotifiable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.Set*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Set
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Set_NMF_Expressions_INotifiable_
  name: Set
  nameWithType: SynchronizationComputation<TIn, TOut>.Set
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Set
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Set
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Set
- uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  commentId: M:NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  parent: NMF.Expressions.ISuccessorList
  name: Set(INotifiable)
  nameWithType: ISuccessorList.Set(INotifiable)
  fullName: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
    name: Set
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.Set(NMF.Expressions.INotifiable)
    name: Set
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.SetDummy*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.SetDummy
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_SetDummy
  name: SetDummy
  nameWithType: SynchronizationComputation<TIn, TOut>.SetDummy
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.SetDummy
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).SetDummy
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).SetDummy
- uid: NMF.Expressions.ISuccessorList.SetDummy
  commentId: M:NMF.Expressions.ISuccessorList.SetDummy
  parent: NMF.Expressions.ISuccessorList
  name: SetDummy()
  nameWithType: ISuccessorList.SetDummy()
  fullName: NMF.Expressions.ISuccessorList.SetDummy()
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.SetDummy
    name: SetDummy
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.SetDummy
    name: SetDummy
  - name: (
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.Unset*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.Unset
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_Unset_NMF_Expressions_INotifiable_System_Boolean_
  name: Unset
  nameWithType: SynchronizationComputation<TIn, TOut>.Unset
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.Unset
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).Unset
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).Unset
- uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  commentId: M:NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
  parent: NMF.Expressions.ISuccessorList
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Unset(INotifiable, bool)
  nameWithType: ISuccessorList.Unset(INotifiable, bool)
  fullName: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable, bool)
  nameWithType.vb: ISuccessorList.Unset(INotifiable, Boolean)
  fullName.vb: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable, Boolean)
  name.vb: Unset(INotifiable, Boolean)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.Unset(NMF.Expressions.INotifiable,System.Boolean)
    name: Unset
  - name: (
  - uid: NMF.Expressions.INotifiable
    name: INotifiable
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.UnsetAll*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.UnsetAll
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_UnsetAll
  name: UnsetAll
  nameWithType: SynchronizationComputation<TIn, TOut>.UnsetAll
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.UnsetAll
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).UnsetAll
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).UnsetAll
- uid: NMF.Expressions.ISuccessorList.UnsetAll
  commentId: M:NMF.Expressions.ISuccessorList.UnsetAll
  parent: NMF.Expressions.ISuccessorList
  name: UnsetAll()
  nameWithType: ISuccessorList.UnsetAll()
  fullName: NMF.Expressions.ISuccessorList.UnsetAll()
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.UnsetAll
    name: UnsetAll
  - name: (
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.UnsetAll
    name: UnsetAll
  - name: (
  - name: )
- uid: NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor*
  commentId: Overload:NMF.Synchronizations.SynchronizationComputation`2.GetSuccessor
  href: NMF.Synchronizations.SynchronizationComputation-2.html#NMF_Synchronizations_SynchronizationComputation_2_GetSuccessor_System_Int32_
  name: GetSuccessor
  nameWithType: SynchronizationComputation<TIn, TOut>.GetSuccessor
  fullName: NMF.Synchronizations.SynchronizationComputation<TIn, TOut>.GetSuccessor
  nameWithType.vb: SynchronizationComputation(Of TIn, TOut).GetSuccessor
  fullName.vb: NMF.Synchronizations.SynchronizationComputation(Of TIn, TOut).GetSuccessor
- uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  commentId: M:NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
  parent: NMF.Expressions.ISuccessorList
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetSuccessor(int)
  nameWithType: ISuccessorList.GetSuccessor(int)
  fullName: NMF.Expressions.ISuccessorList.GetSuccessor(int)
  nameWithType.vb: ISuccessorList.GetSuccessor(Integer)
  fullName.vb: NMF.Expressions.ISuccessorList.GetSuccessor(Integer)
  name.vb: GetSuccessor(Integer)
  spec.csharp:
  - uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
    name: GetSuccessor
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NMF.Expressions.ISuccessorList.GetSuccessor(System.Int32)
    name: GetSuccessor
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
